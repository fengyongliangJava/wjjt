2019-03-11 08:26:00 -Starting BootdoApplication on ZJZL-20180906VX with PID 1980 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 08:26:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 08:26:00 -The following profiles are active: dev
2019-03-11 08:26:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ba534b0: startup date [Mon Mar 11 08:26:01 CST 2019]; root of context hierarchy
2019-03-11 08:26:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 08:26:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f2050a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$41797f4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 08:26:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 08:26:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 08:26:19 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 08:26:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 08:26:19 -Starting service [Tomcat]
2019-03-11 08:26:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 08:26:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 08:26:20 -Initializing Spring embedded WebApplicationContext
2019-03-11 08:26:20 -Root WebApplicationContext: initialization completed in 18783 ms
2019-03-11 08:26:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 08:26:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 08:26:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 08:26:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 08:26:21 -Filter xssFilter was not registered (disabled)
2019-03-11 08:26:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 08:26:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 08:26:21 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 08:26:21 -Servlet dispatcherServlet mapped to [/]
2019-03-11 08:26:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ba534b0: startup date [Mon Mar 11 08:26:01 CST 2019]; root of context hierarchy
2019-03-11 08:26:26 -Using default implementation for ThreadExecutor
2019-03-11 08:26:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 08:26:27 -Quartz Scheduler v.2.2.1 created.
2019-03-11 08:26:27 -RAMJobStore initialized.
2019-03-11 08:26:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 08:26:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 08:26:27 -Quartz scheduler version: 2.2.1
2019-03-11 08:26:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@30a791a6
2019-03-11 08:26:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 08:26:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 08:26:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 08:26:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 08:26:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 08:26:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 08:26:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 08:26:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 08:26:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 08:26:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 08:26:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 08:26:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 08:26:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 08:26:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 08:26:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 08:26:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 08:26:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 08:26:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 08:26:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 08:26:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 08:26:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 08:26:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 08:26:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 08:26:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 08:26:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 08:26:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 08:26:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 08:26:31 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 08:26:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 08:26:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 08:26:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 08:26:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 08:26:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 08:26:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 08:26:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 08:26:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 08:26:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 08:26:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 08:26:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 08:26:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 08:26:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.heatLog()
2019-03-11 08:26:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 08:26:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 08:26:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 08:26:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 08:26:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 08:26:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 08:26:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 08:26:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 08:26:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 08:26:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 08:26:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 08:26:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 08:26:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 08:26:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 08:26:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 08:26:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 08:26:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 08:26:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 08:26:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 08:26:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 08:26:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 08:26:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 08:26:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 08:26:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 08:26:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 08:26:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 08:26:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 08:26:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 08:26:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 08:26:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 08:26:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 08:26:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 08:26:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 08:26:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 08:26:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 08:26:31 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 08:26:31 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 08:26:31 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 08:26:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 08:26:31 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 08:26:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 08:26:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 08:26:31 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 08:26:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 08:26:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 08:26:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 08:26:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 08:26:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 08:26:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 08:26:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 08:26:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 08:26:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ba534b0: startup date [Mon Mar 11 08:26:01 CST 2019]; root of context hierarchy
2019-03-11 08:26:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 08:26:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 08:26:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 08:26:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 08:26:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 08:26:37 -Registering beans for JMX exposure on startup
2019-03-11 08:26:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 08:26:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 08:26:37 -Starting beans in phase 2147483647
2019-03-11 08:26:37 -Context refreshed
2019-03-11 08:26:37 -Found 1 custom documentation plugin(s)
2019-03-11 08:26:37 -Scanning for api listing references
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_1
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_1
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_1
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_1
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_2
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_3
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 08:26:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_2
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_2
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_2
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_4
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_5
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 08:26:38 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_3
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_3
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_3
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_6
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_7
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 08:26:38 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_4
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_4
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_4
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_8
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_9
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 08:26:38 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_5
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_5
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_5
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_10
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_11
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 08:26:38 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 08:26:38 -Generating unique operation named: ElecUsingGET_1
2019-03-11 08:26:38 -Generating unique operation named: addUsingGET_6
2019-03-11 08:26:38 -Generating unique operation named: editUsingGET_6
2019-03-11 08:26:38 -Generating unique operation named: listUsingGET_6
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_12
2019-03-11 08:26:38 -Generating unique operation named: removeUsingPOST_13
2019-03-11 08:26:38 -Generating unique operation named: saveUsingPOST_6
2019-03-11 08:26:38 -Generating unique operation named: updateUsingGET_6
2019-03-11 08:26:38 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPOST_6
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPUT_6
2019-03-11 08:26:38 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 08:26:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 08:26:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 08:26:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_7
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_7
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_7
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_8
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_8
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_14
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_15
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingGET_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPUT_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 08:26:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_8
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_9
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_9
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_16
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_17
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingGET_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPUT_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 08:26:39 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_9
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_10
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_10
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_18
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_19
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingGET_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPUT_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 08:26:39 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_10
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_11
2019-03-11 08:26:39 -Generating unique operation named: infoUsingGET_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingPOST_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingPUT_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 08:26:39 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_11
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_20
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_21
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_11
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_12
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_22
2019-03-11 08:26:39 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_11
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_12
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_13
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_23
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_11
2019-03-11 08:26:39 -Generating unique operation named: treeUsingGET_1
2019-03-11 08:26:39 -Generating unique operation named: treeUsingGET_2
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_12
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_12
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_13
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_14
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_24
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_25
2019-03-11 08:26:39 -Generating unique operation named: saveUsingPOST_12
2019-03-11 08:26:39 -Generating unique operation named: updateUsingGET_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPOST_13
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPUT_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 08:26:39 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 08:26:39 -Generating unique operation named: addUsingGET_13
2019-03-11 08:26:39 -Generating unique operation named: editUsingGET_14
2019-03-11 08:26:39 -Generating unique operation named: listUsingGET_15
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_26
2019-03-11 08:26:39 -Generating unique operation named: removeUsingPOST_27
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingGET_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPUT_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 08:26:40 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 08:26:40 -Generating unique operation named: addUsingGET_14
2019-03-11 08:26:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 08:26:40 -Generating unique operation named: editUsingGET_15
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_16
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_14
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_15
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_15
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_17
2019-03-11 08:26:40 -Generating unique operation named: listUsingHEAD_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingPOST_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingPUT_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingPATCH_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingDELETE_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingTRACE_1
2019-03-11 08:26:40 -Generating unique operation named: addUsingGET_15
2019-03-11 08:26:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 08:26:40 -Generating unique operation named: editUsingGET_16
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_18
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_28
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_16
2019-03-11 08:26:40 -Generating unique operation named: treeUsingGET_3
2019-03-11 08:26:40 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_16
2019-03-11 08:26:40 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 08:26:40 -Generating unique operation named: addUsingGET_16
2019-03-11 08:26:40 -Generating unique operation named: editUsingGET_17
2019-03-11 08:26:40 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_19
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_29
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_30
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_17
2019-03-11 08:26:40 -Generating unique operation named: updateUsingGET_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_17
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPUT_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 08:26:40 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 08:26:40 -Generating unique operation named: addUsingGET_17
2019-03-11 08:26:40 -Generating unique operation named: editUsingGET_18
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_20
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_31
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_32
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_18
2019-03-11 08:26:40 -Generating unique operation named: updateUsingGET_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_18
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPUT_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 08:26:40 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 08:26:40 -Generating unique operation named: addUsingGET_18
2019-03-11 08:26:40 -Generating unique operation named: editUsingGET_19
2019-03-11 08:26:40 -Generating unique operation named: listUsingGET_21
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_33
2019-03-11 08:26:40 -Generating unique operation named: removeUsingPOST_34
2019-03-11 08:26:40 -Generating unique operation named: saveUsingPOST_19
2019-03-11 08:26:40 -Generating unique operation named: updateUsingGET_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPOST_19
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPUT_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 08:26:40 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 08:26:40 -Starting Quartz Scheduler now
2019-03-11 08:26:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 08:26:40 -Starting...
2019-03-11 08:26:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 08:26:40 -Started.
2019-03-11 08:26:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 08:26:40 -Using a shared selector for servlet write/read
2019-03-11 08:26:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 08:26:40 -Started BootdoApplication in 43.505 seconds (JVM running for 45.891)
2019-03-11 08:26:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 08:26:41 -==> Parameters: 
2019-03-11 08:26:41 -<==      Total: 1
2019-03-11 08:27:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 08:27:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 08:27:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2019-03-11 08:27:03 -Enabling session validation scheduler...
2019-03-11 08:27:03 -请求地址 : http://localhost:8081/login;JSESSIONID=c42b0573-7146-4916-8277-cfdcb5faa14a
2019-03-11 08:27:03 -HTTP METHOD : GET
2019-03-11 08:27:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 08:27:03 -参数 : [{}]
2019-03-11 08:27:03 -耗时 : 3
2019-03-11 08:27:03 -返回值 : login
2019-03-11 08:27:07 -请求地址 : http://localhost:8081/getVerify
2019-03-11 08:27:07 -HTTP METHOD : GET
2019-03-11 08:27:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 08:27:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@59ad6e2a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f8e6de0]
2019-03-11 08:27:13 -2112
2019-03-11 08:27:14 -耗时 : 6398
2019-03-11 08:27:14 -返回值 : null
2019-03-11 08:27:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-11 08:51:21 -请求地址 : http://localhost:8081/login
2019-03-11 08:51:21 -HTTP METHOD : POST
2019-03-11 08:51:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 08:51:21 -参数 : [admin, 111111, 2112, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2fba88e8]
2019-03-11 08:51:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 08:51:21 -==> Parameters: admin(String)
2019-03-11 08:51:21 -<==      Total: 1
2019-03-11 08:51:21 -耗时 : 343
2019-03-11 08:51:21 -返回值 : {msg=操作成功, code=0}
2019-03-11 08:51:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 08:51:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 08:51:21 -==> Parameters: 1(Long), admin(String), 登录(String), 343(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 08:51:21.6(Timestamp)
2019-03-11 08:51:21 -<==    Updates: 1
2019-03-11 08:51:21 -请求地址 : http://localhost:8081/index
2019-03-11 08:51:21 -HTTP METHOD : GET
2019-03-11 08:51:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 08:51:21 -参数 : [{}]
2019-03-11 08:51:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 08:51:22 -==> Parameters: 1(Long)
2019-03-11 08:51:22 -<==      Total: 45
2019-03-11 08:51:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 08:51:22 -==> Parameters: 138(Long)
2019-03-11 08:51:22 -<==      Total: 1
2019-03-11 08:51:22 -耗时 : 347
2019-03-11 08:51:22 -返回值 : index_v1
2019-03-11 08:51:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 08:51:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 347(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 08:51:22.42(Timestamp)
2019-03-11 08:51:22 -<==    Updates: 1
2019-03-11 08:51:22 -请求地址 : http://localhost:8081/main
2019-03-11 08:51:22 -HTTP METHOD : GET
2019-03-11 08:51:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 08:51:22 -参数 : []
2019-03-11 08:51:22 -耗时 : 0
2019-03-11 08:51:22 -返回值 : main
2019-03-11 08:51:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 08:51:23 -HTTP METHOD : GET
2019-03-11 08:51:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 08:51:23 -参数 : []
2019-03-11 08:51:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 08:51:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 08:51:23 -<==      Total: 0
2019-03-11 08:51:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 08:51:23 -==> Parameters: 1(Long), 0(String)
2019-03-11 08:51:23 -<==      Total: 1
2019-03-11 08:51:23 -耗时 : 130
2019-03-11 08:51:23 -返回值 : com.bootdo.common.utils.PageUtils@44719c1f
2019-03-11 08:51:23 -请求地址 : http://localhost:8081/main
2019-03-11 08:51:23 -HTTP METHOD : GET
2019-03-11 08:51:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 08:51:23 -参数 : []
2019-03-11 08:51:23 -耗时 : 0
2019-03-11 08:51:23 -返回值 : main
2019-03-11 08:52:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 08:52:24 -==> Parameters: 1(Long)
2019-03-11 08:52:24 -<==      Total: 86
2019-03-11 08:52:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 08:52:24 -HTTP METHOD : GET
2019-03-11 08:52:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 08:52:24 -参数 : []
2019-03-11 08:52:24 -耗时 : 0
2019-03-11 08:52:24 -返回值 : /moneyList/moneyList
2019-03-11 08:52:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 08:52:26 -HTTP METHOD : GET
2019-03-11 08:52:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 08:52:26 -参数 : []
2019-03-11 08:52:26 -耗时 : 1
2019-03-11 08:52:26 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 08:52:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 08:52:27 -HTTP METHOD : GET
2019-03-11 08:52:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 08:52:27 -参数 : [{limit=10, offset=0}]
2019-03-11 08:52:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 08:52:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 08:52:27 -<==      Total: 3
2019-03-11 08:52:27 -==>  Preparing: select count(*) from elec_log 
2019-03-11 08:52:27 -==> Parameters: 
2019-03-11 08:52:27 -<==      Total: 1
2019-03-11 08:52:27 -耗时 : 38
2019-03-11 08:52:27 -返回值 : com.bootdo.common.utils.PageUtils@2268d6d9
2019-03-11 08:53:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/2
2019-03-11 08:53:06 -HTTP METHOD : GET
2019-03-11 08:53:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-11 08:53:06 -参数 : [2, {}]
2019-03-11 08:53:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-11 08:53:06 -==> Parameters: 2(Long)
2019-03-11 08:53:06 -<==      Total: 1
2019-03-11 08:53:06 -耗时 : 7
2019-03-11 08:53:06 -返回值 : moneyLog/elecLog/edit
2019-03-11 08:53:06 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-11 08:53:06 -HTTP METHOD : GET
2019-03-11 08:53:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 08:53:06 -参数 : [userArea]
2019-03-11 08:53:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 08:53:06 -==> Parameters: userArea(String)
2019-03-11 08:53:06 -<==      Total: 0
2019-03-11 08:53:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 08:53:06 -耗时 : 40
2019-03-11 08:53:06 -返回值 : []
2019-03-11 08:53:06 -请求地址 : http://localhost:8081/common/dict/list/elecOrg
2019-03-11 08:53:06 -HTTP METHOD : GET
2019-03-11 08:53:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 08:53:06 -参数 : [elecOrg]
2019-03-11 08:53:06 -HTTP METHOD : GET
2019-03-11 08:53:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 08:53:06 -参数 : [userType]
2019-03-11 08:53:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 08:53:06 -==> Parameters: elecOrg(String)
2019-03-11 08:53:06 -<==      Total: 0
2019-03-11 08:53:06 -耗时 : 5
2019-03-11 08:53:06 -返回值 : []
2019-03-11 08:53:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 08:53:06 -==> Parameters: userType(String)
2019-03-11 08:53:06 -<==      Total: 2
2019-03-11 08:53:06 -耗时 : 30
2019-03-11 08:53:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 08:53:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-11 08:53:11 -HTTP METHOD : GET
2019-03-11 08:53:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-11 08:53:11 -参数 : []
2019-03-11 08:53:11 -耗时 : 1
2019-03-11 08:53:11 -返回值 : moneyLog/elecLog/add
2019-03-11 08:57:32 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 89]
2019-03-11 09:14:43 -请求地址 : http://localhost:8081/index
2019-03-11 09:14:43 -HTTP METHOD : GET
2019-03-11 09:14:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:14:43 -参数 : [{}]
2019-03-11 09:14:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:14:43 -==> Parameters: 1(Long)
2019-03-11 09:14:43 -<==      Total: 45
2019-03-11 09:14:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:14:43 -==> Parameters: 138(Long)
2019-03-11 09:14:43 -<==      Total: 1
2019-03-11 09:14:43 -耗时 : 172
2019-03-11 09:14:43 -返回值 : index_v1
2019-03-11 09:14:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:14:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 178(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:14:43.953(Timestamp)
2019-03-11 09:14:44 -<==    Updates: 1
2019-03-11 09:14:44 -请求地址 : http://localhost:8081/main
2019-03-11 09:14:44 -HTTP METHOD : GET
2019-03-11 09:14:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:14:44 -参数 : []
2019-03-11 09:14:44 -耗时 : 1
2019-03-11 09:14:44 -返回值 : main
2019-03-11 09:14:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:14:44 -HTTP METHOD : GET
2019-03-11 09:14:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:14:44 -参数 : []
2019-03-11 09:14:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:14:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:14:44 -<==      Total: 0
2019-03-11 09:14:44 -请求地址 : http://localhost:8081/main
2019-03-11 09:14:44 -HTTP METHOD : GET
2019-03-11 09:14:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:14:44 -参数 : []
2019-03-11 09:14:44 -耗时 : 0
2019-03-11 09:14:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:14:44 -返回值 : main
2019-03-11 09:14:44 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:14:44 -<==      Total: 1
2019-03-11 09:14:44 -耗时 : 61
2019-03-11 09:14:44 -返回值 : com.bootdo.common.utils.PageUtils@2f99b160
2019-03-11 09:14:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 09:14:49 -==> Parameters: 1(Long)
2019-03-11 09:14:49 -<==      Total: 86
2019-03-11 09:14:49 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:14:49 -HTTP METHOD : GET
2019-03-11 09:14:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:14:49 -参数 : []
2019-03-11 09:14:49 -耗时 : 0
2019-03-11 09:14:49 -返回值 : /moneyList/moneyList
2019-03-11 09:15:10 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 09:18:05 -请求地址 : http://localhost:8081/index
2019-03-11 09:18:05 -HTTP METHOD : GET
2019-03-11 09:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:18:05 -参数 : [{}]
2019-03-11 09:18:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:18:05 -==> Parameters: 1(Long)
2019-03-11 09:18:05 -<==      Total: 45
2019-03-11 09:18:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:18:05 -==> Parameters: 138(Long)
2019-03-11 09:18:05 -<==      Total: 1
2019-03-11 09:18:05 -耗时 : 33
2019-03-11 09:18:05 -返回值 : index_v1
2019-03-11 09:18:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:18:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:18:05.544(Timestamp)
2019-03-11 09:18:05 -<==    Updates: 1
2019-03-11 09:18:05 -请求地址 : http://localhost:8081/main
2019-03-11 09:18:05 -HTTP METHOD : GET
2019-03-11 09:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:18:05 -参数 : []
2019-03-11 09:18:05 -耗时 : 2
2019-03-11 09:18:05 -返回值 : main
2019-03-11 09:18:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:18:06 -HTTP METHOD : GET
2019-03-11 09:18:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:18:06 -参数 : []
2019-03-11 09:18:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:18:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:18:06 -<==      Total: 0
2019-03-11 09:18:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:18:06 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:18:06 -<==      Total: 1
2019-03-11 09:18:06 -耗时 : 10
2019-03-11 09:18:06 -返回值 : com.bootdo.common.utils.PageUtils@58c84eca
2019-03-11 09:18:06 -请求地址 : http://localhost:8081/main
2019-03-11 09:18:06 -HTTP METHOD : GET
2019-03-11 09:18:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:18:06 -参数 : []
2019-03-11 09:18:06 -耗时 : 1
2019-03-11 09:18:06 -返回值 : main
2019-03-11 09:18:08 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:18:08 -HTTP METHOD : GET
2019-03-11 09:18:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:18:08 -参数 : []
2019-03-11 09:18:08 -耗时 : 1
2019-03-11 09:18:08 -返回值 : /moneyList/moneyList
2019-03-11 09:18:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 09:18:15 -HTTP METHOD : GET
2019-03-11 09:18:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 09:18:15 -参数 : []
2019-03-11 09:18:15 -耗时 : 1
2019-03-11 09:18:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 09:18:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 09:18:15 -HTTP METHOD : GET
2019-03-11 09:18:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 09:18:15 -参数 : [{limit=10, offset=0}]
2019-03-11 09:18:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 09:18:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 09:18:15 -<==      Total: 3
2019-03-11 09:18:15 -==>  Preparing: select count(*) from elec_log 
2019-03-11 09:18:15 -==> Parameters: 
2019-03-11 09:18:15 -<==      Total: 1
2019-03-11 09:18:15 -耗时 : 29
2019-03-11 09:18:15 -返回值 : com.bootdo.common.utils.PageUtils@22652dac
2019-03-11 09:18:48 -请求地址 : http://localhost:8081/index
2019-03-11 09:18:48 -HTTP METHOD : GET
2019-03-11 09:18:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:18:48 -参数 : [{}]
2019-03-11 09:18:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:18:48 -==> Parameters: 1(Long)
2019-03-11 09:18:49 -<==      Total: 45
2019-03-11 09:18:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:18:49 -==> Parameters: 138(Long)
2019-03-11 09:18:49 -<==      Total: 1
2019-03-11 09:18:49 -耗时 : 30
2019-03-11 09:18:49 -返回值 : index_v1
2019-03-11 09:18:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:18:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:18:49.018(Timestamp)
2019-03-11 09:18:49 -请求地址 : http://localhost:8081/main
2019-03-11 09:18:49 -HTTP METHOD : GET
2019-03-11 09:18:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:18:49 -参数 : []
2019-03-11 09:18:49 -耗时 : 1
2019-03-11 09:18:49 -返回值 : main
2019-03-11 09:18:49 -<==    Updates: 1
2019-03-11 09:18:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:18:49 -HTTP METHOD : GET
2019-03-11 09:18:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:18:49 -参数 : []
2019-03-11 09:18:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:18:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:18:49 -<==      Total: 0
2019-03-11 09:18:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:18:49 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:18:49 -<==      Total: 1
2019-03-11 09:18:49 -耗时 : 11
2019-03-11 09:18:49 -返回值 : com.bootdo.common.utils.PageUtils@37f608c5
2019-03-11 09:18:49 -请求地址 : http://localhost:8081/main
2019-03-11 09:18:49 -HTTP METHOD : GET
2019-03-11 09:18:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:18:49 -参数 : []
2019-03-11 09:18:49 -耗时 : 1
2019-03-11 09:18:49 -返回值 : main
2019-03-11 09:18:51 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:18:51 -HTTP METHOD : GET
2019-03-11 09:18:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:18:51 -参数 : []
2019-03-11 09:18:51 -耗时 : 1
2019-03-11 09:18:51 -返回值 : /moneyList/moneyList
2019-03-11 09:19:17 -请求地址 : http://localhost:8081/index
2019-03-11 09:19:17 -HTTP METHOD : GET
2019-03-11 09:19:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:19:17 -参数 : [{}]
2019-03-11 09:19:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:19:17 -==> Parameters: 1(Long)
2019-03-11 09:19:17 -<==      Total: 45
2019-03-11 09:19:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:19:17 -==> Parameters: 138(Long)
2019-03-11 09:19:17 -<==      Total: 1
2019-03-11 09:19:17 -耗时 : 30
2019-03-11 09:19:17 -返回值 : index_v1
2019-03-11 09:19:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:19:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:19:17.922(Timestamp)
2019-03-11 09:19:18 -请求地址 : http://localhost:8081/main
2019-03-11 09:19:18 -HTTP METHOD : GET
2019-03-11 09:19:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:19:18 -参数 : []
2019-03-11 09:19:18 -耗时 : 0
2019-03-11 09:19:18 -返回值 : main
2019-03-11 09:19:18 -<==    Updates: 1
2019-03-11 09:19:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:19:18 -HTTP METHOD : GET
2019-03-11 09:19:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:19:18 -参数 : []
2019-03-11 09:19:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:19:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:19:18 -<==      Total: 0
2019-03-11 09:19:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:19:18 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:19:18 -<==      Total: 1
2019-03-11 09:19:18 -耗时 : 9
2019-03-11 09:19:18 -返回值 : com.bootdo.common.utils.PageUtils@412669e
2019-03-11 09:19:18 -请求地址 : http://localhost:8081/main
2019-03-11 09:19:18 -HTTP METHOD : GET
2019-03-11 09:19:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:19:18 -参数 : []
2019-03-11 09:19:18 -耗时 : 1
2019-03-11 09:19:18 -返回值 : main
2019-03-11 09:19:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:19:20 -HTTP METHOD : GET
2019-03-11 09:19:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:19:20 -参数 : []
2019-03-11 09:19:20 -耗时 : 0
2019-03-11 09:19:20 -返回值 : /moneyList/moneyList
2019-03-11 09:20:23 -请求地址 : http://localhost:8081/index
2019-03-11 09:20:23 -HTTP METHOD : GET
2019-03-11 09:20:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:20:23 -参数 : [{}]
2019-03-11 09:20:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:20:23 -==> Parameters: 1(Long)
2019-03-11 09:20:23 -<==      Total: 45
2019-03-11 09:20:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:20:23 -==> Parameters: 138(Long)
2019-03-11 09:20:23 -<==      Total: 1
2019-03-11 09:20:23 -耗时 : 237
2019-03-11 09:20:23 -返回值 : index_v1
2019-03-11 09:20:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:20:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 237(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:20:23.933(Timestamp)
2019-03-11 09:20:24 -请求地址 : http://localhost:8081/main
2019-03-11 09:20:24 -HTTP METHOD : GET
2019-03-11 09:20:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:20:24 -参数 : []
2019-03-11 09:20:24 -耗时 : 0
2019-03-11 09:20:24 -返回值 : main
2019-03-11 09:20:24 -<==    Updates: 1
2019-03-11 09:20:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:20:24 -HTTP METHOD : GET
2019-03-11 09:20:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:20:24 -参数 : []
2019-03-11 09:20:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:20:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:20:24 -<==      Total: 0
2019-03-11 09:20:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:20:24 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:20:24 -<==      Total: 1
2019-03-11 09:20:24 -耗时 : 7
2019-03-11 09:20:24 -返回值 : com.bootdo.common.utils.PageUtils@50ea16a2
2019-03-11 09:20:24 -请求地址 : http://localhost:8081/main
2019-03-11 09:20:24 -HTTP METHOD : GET
2019-03-11 09:20:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:20:24 -参数 : []
2019-03-11 09:20:24 -耗时 : 1
2019-03-11 09:20:24 -返回值 : main
2019-03-11 09:20:26 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:20:26 -HTTP METHOD : GET
2019-03-11 09:20:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:20:26 -参数 : []
2019-03-11 09:20:26 -耗时 : 0
2019-03-11 09:20:26 -返回值 : /moneyList/moneyList
2019-03-11 09:23:46 -请求地址 : http://localhost:8081/index
2019-03-11 09:23:46 -HTTP METHOD : GET
2019-03-11 09:23:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:23:46 -参数 : [{}]
2019-03-11 09:23:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:23:46 -==> Parameters: 1(Long)
2019-03-11 09:23:46 -<==      Total: 45
2019-03-11 09:23:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:23:46 -==> Parameters: 138(Long)
2019-03-11 09:23:46 -<==      Total: 1
2019-03-11 09:23:46 -耗时 : 19
2019-03-11 09:23:46 -返回值 : index_v1
2019-03-11 09:23:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:23:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:23:46.381(Timestamp)
2019-03-11 09:23:46 -<==    Updates: 1
2019-03-11 09:23:46 -请求地址 : http://localhost:8081/main
2019-03-11 09:23:46 -HTTP METHOD : GET
2019-03-11 09:23:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:23:46 -参数 : []
2019-03-11 09:23:46 -耗时 : 1
2019-03-11 09:23:46 -返回值 : main
2019-03-11 09:23:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:23:47 -HTTP METHOD : GET
2019-03-11 09:23:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:23:47 -参数 : []
2019-03-11 09:23:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:23:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:23:47 -<==      Total: 0
2019-03-11 09:23:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:23:47 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:23:47 -<==      Total: 1
2019-03-11 09:23:47 -耗时 : 12
2019-03-11 09:23:47 -返回值 : com.bootdo.common.utils.PageUtils@44ee51f5
2019-03-11 09:23:47 -请求地址 : http://localhost:8081/main
2019-03-11 09:23:47 -HTTP METHOD : GET
2019-03-11 09:23:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:23:47 -参数 : []
2019-03-11 09:23:47 -耗时 : 0
2019-03-11 09:23:47 -返回值 : main
2019-03-11 09:23:51 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:23:51 -HTTP METHOD : GET
2019-03-11 09:23:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:23:51 -参数 : []
2019-03-11 09:23:51 -耗时 : 0
2019-03-11 09:23:51 -返回值 : /moneyList/moneyList
2019-03-11 09:24:40 -请求地址 : http://localhost:8081/index
2019-03-11 09:24:40 -HTTP METHOD : GET
2019-03-11 09:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:24:40 -参数 : [{}]
2019-03-11 09:24:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:24:40 -==> Parameters: 1(Long)
2019-03-11 09:24:40 -<==      Total: 45
2019-03-11 09:24:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:24:40 -==> Parameters: 138(Long)
2019-03-11 09:24:40 -<==      Total: 1
2019-03-11 09:24:40 -耗时 : 23
2019-03-11 09:24:40 -返回值 : index_v1
2019-03-11 09:24:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:24:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:24:40.575(Timestamp)
2019-03-11 09:24:40 -<==    Updates: 1
2019-03-11 09:24:40 -请求地址 : http://localhost:8081/main
2019-03-11 09:24:40 -HTTP METHOD : GET
2019-03-11 09:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:24:40 -参数 : []
2019-03-11 09:24:40 -耗时 : 1
2019-03-11 09:24:40 -返回值 : main
2019-03-11 09:24:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:24:41 -HTTP METHOD : GET
2019-03-11 09:24:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:24:41 -参数 : []
2019-03-11 09:24:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:24:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:24:41 -<==      Total: 0
2019-03-11 09:24:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:24:41 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:24:41 -<==      Total: 1
2019-03-11 09:24:41 -耗时 : 7
2019-03-11 09:24:41 -返回值 : com.bootdo.common.utils.PageUtils@59cc5ab4
2019-03-11 09:24:41 -请求地址 : http://localhost:8081/main
2019-03-11 09:24:41 -HTTP METHOD : GET
2019-03-11 09:24:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:24:41 -参数 : []
2019-03-11 09:24:41 -耗时 : 1
2019-03-11 09:24:41 -返回值 : main
2019-03-11 09:24:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:24:43 -HTTP METHOD : GET
2019-03-11 09:24:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:24:43 -参数 : []
2019-03-11 09:24:43 -耗时 : 2
2019-03-11 09:24:43 -返回值 : /moneyList/moneyList
2019-03-11 09:25:22 -请求地址 : http://localhost:8081/index
2019-03-11 09:25:22 -HTTP METHOD : GET
2019-03-11 09:25:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:25:22 -参数 : [{}]
2019-03-11 09:25:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:25:22 -==> Parameters: 1(Long)
2019-03-11 09:25:22 -<==      Total: 45
2019-03-11 09:25:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:25:22 -==> Parameters: 138(Long)
2019-03-11 09:25:22 -<==      Total: 1
2019-03-11 09:25:22 -耗时 : 28
2019-03-11 09:25:22 -返回值 : index_v1
2019-03-11 09:25:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:25:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:25:22.709(Timestamp)
2019-03-11 09:25:22 -请求地址 : http://localhost:8081/main
2019-03-11 09:25:22 -HTTP METHOD : GET
2019-03-11 09:25:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:25:22 -参数 : []
2019-03-11 09:25:22 -耗时 : 1
2019-03-11 09:25:22 -返回值 : main
2019-03-11 09:25:22 -<==    Updates: 1
2019-03-11 09:25:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:25:23 -HTTP METHOD : GET
2019-03-11 09:25:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:25:23 -参数 : []
2019-03-11 09:25:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:25:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:25:23 -<==      Total: 0
2019-03-11 09:25:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:25:23 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:25:23 -<==      Total: 1
2019-03-11 09:25:23 -耗时 : 12
2019-03-11 09:25:23 -返回值 : com.bootdo.common.utils.PageUtils@70a44497
2019-03-11 09:25:23 -请求地址 : http://localhost:8081/main
2019-03-11 09:25:23 -HTTP METHOD : GET
2019-03-11 09:25:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:25:23 -参数 : []
2019-03-11 09:25:23 -耗时 : 0
2019-03-11 09:25:23 -返回值 : main
2019-03-11 09:25:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 09:25:25 -==> Parameters: 1(Long)
2019-03-11 09:25:25 -<==      Total: 86
2019-03-11 09:25:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:25:25 -HTTP METHOD : GET
2019-03-11 09:25:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:25:25 -参数 : []
2019-03-11 09:25:25 -耗时 : 0
2019-03-11 09:25:25 -返回值 : /moneyList/moneyList
2019-03-11 09:25:53 -请求地址 : http://localhost:8081/index
2019-03-11 09:25:53 -HTTP METHOD : GET
2019-03-11 09:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:25:53 -参数 : [{}]
2019-03-11 09:25:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:25:53 -==> Parameters: 1(Long)
2019-03-11 09:25:53 -<==      Total: 45
2019-03-11 09:25:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:25:53 -==> Parameters: 138(Long)
2019-03-11 09:25:53 -<==      Total: 1
2019-03-11 09:25:53 -耗时 : 27
2019-03-11 09:25:53 -返回值 : index_v1
2019-03-11 09:25:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:25:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:25:53.592(Timestamp)
2019-03-11 09:25:53 -请求地址 : http://localhost:8081/main
2019-03-11 09:25:53 -HTTP METHOD : GET
2019-03-11 09:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:25:53 -参数 : []
2019-03-11 09:25:53 -耗时 : 1
2019-03-11 09:25:53 -返回值 : main
2019-03-11 09:25:53 -<==    Updates: 1
2019-03-11 09:25:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:25:54 -HTTP METHOD : GET
2019-03-11 09:25:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:25:54 -参数 : []
2019-03-11 09:25:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:25:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:25:54 -<==      Total: 0
2019-03-11 09:25:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:25:54 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:25:54 -<==      Total: 1
2019-03-11 09:25:54 -耗时 : 10
2019-03-11 09:25:54 -返回值 : com.bootdo.common.utils.PageUtils@6313a573
2019-03-11 09:25:54 -请求地址 : http://localhost:8081/main
2019-03-11 09:25:54 -HTTP METHOD : GET
2019-03-11 09:25:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:25:54 -参数 : []
2019-03-11 09:25:54 -耗时 : 1
2019-03-11 09:25:54 -返回值 : main
2019-03-11 09:25:55 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:25:55 -HTTP METHOD : GET
2019-03-11 09:25:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:25:55 -参数 : []
2019-03-11 09:25:55 -耗时 : 3
2019-03-11 09:25:55 -返回值 : /moneyList/moneyList
2019-03-11 09:27:03 -Validating all active sessions...
2019-03-11 09:27:03 -Finished session validation.  No sessions were stopped.
2019-03-11 09:27:07 -请求地址 : http://localhost:8081/index
2019-03-11 09:27:07 -HTTP METHOD : GET
2019-03-11 09:27:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:27:07 -参数 : [{}]
2019-03-11 09:27:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:27:07 -==> Parameters: 1(Long)
2019-03-11 09:27:07 -<==      Total: 45
2019-03-11 09:27:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:27:07 -==> Parameters: 138(Long)
2019-03-11 09:27:07 -<==      Total: 1
2019-03-11 09:27:07 -耗时 : 22
2019-03-11 09:27:07 -返回值 : index_v1
2019-03-11 09:27:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:27:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:27:07.755(Timestamp)
2019-03-11 09:27:07 -请求地址 : http://localhost:8081/main
2019-03-11 09:27:07 -HTTP METHOD : GET
2019-03-11 09:27:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:27:07 -参数 : []
2019-03-11 09:27:07 -耗时 : 0
2019-03-11 09:27:07 -返回值 : main
2019-03-11 09:27:07 -<==    Updates: 1
2019-03-11 09:27:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:27:08 -HTTP METHOD : GET
2019-03-11 09:27:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:27:08 -参数 : []
2019-03-11 09:27:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:27:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:27:08 -<==      Total: 0
2019-03-11 09:27:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:27:08 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:27:08 -<==      Total: 1
2019-03-11 09:27:08 -耗时 : 8
2019-03-11 09:27:08 -返回值 : com.bootdo.common.utils.PageUtils@675fb117
2019-03-11 09:27:08 -请求地址 : http://localhost:8081/main
2019-03-11 09:27:08 -HTTP METHOD : GET
2019-03-11 09:27:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:27:08 -参数 : []
2019-03-11 09:27:08 -耗时 : 1
2019-03-11 09:27:08 -返回值 : main
2019-03-11 09:27:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:27:11 -HTTP METHOD : GET
2019-03-11 09:27:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:27:11 -参数 : []
2019-03-11 09:27:11 -耗时 : 1
2019-03-11 09:27:11 -返回值 : /moneyList/moneyList
2019-03-11 09:27:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 519]
2019-03-11 09:28:32 -请求地址 : http://localhost:8081/index
2019-03-11 09:28:32 -HTTP METHOD : GET
2019-03-11 09:28:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:28:32 -参数 : [{}]
2019-03-11 09:28:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:28:32 -==> Parameters: 1(Long)
2019-03-11 09:28:32 -<==      Total: 45
2019-03-11 09:28:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:28:32 -==> Parameters: 138(Long)
2019-03-11 09:28:32 -<==      Total: 1
2019-03-11 09:28:32 -耗时 : 33
2019-03-11 09:28:32 -返回值 : index_v1
2019-03-11 09:28:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:28:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:28:32.695(Timestamp)
2019-03-11 09:28:32 -<==    Updates: 1
2019-03-11 09:28:32 -请求地址 : http://localhost:8081/main
2019-03-11 09:28:32 -HTTP METHOD : GET
2019-03-11 09:28:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:28:32 -参数 : []
2019-03-11 09:28:32 -耗时 : 0
2019-03-11 09:28:32 -返回值 : main
2019-03-11 09:28:32 -请求地址 : http://localhost:8081/index
2019-03-11 09:28:32 -HTTP METHOD : GET
2019-03-11 09:28:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:28:32 -参数 : [{}]
2019-03-11 09:28:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:28:32 -==> Parameters: 1(Long)
2019-03-11 09:28:32 -<==      Total: 45
2019-03-11 09:28:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:28:32 -==> Parameters: 138(Long)
2019-03-11 09:28:32 -<==      Total: 1
2019-03-11 09:28:32 -耗时 : 16
2019-03-11 09:28:32 -返回值 : index_v1
2019-03-11 09:28:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:28:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:28:32.999(Timestamp)
2019-03-11 09:28:33 -<==    Updates: 1
2019-03-11 09:28:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:28:33 -HTTP METHOD : GET
2019-03-11 09:28:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:28:33 -参数 : []
2019-03-11 09:28:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:28:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:28:33 -<==      Total: 0
2019-03-11 09:28:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:28:33 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:28:33 -<==      Total: 1
2019-03-11 09:28:33 -耗时 : 5
2019-03-11 09:28:33 -返回值 : com.bootdo.common.utils.PageUtils@775b511e
2019-03-11 09:28:33 -请求地址 : http://localhost:8081/main
2019-03-11 09:28:33 -HTTP METHOD : GET
2019-03-11 09:28:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:28:33 -参数 : []
2019-03-11 09:28:33 -耗时 : 1
2019-03-11 09:28:33 -返回值 : main
2019-03-11 09:28:33 -请求地址 : http://localhost:8081/main
2019-03-11 09:28:33 -HTTP METHOD : GET
2019-03-11 09:28:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:28:33 -参数 : []
2019-03-11 09:28:33 -耗时 : 0
2019-03-11 09:28:33 -返回值 : main
2019-03-11 09:28:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:28:33 -HTTP METHOD : GET
2019-03-11 09:28:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:28:33 -参数 : []
2019-03-11 09:28:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:28:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:28:33 -<==      Total: 0
2019-03-11 09:28:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:28:33 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:28:33 -<==      Total: 1
2019-03-11 09:28:33 -耗时 : 10
2019-03-11 09:28:33 -返回值 : com.bootdo.common.utils.PageUtils@5fc17ba4
2019-03-11 09:28:33 -请求地址 : http://localhost:8081/main
2019-03-11 09:28:33 -HTTP METHOD : GET
2019-03-11 09:28:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:28:33 -参数 : []
2019-03-11 09:28:33 -耗时 : 1
2019-03-11 09:28:33 -返回值 : main
2019-03-11 09:28:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:28:35 -HTTP METHOD : GET
2019-03-11 09:28:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:28:35 -参数 : []
2019-03-11 09:28:35 -耗时 : 0
2019-03-11 09:28:35 -返回值 : /moneyList/moneyList
2019-03-11 09:29:06 -请求地址 : http://localhost:8081/index
2019-03-11 09:29:06 -HTTP METHOD : GET
2019-03-11 09:29:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:29:06 -参数 : [{}]
2019-03-11 09:29:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:29:06 -==> Parameters: 1(Long)
2019-03-11 09:29:06 -<==      Total: 45
2019-03-11 09:29:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:29:06 -==> Parameters: 138(Long)
2019-03-11 09:29:06 -<==      Total: 1
2019-03-11 09:29:06 -耗时 : 19
2019-03-11 09:29:06 -返回值 : index_v1
2019-03-11 09:29:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:29:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:29:06.433(Timestamp)
2019-03-11 09:29:06 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:06 -HTTP METHOD : GET
2019-03-11 09:29:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:06 -参数 : []
2019-03-11 09:29:06 -耗时 : 1
2019-03-11 09:29:06 -返回值 : main
2019-03-11 09:29:06 -<==    Updates: 1
2019-03-11 09:29:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:29:06 -HTTP METHOD : GET
2019-03-11 09:29:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:29:06 -参数 : []
2019-03-11 09:29:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:29:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:29:06 -<==      Total: 0
2019-03-11 09:29:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:29:06 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:29:06 -<==      Total: 1
2019-03-11 09:29:06 -耗时 : 8
2019-03-11 09:29:06 -返回值 : com.bootdo.common.utils.PageUtils@242ea2c0
2019-03-11 09:29:06 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:06 -HTTP METHOD : GET
2019-03-11 09:29:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:06 -参数 : []
2019-03-11 09:29:06 -耗时 : 1
2019-03-11 09:29:06 -返回值 : main
2019-03-11 09:29:08 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:29:08 -HTTP METHOD : GET
2019-03-11 09:29:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:29:08 -参数 : []
2019-03-11 09:29:08 -耗时 : 0
2019-03-11 09:29:08 -返回值 : /moneyList/moneyList
2019-03-11 09:29:26 -请求地址 : http://localhost:8081/index
2019-03-11 09:29:26 -HTTP METHOD : GET
2019-03-11 09:29:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:29:26 -参数 : [{}]
2019-03-11 09:29:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:29:26 -==> Parameters: 1(Long)
2019-03-11 09:29:26 -<==      Total: 45
2019-03-11 09:29:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:29:26 -==> Parameters: 138(Long)
2019-03-11 09:29:26 -<==      Total: 1
2019-03-11 09:29:26 -耗时 : 23
2019-03-11 09:29:26 -返回值 : index_v1
2019-03-11 09:29:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:29:26 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:29:26.527(Timestamp)
2019-03-11 09:29:26 -HTTP METHOD : GET
2019-03-11 09:29:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:26 -参数 : []
2019-03-11 09:29:26 -耗时 : 2
2019-03-11 09:29:26 -返回值 : main
2019-03-11 09:29:26 -<==    Updates: 1
2019-03-11 09:29:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:29:26 -HTTP METHOD : GET
2019-03-11 09:29:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:29:26 -参数 : []
2019-03-11 09:29:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:29:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:29:26 -<==      Total: 0
2019-03-11 09:29:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:29:26 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:29:26 -<==      Total: 1
2019-03-11 09:29:26 -耗时 : 9
2019-03-11 09:29:26 -返回值 : com.bootdo.common.utils.PageUtils@48f0bd41
2019-03-11 09:29:26 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:26 -HTTP METHOD : GET
2019-03-11 09:29:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:26 -参数 : []
2019-03-11 09:29:26 -耗时 : 1
2019-03-11 09:29:26 -返回值 : main
2019-03-11 09:29:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:29:27 -HTTP METHOD : GET
2019-03-11 09:29:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:29:27 -参数 : []
2019-03-11 09:29:27 -耗时 : 1
2019-03-11 09:29:27 -返回值 : /moneyList/moneyList
2019-03-11 09:29:47 -请求地址 : http://localhost:8081/index
2019-03-11 09:29:47 -HTTP METHOD : GET
2019-03-11 09:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:29:47 -参数 : [{}]
2019-03-11 09:29:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:29:47 -==> Parameters: 1(Long)
2019-03-11 09:29:47 -<==      Total: 45
2019-03-11 09:29:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:29:47 -==> Parameters: 138(Long)
2019-03-11 09:29:47 -<==      Total: 1
2019-03-11 09:29:47 -耗时 : 19
2019-03-11 09:29:47 -返回值 : index_v1
2019-03-11 09:29:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:29:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:29:47.468(Timestamp)
2019-03-11 09:29:47 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:47 -HTTP METHOD : GET
2019-03-11 09:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:47 -参数 : []
2019-03-11 09:29:47 -耗时 : 1
2019-03-11 09:29:47 -返回值 : main
2019-03-11 09:29:47 -<==    Updates: 1
2019-03-11 09:29:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:29:47 -HTTP METHOD : GET
2019-03-11 09:29:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:29:47 -参数 : []
2019-03-11 09:29:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:29:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:29:47 -<==      Total: 0
2019-03-11 09:29:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:29:47 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:29:47 -<==      Total: 1
2019-03-11 09:29:47 -耗时 : 10
2019-03-11 09:29:47 -返回值 : com.bootdo.common.utils.PageUtils@1a8177f6
2019-03-11 09:29:47 -请求地址 : http://localhost:8081/main
2019-03-11 09:29:47 -HTTP METHOD : GET
2019-03-11 09:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:29:47 -参数 : []
2019-03-11 09:29:47 -耗时 : 1
2019-03-11 09:29:47 -返回值 : main
2019-03-11 09:29:49 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:29:49 -HTTP METHOD : GET
2019-03-11 09:29:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:29:49 -参数 : []
2019-03-11 09:29:49 -耗时 : 0
2019-03-11 09:29:49 -返回值 : /moneyList/moneyList
2019-03-11 09:30:25 -请求地址 : http://localhost:8081/index
2019-03-11 09:30:25 -HTTP METHOD : GET
2019-03-11 09:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:30:25 -参数 : [{}]
2019-03-11 09:30:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:30:25 -==> Parameters: 1(Long)
2019-03-11 09:30:25 -<==      Total: 45
2019-03-11 09:30:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:30:25 -==> Parameters: 138(Long)
2019-03-11 09:30:25 -<==      Total: 1
2019-03-11 09:30:25 -耗时 : 18
2019-03-11 09:30:25 -返回值 : index_v1
2019-03-11 09:30:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:30:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:30:25.438(Timestamp)
2019-03-11 09:30:25 -请求地址 : http://localhost:8081/main
2019-03-11 09:30:25 -HTTP METHOD : GET
2019-03-11 09:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:30:25 -参数 : []
2019-03-11 09:30:25 -耗时 : 1
2019-03-11 09:30:25 -返回值 : main
2019-03-11 09:30:25 -<==    Updates: 1
2019-03-11 09:30:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:30:25 -HTTP METHOD : GET
2019-03-11 09:30:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:30:25 -参数 : []
2019-03-11 09:30:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:30:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:30:25 -<==      Total: 0
2019-03-11 09:30:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:30:25 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:30:25 -<==      Total: 1
2019-03-11 09:30:25 -耗时 : 5
2019-03-11 09:30:25 -返回值 : com.bootdo.common.utils.PageUtils@70d0bd06
2019-03-11 09:30:25 -请求地址 : http://localhost:8081/main
2019-03-11 09:30:25 -HTTP METHOD : GET
2019-03-11 09:30:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:30:25 -参数 : []
2019-03-11 09:30:25 -耗时 : 1
2019-03-11 09:30:25 -返回值 : main
2019-03-11 09:30:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:30:27 -HTTP METHOD : GET
2019-03-11 09:30:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:30:27 -参数 : []
2019-03-11 09:30:27 -耗时 : 0
2019-03-11 09:30:27 -返回值 : /moneyList/moneyList
2019-03-11 09:30:46 -请求地址 : http://localhost:8081/index
2019-03-11 09:30:46 -HTTP METHOD : GET
2019-03-11 09:30:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:30:46 -参数 : [{}]
2019-03-11 09:30:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:30:46 -==> Parameters: 1(Long)
2019-03-11 09:30:46 -<==      Total: 45
2019-03-11 09:30:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:30:46 -==> Parameters: 138(Long)
2019-03-11 09:30:46 -<==      Total: 1
2019-03-11 09:30:46 -耗时 : 23
2019-03-11 09:30:46 -返回值 : index_v1
2019-03-11 09:30:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:30:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:30:46.734(Timestamp)
2019-03-11 09:30:46 -请求地址 : http://localhost:8081/main
2019-03-11 09:30:46 -HTTP METHOD : GET
2019-03-11 09:30:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:30:46 -参数 : []
2019-03-11 09:30:46 -耗时 : 1
2019-03-11 09:30:46 -返回值 : main
2019-03-11 09:30:46 -<==    Updates: 1
2019-03-11 09:30:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:30:46 -HTTP METHOD : GET
2019-03-11 09:30:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:30:46 -参数 : []
2019-03-11 09:30:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:30:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:30:46 -<==      Total: 0
2019-03-11 09:30:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:30:46 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:30:46 -<==      Total: 1
2019-03-11 09:30:46 -耗时 : 7
2019-03-11 09:30:46 -返回值 : com.bootdo.common.utils.PageUtils@2dc5f5e7
2019-03-11 09:30:47 -请求地址 : http://localhost:8081/main
2019-03-11 09:30:47 -HTTP METHOD : GET
2019-03-11 09:30:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:30:47 -参数 : []
2019-03-11 09:30:47 -耗时 : 1
2019-03-11 09:30:47 -返回值 : main
2019-03-11 09:30:49 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:30:49 -HTTP METHOD : GET
2019-03-11 09:30:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:30:49 -参数 : []
2019-03-11 09:30:49 -耗时 : 0
2019-03-11 09:30:49 -返回值 : /moneyList/moneyList
2019-03-11 09:31:06 -请求地址 : http://localhost:8081/index
2019-03-11 09:31:06 -HTTP METHOD : GET
2019-03-11 09:31:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:31:06 -参数 : [{}]
2019-03-11 09:31:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:31:06 -==> Parameters: 1(Long)
2019-03-11 09:31:06 -<==      Total: 45
2019-03-11 09:31:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:31:06 -==> Parameters: 138(Long)
2019-03-11 09:31:06 -<==      Total: 1
2019-03-11 09:31:06 -耗时 : 21
2019-03-11 09:31:06 -返回值 : index_v1
2019-03-11 09:31:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:31:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:31:06.9(Timestamp)
2019-03-11 09:31:06 -请求地址 : http://localhost:8081/main
2019-03-11 09:31:06 -HTTP METHOD : GET
2019-03-11 09:31:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:31:06 -参数 : []
2019-03-11 09:31:06 -耗时 : 1
2019-03-11 09:31:06 -返回值 : main
2019-03-11 09:31:07 -<==    Updates: 1
2019-03-11 09:31:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:31:07 -HTTP METHOD : GET
2019-03-11 09:31:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:31:07 -参数 : []
2019-03-11 09:31:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:31:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:31:07 -<==      Total: 0
2019-03-11 09:31:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:31:07 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:31:07 -<==      Total: 1
2019-03-11 09:31:07 -耗时 : 9
2019-03-11 09:31:07 -返回值 : com.bootdo.common.utils.PageUtils@71e49bad
2019-03-11 09:31:07 -请求地址 : http://localhost:8081/main
2019-03-11 09:31:07 -HTTP METHOD : GET
2019-03-11 09:31:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:31:07 -参数 : []
2019-03-11 09:31:07 -耗时 : 1
2019-03-11 09:31:07 -返回值 : main
2019-03-11 09:31:08 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:31:08 -HTTP METHOD : GET
2019-03-11 09:31:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:31:08 -参数 : []
2019-03-11 09:31:08 -耗时 : 0
2019-03-11 09:31:08 -返回值 : /moneyList/moneyList
2019-03-11 09:31:20 -请求地址 : http://localhost:8081/index
2019-03-11 09:31:20 -HTTP METHOD : GET
2019-03-11 09:31:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:31:20 -参数 : [{}]
2019-03-11 09:31:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:31:20 -==> Parameters: 1(Long)
2019-03-11 09:31:20 -<==      Total: 45
2019-03-11 09:31:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:31:20 -==> Parameters: 138(Long)
2019-03-11 09:31:20 -<==      Total: 1
2019-03-11 09:31:20 -耗时 : 18
2019-03-11 09:31:20 -返回值 : index_v1
2019-03-11 09:31:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:31:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:31:20.433(Timestamp)
2019-03-11 09:31:20 -请求地址 : http://localhost:8081/main
2019-03-11 09:31:20 -HTTP METHOD : GET
2019-03-11 09:31:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:31:20 -参数 : []
2019-03-11 09:31:20 -耗时 : 0
2019-03-11 09:31:20 -返回值 : main
2019-03-11 09:31:20 -<==    Updates: 1
2019-03-11 09:31:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:31:20 -HTTP METHOD : GET
2019-03-11 09:31:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:31:20 -参数 : []
2019-03-11 09:31:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:31:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:31:20 -<==      Total: 0
2019-03-11 09:31:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:31:20 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:31:20 -<==      Total: 1
2019-03-11 09:31:20 -耗时 : 9
2019-03-11 09:31:20 -返回值 : com.bootdo.common.utils.PageUtils@629d97c5
2019-03-11 09:31:20 -请求地址 : http://localhost:8081/main
2019-03-11 09:31:20 -HTTP METHOD : GET
2019-03-11 09:31:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:31:20 -参数 : []
2019-03-11 09:31:20 -耗时 : 2
2019-03-11 09:31:20 -返回值 : main
2019-03-11 09:31:22 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:31:22 -HTTP METHOD : GET
2019-03-11 09:31:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:31:22 -参数 : []
2019-03-11 09:31:22 -耗时 : 1
2019-03-11 09:31:22 -返回值 : /moneyList/moneyList
2019-03-11 09:40:14 -请求地址 : http://localhost:8081/index
2019-03-11 09:40:14 -HTTP METHOD : GET
2019-03-11 09:40:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:40:14 -参数 : [{}]
2019-03-11 09:40:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:40:14 -==> Parameters: 1(Long)
2019-03-11 09:40:14 -<==      Total: 45
2019-03-11 09:40:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:40:14 -==> Parameters: 138(Long)
2019-03-11 09:40:14 -<==      Total: 1
2019-03-11 09:40:14 -耗时 : 20
2019-03-11 09:40:14 -返回值 : index_v1
2019-03-11 09:40:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:40:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:40:14.384(Timestamp)
2019-03-11 09:40:14 -请求地址 : http://localhost:8081/main
2019-03-11 09:40:14 -HTTP METHOD : GET
2019-03-11 09:40:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:40:14 -参数 : []
2019-03-11 09:40:14 -耗时 : 0
2019-03-11 09:40:14 -返回值 : main
2019-03-11 09:40:14 -<==    Updates: 1
2019-03-11 09:40:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:40:14 -HTTP METHOD : GET
2019-03-11 09:40:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:40:14 -参数 : []
2019-03-11 09:40:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:40:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:40:14 -<==      Total: 0
2019-03-11 09:40:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:40:14 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:40:14 -<==      Total: 1
2019-03-11 09:40:14 -耗时 : 9
2019-03-11 09:40:14 -返回值 : com.bootdo.common.utils.PageUtils@34a0c325
2019-03-11 09:40:14 -请求地址 : http://localhost:8081/main
2019-03-11 09:40:14 -HTTP METHOD : GET
2019-03-11 09:40:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:40:14 -参数 : []
2019-03-11 09:40:14 -耗时 : 1
2019-03-11 09:40:14 -返回值 : main
2019-03-11 09:40:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 09:40:16 -==> Parameters: 1(Long)
2019-03-11 09:40:16 -<==      Total: 86
2019-03-11 09:40:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:40:16 -HTTP METHOD : GET
2019-03-11 09:40:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:40:16 -参数 : []
2019-03-11 09:40:16 -耗时 : 0
2019-03-11 09:40:16 -返回值 : /moneyList/moneyList
2019-03-11 09:41:19 -请求地址 : http://localhost:8081/index
2019-03-11 09:41:19 -HTTP METHOD : GET
2019-03-11 09:41:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:41:19 -参数 : [{}]
2019-03-11 09:41:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:41:19 -==> Parameters: 1(Long)
2019-03-11 09:41:19 -<==      Total: 45
2019-03-11 09:41:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:41:19 -==> Parameters: 138(Long)
2019-03-11 09:41:19 -<==      Total: 1
2019-03-11 09:41:19 -耗时 : 23
2019-03-11 09:41:19 -返回值 : index_v1
2019-03-11 09:41:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:41:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:41:19.989(Timestamp)
2019-03-11 09:41:20 -请求地址 : http://localhost:8081/main
2019-03-11 09:41:20 -HTTP METHOD : GET
2019-03-11 09:41:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:41:20 -参数 : []
2019-03-11 09:41:20 -耗时 : 0
2019-03-11 09:41:20 -返回值 : main
2019-03-11 09:41:20 -<==    Updates: 1
2019-03-11 09:41:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:41:20 -HTTP METHOD : GET
2019-03-11 09:41:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:41:20 -参数 : []
2019-03-11 09:41:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:41:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:41:20 -<==      Total: 0
2019-03-11 09:41:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:41:20 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:41:20 -<==      Total: 1
2019-03-11 09:41:20 -耗时 : 9
2019-03-11 09:41:20 -返回值 : com.bootdo.common.utils.PageUtils@7e733ce3
2019-03-11 09:41:20 -请求地址 : http://localhost:8081/main
2019-03-11 09:41:20 -HTTP METHOD : GET
2019-03-11 09:41:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:41:20 -参数 : []
2019-03-11 09:41:20 -耗时 : 1
2019-03-11 09:41:20 -返回值 : main
2019-03-11 09:41:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:41:23 -HTTP METHOD : GET
2019-03-11 09:41:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:41:23 -参数 : []
2019-03-11 09:41:23 -耗时 : 1
2019-03-11 09:41:23 -返回值 : /moneyList/moneyList
2019-03-11 09:42:54 -请求地址 : http://localhost:8081/index
2019-03-11 09:42:54 -HTTP METHOD : GET
2019-03-11 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:42:54 -参数 : [{}]
2019-03-11 09:42:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:42:54 -==> Parameters: 1(Long)
2019-03-11 09:42:54 -<==      Total: 45
2019-03-11 09:42:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:42:54 -==> Parameters: 138(Long)
2019-03-11 09:42:54 -<==      Total: 1
2019-03-11 09:42:54 -耗时 : 21
2019-03-11 09:42:54 -返回值 : index_v1
2019-03-11 09:42:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:42:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:42:54.585(Timestamp)
2019-03-11 09:42:54 -请求地址 : http://localhost:8081/main
2019-03-11 09:42:54 -HTTP METHOD : GET
2019-03-11 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:42:54 -参数 : []
2019-03-11 09:42:54 -耗时 : 0
2019-03-11 09:42:54 -返回值 : main
2019-03-11 09:42:54 -<==    Updates: 1
2019-03-11 09:42:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:42:55 -HTTP METHOD : GET
2019-03-11 09:42:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:42:55 -参数 : []
2019-03-11 09:42:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:42:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:42:55 -<==      Total: 0
2019-03-11 09:42:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:42:55 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:42:55 -<==      Total: 1
2019-03-11 09:42:55 -耗时 : 7
2019-03-11 09:42:55 -返回值 : com.bootdo.common.utils.PageUtils@7b3ab8f5
2019-03-11 09:42:55 -请求地址 : http://localhost:8081/main
2019-03-11 09:42:55 -HTTP METHOD : GET
2019-03-11 09:42:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:42:55 -参数 : []
2019-03-11 09:42:55 -耗时 : 1
2019-03-11 09:42:55 -返回值 : main
2019-03-11 09:42:56 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:42:56 -HTTP METHOD : GET
2019-03-11 09:42:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:42:56 -参数 : []
2019-03-11 09:42:56 -耗时 : 1
2019-03-11 09:42:56 -返回值 : /moneyList/moneyList
2019-03-11 09:45:33 -请求地址 : http://localhost:8081/index
2019-03-11 09:45:33 -HTTP METHOD : GET
2019-03-11 09:45:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:45:33 -参数 : [{}]
2019-03-11 09:45:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:45:33 -==> Parameters: 1(Long)
2019-03-11 09:45:33 -<==      Total: 45
2019-03-11 09:45:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:45:33 -==> Parameters: 138(Long)
2019-03-11 09:45:33 -<==      Total: 1
2019-03-11 09:45:33 -耗时 : 17
2019-03-11 09:45:33 -返回值 : index_v1
2019-03-11 09:45:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:45:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:45:33.429(Timestamp)
2019-03-11 09:45:33 -请求地址 : http://localhost:8081/main
2019-03-11 09:45:33 -HTTP METHOD : GET
2019-03-11 09:45:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:45:33 -参数 : []
2019-03-11 09:45:33 -耗时 : 3
2019-03-11 09:45:33 -返回值 : main
2019-03-11 09:45:33 -<==    Updates: 1
2019-03-11 09:45:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:45:33 -HTTP METHOD : GET
2019-03-11 09:45:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:45:33 -参数 : []
2019-03-11 09:45:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:45:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:45:33 -<==      Total: 0
2019-03-11 09:45:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:45:33 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:45:33 -<==      Total: 1
2019-03-11 09:45:33 -耗时 : 7
2019-03-11 09:45:33 -返回值 : com.bootdo.common.utils.PageUtils@29c4594
2019-03-11 09:45:33 -请求地址 : http://localhost:8081/main
2019-03-11 09:45:33 -HTTP METHOD : GET
2019-03-11 09:45:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:45:33 -参数 : []
2019-03-11 09:45:33 -耗时 : 0
2019-03-11 09:45:33 -返回值 : main
2019-03-11 09:45:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:45:35 -HTTP METHOD : GET
2019-03-11 09:45:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:45:35 -参数 : []
2019-03-11 09:45:35 -耗时 : 0
2019-03-11 09:45:35 -返回值 : /moneyList/moneyList
2019-03-11 09:47:44 -请求地址 : http://localhost:8081/index
2019-03-11 09:47:44 -HTTP METHOD : GET
2019-03-11 09:47:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:47:44 -参数 : [{}]
2019-03-11 09:47:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:47:44 -==> Parameters: 1(Long)
2019-03-11 09:47:44 -<==      Total: 45
2019-03-11 09:47:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:47:44 -==> Parameters: 138(Long)
2019-03-11 09:47:44 -<==      Total: 1
2019-03-11 09:47:44 -耗时 : 18
2019-03-11 09:47:44 -返回值 : index_v1
2019-03-11 09:47:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:47:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:47:44.397(Timestamp)
2019-03-11 09:47:44 -请求地址 : http://localhost:8081/main
2019-03-11 09:47:44 -HTTP METHOD : GET
2019-03-11 09:47:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:47:44 -参数 : []
2019-03-11 09:47:44 -耗时 : 1
2019-03-11 09:47:44 -返回值 : main
2019-03-11 09:47:44 -<==    Updates: 1
2019-03-11 09:47:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:47:44 -HTTP METHOD : GET
2019-03-11 09:47:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:47:44 -参数 : []
2019-03-11 09:47:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:47:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:47:44 -<==      Total: 0
2019-03-11 09:47:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:47:44 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:47:44 -<==      Total: 1
2019-03-11 09:47:44 -耗时 : 7
2019-03-11 09:47:44 -返回值 : com.bootdo.common.utils.PageUtils@51976b24
2019-03-11 09:47:44 -请求地址 : http://localhost:8081/main
2019-03-11 09:47:44 -HTTP METHOD : GET
2019-03-11 09:47:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:47:44 -参数 : []
2019-03-11 09:47:44 -耗时 : 0
2019-03-11 09:47:44 -返回值 : main
2019-03-11 09:47:47 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:47:47 -HTTP METHOD : GET
2019-03-11 09:47:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:47:47 -参数 : []
2019-03-11 09:47:47 -耗时 : 0
2019-03-11 09:47:47 -返回值 : /moneyList/moneyList
2019-03-11 09:49:34 -请求地址 : http://localhost:8081/index
2019-03-11 09:49:34 -HTTP METHOD : GET
2019-03-11 09:49:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:49:34 -参数 : [{}]
2019-03-11 09:49:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:49:34 -==> Parameters: 1(Long)
2019-03-11 09:49:34 -<==      Total: 45
2019-03-11 09:49:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:49:34 -==> Parameters: 138(Long)
2019-03-11 09:49:34 -<==      Total: 1
2019-03-11 09:49:34 -耗时 : 18
2019-03-11 09:49:34 -返回值 : index_v1
2019-03-11 09:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:49:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:49:34.942(Timestamp)
2019-03-11 09:49:35 -<==    Updates: 1
2019-03-11 09:49:35 -请求地址 : http://localhost:8081/main
2019-03-11 09:49:35 -HTTP METHOD : GET
2019-03-11 09:49:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:49:35 -参数 : []
2019-03-11 09:49:35 -耗时 : 0
2019-03-11 09:49:35 -返回值 : main
2019-03-11 09:49:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:49:35 -HTTP METHOD : GET
2019-03-11 09:49:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:49:35 -参数 : []
2019-03-11 09:49:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:49:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:49:35 -<==      Total: 0
2019-03-11 09:49:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:49:35 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:49:35 -<==      Total: 1
2019-03-11 09:49:35 -耗时 : 8
2019-03-11 09:49:35 -返回值 : com.bootdo.common.utils.PageUtils@b99b430
2019-03-11 09:49:35 -请求地址 : http://localhost:8081/main
2019-03-11 09:49:35 -HTTP METHOD : GET
2019-03-11 09:49:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:49:35 -参数 : []
2019-03-11 09:49:35 -耗时 : 1
2019-03-11 09:49:35 -返回值 : main
2019-03-11 09:49:37 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:49:37 -HTTP METHOD : GET
2019-03-11 09:49:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:49:37 -参数 : []
2019-03-11 09:49:37 -耗时 : 1
2019-03-11 09:49:37 -返回值 : /moneyList/moneyList
2019-03-11 09:50:19 -请求地址 : http://localhost:8081/index
2019-03-11 09:50:19 -HTTP METHOD : GET
2019-03-11 09:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:50:19 -参数 : [{}]
2019-03-11 09:50:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:50:19 -==> Parameters: 1(Long)
2019-03-11 09:50:19 -<==      Total: 45
2019-03-11 09:50:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:50:19 -==> Parameters: 138(Long)
2019-03-11 09:50:19 -<==      Total: 1
2019-03-11 09:50:19 -耗时 : 19
2019-03-11 09:50:19 -返回值 : index_v1
2019-03-11 09:50:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:50:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:50:19.475(Timestamp)
2019-03-11 09:50:19 -请求地址 : http://localhost:8081/main
2019-03-11 09:50:19 -HTTP METHOD : GET
2019-03-11 09:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:50:19 -参数 : []
2019-03-11 09:50:19 -耗时 : 0
2019-03-11 09:50:19 -返回值 : main
2019-03-11 09:50:19 -<==    Updates: 1
2019-03-11 09:50:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:50:19 -HTTP METHOD : GET
2019-03-11 09:50:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:50:19 -参数 : []
2019-03-11 09:50:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:50:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:50:19 -<==      Total: 0
2019-03-11 09:50:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:50:19 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:50:19 -<==      Total: 1
2019-03-11 09:50:19 -耗时 : 8
2019-03-11 09:50:19 -返回值 : com.bootdo.common.utils.PageUtils@5afbc40
2019-03-11 09:50:19 -请求地址 : http://localhost:8081/main
2019-03-11 09:50:19 -HTTP METHOD : GET
2019-03-11 09:50:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:50:19 -参数 : []
2019-03-11 09:50:19 -耗时 : 1
2019-03-11 09:50:19 -返回值 : main
2019-03-11 09:50:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 09:50:21 -==> Parameters: 1(Long)
2019-03-11 09:50:21 -<==      Total: 86
2019-03-11 09:50:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:50:21 -HTTP METHOD : GET
2019-03-11 09:50:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:50:21 -参数 : []
2019-03-11 09:50:21 -耗时 : 0
2019-03-11 09:50:21 -返回值 : /moneyList/moneyList
2019-03-11 09:51:30 -请求地址 : http://localhost:8081/index
2019-03-11 09:51:30 -HTTP METHOD : GET
2019-03-11 09:51:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:51:30 -参数 : [{}]
2019-03-11 09:51:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:51:30 -==> Parameters: 1(Long)
2019-03-11 09:51:30 -<==      Total: 45
2019-03-11 09:51:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:51:30 -==> Parameters: 138(Long)
2019-03-11 09:51:30 -<==      Total: 1
2019-03-11 09:51:30 -耗时 : 17
2019-03-11 09:51:30 -返回值 : index_v1
2019-03-11 09:51:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:51:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:51:30.199(Timestamp)
2019-03-11 09:51:30 -请求地址 : http://localhost:8081/main
2019-03-11 09:51:30 -HTTP METHOD : GET
2019-03-11 09:51:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:51:30 -参数 : []
2019-03-11 09:51:30 -耗时 : 0
2019-03-11 09:51:30 -返回值 : main
2019-03-11 09:51:30 -<==    Updates: 1
2019-03-11 09:51:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:51:30 -HTTP METHOD : GET
2019-03-11 09:51:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:51:30 -参数 : []
2019-03-11 09:51:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:51:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:51:30 -<==      Total: 0
2019-03-11 09:51:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:51:30 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:51:30 -<==      Total: 1
2019-03-11 09:51:30 -耗时 : 6
2019-03-11 09:51:30 -返回值 : com.bootdo.common.utils.PageUtils@11e29dce
2019-03-11 09:51:30 -请求地址 : http://localhost:8081/main
2019-03-11 09:51:30 -HTTP METHOD : GET
2019-03-11 09:51:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:51:30 -参数 : []
2019-03-11 09:51:30 -耗时 : 0
2019-03-11 09:51:30 -返回值 : main
2019-03-11 09:51:35 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:51:35 -HTTP METHOD : GET
2019-03-11 09:51:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:51:35 -参数 : []
2019-03-11 09:51:35 -耗时 : 0
2019-03-11 09:51:35 -返回值 : /moneyList/moneyList
2019-03-11 09:52:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 12740 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 09:52:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 09:52:02 -The following profiles are active: dev
2019-03-11 09:52:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Mon Mar 11 09:52:03 CST 2019]; root of context hierarchy
2019-03-11 09:52:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 09:52:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4827bb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$96dbaa58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 09:52:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 09:52:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 09:52:14 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 09:52:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 09:52:14 -Starting service [Tomcat]
2019-03-11 09:52:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 09:52:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 09:52:15 -Initializing Spring embedded WebApplicationContext
2019-03-11 09:52:15 -Root WebApplicationContext: initialization completed in 12489 ms
2019-03-11 09:52:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 09:52:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 09:52:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 09:52:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 09:52:16 -Filter xssFilter was not registered (disabled)
2019-03-11 09:52:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 09:52:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 09:52:16 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 09:52:16 -Servlet dispatcherServlet mapped to [/]
2019-03-11 09:52:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Mon Mar 11 09:52:03 CST 2019]; root of context hierarchy
2019-03-11 09:52:21 -Using default implementation for ThreadExecutor
2019-03-11 09:52:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 09:52:21 -Quartz Scheduler v.2.2.1 created.
2019-03-11 09:52:21 -RAMJobStore initialized.
2019-03-11 09:52:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 09:52:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 09:52:21 -Quartz scheduler version: 2.2.1
2019-03-11 09:52:21 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5751e53e
2019-03-11 09:52:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 09:52:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 09:52:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 09:52:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 09:52:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 09:52:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 09:52:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 09:52:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 09:52:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 09:52:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 09:52:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 09:52:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 09:52:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 09:52:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 09:52:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 09:52:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 09:52:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 09:52:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 09:52:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 09:52:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 09:52:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 09:52:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 09:52:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 09:52:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 09:52:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 09:52:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 09:52:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 09:52:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 09:52:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 09:52:25 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 09:52:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 09:52:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 09:52:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 09:52:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 09:52:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 09:52:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 09:52:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 09:52:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 09:52:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 09:52:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 09:52:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 09:52:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 09:52:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.heatLog()
2019-03-11 09:52:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 09:52:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 09:52:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 09:52:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 09:52:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 09:52:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 09:52:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 09:52:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 09:52:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 09:52:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 09:52:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 09:52:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 09:52:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 09:52:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 09:52:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 09:52:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 09:52:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 09:52:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 09:52:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 09:52:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 09:52:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 09:52:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 09:52:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 09:52:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 09:52:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 09:52:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 09:52:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 09:52:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 09:52:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 09:52:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 09:52:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 09:52:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 09:52:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 09:52:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 09:52:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 09:52:25 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 09:52:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 09:52:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 09:52:25 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 09:52:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 09:52:25 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 09:52:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 09:52:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 09:52:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 09:52:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 09:52:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 09:52:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 09:52:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 09:52:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 09:52:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 09:52:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bc715b8: startup date [Mon Mar 11 09:52:03 CST 2019]; root of context hierarchy
2019-03-11 09:52:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 09:52:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 09:52:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 09:52:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 09:52:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 09:52:30 -Registering beans for JMX exposure on startup
2019-03-11 09:52:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 09:52:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 09:52:30 -Starting beans in phase 2147483647
2019-03-11 09:52:30 -Context refreshed
2019-03-11 09:52:30 -Found 1 custom documentation plugin(s)
2019-03-11 09:52:30 -Scanning for api listing references
2019-03-11 09:52:31 -Generating unique operation named: removeUsingPOST_1
2019-03-11 09:52:31 -Generating unique operation named: addUsingGET_1
2019-03-11 09:52:31 -Generating unique operation named: editUsingGET_1
2019-03-11 09:52:31 -Generating unique operation named: listUsingGET_1
2019-03-11 09:52:31 -Generating unique operation named: removeUsingPOST_2
2019-03-11 09:52:31 -Generating unique operation named: removeUsingPOST_3
2019-03-11 09:52:31 -Generating unique operation named: saveUsingPOST_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingGET_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingPOST_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingPUT_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 09:52:31 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 09:52:31 -Generating unique operation named: addUsingGET_2
2019-03-11 09:52:31 -Generating unique operation named: editUsingGET_2
2019-03-11 09:52:31 -Generating unique operation named: listUsingGET_2
2019-03-11 09:52:31 -Generating unique operation named: removeUsingPOST_4
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_5
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_3
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_3
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_3
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_6
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_7
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_4
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_4
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_4
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_8
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_9
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_5
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_5
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_5
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_10
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_11
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 09:52:32 -Generating unique operation named: ElecUsingGET_1
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_6
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_6
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_6
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_12
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_13
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_7
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_7
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_7
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_8
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_8
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_14
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_15
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPOST_8
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPUT_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 09:52:32 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 09:52:32 -Generating unique operation named: addUsingGET_8
2019-03-11 09:52:32 -Generating unique operation named: editUsingGET_9
2019-03-11 09:52:32 -Generating unique operation named: listUsingGET_9
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_16
2019-03-11 09:52:32 -Generating unique operation named: removeUsingPOST_17
2019-03-11 09:52:32 -Generating unique operation named: saveUsingPOST_8
2019-03-11 09:52:32 -Generating unique operation named: updateUsingGET_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPUT_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 09:52:33 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_9
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_10
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_10
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_18
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_19
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingGET_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPUT_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 09:52:33 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_10
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_11
2019-03-11 09:52:33 -Generating unique operation named: infoUsingGET_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingPOST_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingPUT_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 09:52:33 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_11
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_20
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_21
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_11
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_12
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_22
2019-03-11 09:52:33 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_11
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_12
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_13
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_23
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_11
2019-03-11 09:52:33 -Generating unique operation named: treeUsingGET_1
2019-03-11 09:52:33 -Generating unique operation named: treeUsingGET_2
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_12
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_12
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_13
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_14
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_24
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_25
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_12
2019-03-11 09:52:33 -Generating unique operation named: updateUsingGET_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_13
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPUT_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 09:52:33 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_13
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_14
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_15
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_26
2019-03-11 09:52:33 -Generating unique operation named: removeUsingPOST_27
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_13
2019-03-11 09:52:33 -Generating unique operation named: updateUsingGET_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_14
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPUT_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 09:52:33 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 09:52:33 -Generating unique operation named: addUsingGET_14
2019-03-11 09:52:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 09:52:33 -Generating unique operation named: editUsingGET_15
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_16
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_14
2019-03-11 09:52:33 -Generating unique operation named: saveUsingPOST_15
2019-03-11 09:52:33 -Generating unique operation named: updateUsingPOST_15
2019-03-11 09:52:33 -Generating unique operation named: listUsingGET_17
2019-03-11 09:52:33 -Generating unique operation named: listUsingHEAD_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingPOST_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingPUT_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingPATCH_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingDELETE_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 09:52:33 -Generating unique operation named: listUsingTRACE_1
2019-03-11 09:52:34 -Generating unique operation named: addUsingGET_15
2019-03-11 09:52:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 09:52:34 -Generating unique operation named: editUsingGET_16
2019-03-11 09:52:34 -Generating unique operation named: listUsingGET_18
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_28
2019-03-11 09:52:34 -Generating unique operation named: saveUsingPOST_16
2019-03-11 09:52:34 -Generating unique operation named: treeUsingGET_3
2019-03-11 09:52:34 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPOST_16
2019-03-11 09:52:34 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 09:52:34 -Generating unique operation named: addUsingGET_16
2019-03-11 09:52:34 -Generating unique operation named: editUsingGET_17
2019-03-11 09:52:34 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 09:52:34 -Generating unique operation named: listUsingGET_19
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_29
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_30
2019-03-11 09:52:34 -Generating unique operation named: saveUsingPOST_17
2019-03-11 09:52:34 -Generating unique operation named: updateUsingGET_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPOST_17
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPUT_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 09:52:34 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 09:52:34 -Generating unique operation named: addUsingGET_17
2019-03-11 09:52:34 -Generating unique operation named: editUsingGET_18
2019-03-11 09:52:34 -Generating unique operation named: listUsingGET_20
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_31
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_32
2019-03-11 09:52:34 -Generating unique operation named: saveUsingPOST_18
2019-03-11 09:52:34 -Generating unique operation named: updateUsingGET_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPOST_18
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPUT_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 09:52:34 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 09:52:34 -Generating unique operation named: addUsingGET_18
2019-03-11 09:52:34 -Generating unique operation named: editUsingGET_19
2019-03-11 09:52:34 -Generating unique operation named: listUsingGET_21
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_33
2019-03-11 09:52:34 -Generating unique operation named: removeUsingPOST_34
2019-03-11 09:52:34 -Generating unique operation named: saveUsingPOST_19
2019-03-11 09:52:34 -Generating unique operation named: updateUsingGET_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPOST_19
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPUT_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 09:52:34 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 09:52:34 -Starting Quartz Scheduler now
2019-03-11 09:52:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 09:52:34 -Starting...
2019-03-11 09:52:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 09:52:34 -Started.
2019-03-11 09:52:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 09:52:35 -Using a shared selector for servlet write/read
2019-03-11 09:52:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 09:52:35 -Started BootdoApplication in 34.951 seconds (JVM running for 37.04)
2019-03-11 09:52:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 09:52:38 -==> Parameters: 
2019-03-11 09:52:38 -<==      Total: 1
2019-03-11 09:53:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 09:53:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 09:53:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-03-11 09:53:04 -Enabling session validation scheduler...
2019-03-11 09:53:05 -请求地址 : http://localhost:8081/login;JSESSIONID=caae334d-babe-4eb8-ab93-9652943bacd5
2019-03-11 09:53:05 -HTTP METHOD : GET
2019-03-11 09:53:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 09:53:05 -参数 : [{}]
2019-03-11 09:53:05 -耗时 : 3
2019-03-11 09:53:05 -返回值 : login
2019-03-11 09:53:06 -请求地址 : http://localhost:8081/getVerify
2019-03-11 09:53:06 -HTTP METHOD : GET
2019-03-11 09:53:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 09:53:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@45518ea8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@416e12da]
2019-03-11 09:53:09 -5291
2019-03-11 09:53:10 -耗时 : 3656
2019-03-11 09:53:10 -返回值 : null
2019-03-11 09:53:25 -请求地址 : http://localhost:8081/login
2019-03-11 09:53:25 -HTTP METHOD : POST
2019-03-11 09:53:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 09:53:25 -参数 : [admin, 111111, 5291, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5347db43]
2019-03-11 09:53:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 09:53:25 -==> Parameters: admin(String)
2019-03-11 09:53:25 -<==      Total: 1
2019-03-11 09:53:25 -耗时 : 206
2019-03-11 09:53:25 -返回值 : {msg=操作成功, code=0}
2019-03-11 09:53:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 09:53:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:53:25 -==> Parameters: 1(Long), admin(String), 登录(String), 206(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 09:53:25.873(Timestamp)
2019-03-11 09:53:26 -请求地址 : http://localhost:8081/index
2019-03-11 09:53:26 -HTTP METHOD : GET
2019-03-11 09:53:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:53:26 -参数 : [{}]
2019-03-11 09:53:26 -<==    Updates: 1
2019-03-11 09:53:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:53:26 -==> Parameters: 1(Long)
2019-03-11 09:53:26 -<==      Total: 45
2019-03-11 09:53:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:53:26 -==> Parameters: 138(Long)
2019-03-11 09:53:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-11 09:53:26 -<==      Total: 1
2019-03-11 09:53:26 -耗时 : 449
2019-03-11 09:53:26 -返回值 : index_v1
2019-03-11 09:53:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:53:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 449(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:53:26.638(Timestamp)
2019-03-11 09:53:26 -<==    Updates: 1
2019-03-11 09:53:26 -请求地址 : http://localhost:8081/main
2019-03-11 09:53:26 -HTTP METHOD : GET
2019-03-11 09:53:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:53:26 -参数 : []
2019-03-11 09:53:26 -耗时 : 0
2019-03-11 09:53:26 -返回值 : main
2019-03-11 09:53:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:53:27 -HTTP METHOD : GET
2019-03-11 09:53:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:53:27 -参数 : []
2019-03-11 09:53:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:53:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:53:27 -请求地址 : http://localhost:8081/main
2019-03-11 09:53:27 -HTTP METHOD : GET
2019-03-11 09:53:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:53:27 -参数 : []
2019-03-11 09:53:27 -耗时 : 1
2019-03-11 09:53:27 -返回值 : main
2019-03-11 09:53:27 -<==      Total: 0
2019-03-11 09:53:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:53:27 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:53:27 -<==      Total: 1
2019-03-11 09:53:27 -耗时 : 105
2019-03-11 09:53:27 -返回值 : com.bootdo.common.utils.PageUtils@6a0ff3aa
2019-03-11 09:53:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 09:53:29 -==> Parameters: 1(Long)
2019-03-11 09:53:29 -<==      Total: 86
2019-03-11 09:53:29 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:53:29 -HTTP METHOD : GET
2019-03-11 09:53:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:53:29 -参数 : []
2019-03-11 09:53:29 -耗时 : 0
2019-03-11 09:53:29 -返回值 : /moneyList/moneyList
2019-03-11 09:54:26 -请求地址 : http://localhost:8081/index
2019-03-11 09:54:26 -HTTP METHOD : GET
2019-03-11 09:54:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:54:26 -参数 : [{}]
2019-03-11 09:54:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:54:26 -==> Parameters: 1(Long)
2019-03-11 09:54:26 -<==      Total: 45
2019-03-11 09:54:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:54:26 -==> Parameters: 138(Long)
2019-03-11 09:54:26 -<==      Total: 1
2019-03-11 09:54:26 -耗时 : 30
2019-03-11 09:54:26 -返回值 : index_v1
2019-03-11 09:54:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:54:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:54:26.175(Timestamp)
2019-03-11 09:54:26 -<==    Updates: 1
2019-03-11 09:54:26 -请求地址 : http://localhost:8081/main
2019-03-11 09:54:26 -HTTP METHOD : GET
2019-03-11 09:54:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:54:26 -参数 : []
2019-03-11 09:54:26 -耗时 : 0
2019-03-11 09:54:26 -返回值 : main
2019-03-11 09:54:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:54:26 -HTTP METHOD : GET
2019-03-11 09:54:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:54:26 -参数 : []
2019-03-11 09:54:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:54:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:54:26 -<==      Total: 0
2019-03-11 09:54:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:54:26 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:54:26 -<==      Total: 1
2019-03-11 09:54:26 -耗时 : 10
2019-03-11 09:54:26 -返回值 : com.bootdo.common.utils.PageUtils@21f4340d
2019-03-11 09:54:26 -请求地址 : http://localhost:8081/main
2019-03-11 09:54:26 -HTTP METHOD : GET
2019-03-11 09:54:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:54:26 -参数 : []
2019-03-11 09:54:26 -耗时 : 1
2019-03-11 09:54:26 -返回值 : main
2019-03-11 09:54:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:54:27 -HTTP METHOD : GET
2019-03-11 09:54:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:54:27 -参数 : []
2019-03-11 09:54:27 -耗时 : 1
2019-03-11 09:54:27 -返回值 : /moneyList/moneyList
2019-03-11 09:55:03 -请求地址 : http://localhost:8081/index
2019-03-11 09:55:03 -HTTP METHOD : GET
2019-03-11 09:55:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:55:03 -参数 : [{}]
2019-03-11 09:55:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:55:03 -==> Parameters: 1(Long)
2019-03-11 09:55:03 -<==      Total: 45
2019-03-11 09:55:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:55:03 -==> Parameters: 138(Long)
2019-03-11 09:55:03 -<==      Total: 1
2019-03-11 09:55:03 -耗时 : 28
2019-03-11 09:55:03 -返回值 : index_v1
2019-03-11 09:55:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:55:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:55:03.747(Timestamp)
2019-03-11 09:55:03 -请求地址 : http://localhost:8081/main
2019-03-11 09:55:03 -HTTP METHOD : GET
2019-03-11 09:55:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:55:03 -参数 : []
2019-03-11 09:55:03 -耗时 : 0
2019-03-11 09:55:03 -返回值 : main
2019-03-11 09:55:03 -<==    Updates: 1
2019-03-11 09:55:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:55:04 -HTTP METHOD : GET
2019-03-11 09:55:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:55:04 -参数 : []
2019-03-11 09:55:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:55:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:55:04 -<==      Total: 0
2019-03-11 09:55:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:55:04 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:55:04 -<==      Total: 1
2019-03-11 09:55:04 -耗时 : 12
2019-03-11 09:55:04 -返回值 : com.bootdo.common.utils.PageUtils@52e31805
2019-03-11 09:55:04 -请求地址 : http://localhost:8081/main
2019-03-11 09:55:04 -HTTP METHOD : GET
2019-03-11 09:55:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:55:04 -参数 : []
2019-03-11 09:55:04 -耗时 : 1
2019-03-11 09:55:04 -返回值 : main
2019-03-11 09:55:05 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:55:05 -HTTP METHOD : GET
2019-03-11 09:55:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:55:05 -参数 : []
2019-03-11 09:55:05 -耗时 : 1
2019-03-11 09:55:05 -返回值 : /moneyList/moneyList
2019-03-11 09:59:43 -请求地址 : http://localhost:8081/index
2019-03-11 09:59:43 -HTTP METHOD : GET
2019-03-11 09:59:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 09:59:43 -参数 : [{}]
2019-03-11 09:59:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 09:59:43 -==> Parameters: 1(Long)
2019-03-11 09:59:43 -<==      Total: 45
2019-03-11 09:59:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 09:59:43 -==> Parameters: 138(Long)
2019-03-11 09:59:43 -<==      Total: 1
2019-03-11 09:59:43 -耗时 : 35
2019-03-11 09:59:43 -返回值 : index_v1
2019-03-11 09:59:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 09:59:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 09:59:43.185(Timestamp)
2019-03-11 09:59:43 -请求地址 : http://localhost:8081/main
2019-03-11 09:59:43 -HTTP METHOD : GET
2019-03-11 09:59:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:59:43 -参数 : []
2019-03-11 09:59:43 -耗时 : 0
2019-03-11 09:59:43 -返回值 : main
2019-03-11 09:59:43 -<==    Updates: 1
2019-03-11 09:59:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 09:59:43 -HTTP METHOD : GET
2019-03-11 09:59:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 09:59:43 -参数 : []
2019-03-11 09:59:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 09:59:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 09:59:43 -<==      Total: 0
2019-03-11 09:59:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 09:59:43 -==> Parameters: 1(Long), 0(String)
2019-03-11 09:59:43 -<==      Total: 1
2019-03-11 09:59:43 -耗时 : 6
2019-03-11 09:59:43 -返回值 : com.bootdo.common.utils.PageUtils@239697fa
2019-03-11 09:59:43 -请求地址 : http://localhost:8081/main
2019-03-11 09:59:43 -HTTP METHOD : GET
2019-03-11 09:59:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 09:59:43 -参数 : []
2019-03-11 09:59:43 -耗时 : 1
2019-03-11 09:59:43 -返回值 : main
2019-03-11 09:59:45 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 09:59:45 -HTTP METHOD : GET
2019-03-11 09:59:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 09:59:45 -参数 : []
2019-03-11 09:59:45 -耗时 : 1
2019-03-11 09:59:45 -返回值 : /moneyList/moneyList
2019-03-11 10:00:46 -请求地址 : http://localhost:8081/login;JSESSIONID=a1a85ddd-d1dc-4b04-abf8-453a74e8be38
2019-03-11 10:00:46 -HTTP METHOD : GET
2019-03-11 10:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:00:46 -参数 : [{}]
2019-03-11 10:00:46 -耗时 : 1
2019-03-11 10:00:46 -返回值 : login
2019-03-11 10:00:46 -请求地址 : http://localhost:8081/getVerify
2019-03-11 10:00:46 -HTTP METHOD : GET
2019-03-11 10:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 10:00:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c70f388, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8e14e72]
2019-03-11 10:00:46 -3358
2019-03-11 10:00:46 -耗时 : 14
2019-03-11 10:00:46 -返回值 : null
2019-03-11 10:00:47 -请求地址 : http://localhost:8081/login
2019-03-11 10:00:47 -HTTP METHOD : GET
2019-03-11 10:00:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:00:47 -参数 : [{}]
2019-03-11 10:00:47 -耗时 : 5
2019-03-11 10:00:47 -返回值 : login
2019-03-11 10:00:51 -请求地址 : http://localhost:8081/login
2019-03-11 10:00:51 -HTTP METHOD : POST
2019-03-11 10:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 10:00:51 -参数 : [admin, 111111, 3358, org.apache.shiro.web.servlet.ShiroHttpServletRequest@717c3e7c]
2019-03-11 10:00:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 10:00:51 -==> Parameters: admin(String)
2019-03-11 10:00:51 -<==      Total: 1
2019-03-11 10:00:51 -耗时 : 7
2019-03-11 10:00:51 -返回值 : {msg=操作成功, code=0}
2019-03-11 10:00:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:00:51 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 10:00:51.266(Timestamp)
2019-03-11 10:00:51 -请求地址 : http://localhost:8081/index
2019-03-11 10:00:51 -HTTP METHOD : GET
2019-03-11 10:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:00:51 -参数 : [{}]
2019-03-11 10:00:51 -<==    Updates: 1
2019-03-11 10:00:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:00:51 -==> Parameters: 1(Long)
2019-03-11 10:00:51 -<==      Total: 45
2019-03-11 10:00:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:00:51 -==> Parameters: 138(Long)
2019-03-11 10:00:51 -<==      Total: 1
2019-03-11 10:00:51 -耗时 : 300
2019-03-11 10:00:51 -返回值 : index_v1
2019-03-11 10:00:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:00:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 300(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:00:51.609(Timestamp)
2019-03-11 10:00:51 -请求地址 : http://localhost:8081/main
2019-03-11 10:00:51 -HTTP METHOD : GET
2019-03-11 10:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:00:51 -参数 : []
2019-03-11 10:00:51 -耗时 : 1
2019-03-11 10:00:51 -返回值 : main
2019-03-11 10:00:51 -<==    Updates: 1
2019-03-11 10:00:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:00:52 -HTTP METHOD : GET
2019-03-11 10:00:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:00:52 -参数 : []
2019-03-11 10:00:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:00:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:00:52 -请求地址 : http://localhost:8081/main
2019-03-11 10:00:52 -HTTP METHOD : GET
2019-03-11 10:00:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:00:52 -参数 : []
2019-03-11 10:00:52 -耗时 : 0
2019-03-11 10:00:52 -返回值 : main
2019-03-11 10:00:52 -<==      Total: 0
2019-03-11 10:00:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:00:52 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:00:52 -<==      Total: 1
2019-03-11 10:00:52 -耗时 : 136
2019-03-11 10:00:52 -返回值 : com.bootdo.common.utils.PageUtils@573ecb5e
2019-03-11 10:00:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:00:55 -==> Parameters: 1(Long)
2019-03-11 10:00:55 -<==      Total: 86
2019-03-11 10:00:55 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:00:55 -HTTP METHOD : GET
2019-03-11 10:00:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:00:55 -参数 : []
2019-03-11 10:00:55 -耗时 : 1
2019-03-11 10:00:55 -返回值 : /moneyList/moneyList
2019-03-11 10:02:01 -请求地址 : http://localhost:8081/index
2019-03-11 10:02:01 -HTTP METHOD : GET
2019-03-11 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:02:01 -参数 : [{}]
2019-03-11 10:02:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:02:01 -==> Parameters: 1(Long)
2019-03-11 10:02:01 -<==      Total: 45
2019-03-11 10:02:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:02:01 -==> Parameters: 138(Long)
2019-03-11 10:02:01 -<==      Total: 1
2019-03-11 10:02:01 -耗时 : 116
2019-03-11 10:02:01 -返回值 : index_v1
2019-03-11 10:02:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:02:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 117(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:02:01.14(Timestamp)
2019-03-11 10:02:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:02:01 -HTTP METHOD : GET
2019-03-11 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:02:01 -参数 : []
2019-03-11 10:02:01 -耗时 : 0
2019-03-11 10:02:01 -返回值 : main
2019-03-11 10:02:01 -<==    Updates: 1
2019-03-11 10:02:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:02:01 -HTTP METHOD : GET
2019-03-11 10:02:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:02:01 -参数 : []
2019-03-11 10:02:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:02:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:02:01 -<==      Total: 0
2019-03-11 10:02:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:02:01 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:02:01 -<==      Total: 1
2019-03-11 10:02:01 -耗时 : 9
2019-03-11 10:02:01 -返回值 : com.bootdo.common.utils.PageUtils@5d892ef2
2019-03-11 10:02:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:02:01 -HTTP METHOD : GET
2019-03-11 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:02:01 -参数 : []
2019-03-11 10:02:01 -耗时 : 1
2019-03-11 10:02:01 -返回值 : main
2019-03-11 10:02:04 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:02:04 -HTTP METHOD : GET
2019-03-11 10:02:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:02:04 -参数 : []
2019-03-11 10:02:04 -耗时 : 0
2019-03-11 10:02:04 -返回值 : /moneyList/moneyList
2019-03-11 10:03:13 -请求地址 : http://localhost:8081/index
2019-03-11 10:03:13 -HTTP METHOD : GET
2019-03-11 10:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:03:13 -参数 : [{}]
2019-03-11 10:03:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:03:13 -==> Parameters: 1(Long)
2019-03-11 10:03:13 -<==      Total: 45
2019-03-11 10:03:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:03:13 -==> Parameters: 138(Long)
2019-03-11 10:03:13 -<==      Total: 1
2019-03-11 10:03:13 -耗时 : 26
2019-03-11 10:03:13 -返回值 : index_v1
2019-03-11 10:03:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:03:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:03:13.063(Timestamp)
2019-03-11 10:03:13 -<==    Updates: 1
2019-03-11 10:03:13 -请求地址 : http://localhost:8081/main
2019-03-11 10:03:13 -HTTP METHOD : GET
2019-03-11 10:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:03:13 -参数 : []
2019-03-11 10:03:13 -耗时 : 1
2019-03-11 10:03:13 -返回值 : main
2019-03-11 10:03:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:03:13 -HTTP METHOD : GET
2019-03-11 10:03:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:03:13 -参数 : []
2019-03-11 10:03:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:03:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:03:13 -<==      Total: 0
2019-03-11 10:03:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:03:13 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:03:13 -<==      Total: 1
2019-03-11 10:03:13 -耗时 : 8
2019-03-11 10:03:13 -返回值 : com.bootdo.common.utils.PageUtils@1210cafc
2019-03-11 10:03:13 -请求地址 : http://localhost:8081/main
2019-03-11 10:03:13 -HTTP METHOD : GET
2019-03-11 10:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:03:13 -参数 : []
2019-03-11 10:03:13 -耗时 : 1
2019-03-11 10:03:13 -返回值 : main
2019-03-11 10:03:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:03:15 -HTTP METHOD : GET
2019-03-11 10:03:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:03:15 -参数 : []
2019-03-11 10:03:15 -耗时 : 1
2019-03-11 10:03:15 -返回值 : /moneyList/moneyList
2019-03-11 10:08:54 -请求地址 : http://localhost:8081/index
2019-03-11 10:08:54 -HTTP METHOD : GET
2019-03-11 10:08:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:08:54 -参数 : [{}]
2019-03-11 10:08:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:08:54 -==> Parameters: 1(Long)
2019-03-11 10:08:54 -<==      Total: 45
2019-03-11 10:08:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:08:54 -==> Parameters: 138(Long)
2019-03-11 10:08:54 -<==      Total: 1
2019-03-11 10:08:54 -耗时 : 37
2019-03-11 10:08:54 -返回值 : index_v1
2019-03-11 10:08:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:08:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:08:54.768(Timestamp)
2019-03-11 10:08:54 -<==    Updates: 1
2019-03-11 10:08:54 -请求地址 : http://localhost:8081/main
2019-03-11 10:08:54 -HTTP METHOD : GET
2019-03-11 10:08:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:08:54 -参数 : []
2019-03-11 10:08:54 -耗时 : 1
2019-03-11 10:08:54 -返回值 : main
2019-03-11 10:08:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:08:55 -HTTP METHOD : GET
2019-03-11 10:08:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:08:55 -参数 : []
2019-03-11 10:08:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:08:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:08:55 -<==      Total: 0
2019-03-11 10:08:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:08:55 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:08:55 -<==      Total: 1
2019-03-11 10:08:55 -耗时 : 6
2019-03-11 10:08:55 -返回值 : com.bootdo.common.utils.PageUtils@231c90aa
2019-03-11 10:08:55 -请求地址 : http://localhost:8081/main
2019-03-11 10:08:55 -HTTP METHOD : GET
2019-03-11 10:08:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:08:55 -参数 : []
2019-03-11 10:08:55 -耗时 : 1
2019-03-11 10:08:55 -返回值 : main
2019-03-11 10:08:56 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:08:56 -HTTP METHOD : GET
2019-03-11 10:08:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:08:56 -参数 : []
2019-03-11 10:08:56 -耗时 : 1
2019-03-11 10:08:56 -返回值 : /moneyList/moneyList
2019-03-11 10:11:57 -请求地址 : http://localhost:8081/index
2019-03-11 10:11:57 -HTTP METHOD : GET
2019-03-11 10:11:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:11:57 -参数 : [{}]
2019-03-11 10:11:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:11:57 -==> Parameters: 1(Long)
2019-03-11 10:11:57 -<==      Total: 45
2019-03-11 10:11:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:11:57 -==> Parameters: 138(Long)
2019-03-11 10:11:57 -<==      Total: 1
2019-03-11 10:11:57 -耗时 : 25
2019-03-11 10:11:57 -返回值 : index_v1
2019-03-11 10:11:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:11:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:11:57.083(Timestamp)
2019-03-11 10:11:57 -请求地址 : http://localhost:8081/main
2019-03-11 10:11:57 -HTTP METHOD : GET
2019-03-11 10:11:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:11:57 -参数 : []
2019-03-11 10:11:57 -耗时 : 1
2019-03-11 10:11:57 -返回值 : main
2019-03-11 10:11:57 -<==    Updates: 1
2019-03-11 10:11:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:11:57 -HTTP METHOD : GET
2019-03-11 10:11:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:11:57 -参数 : []
2019-03-11 10:11:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:11:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:11:57 -<==      Total: 0
2019-03-11 10:11:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:11:57 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:11:57 -<==      Total: 1
2019-03-11 10:11:57 -耗时 : 8
2019-03-11 10:11:57 -返回值 : com.bootdo.common.utils.PageUtils@1bf4057f
2019-03-11 10:11:57 -请求地址 : http://localhost:8081/main
2019-03-11 10:11:57 -HTTP METHOD : GET
2019-03-11 10:11:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:11:57 -参数 : []
2019-03-11 10:11:57 -耗时 : 0
2019-03-11 10:11:57 -返回值 : main
2019-03-11 10:11:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:11:59 -==> Parameters: 1(Long)
2019-03-11 10:11:59 -<==      Total: 86
2019-03-11 10:11:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:11:59 -HTTP METHOD : GET
2019-03-11 10:11:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:11:59 -参数 : []
2019-03-11 10:11:59 -耗时 : 1
2019-03-11 10:11:59 -返回值 : /moneyList/moneyList
2019-03-11 10:14:01 -请求地址 : http://localhost:8081/index
2019-03-11 10:14:01 -HTTP METHOD : GET
2019-03-11 10:14:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:14:01 -参数 : [{}]
2019-03-11 10:14:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:14:01 -==> Parameters: 1(Long)
2019-03-11 10:14:01 -<==      Total: 45
2019-03-11 10:14:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:14:01 -==> Parameters: 138(Long)
2019-03-11 10:14:01 -<==      Total: 1
2019-03-11 10:14:01 -耗时 : 29
2019-03-11 10:14:01 -返回值 : index_v1
2019-03-11 10:14:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:14:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:14:01.103(Timestamp)
2019-03-11 10:14:01 -<==    Updates: 1
2019-03-11 10:14:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:14:01 -HTTP METHOD : GET
2019-03-11 10:14:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:14:01 -参数 : []
2019-03-11 10:14:01 -耗时 : 2
2019-03-11 10:14:01 -返回值 : main
2019-03-11 10:14:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:14:01 -HTTP METHOD : GET
2019-03-11 10:14:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:14:01 -参数 : []
2019-03-11 10:14:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:14:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:14:01 -<==      Total: 0
2019-03-11 10:14:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:14:01 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:14:01 -<==      Total: 1
2019-03-11 10:14:01 -耗时 : 8
2019-03-11 10:14:01 -返回值 : com.bootdo.common.utils.PageUtils@15a52f0a
2019-03-11 10:14:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:14:01 -HTTP METHOD : GET
2019-03-11 10:14:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:14:01 -参数 : []
2019-03-11 10:14:01 -耗时 : 1
2019-03-11 10:14:01 -返回值 : main
2019-03-11 10:14:06 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:14:06 -HTTP METHOD : GET
2019-03-11 10:14:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:14:06 -参数 : []
2019-03-11 10:14:06 -耗时 : 2
2019-03-11 10:14:06 -返回值 : /moneyList/moneyList
2019-03-11 10:15:12 -Starting BootdoApplication on ZJZL-20180906VX with PID 13152 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 10:15:12 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 10:15:12 -The following profiles are active: dev
2019-03-11 10:15:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19ae6bb: startup date [Mon Mar 11 10:15:13 CST 2019]; root of context hierarchy
2019-03-11 10:15:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 10:15:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dddf022] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30371ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 10:15:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 10:15:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:15:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 10:15:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 10:15:21 -Starting service [Tomcat]
2019-03-11 10:15:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 10:15:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 10:15:21 -Initializing Spring embedded WebApplicationContext
2019-03-11 10:15:21 -Root WebApplicationContext: initialization completed in 8720 ms
2019-03-11 10:15:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 10:15:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 10:15:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 10:15:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 10:15:22 -Filter xssFilter was not registered (disabled)
2019-03-11 10:15:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 10:15:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 10:15:22 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 10:15:22 -Servlet dispatcherServlet mapped to [/]
2019-03-11 10:15:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19ae6bb: startup date [Mon Mar 11 10:15:13 CST 2019]; root of context hierarchy
2019-03-11 10:15:25 -Using default implementation for ThreadExecutor
2019-03-11 10:15:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 10:15:25 -Quartz Scheduler v.2.2.1 created.
2019-03-11 10:15:25 -RAMJobStore initialized.
2019-03-11 10:15:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 10:15:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 10:15:25 -Quartz scheduler version: 2.2.1
2019-03-11 10:15:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8f09a02
2019-03-11 10:15:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 10:15:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 10:15:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 10:15:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 10:15:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 10:15:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 10:15:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 10:15:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 10:15:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 10:15:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 10:15:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 10:15:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 10:15:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 10:15:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 10:15:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 10:15:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 10:15:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 10:15:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 10:15:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 10:15:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 10:15:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 10:15:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 10:15:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 10:15:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 10:15:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 10:15:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 10:15:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 10:15:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 10:15:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:15:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 10:15:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 10:15:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 10:15:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 10:15:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 10:15:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 10:15:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 10:15:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 10:15:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 10:15:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 10:15:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 10:15:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 10:15:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 10:15:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 10:15:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.heatLog()
2019-03-11 10:15:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 10:15:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 10:15:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 10:15:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 10:15:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 10:15:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 10:15:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 10:15:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 10:15:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 10:15:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 10:15:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 10:15:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 10:15:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:15:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 10:15:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 10:15:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 10:15:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 10:15:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 10:15:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 10:15:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 10:15:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 10:15:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 10:15:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 10:15:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 10:15:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 10:15:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 10:15:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 10:15:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:15:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 10:15:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 10:15:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 10:15:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 10:15:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 10:15:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 10:15:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 10:15:29 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 10:15:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 10:15:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 10:15:29 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:15:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 10:15:29 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:15:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 10:15:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:15:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 10:15:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 10:15:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 10:15:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 10:15:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 10:15:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 10:15:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:15:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19ae6bb: startup date [Mon Mar 11 10:15:13 CST 2019]; root of context hierarchy
2019-03-11 10:15:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:15:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:15:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:15:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 10:15:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 10:15:33 -Registering beans for JMX exposure on startup
2019-03-11 10:15:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 10:15:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 10:15:33 -Starting beans in phase 2147483647
2019-03-11 10:15:33 -Context refreshed
2019-03-11 10:15:33 -Found 1 custom documentation plugin(s)
2019-03-11 10:15:33 -Scanning for api listing references
2019-03-11 10:15:33 -Generating unique operation named: removeUsingPOST_1
2019-03-11 10:15:33 -Generating unique operation named: addUsingGET_1
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_1
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_1
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_2
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_3
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 10:15:34 -Generating unique operation named: addUsingGET_2
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_2
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_2
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_4
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_5
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 10:15:34 -Generating unique operation named: addUsingGET_3
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_3
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_3
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_6
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_7
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 10:15:34 -Generating unique operation named: addUsingGET_4
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_4
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_4
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_8
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_9
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 10:15:34 -Generating unique operation named: addUsingGET_5
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_5
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_5
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_10
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_11
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 10:15:34 -Generating unique operation named: ElecUsingGET_1
2019-03-11 10:15:34 -Generating unique operation named: addUsingGET_6
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_6
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_6
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_12
2019-03-11 10:15:34 -Generating unique operation named: removeUsingPOST_13
2019-03-11 10:15:34 -Generating unique operation named: saveUsingPOST_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingGET_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPUT_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 10:15:34 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 10:15:34 -Generating unique operation named: editUsingGET_7
2019-03-11 10:15:34 -Generating unique operation named: listUsingGET_7
2019-03-11 10:15:34 -Generating unique operation named: updateUsingPOST_7
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_7
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_8
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_8
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_14
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_15
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingGET_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPUT_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 10:15:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_8
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_9
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_9
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_16
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_17
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingGET_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPUT_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 10:15:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_9
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_10
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_10
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_18
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_19
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingGET_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPUT_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 10:15:35 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_10
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_11
2019-03-11 10:15:35 -Generating unique operation named: infoUsingGET_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingPOST_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingPUT_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 10:15:35 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_11
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_20
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_21
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_11
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_12
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_22
2019-03-11 10:15:35 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_11
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_12
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_13
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_23
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_11
2019-03-11 10:15:35 -Generating unique operation named: treeUsingGET_1
2019-03-11 10:15:35 -Generating unique operation named: treeUsingGET_2
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_12
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_12
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_13
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_14
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_24
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_25
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_12
2019-03-11 10:15:35 -Generating unique operation named: updateUsingGET_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_13
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPUT_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 10:15:35 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_13
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_14
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_15
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_26
2019-03-11 10:15:35 -Generating unique operation named: removeUsingPOST_27
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_13
2019-03-11 10:15:35 -Generating unique operation named: updateUsingGET_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_14
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPUT_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 10:15:35 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_14
2019-03-11 10:15:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 10:15:35 -Generating unique operation named: editUsingGET_15
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_16
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_14
2019-03-11 10:15:35 -Generating unique operation named: saveUsingPOST_15
2019-03-11 10:15:35 -Generating unique operation named: updateUsingPOST_15
2019-03-11 10:15:35 -Generating unique operation named: listUsingGET_17
2019-03-11 10:15:35 -Generating unique operation named: listUsingHEAD_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingPOST_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingPUT_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingPATCH_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingDELETE_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 10:15:35 -Generating unique operation named: listUsingTRACE_1
2019-03-11 10:15:35 -Generating unique operation named: addUsingGET_15
2019-03-11 10:15:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 10:15:36 -Generating unique operation named: editUsingGET_16
2019-03-11 10:15:36 -Generating unique operation named: listUsingGET_18
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_28
2019-03-11 10:15:36 -Generating unique operation named: saveUsingPOST_16
2019-03-11 10:15:36 -Generating unique operation named: treeUsingGET_3
2019-03-11 10:15:36 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPOST_16
2019-03-11 10:15:36 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 10:15:36 -Generating unique operation named: addUsingGET_16
2019-03-11 10:15:36 -Generating unique operation named: editUsingGET_17
2019-03-11 10:15:36 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 10:15:36 -Generating unique operation named: listUsingGET_19
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_29
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_30
2019-03-11 10:15:36 -Generating unique operation named: saveUsingPOST_17
2019-03-11 10:15:36 -Generating unique operation named: updateUsingGET_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPOST_17
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPUT_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 10:15:36 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 10:15:36 -Generating unique operation named: addUsingGET_17
2019-03-11 10:15:36 -Generating unique operation named: editUsingGET_18
2019-03-11 10:15:36 -Generating unique operation named: listUsingGET_20
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_31
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_32
2019-03-11 10:15:36 -Generating unique operation named: saveUsingPOST_18
2019-03-11 10:15:36 -Generating unique operation named: updateUsingGET_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPOST_18
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPUT_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 10:15:36 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 10:15:36 -Generating unique operation named: addUsingGET_18
2019-03-11 10:15:36 -Generating unique operation named: editUsingGET_19
2019-03-11 10:15:36 -Generating unique operation named: listUsingGET_21
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_33
2019-03-11 10:15:36 -Generating unique operation named: removeUsingPOST_34
2019-03-11 10:15:36 -Generating unique operation named: saveUsingPOST_19
2019-03-11 10:15:36 -Generating unique operation named: updateUsingGET_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPOST_19
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPUT_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 10:15:36 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 10:15:36 -Starting Quartz Scheduler now
2019-03-11 10:15:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 10:15:36 -Starting...
2019-03-11 10:15:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 10:15:36 -Started.
2019-03-11 10:15:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 10:15:36 -Using a shared selector for servlet write/read
2019-03-11 10:15:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 10:15:36 -Started BootdoApplication in 25.778 seconds (JVM running for 27.271)
2019-03-11 10:15:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 10:15:36 -==> Parameters: 
2019-03-11 10:15:37 -<==      Total: 1
2019-03-11 10:15:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 10:15:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 10:15:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-03-11 10:15:47 -Enabling session validation scheduler...
2019-03-11 10:15:47 -请求地址 : http://localhost:8081/login;JSESSIONID=6266176d-fe40-46ba-93dc-7080036ea35f
2019-03-11 10:15:47 -HTTP METHOD : GET
2019-03-11 10:15:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:15:47 -参数 : [{}]
2019-03-11 10:15:47 -耗时 : 4
2019-03-11 10:15:47 -返回值 : login
2019-03-11 10:15:48 -请求地址 : http://localhost:8081/getVerify
2019-03-11 10:15:48 -HTTP METHOD : GET
2019-03-11 10:15:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 10:15:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@440f5589, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6969d773]
2019-03-11 10:15:49 -9491
2019-03-11 10:15:49 -耗时 : 699
2019-03-11 10:15:49 -返回值 : null
2019-03-11 10:15:55 -请求地址 : http://localhost:8081/login
2019-03-11 10:15:55 -HTTP METHOD : POST
2019-03-11 10:15:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 10:15:55 -参数 : [admin, 111111, 9491, org.apache.shiro.web.servlet.ShiroHttpServletRequest@66498623]
2019-03-11 10:15:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 10:15:55 -==> Parameters: admin(String)
2019-03-11 10:15:55 -<==      Total: 1
2019-03-11 10:15:55 -耗时 : 278
2019-03-11 10:15:55 -返回值 : {msg=操作成功, code=0}
2019-03-11 10:15:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 10:15:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:15:55 -==> Parameters: 1(Long), admin(String), 登录(String), 278(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 10:15:55.463(Timestamp)
2019-03-11 10:15:55 -请求地址 : http://localhost:8081/index
2019-03-11 10:15:55 -HTTP METHOD : GET
2019-03-11 10:15:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:15:55 -参数 : [{}]
2019-03-11 10:15:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:15:55 -<==    Updates: 1
2019-03-11 10:15:55 -==> Parameters: 1(Long)
2019-03-11 10:15:55 -<==      Total: 45
2019-03-11 10:15:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:15:55 -==> Parameters: 138(Long)
2019-03-11 10:15:55 -<==      Total: 1
2019-03-11 10:15:55 -耗时 : 418
2019-03-11 10:15:55 -返回值 : index_v1
2019-03-11 10:15:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:15:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 418(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:15:56.003(Timestamp)
2019-03-11 10:15:56 -<==    Updates: 1
2019-03-11 10:15:56 -请求地址 : http://localhost:8081/main
2019-03-11 10:15:56 -HTTP METHOD : GET
2019-03-11 10:15:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:15:56 -参数 : []
2019-03-11 10:15:56 -耗时 : 1
2019-03-11 10:15:56 -返回值 : main
2019-03-11 10:15:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:15:56 -HTTP METHOD : GET
2019-03-11 10:15:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:15:56 -参数 : []
2019-03-11 10:15:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:15:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:15:56 -<==      Total: 0
2019-03-11 10:15:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:15:56 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:15:56 -<==      Total: 1
2019-03-11 10:15:56 -耗时 : 55
2019-03-11 10:15:56 -返回值 : com.bootdo.common.utils.PageUtils@344ba04a
2019-03-11 10:15:56 -请求地址 : http://localhost:8081/main
2019-03-11 10:15:56 -HTTP METHOD : GET
2019-03-11 10:15:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:15:56 -参数 : []
2019-03-11 10:15:56 -耗时 : 0
2019-03-11 10:15:56 -返回值 : main
2019-03-11 10:15:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:15:59 -==> Parameters: 1(Long)
2019-03-11 10:15:59 -<==      Total: 86
2019-03-11 10:15:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:15:59 -HTTP METHOD : GET
2019-03-11 10:15:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:15:59 -参数 : []
2019-03-11 10:15:59 -耗时 : 0
2019-03-11 10:15:59 -返回值 : /moneyList/moneyList
2019-03-11 10:16:29 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 8]
2019-03-11 10:17:08 -请求地址 : http://localhost:8081/login
2019-03-11 10:17:08 -HTTP METHOD : GET
2019-03-11 10:17:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:17:08 -参数 : [{}]
2019-03-11 10:17:08 -耗时 : 1
2019-03-11 10:17:08 -返回值 : login
2019-03-11 10:17:09 -请求地址 : http://localhost:8081/getVerify
2019-03-11 10:17:09 -HTTP METHOD : GET
2019-03-11 10:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 10:17:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4a06456d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4f7d97d7]
2019-03-11 10:17:09 -8243
2019-03-11 10:17:09 -耗时 : 22
2019-03-11 10:17:09 -返回值 : null
2019-03-11 10:17:09 -请求地址 : http://localhost:8081/login
2019-03-11 10:17:09 -HTTP METHOD : GET
2019-03-11 10:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:17:09 -参数 : [{}]
2019-03-11 10:17:09 -耗时 : 1
2019-03-11 10:17:09 -返回值 : login
2019-03-11 10:17:14 -请求地址 : http://localhost:8081/login
2019-03-11 10:17:14 -HTTP METHOD : POST
2019-03-11 10:17:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 10:17:14 -参数 : [admin, 111111, 8243, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d28f447]
2019-03-11 10:17:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 10:17:14 -==> Parameters: admin(String)
2019-03-11 10:17:15 -<==      Total: 1
2019-03-11 10:17:15 -耗时 : 111
2019-03-11 10:17:15 -返回值 : {msg=操作成功, code=0}
2019-03-11 10:17:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:17:15 -==> Parameters: 1(Long), admin(String), 登录(String), 111(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 10:17:15.101(Timestamp)
2019-03-11 10:17:15 -请求地址 : http://localhost:8081/index
2019-03-11 10:17:15 -HTTP METHOD : GET
2019-03-11 10:17:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:17:15 -参数 : [{}]
2019-03-11 10:17:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:17:15 -==> Parameters: 1(Long)
2019-03-11 10:17:15 -<==    Updates: 1
2019-03-11 10:17:15 -<==      Total: 45
2019-03-11 10:17:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:17:15 -==> Parameters: 138(Long)
2019-03-11 10:17:15 -<==      Total: 1
2019-03-11 10:17:15 -耗时 : 281
2019-03-11 10:17:15 -返回值 : index_v1
2019-03-11 10:17:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:17:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 281(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:17:15.41(Timestamp)
2019-03-11 10:17:15 -<==    Updates: 1
2019-03-11 10:17:15 -请求地址 : http://localhost:8081/main
2019-03-11 10:17:15 -HTTP METHOD : GET
2019-03-11 10:17:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:17:15 -参数 : []
2019-03-11 10:17:15 -耗时 : 0
2019-03-11 10:17:15 -返回值 : main
2019-03-11 10:17:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:17:15 -HTTP METHOD : GET
2019-03-11 10:17:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:17:15 -参数 : []
2019-03-11 10:17:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:17:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:17:15 -<==      Total: 0
2019-03-11 10:17:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:17:15 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:17:15 -<==      Total: 1
2019-03-11 10:17:15 -耗时 : 51
2019-03-11 10:17:15 -返回值 : com.bootdo.common.utils.PageUtils@567b953
2019-03-11 10:17:15 -请求地址 : http://localhost:8081/main
2019-03-11 10:17:15 -HTTP METHOD : GET
2019-03-11 10:17:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:17:15 -参数 : []
2019-03-11 10:17:15 -耗时 : 1
2019-03-11 10:17:15 -返回值 : main
2019-03-11 10:17:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:17:20 -==> Parameters: 1(Long)
2019-03-11 10:17:20 -<==      Total: 86
2019-03-11 10:17:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:17:20 -HTTP METHOD : GET
2019-03-11 10:17:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:17:20 -参数 : []
2019-03-11 10:17:20 -耗时 : 0
2019-03-11 10:17:20 -返回值 : /moneyList/moneyList
2019-03-11 10:24:41 -请求地址 : http://localhost:8081/index
2019-03-11 10:24:41 -HTTP METHOD : GET
2019-03-11 10:24:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:24:41 -参数 : [{}]
2019-03-11 10:24:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:24:41 -==> Parameters: 1(Long)
2019-03-11 10:24:41 -<==      Total: 45
2019-03-11 10:24:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:24:41 -==> Parameters: 138(Long)
2019-03-11 10:24:41 -<==      Total: 1
2019-03-11 10:24:41 -耗时 : 26
2019-03-11 10:24:41 -返回值 : index_v1
2019-03-11 10:24:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:24:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:24:41.889(Timestamp)
2019-03-11 10:24:41 -<==    Updates: 1
2019-03-11 10:24:42 -请求地址 : http://localhost:8081/main
2019-03-11 10:24:42 -HTTP METHOD : GET
2019-03-11 10:24:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:24:42 -参数 : []
2019-03-11 10:24:42 -耗时 : 1
2019-03-11 10:24:42 -返回值 : main
2019-03-11 10:24:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:24:42 -HTTP METHOD : GET
2019-03-11 10:24:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:24:42 -参数 : []
2019-03-11 10:24:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:24:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:24:42 -<==      Total: 0
2019-03-11 10:24:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:24:42 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:24:42 -<==      Total: 1
2019-03-11 10:24:42 -耗时 : 11
2019-03-11 10:24:42 -返回值 : com.bootdo.common.utils.PageUtils@69503cf2
2019-03-11 10:24:42 -请求地址 : http://localhost:8081/main
2019-03-11 10:24:42 -HTTP METHOD : GET
2019-03-11 10:24:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:24:42 -参数 : []
2019-03-11 10:24:42 -耗时 : 1
2019-03-11 10:24:42 -返回值 : main
2019-03-11 10:24:45 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:24:45 -HTTP METHOD : GET
2019-03-11 10:24:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:24:45 -参数 : []
2019-03-11 10:24:45 -耗时 : 1
2019-03-11 10:24:45 -返回值 : /moneyList/moneyList
2019-03-11 10:33:11 -请求地址 : http://localhost:8081/index
2019-03-11 10:33:11 -HTTP METHOD : GET
2019-03-11 10:33:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:33:11 -参数 : [{}]
2019-03-11 10:33:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:33:11 -==> Parameters: 1(Long)
2019-03-11 10:33:11 -<==      Total: 45
2019-03-11 10:33:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:33:11 -==> Parameters: 138(Long)
2019-03-11 10:33:11 -<==      Total: 1
2019-03-11 10:33:11 -耗时 : 25
2019-03-11 10:33:11 -返回值 : index_v1
2019-03-11 10:33:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:33:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:33:11.784(Timestamp)
2019-03-11 10:33:11 -请求地址 : http://localhost:8081/main
2019-03-11 10:33:11 -HTTP METHOD : GET
2019-03-11 10:33:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:33:12 -参数 : []
2019-03-11 10:33:12 -耗时 : 97
2019-03-11 10:33:12 -返回值 : main
2019-03-11 10:33:12 -<==    Updates: 1
2019-03-11 10:33:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:33:12 -HTTP METHOD : GET
2019-03-11 10:33:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:33:12 -参数 : []
2019-03-11 10:33:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:33:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:33:12 -<==      Total: 0
2019-03-11 10:33:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:33:12 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:33:12 -<==      Total: 1
2019-03-11 10:33:12 -耗时 : 9
2019-03-11 10:33:12 -返回值 : com.bootdo.common.utils.PageUtils@1c4b4fbe
2019-03-11 10:33:12 -请求地址 : http://localhost:8081/main
2019-03-11 10:33:12 -HTTP METHOD : GET
2019-03-11 10:33:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:33:12 -参数 : []
2019-03-11 10:33:12 -耗时 : 1
2019-03-11 10:33:12 -返回值 : main
2019-03-11 10:33:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:33:21 -==> Parameters: 1(Long)
2019-03-11 10:33:21 -<==      Total: 86
2019-03-11 10:33:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:33:21 -HTTP METHOD : GET
2019-03-11 10:33:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:33:21 -参数 : []
2019-03-11 10:33:21 -耗时 : 1
2019-03-11 10:33:21 -返回值 : /moneyList/moneyList
2019-03-11 10:34:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 10748 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 10:34:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 10:34:15 -The following profiles are active: dev
2019-03-11 10:34:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e3c1c7: startup date [Mon Mar 11 10:34:15 CST 2019]; root of context hierarchy
2019-03-11 10:34:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 10:34:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$59faeb94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4c541a3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 10:34:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 10:34:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 10:34:23 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 10:34:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 10:34:23 -Starting service [Tomcat]
2019-03-11 10:34:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 10:34:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 10:34:23 -Initializing Spring embedded WebApplicationContext
2019-03-11 10:34:23 -Root WebApplicationContext: initialization completed in 8705 ms
2019-03-11 10:34:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 10:34:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 10:34:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 10:34:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 10:34:24 -Filter xssFilter was not registered (disabled)
2019-03-11 10:34:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 10:34:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 10:34:24 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 10:34:24 -Servlet dispatcherServlet mapped to [/]
2019-03-11 10:34:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e3c1c7: startup date [Mon Mar 11 10:34:15 CST 2019]; root of context hierarchy
2019-03-11 10:34:27 -Using default implementation for ThreadExecutor
2019-03-11 10:34:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 10:34:27 -Quartz Scheduler v.2.2.1 created.
2019-03-11 10:34:27 -RAMJobStore initialized.
2019-03-11 10:34:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 10:34:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 10:34:27 -Quartz scheduler version: 2.2.1
2019-03-11 10:34:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1f57666b
2019-03-11 10:34:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 10:34:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 10:34:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 10:34:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 10:34:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 10:34:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 10:34:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 10:34:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 10:34:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 10:34:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 10:34:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 10:34:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 10:34:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 10:34:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 10:34:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 10:34:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 10:34:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 10:34:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 10:34:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 10:34:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 10:34:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 10:34:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 10:34:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 10:34:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 10:34:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 10:34:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:34:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 10:34:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 10:34:31 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 10:34:31 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 10:34:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 10:34:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 10:34:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 10:34:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 10:34:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 10:34:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 10:34:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 10:34:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 10:34:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 10:34:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 10:34:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 10:34:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.heatLog()
2019-03-11 10:34:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 10:34:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 10:34:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 10:34:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 10:34:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 10:34:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 10:34:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 10:34:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 10:34:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 10:34:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 10:34:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 10:34:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 10:34:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:34:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 10:34:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 10:34:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 10:34:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 10:34:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 10:34:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 10:34:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 10:34:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 10:34:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 10:34:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 10:34:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 10:34:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 10:34:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 10:34:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 10:34:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:34:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 10:34:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 10:34:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 10:34:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 10:34:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 10:34:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 10:34:31 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 10:34:31 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 10:34:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 10:34:31 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 10:34:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 10:34:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 10:34:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 10:34:31 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 10:34:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 10:34:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 10:34:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 10:34:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 10:34:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 10:34:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 10:34:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 10:34:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:34:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e3c1c7: startup date [Mon Mar 11 10:34:15 CST 2019]; root of context hierarchy
2019-03-11 10:34:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:34:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:34:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 10:34:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 10:34:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 10:34:35 -Registering beans for JMX exposure on startup
2019-03-11 10:34:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 10:34:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 10:34:35 -Starting beans in phase 2147483647
2019-03-11 10:34:35 -Context refreshed
2019-03-11 10:34:35 -Found 1 custom documentation plugin(s)
2019-03-11 10:34:35 -Scanning for api listing references
2019-03-11 10:34:35 -Generating unique operation named: removeUsingPOST_1
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_1
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_1
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_1
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_2
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_3
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 10:34:36 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_2
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_2
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_2
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_4
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_5
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 10:34:36 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_3
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_3
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_3
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_6
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_7
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 10:34:36 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_4
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_4
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_4
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_8
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_9
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 10:34:36 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_5
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_5
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_5
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_10
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_11
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 10:34:36 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 10:34:36 -Generating unique operation named: ElecUsingGET_1
2019-03-11 10:34:36 -Generating unique operation named: addUsingGET_6
2019-03-11 10:34:36 -Generating unique operation named: editUsingGET_6
2019-03-11 10:34:36 -Generating unique operation named: listUsingGET_6
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_12
2019-03-11 10:34:36 -Generating unique operation named: removeUsingPOST_13
2019-03-11 10:34:36 -Generating unique operation named: saveUsingPOST_6
2019-03-11 10:34:36 -Generating unique operation named: updateUsingGET_6
2019-03-11 10:34:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPOST_6
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPUT_6
2019-03-11 10:34:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_7
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_7
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_7
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_8
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_8
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_14
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_15
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingGET_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPUT_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_8
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_9
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_9
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_16
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_17
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingGET_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPUT_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_9
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_10
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_10
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_18
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_19
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingGET_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPUT_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_10
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_11
2019-03-11 10:34:37 -Generating unique operation named: infoUsingGET_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingPOST_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingPUT_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 10:34:37 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_11
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_20
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_21
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_11
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_12
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_22
2019-03-11 10:34:37 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_11
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_12
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_13
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_23
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_11
2019-03-11 10:34:37 -Generating unique operation named: treeUsingGET_1
2019-03-11 10:34:37 -Generating unique operation named: treeUsingGET_2
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_12
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_12
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_13
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_14
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_24
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_25
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_12
2019-03-11 10:34:37 -Generating unique operation named: updateUsingGET_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_13
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPUT_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_13
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_14
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_15
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_26
2019-03-11 10:34:37 -Generating unique operation named: removeUsingPOST_27
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_13
2019-03-11 10:34:37 -Generating unique operation named: updateUsingGET_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_14
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPUT_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 10:34:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 10:34:37 -Generating unique operation named: addUsingGET_14
2019-03-11 10:34:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 10:34:37 -Generating unique operation named: editUsingGET_15
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_16
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_14
2019-03-11 10:34:37 -Generating unique operation named: saveUsingPOST_15
2019-03-11 10:34:37 -Generating unique operation named: updateUsingPOST_15
2019-03-11 10:34:37 -Generating unique operation named: listUsingGET_17
2019-03-11 10:34:38 -Generating unique operation named: listUsingHEAD_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingPOST_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingPUT_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingPATCH_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingDELETE_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingTRACE_1
2019-03-11 10:34:38 -Generating unique operation named: addUsingGET_15
2019-03-11 10:34:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 10:34:38 -Generating unique operation named: editUsingGET_16
2019-03-11 10:34:38 -Generating unique operation named: listUsingGET_18
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_28
2019-03-11 10:34:38 -Generating unique operation named: saveUsingPOST_16
2019-03-11 10:34:38 -Generating unique operation named: treeUsingGET_3
2019-03-11 10:34:38 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPOST_16
2019-03-11 10:34:38 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 10:34:38 -Generating unique operation named: addUsingGET_16
2019-03-11 10:34:38 -Generating unique operation named: editUsingGET_17
2019-03-11 10:34:38 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 10:34:38 -Generating unique operation named: listUsingGET_19
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_29
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_30
2019-03-11 10:34:38 -Generating unique operation named: saveUsingPOST_17
2019-03-11 10:34:38 -Generating unique operation named: updateUsingGET_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPOST_17
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPUT_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 10:34:38 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 10:34:38 -Generating unique operation named: addUsingGET_17
2019-03-11 10:34:38 -Generating unique operation named: editUsingGET_18
2019-03-11 10:34:38 -Generating unique operation named: listUsingGET_20
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_31
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_32
2019-03-11 10:34:38 -Generating unique operation named: saveUsingPOST_18
2019-03-11 10:34:38 -Generating unique operation named: updateUsingGET_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPOST_18
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPUT_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 10:34:38 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 10:34:38 -Generating unique operation named: addUsingGET_18
2019-03-11 10:34:38 -Generating unique operation named: editUsingGET_19
2019-03-11 10:34:38 -Generating unique operation named: listUsingGET_21
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_33
2019-03-11 10:34:38 -Generating unique operation named: removeUsingPOST_34
2019-03-11 10:34:38 -Generating unique operation named: saveUsingPOST_19
2019-03-11 10:34:38 -Generating unique operation named: updateUsingGET_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPOST_19
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPUT_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 10:34:38 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 10:34:38 -Starting Quartz Scheduler now
2019-03-11 10:34:38 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 10:34:38 -Starting...
2019-03-11 10:34:38 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 10:34:38 -Started.
2019-03-11 10:34:38 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 10:34:38 -Using a shared selector for servlet write/read
2019-03-11 10:34:38 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 10:34:38 -Started BootdoApplication in 25.523 seconds (JVM running for 26.959)
2019-03-11 10:34:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 10:34:39 -==> Parameters: 
2019-03-11 10:34:39 -<==      Total: 1
2019-03-11 10:34:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 10:34:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 10:34:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-03-11 10:34:45 -Enabling session validation scheduler...
2019-03-11 10:34:45 -请求地址 : http://localhost:8081/login;JSESSIONID=eab7b1d1-f434-40b6-bdf8-c3fdaf0081fc
2019-03-11 10:34:45 -HTTP METHOD : GET
2019-03-11 10:34:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:34:45 -参数 : [{}]
2019-03-11 10:34:45 -耗时 : 3
2019-03-11 10:34:45 -返回值 : login
2019-03-11 10:34:46 -请求地址 : http://localhost:8081/getVerify
2019-03-11 10:34:46 -HTTP METHOD : GET
2019-03-11 10:34:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 10:34:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@50eebcce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2735154c]
2019-03-11 10:34:50 -4573
2019-03-11 10:34:50 -耗时 : 3601
2019-03-11 10:34:50 -返回值 : null
2019-03-11 10:34:50 -请求地址 : http://localhost:8081/login
2019-03-11 10:34:50 -HTTP METHOD : GET
2019-03-11 10:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 10:34:50 -参数 : [{}]
2019-03-11 10:34:50 -耗时 : 0
2019-03-11 10:34:50 -返回值 : login
2019-03-11 10:34:56 -请求地址 : http://localhost:8081/login
2019-03-11 10:34:56 -HTTP METHOD : POST
2019-03-11 10:34:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 10:34:56 -参数 : [admin, 111111, 4573, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71816381]
2019-03-11 10:34:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 10:34:57 -==> Parameters: admin(String)
2019-03-11 10:34:57 -<==      Total: 1
2019-03-11 10:34:57 -耗时 : 294
2019-03-11 10:34:57 -返回值 : {msg=操作成功, code=0}
2019-03-11 10:34:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 10:34:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:34:57 -==> Parameters: 1(Long), admin(String), 登录(String), 295(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 10:34:57.362(Timestamp)
2019-03-11 10:34:57 -请求地址 : http://localhost:8081/index
2019-03-11 10:34:57 -HTTP METHOD : GET
2019-03-11 10:34:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:34:57 -参数 : [{}]
2019-03-11 10:34:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:34:57 -<==    Updates: 1
2019-03-11 10:34:57 -==> Parameters: 1(Long)
2019-03-11 10:34:58 -<==      Total: 45
2019-03-11 10:34:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:34:58 -==> Parameters: 138(Long)
2019-03-11 10:34:58 -<==      Total: 1
2019-03-11 10:34:58 -耗时 : 570
2019-03-11 10:34:58 -返回值 : index_v1
2019-03-11 10:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:34:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 570(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:34:58.096(Timestamp)
2019-03-11 10:34:58 -<==    Updates: 1
2019-03-11 10:34:58 -请求地址 : http://localhost:8081/main
2019-03-11 10:34:58 -HTTP METHOD : GET
2019-03-11 10:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:34:58 -参数 : []
2019-03-11 10:34:58 -耗时 : 1
2019-03-11 10:34:58 -返回值 : main
2019-03-11 10:34:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:34:58 -HTTP METHOD : GET
2019-03-11 10:34:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:34:58 -参数 : []
2019-03-11 10:34:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:34:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:34:58 -<==      Total: 0
2019-03-11 10:34:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:34:58 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:34:58 -<==      Total: 1
2019-03-11 10:34:58 -耗时 : 77
2019-03-11 10:34:58 -返回值 : com.bootdo.common.utils.PageUtils@5903bfc2
2019-03-11 10:34:58 -请求地址 : http://localhost:8081/main
2019-03-11 10:34:58 -HTTP METHOD : GET
2019-03-11 10:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:34:58 -参数 : []
2019-03-11 10:34:58 -耗时 : 1
2019-03-11 10:34:58 -返回值 : main
2019-03-11 10:35:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:35:03 -==> Parameters: 1(Long)
2019-03-11 10:35:03 -<==      Total: 86
2019-03-11 10:35:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:35:03 -HTTP METHOD : GET
2019-03-11 10:35:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:35:03 -参数 : []
2019-03-11 10:35:03 -耗时 : 1
2019-03-11 10:35:03 -返回值 : /moneyList/moneyList
2019-03-11 10:35:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-11 10:36:39 -请求地址 : http://localhost:8081/index
2019-03-11 10:36:39 -HTTP METHOD : GET
2019-03-11 10:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:36:39 -参数 : [{}]
2019-03-11 10:36:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:36:39 -==> Parameters: 1(Long)
2019-03-11 10:36:39 -<==      Total: 45
2019-03-11 10:36:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:36:39 -==> Parameters: 138(Long)
2019-03-11 10:36:39 -<==      Total: 1
2019-03-11 10:36:39 -耗时 : 36
2019-03-11 10:36:39 -返回值 : index_v1
2019-03-11 10:36:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:36:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:36:39.059(Timestamp)
2019-03-11 10:36:39 -请求地址 : http://localhost:8081/main
2019-03-11 10:36:39 -HTTP METHOD : GET
2019-03-11 10:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:36:39 -参数 : []
2019-03-11 10:36:39 -耗时 : 2
2019-03-11 10:36:39 -返回值 : main
2019-03-11 10:36:39 -<==    Updates: 1
2019-03-11 10:36:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:36:39 -HTTP METHOD : GET
2019-03-11 10:36:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:36:39 -参数 : []
2019-03-11 10:36:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:36:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:36:39 -<==      Total: 0
2019-03-11 10:36:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:36:39 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:36:39 -<==      Total: 1
2019-03-11 10:36:39 -耗时 : 10
2019-03-11 10:36:39 -返回值 : com.bootdo.common.utils.PageUtils@65dfd002
2019-03-11 10:36:39 -请求地址 : http://localhost:8081/main
2019-03-11 10:36:39 -HTTP METHOD : GET
2019-03-11 10:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:36:39 -参数 : []
2019-03-11 10:36:39 -耗时 : 0
2019-03-11 10:36:39 -返回值 : main
2019-03-11 10:36:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:36:43 -HTTP METHOD : GET
2019-03-11 10:36:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:36:43 -参数 : []
2019-03-11 10:36:43 -耗时 : 1
2019-03-11 10:36:43 -返回值 : /moneyList/moneyList
2019-03-11 10:37:36 -请求地址 : http://localhost:8081/index
2019-03-11 10:37:36 -HTTP METHOD : GET
2019-03-11 10:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:37:36 -参数 : [{}]
2019-03-11 10:37:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:37:36 -==> Parameters: 1(Long)
2019-03-11 10:37:36 -<==      Total: 45
2019-03-11 10:37:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:37:36 -==> Parameters: 138(Long)
2019-03-11 10:37:36 -<==      Total: 1
2019-03-11 10:37:36 -耗时 : 40
2019-03-11 10:37:36 -返回值 : index_v1
2019-03-11 10:37:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:37:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:37:36.411(Timestamp)
2019-03-11 10:37:36 -<==    Updates: 1
2019-03-11 10:37:36 -请求地址 : http://localhost:8081/main
2019-03-11 10:37:36 -HTTP METHOD : GET
2019-03-11 10:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:37:36 -参数 : []
2019-03-11 10:37:36 -耗时 : 1
2019-03-11 10:37:36 -返回值 : main
2019-03-11 10:37:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:37:36 -HTTP METHOD : GET
2019-03-11 10:37:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:37:36 -参数 : []
2019-03-11 10:37:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:37:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:37:36 -<==      Total: 0
2019-03-11 10:37:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:37:36 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:37:36 -<==      Total: 1
2019-03-11 10:37:36 -耗时 : 12
2019-03-11 10:37:36 -返回值 : com.bootdo.common.utils.PageUtils@69b2c1e5
2019-03-11 10:37:36 -请求地址 : http://localhost:8081/main
2019-03-11 10:37:36 -HTTP METHOD : GET
2019-03-11 10:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:37:36 -参数 : []
2019-03-11 10:37:36 -耗时 : 0
2019-03-11 10:37:36 -返回值 : main
2019-03-11 10:37:38 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:37:38 -HTTP METHOD : GET
2019-03-11 10:37:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:37:38 -参数 : []
2019-03-11 10:37:38 -耗时 : 0
2019-03-11 10:37:38 -返回值 : /moneyList/moneyList
2019-03-11 10:37:58 -请求地址 : http://localhost:8081/index
2019-03-11 10:37:58 -HTTP METHOD : GET
2019-03-11 10:37:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:37:58 -参数 : [{}]
2019-03-11 10:37:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:37:58 -==> Parameters: 1(Long)
2019-03-11 10:37:58 -<==      Total: 45
2019-03-11 10:37:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:37:58 -==> Parameters: 138(Long)
2019-03-11 10:37:58 -<==      Total: 1
2019-03-11 10:37:58 -耗时 : 29
2019-03-11 10:37:58 -返回值 : index_v1
2019-03-11 10:37:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:37:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:37:58.533(Timestamp)
2019-03-11 10:37:58 -请求地址 : http://localhost:8081/main
2019-03-11 10:37:58 -HTTP METHOD : GET
2019-03-11 10:37:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:37:58 -参数 : []
2019-03-11 10:37:58 -耗时 : 1
2019-03-11 10:37:58 -返回值 : main
2019-03-11 10:37:58 -<==    Updates: 1
2019-03-11 10:37:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:37:59 -HTTP METHOD : GET
2019-03-11 10:37:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:37:59 -参数 : []
2019-03-11 10:37:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:37:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:37:59 -<==      Total: 0
2019-03-11 10:37:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:37:59 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:37:59 -<==      Total: 1
2019-03-11 10:37:59 -耗时 : 8
2019-03-11 10:37:59 -返回值 : com.bootdo.common.utils.PageUtils@1771ac69
2019-03-11 10:37:59 -请求地址 : http://localhost:8081/main
2019-03-11 10:37:59 -HTTP METHOD : GET
2019-03-11 10:37:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:37:59 -参数 : []
2019-03-11 10:37:59 -耗时 : 2
2019-03-11 10:37:59 -返回值 : main
2019-03-11 10:38:00 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:38:00 -HTTP METHOD : GET
2019-03-11 10:38:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:38:00 -参数 : []
2019-03-11 10:38:00 -耗时 : 1
2019-03-11 10:38:00 -返回值 : /moneyList/moneyList
2019-03-11 10:39:12 -请求地址 : http://localhost:8081/index
2019-03-11 10:39:12 -HTTP METHOD : GET
2019-03-11 10:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:39:12 -参数 : [{}]
2019-03-11 10:39:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:39:12 -==> Parameters: 1(Long)
2019-03-11 10:39:12 -<==      Total: 45
2019-03-11 10:39:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:39:12 -==> Parameters: 138(Long)
2019-03-11 10:39:12 -<==      Total: 1
2019-03-11 10:39:12 -耗时 : 20
2019-03-11 10:39:12 -返回值 : index_v1
2019-03-11 10:39:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:39:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:39:12.34(Timestamp)
2019-03-11 10:39:12 -请求地址 : http://localhost:8081/main
2019-03-11 10:39:12 -HTTP METHOD : GET
2019-03-11 10:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:39:12 -参数 : []
2019-03-11 10:39:12 -耗时 : 0
2019-03-11 10:39:12 -返回值 : main
2019-03-11 10:39:12 -<==    Updates: 1
2019-03-11 10:39:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:39:12 -HTTP METHOD : GET
2019-03-11 10:39:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:39:12 -参数 : []
2019-03-11 10:39:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:39:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:39:12 -<==      Total: 0
2019-03-11 10:39:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:39:12 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:39:12 -<==      Total: 1
2019-03-11 10:39:12 -耗时 : 10
2019-03-11 10:39:12 -返回值 : com.bootdo.common.utils.PageUtils@42215999
2019-03-11 10:39:12 -请求地址 : http://localhost:8081/main
2019-03-11 10:39:12 -HTTP METHOD : GET
2019-03-11 10:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:39:12 -参数 : []
2019-03-11 10:39:12 -耗时 : 1
2019-03-11 10:39:12 -返回值 : main
2019-03-11 10:39:14 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:39:14 -HTTP METHOD : GET
2019-03-11 10:39:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:39:14 -参数 : []
2019-03-11 10:39:14 -耗时 : 0
2019-03-11 10:39:14 -返回值 : /moneyList/moneyList
2019-03-11 10:42:57 -请求地址 : http://localhost:8081/index
2019-03-11 10:42:57 -HTTP METHOD : GET
2019-03-11 10:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:42:57 -参数 : [{}]
2019-03-11 10:42:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:42:57 -==> Parameters: 1(Long)
2019-03-11 10:42:57 -<==      Total: 45
2019-03-11 10:42:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:42:57 -==> Parameters: 138(Long)
2019-03-11 10:42:57 -<==      Total: 1
2019-03-11 10:42:57 -耗时 : 36
2019-03-11 10:42:57 -返回值 : index_v1
2019-03-11 10:42:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:42:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:42:57.828(Timestamp)
2019-03-11 10:42:57 -请求地址 : http://localhost:8081/main
2019-03-11 10:42:57 -HTTP METHOD : GET
2019-03-11 10:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:42:57 -参数 : []
2019-03-11 10:42:57 -耗时 : 0
2019-03-11 10:42:57 -返回值 : main
2019-03-11 10:42:58 -<==    Updates: 1
2019-03-11 10:42:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:42:58 -HTTP METHOD : GET
2019-03-11 10:42:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:42:58 -参数 : []
2019-03-11 10:42:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:42:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:42:58 -<==      Total: 0
2019-03-11 10:42:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:42:58 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:42:58 -<==      Total: 1
2019-03-11 10:42:58 -耗时 : 7
2019-03-11 10:42:58 -返回值 : com.bootdo.common.utils.PageUtils@7a37c03
2019-03-11 10:42:58 -请求地址 : http://localhost:8081/main
2019-03-11 10:42:58 -HTTP METHOD : GET
2019-03-11 10:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:42:58 -参数 : []
2019-03-11 10:42:58 -耗时 : 0
2019-03-11 10:42:58 -返回值 : main
2019-03-11 10:42:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:42:59 -HTTP METHOD : GET
2019-03-11 10:42:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:42:59 -参数 : []
2019-03-11 10:42:59 -耗时 : 1
2019-03-11 10:42:59 -返回值 : /moneyList/moneyList
2019-03-11 10:47:03 -请求地址 : http://localhost:8081/index
2019-03-11 10:47:03 -HTTP METHOD : GET
2019-03-11 10:47:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:47:03 -参数 : [{}]
2019-03-11 10:47:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:47:03 -==> Parameters: 1(Long)
2019-03-11 10:47:03 -<==      Total: 45
2019-03-11 10:47:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:47:03 -==> Parameters: 138(Long)
2019-03-11 10:47:03 -<==      Total: 1
2019-03-11 10:47:03 -耗时 : 23
2019-03-11 10:47:03 -返回值 : index_v1
2019-03-11 10:47:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:47:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:47:03.355(Timestamp)
2019-03-11 10:47:03 -<==    Updates: 1
2019-03-11 10:47:03 -请求地址 : http://localhost:8081/main
2019-03-11 10:47:03 -HTTP METHOD : GET
2019-03-11 10:47:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:47:03 -参数 : []
2019-03-11 10:47:03 -耗时 : 0
2019-03-11 10:47:03 -返回值 : main
2019-03-11 10:47:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:47:03 -HTTP METHOD : GET
2019-03-11 10:47:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:47:03 -参数 : []
2019-03-11 10:47:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:47:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:47:03 -<==      Total: 0
2019-03-11 10:47:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:47:03 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:47:03 -<==      Total: 1
2019-03-11 10:47:03 -耗时 : 7
2019-03-11 10:47:03 -返回值 : com.bootdo.common.utils.PageUtils@5c6491f2
2019-03-11 10:47:03 -请求地址 : http://localhost:8081/main
2019-03-11 10:47:03 -HTTP METHOD : GET
2019-03-11 10:47:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:47:03 -参数 : []
2019-03-11 10:47:03 -耗时 : 0
2019-03-11 10:47:03 -返回值 : main
2019-03-11 10:47:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:47:05 -==> Parameters: 1(Long)
2019-03-11 10:47:05 -<==      Total: 86
2019-03-11 10:47:05 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:47:05 -HTTP METHOD : GET
2019-03-11 10:47:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:47:05 -参数 : []
2019-03-11 10:47:05 -耗时 : 1
2019-03-11 10:47:05 -返回值 : /moneyList/moneyList
2019-03-11 10:47:50 -请求地址 : http://localhost:8081/index
2019-03-11 10:47:50 -HTTP METHOD : GET
2019-03-11 10:47:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:47:50 -参数 : [{}]
2019-03-11 10:47:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:47:50 -==> Parameters: 1(Long)
2019-03-11 10:47:50 -<==      Total: 45
2019-03-11 10:47:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:47:50 -==> Parameters: 138(Long)
2019-03-11 10:47:50 -<==      Total: 1
2019-03-11 10:47:50 -耗时 : 19
2019-03-11 10:47:50 -返回值 : index_v1
2019-03-11 10:47:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:47:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:47:50.678(Timestamp)
2019-03-11 10:47:50 -请求地址 : http://localhost:8081/main
2019-03-11 10:47:50 -HTTP METHOD : GET
2019-03-11 10:47:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:47:50 -参数 : []
2019-03-11 10:47:50 -耗时 : 0
2019-03-11 10:47:50 -返回值 : main
2019-03-11 10:47:50 -<==    Updates: 1
2019-03-11 10:47:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:47:51 -HTTP METHOD : GET
2019-03-11 10:47:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:47:51 -参数 : []
2019-03-11 10:47:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:47:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:47:51 -<==      Total: 0
2019-03-11 10:47:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:47:51 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:47:51 -<==      Total: 1
2019-03-11 10:47:51 -耗时 : 8
2019-03-11 10:47:51 -返回值 : com.bootdo.common.utils.PageUtils@601db6aa
2019-03-11 10:47:51 -请求地址 : http://localhost:8081/main
2019-03-11 10:47:51 -HTTP METHOD : GET
2019-03-11 10:47:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:47:51 -参数 : []
2019-03-11 10:47:51 -耗时 : 1
2019-03-11 10:47:51 -返回值 : main
2019-03-11 10:47:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:47:52 -HTTP METHOD : GET
2019-03-11 10:47:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:47:52 -参数 : []
2019-03-11 10:47:52 -耗时 : 1
2019-03-11 10:47:52 -返回值 : /moneyList/moneyList
2019-03-11 10:49:00 -请求地址 : http://localhost:8081/index
2019-03-11 10:49:00 -HTTP METHOD : GET
2019-03-11 10:49:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:49:00 -参数 : [{}]
2019-03-11 10:49:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:49:00 -==> Parameters: 1(Long)
2019-03-11 10:49:00 -<==      Total: 45
2019-03-11 10:49:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:49:00 -==> Parameters: 138(Long)
2019-03-11 10:49:00 -<==      Total: 1
2019-03-11 10:49:00 -耗时 : 24
2019-03-11 10:49:00 -返回值 : index_v1
2019-03-11 10:49:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:49:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:49:00.912(Timestamp)
2019-03-11 10:49:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:49:01 -HTTP METHOD : GET
2019-03-11 10:49:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:49:01 -参数 : []
2019-03-11 10:49:01 -耗时 : 1
2019-03-11 10:49:01 -返回值 : main
2019-03-11 10:49:01 -<==    Updates: 1
2019-03-11 10:49:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:49:01 -HTTP METHOD : GET
2019-03-11 10:49:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:49:01 -参数 : []
2019-03-11 10:49:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:49:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:49:01 -<==      Total: 0
2019-03-11 10:49:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:49:01 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:49:01 -<==      Total: 1
2019-03-11 10:49:01 -耗时 : 7
2019-03-11 10:49:01 -返回值 : com.bootdo.common.utils.PageUtils@4186444c
2019-03-11 10:49:01 -请求地址 : http://localhost:8081/main
2019-03-11 10:49:01 -HTTP METHOD : GET
2019-03-11 10:49:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:49:01 -参数 : []
2019-03-11 10:49:01 -耗时 : 1
2019-03-11 10:49:01 -返回值 : main
2019-03-11 10:49:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:49:03 -HTTP METHOD : GET
2019-03-11 10:49:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:49:03 -参数 : []
2019-03-11 10:49:03 -耗时 : 0
2019-03-11 10:49:03 -返回值 : /moneyList/moneyList
2019-03-11 10:50:21 -请求地址 : http://localhost:8081/index
2019-03-11 10:50:21 -HTTP METHOD : GET
2019-03-11 10:50:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:50:21 -参数 : [{}]
2019-03-11 10:50:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:50:21 -==> Parameters: 1(Long)
2019-03-11 10:50:21 -<==      Total: 45
2019-03-11 10:50:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:50:21 -==> Parameters: 138(Long)
2019-03-11 10:50:21 -<==      Total: 1
2019-03-11 10:50:21 -耗时 : 19
2019-03-11 10:50:21 -返回值 : index_v1
2019-03-11 10:50:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:50:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:50:21.269(Timestamp)
2019-03-11 10:50:21 -请求地址 : http://localhost:8081/main
2019-03-11 10:50:21 -HTTP METHOD : GET
2019-03-11 10:50:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:50:21 -参数 : []
2019-03-11 10:50:21 -耗时 : 2
2019-03-11 10:50:21 -返回值 : main
2019-03-11 10:50:21 -<==    Updates: 1
2019-03-11 10:50:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:50:21 -HTTP METHOD : GET
2019-03-11 10:50:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:50:21 -参数 : []
2019-03-11 10:50:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:50:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:50:21 -<==      Total: 0
2019-03-11 10:50:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:50:21 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:50:21 -<==      Total: 1
2019-03-11 10:50:21 -耗时 : 31
2019-03-11 10:50:21 -返回值 : com.bootdo.common.utils.PageUtils@4b89a3fb
2019-03-11 10:50:21 -请求地址 : http://localhost:8081/main
2019-03-11 10:50:21 -HTTP METHOD : GET
2019-03-11 10:50:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:50:21 -参数 : []
2019-03-11 10:50:21 -耗时 : 1
2019-03-11 10:50:21 -返回值 : main
2019-03-11 10:50:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:50:23 -HTTP METHOD : GET
2019-03-11 10:50:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:50:23 -参数 : []
2019-03-11 10:50:23 -耗时 : 0
2019-03-11 10:50:23 -返回值 : /moneyList/moneyList
2019-03-11 10:51:23 -请求地址 : http://localhost:8081/index
2019-03-11 10:51:23 -HTTP METHOD : GET
2019-03-11 10:51:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:51:23 -参数 : [{}]
2019-03-11 10:51:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:51:23 -==> Parameters: 1(Long)
2019-03-11 10:51:23 -<==      Total: 45
2019-03-11 10:51:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:51:23 -==> Parameters: 138(Long)
2019-03-11 10:51:23 -<==      Total: 1
2019-03-11 10:51:23 -耗时 : 23
2019-03-11 10:51:23 -返回值 : index_v1
2019-03-11 10:51:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:51:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:51:23.875(Timestamp)
2019-03-11 10:51:23 -<==    Updates: 1
2019-03-11 10:51:23 -请求地址 : http://localhost:8081/main
2019-03-11 10:51:23 -HTTP METHOD : GET
2019-03-11 10:51:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:51:23 -参数 : []
2019-03-11 10:51:23 -耗时 : 1
2019-03-11 10:51:23 -返回值 : main
2019-03-11 10:51:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:51:24 -HTTP METHOD : GET
2019-03-11 10:51:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:51:24 -参数 : []
2019-03-11 10:51:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:51:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:51:24 -<==      Total: 0
2019-03-11 10:51:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:51:24 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:51:24 -<==      Total: 1
2019-03-11 10:51:24 -耗时 : 6
2019-03-11 10:51:24 -返回值 : com.bootdo.common.utils.PageUtils@1c30a8f1
2019-03-11 10:51:24 -请求地址 : http://localhost:8081/main
2019-03-11 10:51:24 -HTTP METHOD : GET
2019-03-11 10:51:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:51:24 -参数 : []
2019-03-11 10:51:24 -耗时 : 1
2019-03-11 10:51:24 -返回值 : main
2019-03-11 10:51:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:51:25 -HTTP METHOD : GET
2019-03-11 10:51:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:51:25 -参数 : []
2019-03-11 10:51:25 -耗时 : 1
2019-03-11 10:51:25 -返回值 : /moneyList/moneyList
2019-03-11 10:52:40 -请求地址 : http://localhost:8081/index
2019-03-11 10:52:40 -HTTP METHOD : GET
2019-03-11 10:52:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:52:40 -参数 : [{}]
2019-03-11 10:52:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:52:40 -==> Parameters: 1(Long)
2019-03-11 10:52:40 -<==      Total: 45
2019-03-11 10:52:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:52:40 -==> Parameters: 138(Long)
2019-03-11 10:52:40 -<==      Total: 1
2019-03-11 10:52:40 -耗时 : 27
2019-03-11 10:52:40 -返回值 : index_v1
2019-03-11 10:52:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:52:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:52:40.054(Timestamp)
2019-03-11 10:52:40 -<==    Updates: 1
2019-03-11 10:52:40 -请求地址 : http://localhost:8081/main
2019-03-11 10:52:40 -HTTP METHOD : GET
2019-03-11 10:52:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:52:40 -参数 : []
2019-03-11 10:52:40 -耗时 : 0
2019-03-11 10:52:40 -返回值 : main
2019-03-11 10:52:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:52:40 -HTTP METHOD : GET
2019-03-11 10:52:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:52:40 -参数 : []
2019-03-11 10:52:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:52:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:52:40 -<==      Total: 0
2019-03-11 10:52:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:52:40 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:52:40 -<==      Total: 1
2019-03-11 10:52:40 -耗时 : 8
2019-03-11 10:52:40 -返回值 : com.bootdo.common.utils.PageUtils@10027346
2019-03-11 10:52:40 -请求地址 : http://localhost:8081/main
2019-03-11 10:52:40 -HTTP METHOD : GET
2019-03-11 10:52:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:52:40 -参数 : []
2019-03-11 10:52:40 -耗时 : 0
2019-03-11 10:52:40 -返回值 : main
2019-03-11 10:52:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:52:42 -HTTP METHOD : GET
2019-03-11 10:52:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:52:42 -参数 : []
2019-03-11 10:52:42 -耗时 : 1
2019-03-11 10:52:42 -返回值 : /moneyList/moneyList
2019-03-11 10:53:05 -请求地址 : http://localhost:8081/index
2019-03-11 10:53:05 -HTTP METHOD : GET
2019-03-11 10:53:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:53:05 -参数 : [{}]
2019-03-11 10:53:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:53:05 -==> Parameters: 1(Long)
2019-03-11 10:53:05 -<==      Total: 45
2019-03-11 10:53:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:53:05 -==> Parameters: 138(Long)
2019-03-11 10:53:05 -<==      Total: 1
2019-03-11 10:53:05 -耗时 : 21
2019-03-11 10:53:05 -返回值 : index_v1
2019-03-11 10:53:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:53:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:53:05.327(Timestamp)
2019-03-11 10:53:05 -请求地址 : http://localhost:8081/main
2019-03-11 10:53:05 -HTTP METHOD : GET
2019-03-11 10:53:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:53:05 -参数 : []
2019-03-11 10:53:05 -耗时 : 0
2019-03-11 10:53:05 -返回值 : main
2019-03-11 10:53:05 -<==    Updates: 1
2019-03-11 10:53:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:53:05 -HTTP METHOD : GET
2019-03-11 10:53:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:53:05 -参数 : []
2019-03-11 10:53:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:53:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:53:05 -<==      Total: 0
2019-03-11 10:53:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:53:05 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:53:05 -<==      Total: 1
2019-03-11 10:53:05 -耗时 : 8
2019-03-11 10:53:05 -返回值 : com.bootdo.common.utils.PageUtils@25429546
2019-03-11 10:53:05 -请求地址 : http://localhost:8081/main
2019-03-11 10:53:05 -HTTP METHOD : GET
2019-03-11 10:53:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:53:05 -参数 : []
2019-03-11 10:53:05 -耗时 : 1
2019-03-11 10:53:05 -返回值 : main
2019-03-11 10:54:13 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:54:13 -HTTP METHOD : GET
2019-03-11 10:54:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:54:13 -参数 : []
2019-03-11 10:54:13 -耗时 : 1
2019-03-11 10:54:13 -返回值 : /moneyList/moneyList
2019-03-11 10:55:38 -请求地址 : http://localhost:8081/index
2019-03-11 10:55:38 -HTTP METHOD : GET
2019-03-11 10:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:55:38 -参数 : [{}]
2019-03-11 10:55:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:55:38 -==> Parameters: 1(Long)
2019-03-11 10:55:38 -<==      Total: 45
2019-03-11 10:55:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:55:38 -==> Parameters: 138(Long)
2019-03-11 10:55:38 -<==      Total: 1
2019-03-11 10:55:38 -耗时 : 16
2019-03-11 10:55:38 -返回值 : index_v1
2019-03-11 10:55:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:55:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:55:38.839(Timestamp)
2019-03-11 10:55:38 -请求地址 : http://localhost:8081/main
2019-03-11 10:55:38 -HTTP METHOD : GET
2019-03-11 10:55:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:55:38 -参数 : []
2019-03-11 10:55:38 -耗时 : 0
2019-03-11 10:55:38 -返回值 : main
2019-03-11 10:55:38 -<==    Updates: 1
2019-03-11 10:55:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:55:39 -HTTP METHOD : GET
2019-03-11 10:55:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:55:39 -参数 : []
2019-03-11 10:55:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:55:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:55:39 -<==      Total: 0
2019-03-11 10:55:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:55:39 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:55:39 -<==      Total: 1
2019-03-11 10:55:39 -耗时 : 8
2019-03-11 10:55:39 -返回值 : com.bootdo.common.utils.PageUtils@b2712c
2019-03-11 10:55:39 -请求地址 : http://localhost:8081/main
2019-03-11 10:55:39 -HTTP METHOD : GET
2019-03-11 10:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:55:39 -参数 : []
2019-03-11 10:55:39 -耗时 : 1
2019-03-11 10:55:39 -返回值 : main
2019-03-11 10:55:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:55:40 -HTTP METHOD : GET
2019-03-11 10:55:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:55:40 -参数 : []
2019-03-11 10:55:40 -耗时 : 1
2019-03-11 10:55:40 -返回值 : /moneyList/moneyList
2019-03-11 10:56:10 -请求地址 : http://localhost:8081/index
2019-03-11 10:56:10 -HTTP METHOD : GET
2019-03-11 10:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:56:10 -参数 : [{}]
2019-03-11 10:56:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:56:10 -==> Parameters: 1(Long)
2019-03-11 10:56:10 -<==      Total: 45
2019-03-11 10:56:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:56:10 -==> Parameters: 138(Long)
2019-03-11 10:56:10 -<==      Total: 1
2019-03-11 10:56:10 -耗时 : 15
2019-03-11 10:56:10 -返回值 : index_v1
2019-03-11 10:56:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:56:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:56:10.317(Timestamp)
2019-03-11 10:56:10 -<==    Updates: 1
2019-03-11 10:56:10 -请求地址 : http://localhost:8081/main
2019-03-11 10:56:10 -HTTP METHOD : GET
2019-03-11 10:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:56:10 -参数 : []
2019-03-11 10:56:10 -耗时 : 0
2019-03-11 10:56:10 -返回值 : main
2019-03-11 10:56:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:56:10 -HTTP METHOD : GET
2019-03-11 10:56:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:56:10 -参数 : []
2019-03-11 10:56:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:56:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:56:10 -<==      Total: 0
2019-03-11 10:56:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:56:10 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:56:10 -<==      Total: 1
2019-03-11 10:56:10 -耗时 : 9
2019-03-11 10:56:10 -返回值 : com.bootdo.common.utils.PageUtils@40dc971a
2019-03-11 10:56:10 -请求地址 : http://localhost:8081/main
2019-03-11 10:56:10 -HTTP METHOD : GET
2019-03-11 10:56:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:56:10 -参数 : []
2019-03-11 10:56:10 -耗时 : 1
2019-03-11 10:56:10 -返回值 : main
2019-03-11 10:56:12 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:56:12 -HTTP METHOD : GET
2019-03-11 10:56:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:56:12 -参数 : []
2019-03-11 10:56:12 -耗时 : 0
2019-03-11 10:56:12 -返回值 : /moneyList/moneyList
2019-03-11 10:56:37 -请求地址 : http://localhost:8081/index
2019-03-11 10:56:37 -HTTP METHOD : GET
2019-03-11 10:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:56:37 -参数 : [{}]
2019-03-11 10:56:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:56:37 -==> Parameters: 1(Long)
2019-03-11 10:56:37 -<==      Total: 45
2019-03-11 10:56:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:56:37 -==> Parameters: 138(Long)
2019-03-11 10:56:37 -<==      Total: 1
2019-03-11 10:56:37 -耗时 : 30
2019-03-11 10:56:37 -返回值 : index_v1
2019-03-11 10:56:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:56:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:56:37.324(Timestamp)
2019-03-11 10:56:37 -请求地址 : http://localhost:8081/main
2019-03-11 10:56:37 -HTTP METHOD : GET
2019-03-11 10:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:56:37 -参数 : []
2019-03-11 10:56:37 -耗时 : 0
2019-03-11 10:56:37 -返回值 : main
2019-03-11 10:56:37 -<==    Updates: 1
2019-03-11 10:56:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:56:37 -HTTP METHOD : GET
2019-03-11 10:56:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:56:37 -参数 : []
2019-03-11 10:56:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:56:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:56:37 -<==      Total: 0
2019-03-11 10:56:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:56:37 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:56:37 -<==      Total: 1
2019-03-11 10:56:37 -耗时 : 8
2019-03-11 10:56:37 -返回值 : com.bootdo.common.utils.PageUtils@4b09a47d
2019-03-11 10:56:37 -请求地址 : http://localhost:8081/main
2019-03-11 10:56:37 -HTTP METHOD : GET
2019-03-11 10:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:56:37 -参数 : []
2019-03-11 10:56:37 -耗时 : 1
2019-03-11 10:56:37 -返回值 : main
2019-03-11 10:56:39 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 10:56:39 -HTTP METHOD : GET
2019-03-11 10:56:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 10:56:39 -参数 : []
2019-03-11 10:56:39 -耗时 : 1
2019-03-11 10:56:39 -返回值 : elec/elec/elec
2019-03-11 10:56:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 10:56:40 -HTTP METHOD : GET
2019-03-11 10:56:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 10:56:40 -参数 : [{limit=10, offset=0}]
2019-03-11 10:56:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 10:56:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 10:56:40 -<==      Total: 4
2019-03-11 10:56:40 -==>  Preparing: select count(*) from elec 
2019-03-11 10:56:40 -==> Parameters: 
2019-03-11 10:56:40 -<==      Total: 1
2019-03-11 10:56:40 -耗时 : 270
2019-03-11 10:56:40 -返回值 : com.bootdo.common.utils.PageUtils@5878ab16
2019-03-11 10:56:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:56:42 -HTTP METHOD : GET
2019-03-11 10:56:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:56:42 -参数 : []
2019-03-11 10:56:42 -耗时 : 1
2019-03-11 10:56:42 -返回值 : /moneyList/moneyList
2019-03-11 10:57:36 -请求地址 : http://localhost:8081/index
2019-03-11 10:57:36 -HTTP METHOD : GET
2019-03-11 10:57:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:57:36 -参数 : [{}]
2019-03-11 10:57:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:57:36 -==> Parameters: 1(Long)
2019-03-11 10:57:36 -<==      Total: 45
2019-03-11 10:57:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:57:36 -==> Parameters: 138(Long)
2019-03-11 10:57:36 -<==      Total: 1
2019-03-11 10:57:36 -耗时 : 83
2019-03-11 10:57:36 -返回值 : index_v1
2019-03-11 10:57:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:57:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 83(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:57:36.889(Timestamp)
2019-03-11 10:57:36 -<==    Updates: 1
2019-03-11 10:57:36 -请求地址 : http://localhost:8081/main
2019-03-11 10:57:36 -HTTP METHOD : GET
2019-03-11 10:57:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:57:36 -参数 : []
2019-03-11 10:57:36 -耗时 : 1
2019-03-11 10:57:36 -返回值 : main
2019-03-11 10:57:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:57:37 -HTTP METHOD : GET
2019-03-11 10:57:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:57:37 -参数 : []
2019-03-11 10:57:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:57:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:57:37 -<==      Total: 0
2019-03-11 10:57:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:57:37 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:57:37 -<==      Total: 1
2019-03-11 10:57:37 -耗时 : 9
2019-03-11 10:57:37 -返回值 : com.bootdo.common.utils.PageUtils@44bacd69
2019-03-11 10:57:37 -请求地址 : http://localhost:8081/main
2019-03-11 10:57:37 -HTTP METHOD : GET
2019-03-11 10:57:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:57:37 -参数 : []
2019-03-11 10:57:37 -耗时 : 1
2019-03-11 10:57:37 -返回值 : main
2019-03-11 10:57:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 10:57:42 -==> Parameters: 1(Long)
2019-03-11 10:57:42 -<==      Total: 86
2019-03-11 10:57:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:57:42 -HTTP METHOD : GET
2019-03-11 10:57:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:57:42 -参数 : []
2019-03-11 10:57:42 -耗时 : 0
2019-03-11 10:57:42 -返回值 : /moneyList/moneyList
2019-03-11 10:57:57 -请求地址 : http://localhost:8081/index
2019-03-11 10:57:57 -HTTP METHOD : GET
2019-03-11 10:57:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:57:57 -参数 : [{}]
2019-03-11 10:57:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:57:57 -==> Parameters: 1(Long)
2019-03-11 10:57:57 -<==      Total: 45
2019-03-11 10:57:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:57:57 -==> Parameters: 138(Long)
2019-03-11 10:57:57 -<==      Total: 1
2019-03-11 10:57:57 -耗时 : 18
2019-03-11 10:57:57 -返回值 : index_v1
2019-03-11 10:57:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:57:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:57:57.895(Timestamp)
2019-03-11 10:57:57 -请求地址 : http://localhost:8081/main
2019-03-11 10:57:57 -HTTP METHOD : GET
2019-03-11 10:57:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:57:57 -参数 : []
2019-03-11 10:57:57 -耗时 : 0
2019-03-11 10:57:57 -返回值 : main
2019-03-11 10:57:57 -<==    Updates: 1
2019-03-11 10:57:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:57:58 -HTTP METHOD : GET
2019-03-11 10:57:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:57:58 -参数 : []
2019-03-11 10:57:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:57:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:57:58 -<==      Total: 0
2019-03-11 10:57:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:57:58 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:57:58 -<==      Total: 1
2019-03-11 10:57:58 -耗时 : 9
2019-03-11 10:57:58 -返回值 : com.bootdo.common.utils.PageUtils@97ad4b3
2019-03-11 10:57:58 -请求地址 : http://localhost:8081/main
2019-03-11 10:57:58 -HTTP METHOD : GET
2019-03-11 10:57:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:57:58 -参数 : []
2019-03-11 10:57:58 -耗时 : 0
2019-03-11 10:57:58 -返回值 : main
2019-03-11 10:57:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:57:59 -HTTP METHOD : GET
2019-03-11 10:57:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:57:59 -参数 : []
2019-03-11 10:57:59 -耗时 : 1
2019-03-11 10:57:59 -返回值 : /moneyList/moneyList
2019-03-11 10:58:17 -请求地址 : http://localhost:8081/index
2019-03-11 10:58:17 -HTTP METHOD : GET
2019-03-11 10:58:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:58:17 -参数 : [{}]
2019-03-11 10:58:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:58:17 -==> Parameters: 1(Long)
2019-03-11 10:58:17 -<==      Total: 45
2019-03-11 10:58:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:58:17 -==> Parameters: 138(Long)
2019-03-11 10:58:17 -<==      Total: 1
2019-03-11 10:58:17 -耗时 : 21
2019-03-11 10:58:17 -返回值 : index_v1
2019-03-11 10:58:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:58:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:58:17.924(Timestamp)
2019-03-11 10:58:17 -请求地址 : http://localhost:8081/main
2019-03-11 10:58:17 -HTTP METHOD : GET
2019-03-11 10:58:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:58:17 -参数 : []
2019-03-11 10:58:17 -耗时 : 0
2019-03-11 10:58:17 -返回值 : main
2019-03-11 10:58:18 -<==    Updates: 1
2019-03-11 10:58:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:58:18 -HTTP METHOD : GET
2019-03-11 10:58:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:58:18 -参数 : []
2019-03-11 10:58:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:58:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:58:18 -<==      Total: 0
2019-03-11 10:58:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:58:18 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:58:18 -<==      Total: 1
2019-03-11 10:58:18 -耗时 : 10
2019-03-11 10:58:18 -返回值 : com.bootdo.common.utils.PageUtils@45726580
2019-03-11 10:58:18 -请求地址 : http://localhost:8081/main
2019-03-11 10:58:18 -HTTP METHOD : GET
2019-03-11 10:58:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:58:18 -参数 : []
2019-03-11 10:58:18 -耗时 : 1
2019-03-11 10:58:18 -返回值 : main
2019-03-11 10:58:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:58:20 -HTTP METHOD : GET
2019-03-11 10:58:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:58:20 -参数 : []
2019-03-11 10:58:20 -耗时 : 0
2019-03-11 10:58:20 -返回值 : /moneyList/moneyList
2019-03-11 10:59:22 -请求地址 : http://localhost:8081/index
2019-03-11 10:59:22 -HTTP METHOD : GET
2019-03-11 10:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 10:59:22 -参数 : [{}]
2019-03-11 10:59:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 10:59:22 -==> Parameters: 1(Long)
2019-03-11 10:59:22 -<==      Total: 45
2019-03-11 10:59:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 10:59:22 -==> Parameters: 138(Long)
2019-03-11 10:59:22 -<==      Total: 1
2019-03-11 10:59:22 -耗时 : 17
2019-03-11 10:59:22 -返回值 : index_v1
2019-03-11 10:59:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 10:59:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 10:59:22.919(Timestamp)
2019-03-11 10:59:22 -请求地址 : http://localhost:8081/main
2019-03-11 10:59:22 -HTTP METHOD : GET
2019-03-11 10:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:59:22 -参数 : []
2019-03-11 10:59:22 -耗时 : 0
2019-03-11 10:59:22 -返回值 : main
2019-03-11 10:59:23 -<==    Updates: 1
2019-03-11 10:59:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 10:59:23 -HTTP METHOD : GET
2019-03-11 10:59:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 10:59:23 -参数 : []
2019-03-11 10:59:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 10:59:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 10:59:23 -<==      Total: 0
2019-03-11 10:59:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 10:59:23 -==> Parameters: 1(Long), 0(String)
2019-03-11 10:59:23 -<==      Total: 1
2019-03-11 10:59:23 -耗时 : 8
2019-03-11 10:59:23 -返回值 : com.bootdo.common.utils.PageUtils@61f91a3c
2019-03-11 10:59:23 -请求地址 : http://localhost:8081/main
2019-03-11 10:59:23 -HTTP METHOD : GET
2019-03-11 10:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 10:59:23 -参数 : []
2019-03-11 10:59:23 -耗时 : 1
2019-03-11 10:59:23 -返回值 : main
2019-03-11 10:59:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 10:59:24 -HTTP METHOD : GET
2019-03-11 10:59:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 10:59:24 -参数 : []
2019-03-11 10:59:24 -耗时 : 1
2019-03-11 10:59:24 -返回值 : /moneyList/moneyList
2019-03-11 11:02:07 -请求地址 : http://localhost:8081/index
2019-03-11 11:02:07 -HTTP METHOD : GET
2019-03-11 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 11:02:07 -参数 : [{}]
2019-03-11 11:02:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 11:02:07 -==> Parameters: 1(Long)
2019-03-11 11:02:07 -<==      Total: 45
2019-03-11 11:02:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 11:02:07 -==> Parameters: 138(Long)
2019-03-11 11:02:07 -<==      Total: 1
2019-03-11 11:02:07 -耗时 : 16
2019-03-11 11:02:07 -返回值 : index_v1
2019-03-11 11:02:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:02:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 11:02:07.235(Timestamp)
2019-03-11 11:02:07 -请求地址 : http://localhost:8081/main
2019-03-11 11:02:07 -HTTP METHOD : GET
2019-03-11 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:02:07 -参数 : []
2019-03-11 11:02:07 -耗时 : 0
2019-03-11 11:02:07 -返回值 : main
2019-03-11 11:02:07 -<==    Updates: 1
2019-03-11 11:02:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 11:02:07 -HTTP METHOD : GET
2019-03-11 11:02:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 11:02:07 -参数 : []
2019-03-11 11:02:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 11:02:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 11:02:07 -<==      Total: 0
2019-03-11 11:02:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 11:02:07 -==> Parameters: 1(Long), 0(String)
2019-03-11 11:02:07 -<==      Total: 1
2019-03-11 11:02:07 -耗时 : 27
2019-03-11 11:02:07 -返回值 : com.bootdo.common.utils.PageUtils@403e8aa7
2019-03-11 11:02:07 -请求地址 : http://localhost:8081/main
2019-03-11 11:02:07 -HTTP METHOD : GET
2019-03-11 11:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:02:07 -参数 : []
2019-03-11 11:02:07 -耗时 : 1
2019-03-11 11:02:07 -返回值 : main
2019-03-11 11:02:09 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 11:02:09 -HTTP METHOD : GET
2019-03-11 11:02:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 11:02:09 -参数 : []
2019-03-11 11:02:09 -耗时 : 0
2019-03-11 11:02:09 -返回值 : /moneyList/moneyList
2019-03-11 11:04:39 -请求地址 : http://localhost:8081/index
2019-03-11 11:04:39 -HTTP METHOD : GET
2019-03-11 11:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 11:04:39 -参数 : [{}]
2019-03-11 11:04:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 11:04:39 -==> Parameters: 1(Long)
2019-03-11 11:04:39 -<==      Total: 45
2019-03-11 11:04:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 11:04:39 -==> Parameters: 138(Long)
2019-03-11 11:04:39 -<==      Total: 1
2019-03-11 11:04:39 -耗时 : 93
2019-03-11 11:04:39 -返回值 : index_v1
2019-03-11 11:04:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:04:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 93(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 11:04:39.947(Timestamp)
2019-03-11 11:04:40 -<==    Updates: 1
2019-03-11 11:04:40 -请求地址 : http://localhost:8081/main
2019-03-11 11:04:40 -HTTP METHOD : GET
2019-03-11 11:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:04:40 -参数 : []
2019-03-11 11:04:40 -耗时 : 1
2019-03-11 11:04:40 -返回值 : main
2019-03-11 11:04:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 11:04:40 -HTTP METHOD : GET
2019-03-11 11:04:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 11:04:40 -参数 : []
2019-03-11 11:04:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 11:04:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 11:04:40 -<==      Total: 0
2019-03-11 11:04:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 11:04:40 -==> Parameters: 1(Long), 0(String)
2019-03-11 11:04:40 -<==      Total: 1
2019-03-11 11:04:40 -耗时 : 9
2019-03-11 11:04:40 -返回值 : com.bootdo.common.utils.PageUtils@33f2260f
2019-03-11 11:04:40 -请求地址 : http://localhost:8081/main
2019-03-11 11:04:40 -HTTP METHOD : GET
2019-03-11 11:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:04:40 -参数 : []
2019-03-11 11:04:40 -耗时 : 0
2019-03-11 11:04:40 -返回值 : main
2019-03-11 11:04:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 11:04:41 -HTTP METHOD : GET
2019-03-11 11:04:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 11:04:41 -参数 : []
2019-03-11 11:04:41 -耗时 : 0
2019-03-11 11:04:41 -返回值 : /moneyList/moneyList
2019-03-11 11:05:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(22)-CONNECTED(22)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 261], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 43], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 429]
2019-03-11 11:20:23 -请求地址 : http://localhost:8081/login;JSESSIONID=76b5e000-509d-4feb-b1ca-f726d81fe703
2019-03-11 11:20:23 -HTTP METHOD : GET
2019-03-11 11:20:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 11:20:23 -参数 : [{}]
2019-03-11 11:20:23 -耗时 : 0
2019-03-11 11:20:23 -返回值 : login
2019-03-11 11:20:23 -请求地址 : http://localhost:8081/getVerify
2019-03-11 11:20:23 -HTTP METHOD : GET
2019-03-11 11:20:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 11:20:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6bc8d154, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77c14068]
2019-03-11 11:20:24 -3808
2019-03-11 11:20:24 -耗时 : 23
2019-03-11 11:20:24 -返回值 : null
2019-03-11 11:20:28 -请求地址 : http://localhost:8081/login
2019-03-11 11:20:28 -HTTP METHOD : POST
2019-03-11 11:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 11:20:28 -参数 : [admin, 111111, 3808, org.apache.shiro.web.servlet.ShiroHttpServletRequest@40722b7f]
2019-03-11 11:20:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 11:20:28 -==> Parameters: admin(String)
2019-03-11 11:20:28 -<==      Total: 1
2019-03-11 11:20:28 -耗时 : 15
2019-03-11 11:20:28 -返回值 : {msg=操作成功, code=0}
2019-03-11 11:20:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:20:28 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 11:20:28.832(Timestamp)
2019-03-11 11:20:28 -请求地址 : http://localhost:8081/index
2019-03-11 11:20:28 -HTTP METHOD : GET
2019-03-11 11:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 11:20:28 -参数 : [{}]
2019-03-11 11:20:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 11:20:28 -==> Parameters: 1(Long)
2019-03-11 11:20:29 -<==      Total: 45
2019-03-11 11:20:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 11:20:29 -==> Parameters: 138(Long)
2019-03-11 11:20:29 -<==    Updates: 1
2019-03-11 11:20:29 -<==      Total: 1
2019-03-11 11:20:29 -耗时 : 317
2019-03-11 11:20:29 -返回值 : index_v1
2019-03-11 11:20:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:20:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 318(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 11:20:29.173(Timestamp)
2019-03-11 11:20:29 -请求地址 : http://localhost:8081/main
2019-03-11 11:20:29 -HTTP METHOD : GET
2019-03-11 11:20:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:20:29 -参数 : []
2019-03-11 11:20:29 -耗时 : 3
2019-03-11 11:20:29 -返回值 : main
2019-03-11 11:20:29 -<==    Updates: 1
2019-03-11 11:20:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 11:20:29 -HTTP METHOD : GET
2019-03-11 11:20:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 11:20:29 -参数 : []
2019-03-11 11:20:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 11:20:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 11:20:29 -请求地址 : http://localhost:8081/main
2019-03-11 11:20:29 -HTTP METHOD : GET
2019-03-11 11:20:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:20:29 -参数 : []
2019-03-11 11:20:29 -耗时 : 0
2019-03-11 11:20:29 -返回值 : main
2019-03-11 11:20:29 -<==      Total: 0
2019-03-11 11:20:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 11:20:29 -==> Parameters: 1(Long), 0(String)
2019-03-11 11:20:29 -<==      Total: 1
2019-03-11 11:20:29 -耗时 : 139
2019-03-11 11:20:29 -返回值 : com.bootdo.common.utils.PageUtils@758fec85
2019-03-11 11:20:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 11:20:34 -==> Parameters: 1(Long)
2019-03-11 11:20:34 -<==      Total: 86
2019-03-11 11:20:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 11:20:34 -HTTP METHOD : GET
2019-03-11 11:20:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 11:20:34 -参数 : []
2019-03-11 11:20:34 -耗时 : 1
2019-03-11 11:20:34 -返回值 : /moneyList/moneyList
2019-03-11 11:25:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:25:36 -HTTP METHOD : GET
2019-03-11 11:25:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:25:36 -参数 : []
2019-03-11 11:25:36 -耗时 : 1
2019-03-11 11:25:36 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:25:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:25:36 -HTTP METHOD : GET
2019-03-11 11:25:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:25:36 -参数 : [{limit=10, offset=0}]
2019-03-11 11:25:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:25:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:25:36 -<==      Total: 3
2019-03-11 11:25:37 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:25:37 -==> Parameters: 
2019-03-11 11:25:37 -<==      Total: 1
2019-03-11 11:25:37 -耗时 : 398
2019-03-11 11:25:37 -返回值 : com.bootdo.common.utils.PageUtils@744fac3c
2019-03-11 11:28:01 -请求地址 : http://localhost:8081/index
2019-03-11 11:28:01 -HTTP METHOD : GET
2019-03-11 11:28:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 11:28:01 -参数 : [{}]
2019-03-11 11:28:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 11:28:01 -==> Parameters: 1(Long)
2019-03-11 11:28:01 -<==      Total: 45
2019-03-11 11:28:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 11:28:01 -==> Parameters: 138(Long)
2019-03-11 11:28:01 -<==      Total: 1
2019-03-11 11:28:01 -耗时 : 21
2019-03-11 11:28:01 -返回值 : index_v1
2019-03-11 11:28:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:28:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 11:28:01.442(Timestamp)
2019-03-11 11:28:01 -请求地址 : http://localhost:8081/main
2019-03-11 11:28:01 -HTTP METHOD : GET
2019-03-11 11:28:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:28:01 -参数 : []
2019-03-11 11:28:01 -耗时 : 0
2019-03-11 11:28:01 -返回值 : main
2019-03-11 11:28:01 -<==    Updates: 1
2019-03-11 11:28:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 11:28:01 -HTTP METHOD : GET
2019-03-11 11:28:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 11:28:01 -参数 : []
2019-03-11 11:28:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 11:28:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 11:28:01 -<==      Total: 0
2019-03-11 11:28:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 11:28:01 -==> Parameters: 1(Long), 0(String)
2019-03-11 11:28:01 -<==      Total: 1
2019-03-11 11:28:01 -耗时 : 8
2019-03-11 11:28:01 -返回值 : com.bootdo.common.utils.PageUtils@7cac847e
2019-03-11 11:28:01 -请求地址 : http://localhost:8081/main
2019-03-11 11:28:01 -HTTP METHOD : GET
2019-03-11 11:28:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:28:01 -参数 : []
2019-03-11 11:28:01 -耗时 : 1
2019-03-11 11:28:01 -返回值 : main
2019-03-11 11:28:04 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 11:28:04 -HTTP METHOD : GET
2019-03-11 11:28:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 11:28:04 -参数 : []
2019-03-11 11:28:04 -耗时 : 0
2019-03-11 11:28:04 -返回值 : elec/elecInto/elecInto
2019-03-11 11:34:45 -Validating all active sessions...
2019-03-11 11:34:45 -Finished session validation.  [1] sessions were stopped.
2019-03-11 11:35:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 24 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(24)-CONNECTED(24)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 285], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 47], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 848]
2019-03-11 11:37:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 4000 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 11:37:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 11:37:36 -The following profiles are active: dev
2019-03-11 11:37:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Mon Mar 11 11:37:36 CST 2019]; root of context hierarchy
2019-03-11 11:37:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 11:37:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$74eba8a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6744d750] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 11:37:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 11:37:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:37:45 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 11:37:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 11:37:46 -Starting service [Tomcat]
2019-03-11 11:37:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 11:37:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 11:37:46 -Initializing Spring embedded WebApplicationContext
2019-03-11 11:37:46 -Root WebApplicationContext: initialization completed in 10377 ms
2019-03-11 11:37:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 11:37:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 11:37:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 11:37:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 11:37:47 -Filter xssFilter was not registered (disabled)
2019-03-11 11:37:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 11:37:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 11:37:47 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 11:37:47 -Servlet dispatcherServlet mapped to [/]
2019-03-11 11:37:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Mon Mar 11 11:37:36 CST 2019]; root of context hierarchy
2019-03-11 11:37:51 -Using default implementation for ThreadExecutor
2019-03-11 11:37:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 11:37:51 -Quartz Scheduler v.2.2.1 created.
2019-03-11 11:37:51 -RAMJobStore initialized.
2019-03-11 11:37:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 11:37:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 11:37:51 -Quartz scheduler version: 2.2.1
2019-03-11 11:37:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5ae87de0
2019-03-11 11:37:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 11:37:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 11:37:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 11:37:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 11:37:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 11:37:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 11:37:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 11:37:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 11:37:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 11:37:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 11:37:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 11:37:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 11:37:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 11:37:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 11:37:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 11:37:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 11:37:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 11:37:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 11:37:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 11:37:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 11:37:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 11:37:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 11:37:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 11:37:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 11:37:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 11:37:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 11:37:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 11:37:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 11:37:55 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 11:37:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 11:37:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 11:37:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 11:37:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 11:37:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 11:37:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 11:37:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 11:37:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 11:37:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 11:37:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 11:37:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 11:37:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:37:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 11:37:55 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'heatLogController' method 
java.lang.String com.bootdo.moneyLog.controller.HeatLogController.moneyLog()
to {[/moneyLog/elecLog],methods=[GET]}: There is already 'elecLogController' bean method
java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog() mapped.
2019-03-11 11:37:55 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-11 11:37:55 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-11 11:37:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-11 11:37:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-11 11:37:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-11 11:37:55 -Shutting down Quartz Scheduler
2019-03-11 11:37:56 -Stopping service [Tomcat]
2019-03-11 11:37:56 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-11 11:37:56 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'heatLogController' method 
java.lang.String com.bootdo.moneyLog.controller.HeatLogController.moneyLog()
to {[/moneyLog/elecLog],methods=[GET]}: There is already 'elecLogController' bean method
java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'heatLogController' method 
java.lang.String com.bootdo.moneyLog.controller.HeatLogController.moneyLog()
to {[/moneyLog/elecLog],methods=[GET]}: There is already 'elecLogController' bean method
java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'heatLogController' method 
java.lang.String com.bootdo.moneyLog.controller.HeatLogController.moneyLog()
to {[/moneyLog/elecLog],methods=[GET]}: There is already 'elecLogController' bean method
java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'heatLogController' method 
java.lang.String com.bootdo.moneyLog.controller.HeatLogController.moneyLog()
to {[/moneyLog/elecLog],methods=[GET]}: There is already 'elecLogController' bean method
java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:580)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:544)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:250)
	at java.util.LinkedHashMap.forEach(Unknown Source)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:248)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:218)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1767)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 50 common frames omitted
2019-03-11 11:39:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 8792 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 11:39:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 11:39:23 -The following profiles are active: dev
2019-03-11 11:39:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e3f95fe: startup date [Mon Mar 11 11:39:23 CST 2019]; root of context hierarchy
2019-03-11 11:39:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 11:39:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$febad165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f114000c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 11:39:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 11:39:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 11:39:31 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 11:39:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 11:39:31 -Starting service [Tomcat]
2019-03-11 11:39:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 11:39:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 11:39:32 -Initializing Spring embedded WebApplicationContext
2019-03-11 11:39:32 -Root WebApplicationContext: initialization completed in 8638 ms
2019-03-11 11:39:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 11:39:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 11:39:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 11:39:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 11:39:32 -Filter xssFilter was not registered (disabled)
2019-03-11 11:39:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 11:39:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 11:39:32 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 11:39:32 -Servlet dispatcherServlet mapped to [/]
2019-03-11 11:39:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e3f95fe: startup date [Mon Mar 11 11:39:23 CST 2019]; root of context hierarchy
2019-03-11 11:39:36 -Using default implementation for ThreadExecutor
2019-03-11 11:39:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 11:39:36 -Quartz Scheduler v.2.2.1 created.
2019-03-11 11:39:36 -RAMJobStore initialized.
2019-03-11 11:39:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 11:39:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 11:39:36 -Quartz scheduler version: 2.2.1
2019-03-11 11:39:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@73e93c3a
2019-03-11 11:39:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 11:39:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 11:39:39 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 11:39:39 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 11:39:39 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 11:39:39 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 11:39:39 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 11:39:39 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 11:39:39 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 11:39:39 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 11:39:39 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 11:39:39 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 11:39:39 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 11:39:39 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 11:39:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 11:39:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 11:39:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 11:39:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 11:39:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 11:39:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 11:39:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 11:39:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 11:39:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 11:39:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 11:39:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 11:39:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 11:39:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 11:39:39 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 11:39:39 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 11:39:39 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 11:39:39 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 11:39:39 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 11:39:39 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 11:39:39 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 11:39:39 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 11:39:39 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 11:39:39 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 11:39:39 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 11:39:39 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 11:39:39 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:39 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 11:39:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 11:39:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 11:39:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 11:39:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 11:39:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 11:39:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 11:39:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 11:39:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 11:39:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 11:39:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 11:39:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 11:39:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 11:39:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 11:39:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 11:39:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 11:39:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 11:39:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 11:39:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 11:39:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 11:39:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 11:39:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 11:39:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 11:39:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 11:39:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 11:39:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 11:39:40 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 11:39:40 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 11:39:40 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 11:39:40 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 11:39:40 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 11:39:40 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 11:39:40 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 11:39:40 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 11:39:40 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 11:39:40 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 11:39:40 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 11:39:40 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 11:39:40 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 11:39:40 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 11:39:40 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 11:39:40 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 11:39:40 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 11:39:40 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 11:39:40 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 11:39:40 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 11:39:40 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 11:39:40 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 11:39:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 11:39:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 11:39:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 11:39:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 11:39:40 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 11:39:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 11:39:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 11:39:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 11:39:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e3f95fe: startup date [Mon Mar 11 11:39:23 CST 2019]; root of context hierarchy
2019-03-11 11:39:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 11:39:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 11:39:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 11:39:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 11:39:42 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 11:39:44 -Registering beans for JMX exposure on startup
2019-03-11 11:39:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 11:39:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 11:39:44 -Starting beans in phase 2147483647
2019-03-11 11:39:44 -Context refreshed
2019-03-11 11:39:44 -Found 1 custom documentation plugin(s)
2019-03-11 11:39:44 -Scanning for api listing references
2019-03-11 11:39:44 -Generating unique operation named: removeUsingPOST_1
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_1
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_1
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_1
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_2
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_3
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_2
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_2
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_2
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_4
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_5
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_3
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_3
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_3
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_6
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_7
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_4
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_4
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_4
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_8
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_9
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_5
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_5
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_5
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_10
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_11
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 11:39:45 -Generating unique operation named: ElecUsingGET_1
2019-03-11 11:39:45 -Generating unique operation named: addUsingGET_6
2019-03-11 11:39:45 -Generating unique operation named: editUsingGET_6
2019-03-11 11:39:45 -Generating unique operation named: listUsingGET_6
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_12
2019-03-11 11:39:45 -Generating unique operation named: removeUsingPOST_13
2019-03-11 11:39:45 -Generating unique operation named: saveUsingPOST_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingGET_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPOST_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPUT_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 11:39:45 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_7
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_7
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_7
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_8
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_8
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_14
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_15
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingGET_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPUT_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 11:39:46 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_8
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_9
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_9
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_16
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_17
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingGET_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPUT_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 11:39:46 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_9
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_10
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_10
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_18
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_19
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingGET_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPUT_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 11:39:46 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_10
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_11
2019-03-11 11:39:46 -Generating unique operation named: infoUsingGET_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingPOST_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingPUT_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 11:39:46 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_11
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_20
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_21
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_11
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_12
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_22
2019-03-11 11:39:46 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_11
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_12
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_13
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_23
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_11
2019-03-11 11:39:46 -Generating unique operation named: treeUsingGET_1
2019-03-11 11:39:46 -Generating unique operation named: treeUsingGET_2
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_12
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_12
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_13
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_14
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_24
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_25
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_12
2019-03-11 11:39:46 -Generating unique operation named: updateUsingGET_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_13
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPUT_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 11:39:46 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_13
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_14
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_15
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_26
2019-03-11 11:39:46 -Generating unique operation named: removeUsingPOST_27
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_13
2019-03-11 11:39:46 -Generating unique operation named: updateUsingGET_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_14
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPUT_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 11:39:46 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 11:39:46 -Generating unique operation named: addUsingGET_14
2019-03-11 11:39:46 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 11:39:46 -Generating unique operation named: editUsingGET_15
2019-03-11 11:39:46 -Generating unique operation named: listUsingGET_16
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_14
2019-03-11 11:39:46 -Generating unique operation named: saveUsingPOST_15
2019-03-11 11:39:46 -Generating unique operation named: updateUsingPOST_15
2019-03-11 11:39:47 -Generating unique operation named: listUsingGET_17
2019-03-11 11:39:47 -Generating unique operation named: listUsingHEAD_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingPOST_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingPUT_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingPATCH_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingDELETE_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingTRACE_1
2019-03-11 11:39:47 -Generating unique operation named: addUsingGET_15
2019-03-11 11:39:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 11:39:47 -Generating unique operation named: editUsingGET_16
2019-03-11 11:39:47 -Generating unique operation named: listUsingGET_18
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_28
2019-03-11 11:39:47 -Generating unique operation named: saveUsingPOST_16
2019-03-11 11:39:47 -Generating unique operation named: treeUsingGET_3
2019-03-11 11:39:47 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPOST_16
2019-03-11 11:39:47 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 11:39:47 -Generating unique operation named: addUsingGET_16
2019-03-11 11:39:47 -Generating unique operation named: editUsingGET_17
2019-03-11 11:39:47 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 11:39:47 -Generating unique operation named: listUsingGET_19
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_29
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_30
2019-03-11 11:39:47 -Generating unique operation named: saveUsingPOST_17
2019-03-11 11:39:47 -Generating unique operation named: updateUsingGET_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPOST_17
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPUT_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 11:39:47 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 11:39:47 -Generating unique operation named: addUsingGET_17
2019-03-11 11:39:47 -Generating unique operation named: editUsingGET_18
2019-03-11 11:39:47 -Generating unique operation named: listUsingGET_20
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_31
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_32
2019-03-11 11:39:47 -Generating unique operation named: saveUsingPOST_18
2019-03-11 11:39:47 -Generating unique operation named: updateUsingGET_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPOST_18
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPUT_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 11:39:47 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 11:39:47 -Generating unique operation named: addUsingGET_18
2019-03-11 11:39:47 -Generating unique operation named: editUsingGET_19
2019-03-11 11:39:47 -Generating unique operation named: listUsingGET_21
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_33
2019-03-11 11:39:47 -Generating unique operation named: removeUsingPOST_34
2019-03-11 11:39:47 -Generating unique operation named: saveUsingPOST_19
2019-03-11 11:39:47 -Generating unique operation named: updateUsingGET_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPOST_19
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPUT_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 11:39:47 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 11:39:47 -Starting Quartz Scheduler now
2019-03-11 11:39:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 11:39:47 -Starting...
2019-03-11 11:39:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 11:39:47 -Started.
2019-03-11 11:39:47 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 11:39:47 -Using a shared selector for servlet write/read
2019-03-11 11:39:47 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 11:39:47 -Started BootdoApplication in 26.276 seconds (JVM running for 27.878)
2019-03-11 11:39:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 11:39:48 -==> Parameters: 
2019-03-11 11:39:48 -<==      Total: 1
2019-03-11 11:39:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 11:39:55 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 11:39:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2019-03-11 11:39:55 -Enabling session validation scheduler...
2019-03-11 11:39:55 -请求地址 : http://localhost:8081/login;JSESSIONID=d83648cd-ac35-4605-94eb-becec83cc4dc
2019-03-11 11:39:55 -HTTP METHOD : GET
2019-03-11 11:39:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 11:39:55 -参数 : [{}]
2019-03-11 11:39:55 -耗时 : 3
2019-03-11 11:39:55 -返回值 : login
2019-03-11 11:39:57 -请求地址 : http://localhost:8081/getVerify
2019-03-11 11:39:57 -HTTP METHOD : GET
2019-03-11 11:39:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 11:39:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4639b2f0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34e3a499]
2019-03-11 11:40:07 -4793
2019-03-11 11:40:07 -耗时 : 10668
2019-03-11 11:40:07 -返回值 : null
2019-03-11 11:40:16 -请求地址 : http://localhost:8081/login
2019-03-11 11:40:16 -HTTP METHOD : POST
2019-03-11 11:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 11:40:16 -参数 : [admin, 111111, 4793, org.apache.shiro.web.servlet.ShiroHttpServletRequest@760803b4]
2019-03-11 11:40:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 11:40:16 -==> Parameters: admin(String)
2019-03-11 11:40:16 -<==      Total: 1
2019-03-11 11:40:16 -耗时 : 209
2019-03-11 11:40:16 -返回值 : {msg=操作成功, code=0}
2019-03-11 11:40:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 11:40:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:40:16 -==> Parameters: 1(Long), admin(String), 登录(String), 210(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 11:40:16.812(Timestamp)
2019-03-11 11:40:16 -请求地址 : http://localhost:8081/index
2019-03-11 11:40:16 -HTTP METHOD : GET
2019-03-11 11:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 11:40:16 -参数 : [{}]
2019-03-11 11:40:17 -<==    Updates: 1
2019-03-11 11:40:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 11:40:17 -==> Parameters: 1(Long)
2019-03-11 11:40:17 -<==      Total: 45
2019-03-11 11:40:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 11:40:17 -==> Parameters: 138(Long)
2019-03-11 11:40:17 -<==      Total: 1
2019-03-11 11:40:17 -耗时 : 307
2019-03-11 11:40:17 -返回值 : index_v1
2019-03-11 11:40:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 11:40:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 308(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 11:40:17.25(Timestamp)
2019-03-11 11:40:17 -<==    Updates: 1
2019-03-11 11:40:17 -请求地址 : http://localhost:8081/main
2019-03-11 11:40:17 -HTTP METHOD : GET
2019-03-11 11:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:40:17 -参数 : []
2019-03-11 11:40:17 -耗时 : 1
2019-03-11 11:40:17 -返回值 : main
2019-03-11 11:40:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 11:40:17 -HTTP METHOD : GET
2019-03-11 11:40:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 11:40:17 -参数 : []
2019-03-11 11:40:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 11:40:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 11:40:17 -<==      Total: 0
2019-03-11 11:40:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 11:40:17 -==> Parameters: 1(Long), 0(String)
2019-03-11 11:40:17 -<==      Total: 1
2019-03-11 11:40:17 -耗时 : 42
2019-03-11 11:40:17 -返回值 : com.bootdo.common.utils.PageUtils@2821ab6e
2019-03-11 11:40:17 -请求地址 : http://localhost:8081/main
2019-03-11 11:40:17 -HTTP METHOD : GET
2019-03-11 11:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 11:40:17 -参数 : []
2019-03-11 11:40:17 -耗时 : 0
2019-03-11 11:40:17 -返回值 : main
2019-03-11 11:40:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 11:40:23 -==> Parameters: 1(Long)
2019-03-11 11:40:23 -<==      Total: 86
2019-03-11 11:40:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:23 -HTTP METHOD : GET
2019-03-11 11:40:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:23 -参数 : []
2019-03-11 11:40:23 -耗时 : 0
2019-03-11 11:40:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:24 -HTTP METHOD : GET
2019-03-11 11:40:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:24 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:24 -<==      Total: 3
2019-03-11 11:40:24 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:24 -==> Parameters: 
2019-03-11 11:40:24 -<==      Total: 1
2019-03-11 11:40:24 -耗时 : 46
2019-03-11 11:40:24 -返回值 : com.bootdo.common.utils.PageUtils@542be25b
2019-03-11 11:40:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:26 -HTTP METHOD : GET
2019-03-11 11:40:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:26 -参数 : []
2019-03-11 11:40:26 -耗时 : 0
2019-03-11 11:40:26 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:34 -HTTP METHOD : GET
2019-03-11 11:40:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:34 -参数 : []
2019-03-11 11:40:34 -耗时 : 1
2019-03-11 11:40:34 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:34 -HTTP METHOD : GET
2019-03-11 11:40:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:34 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:34 -<==      Total: 3
2019-03-11 11:40:34 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:34 -==> Parameters: 
2019-03-11 11:40:34 -<==      Total: 1
2019-03-11 11:40:34 -耗时 : 11
2019-03-11 11:40:34 -返回值 : com.bootdo.common.utils.PageUtils@57e60959
2019-03-11 11:40:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:35 -HTTP METHOD : GET
2019-03-11 11:40:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:35 -参数 : []
2019-03-11 11:40:35 -耗时 : 0
2019-03-11 11:40:35 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:36 -HTTP METHOD : GET
2019-03-11 11:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:36 -参数 : []
2019-03-11 11:40:36 -耗时 : 0
2019-03-11 11:40:36 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:36 -HTTP METHOD : GET
2019-03-11 11:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:36 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:36 -<==      Total: 3
2019-03-11 11:40:36 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:36 -==> Parameters: 
2019-03-11 11:40:36 -<==      Total: 1
2019-03-11 11:40:36 -耗时 : 9
2019-03-11 11:40:36 -返回值 : com.bootdo.common.utils.PageUtils@1d430b15
2019-03-11 11:40:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:37 -HTTP METHOD : GET
2019-03-11 11:40:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:37 -参数 : []
2019-03-11 11:40:37 -耗时 : 1
2019-03-11 11:40:37 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:40 -HTTP METHOD : GET
2019-03-11 11:40:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:40 -参数 : []
2019-03-11 11:40:40 -耗时 : 0
2019-03-11 11:40:40 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:40 -HTTP METHOD : GET
2019-03-11 11:40:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:40 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:40 -<==      Total: 3
2019-03-11 11:40:40 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:40 -==> Parameters: 
2019-03-11 11:40:40 -<==      Total: 1
2019-03-11 11:40:40 -耗时 : 13
2019-03-11 11:40:40 -返回值 : com.bootdo.common.utils.PageUtils@42cfe084
2019-03-11 11:40:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-11 11:40:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:42 -HTTP METHOD : GET
2019-03-11 11:40:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:42 -参数 : []
2019-03-11 11:40:42 -耗时 : 1
2019-03-11 11:40:42 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:43 -HTTP METHOD : GET
2019-03-11 11:40:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:43 -参数 : []
2019-03-11 11:40:43 -耗时 : 0
2019-03-11 11:40:43 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:43 -HTTP METHOD : GET
2019-03-11 11:40:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:43 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:43 -<==      Total: 3
2019-03-11 11:40:43 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:43 -==> Parameters: 
2019-03-11 11:40:43 -<==      Total: 1
2019-03-11 11:40:43 -耗时 : 12
2019-03-11 11:40:43 -返回值 : com.bootdo.common.utils.PageUtils@7a0b5947
2019-03-11 11:40:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:43 -HTTP METHOD : GET
2019-03-11 11:40:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:43 -参数 : []
2019-03-11 11:40:43 -耗时 : 0
2019-03-11 11:40:43 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 11:40:44 -HTTP METHOD : GET
2019-03-11 11:40:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 11:40:44 -参数 : []
2019-03-11 11:40:44 -耗时 : 0
2019-03-11 11:40:44 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 11:40:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 11:40:44 -HTTP METHOD : GET
2019-03-11 11:40:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 11:40:44 -参数 : [{limit=10, offset=0}]
2019-03-11 11:40:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 11:40:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 11:40:44 -<==      Total: 3
2019-03-11 11:40:45 -==>  Preparing: select count(*) from elec_log 
2019-03-11 11:40:45 -==> Parameters: 
2019-03-11 11:40:45 -<==      Total: 1
2019-03-11 11:40:45 -耗时 : 12
2019-03-11 11:40:45 -返回值 : com.bootdo.common.utils.PageUtils@40391502
2019-03-11 11:40:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 11:40:45 -HTTP METHOD : GET
2019-03-11 11:40:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 11:40:45 -参数 : []
2019-03-11 11:40:45 -耗时 : 1
2019-03-11 11:40:45 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 11:40:46 -Subject does not have permission [moneyLog:waterLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:waterLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$1012f9f5.waterLog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 12:10:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-03-11 12:37:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 5248 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 12:37:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 12:37:11 -The following profiles are active: dev
2019-03-11 12:37:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Mon Mar 11 12:37:11 CST 2019]; root of context hierarchy
2019-03-11 12:37:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 12:37:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5e5d79e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$983f0645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 12:37:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 12:37:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 12:37:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 12:37:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 12:37:21 -Starting service [Tomcat]
2019-03-11 12:37:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 12:37:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 12:37:22 -Initializing Spring embedded WebApplicationContext
2019-03-11 12:37:22 -Root WebApplicationContext: initialization completed in 10310 ms
2019-03-11 12:37:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 12:37:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 12:37:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 12:37:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 12:37:23 -Filter xssFilter was not registered (disabled)
2019-03-11 12:37:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 12:37:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 12:37:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 12:37:23 -Servlet dispatcherServlet mapped to [/]
2019-03-11 12:37:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Mon Mar 11 12:37:11 CST 2019]; root of context hierarchy
2019-03-11 12:37:27 -Using default implementation for ThreadExecutor
2019-03-11 12:37:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 12:37:27 -Quartz Scheduler v.2.2.1 created.
2019-03-11 12:37:27 -RAMJobStore initialized.
2019-03-11 12:37:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 12:37:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 12:37:27 -Quartz scheduler version: 2.2.1
2019-03-11 12:37:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6a116354
2019-03-11 12:37:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 12:37:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 12:37:33 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 12:37:33 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 12:37:33 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 12:37:33 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 12:37:33 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 12:37:33 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 12:37:33 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 12:37:33 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 12:37:33 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 12:37:33 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 12:37:33 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 12:37:33 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 12:37:33 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 12:37:33 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 12:37:33 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 12:37:33 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 12:37:33 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 12:37:33 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 12:37:33 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 12:37:33 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 12:37:33 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 12:37:33 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 12:37:33 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 12:37:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 12:37:33 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 12:37:33 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 12:37:33 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 12:37:33 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 12:37:33 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 12:37:33 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 12:37:33 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 12:37:33 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 12:37:33 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 12:37:33 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 12:37:33 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 12:37:33 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 12:37:33 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 12:37:33 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 12:37:33 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 12:37:33 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 12:37:33 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 12:37:33 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 12:37:33 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 12:37:33 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 12:37:33 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 12:37:33 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 12:37:33 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 12:37:33 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 12:37:33 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 12:37:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 12:37:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 12:37:33 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 12:37:33 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 12:37:33 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 12:37:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 12:37:33 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 12:37:33 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 12:37:33 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 12:37:33 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 12:37:33 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 12:37:33 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 12:37:33 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 12:37:33 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 12:37:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 12:37:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 12:37:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 12:37:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 12:37:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 12:37:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 12:37:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 12:37:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 12:37:33 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 12:37:33 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 12:37:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 12:37:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 12:37:33 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 12:37:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 12:37:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 12:37:33 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 12:37:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 12:37:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 12:37:33 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 12:37:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 12:37:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 12:37:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 12:37:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 12:37:34 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 12:37:34 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 12:37:34 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 12:37:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 12:37:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Mon Mar 11 12:37:11 CST 2019]; root of context hierarchy
2019-03-11 12:37:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 12:37:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 12:37:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 12:37:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 12:37:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 12:37:40 -Registering beans for JMX exposure on startup
2019-03-11 12:37:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 12:37:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 12:37:40 -Starting beans in phase 2147483647
2019-03-11 12:37:40 -Context refreshed
2019-03-11 12:37:40 -Found 1 custom documentation plugin(s)
2019-03-11 12:37:40 -Scanning for api listing references
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_1
2019-03-11 12:37:41 -Generating unique operation named: addUsingGET_1
2019-03-11 12:37:41 -Generating unique operation named: editUsingGET_1
2019-03-11 12:37:41 -Generating unique operation named: listUsingGET_1
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_2
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_3
2019-03-11 12:37:41 -Generating unique operation named: saveUsingPOST_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingGET_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPOST_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPUT_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 12:37:41 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 12:37:41 -Generating unique operation named: addUsingGET_2
2019-03-11 12:37:41 -Generating unique operation named: editUsingGET_2
2019-03-11 12:37:41 -Generating unique operation named: listUsingGET_2
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_4
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_5
2019-03-11 12:37:41 -Generating unique operation named: saveUsingPOST_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingGET_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPOST_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPUT_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 12:37:41 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 12:37:41 -Generating unique operation named: addUsingGET_3
2019-03-11 12:37:41 -Generating unique operation named: editUsingGET_3
2019-03-11 12:37:41 -Generating unique operation named: listUsingGET_3
2019-03-11 12:37:41 -Generating unique operation named: removeUsingPOST_6
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_7
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_4
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_4
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_4
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_8
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_9
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_5
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_5
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_5
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_10
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_11
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 12:37:42 -Generating unique operation named: ElecUsingGET_1
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_6
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_6
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_6
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_12
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_13
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_7
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_7
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_7
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_8
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_8
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_14
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_15
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_8
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_9
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_9
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_16
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_17
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_9
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_10
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_10
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_18
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_19
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingGET_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_10
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPUT_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 12:37:42 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 12:37:42 -Generating unique operation named: addUsingGET_10
2019-03-11 12:37:42 -Generating unique operation named: editUsingGET_11
2019-03-11 12:37:42 -Generating unique operation named: infoUsingGET_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingPOST_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingPUT_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 12:37:42 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_11
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_20
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_21
2019-03-11 12:37:42 -Generating unique operation named: saveUsingPOST_10
2019-03-11 12:37:42 -Generating unique operation named: updateUsingPOST_11
2019-03-11 12:37:42 -Generating unique operation named: listUsingGET_12
2019-03-11 12:37:42 -Generating unique operation named: removeUsingPOST_22
2019-03-11 12:37:42 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_11
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_12
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_13
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_23
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_11
2019-03-11 12:37:43 -Generating unique operation named: treeUsingGET_1
2019-03-11 12:37:43 -Generating unique operation named: treeUsingGET_2
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_12
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_12
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_13
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_14
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_24
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_25
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingGET_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_13
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPUT_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 12:37:43 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_13
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_14
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_15
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_26
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_27
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_13
2019-03-11 12:37:43 -Generating unique operation named: updateUsingGET_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_14
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPUT_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 12:37:43 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_14
2019-03-11 12:37:43 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_15
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_16
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_14
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_15
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_15
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_17
2019-03-11 12:37:43 -Generating unique operation named: listUsingHEAD_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingPOST_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingPUT_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingPATCH_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingDELETE_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingTRACE_1
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_15
2019-03-11 12:37:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_16
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_18
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_28
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_16
2019-03-11 12:37:43 -Generating unique operation named: treeUsingGET_3
2019-03-11 12:37:43 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_16
2019-03-11 12:37:43 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_16
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_17
2019-03-11 12:37:43 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_19
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_29
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_30
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_17
2019-03-11 12:37:43 -Generating unique operation named: updateUsingGET_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPOST_17
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPUT_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 12:37:43 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 12:37:43 -Generating unique operation named: addUsingGET_17
2019-03-11 12:37:43 -Generating unique operation named: editUsingGET_18
2019-03-11 12:37:43 -Generating unique operation named: listUsingGET_20
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_31
2019-03-11 12:37:43 -Generating unique operation named: removeUsingPOST_32
2019-03-11 12:37:43 -Generating unique operation named: saveUsingPOST_18
2019-03-11 12:37:43 -Generating unique operation named: updateUsingGET_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPOST_18
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPUT_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 12:37:44 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 12:37:44 -Generating unique operation named: addUsingGET_18
2019-03-11 12:37:44 -Generating unique operation named: editUsingGET_19
2019-03-11 12:37:44 -Generating unique operation named: listUsingGET_21
2019-03-11 12:37:44 -Generating unique operation named: removeUsingPOST_33
2019-03-11 12:37:44 -Generating unique operation named: removeUsingPOST_34
2019-03-11 12:37:44 -Generating unique operation named: saveUsingPOST_19
2019-03-11 12:37:44 -Generating unique operation named: updateUsingGET_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPOST_19
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPUT_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 12:37:44 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 12:37:44 -Starting Quartz Scheduler now
2019-03-11 12:37:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 12:37:44 -Starting...
2019-03-11 12:37:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 12:37:44 -Started.
2019-03-11 12:37:44 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 12:37:44 -Using a shared selector for servlet write/read
2019-03-11 12:37:44 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 12:37:44 -Started BootdoApplication in 34.568 seconds (JVM running for 36.467)
2019-03-11 12:37:44 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 12:37:45 -==> Parameters: 
2019-03-11 12:37:45 -<==      Total: 1
2019-03-11 12:37:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 12:37:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 12:37:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2019-03-11 12:37:52 -Enabling session validation scheduler...
2019-03-11 12:37:52 -请求地址 : http://localhost:8081/login;JSESSIONID=5d3f5c6e-65cd-46ad-a3ad-60d1a5267a1b
2019-03-11 12:37:52 -HTTP METHOD : GET
2019-03-11 12:37:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 12:37:52 -参数 : [{}]
2019-03-11 12:37:52 -耗时 : 5
2019-03-11 12:37:52 -返回值 : login
2019-03-11 12:37:54 -请求地址 : http://localhost:8081/getVerify
2019-03-11 12:37:54 -HTTP METHOD : GET
2019-03-11 12:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 12:37:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@38516401, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c6ee7d3]
2019-03-11 12:38:02 -5260
2019-03-11 12:38:02 -耗时 : 7957
2019-03-11 12:38:02 -返回值 : null
2019-03-11 12:38:08 -请求地址 : http://localhost:8081/login
2019-03-11 12:38:08 -HTTP METHOD : POST
2019-03-11 12:38:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 12:38:08 -参数 : [admin, 111111, 5260, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4512c563]
2019-03-11 12:38:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 12:38:08 -==> Parameters: admin(String)
2019-03-11 12:38:08 -<==      Total: 1
2019-03-11 12:38:08 -耗时 : 147
2019-03-11 12:38:08 -返回值 : {msg=操作成功, code=0}
2019-03-11 12:38:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 12:38:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 12:38:08 -==> Parameters: 1(Long), admin(String), 登录(String), 147(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 12:38:08.83(Timestamp)
2019-03-11 12:38:08 -请求地址 : http://localhost:8081/index
2019-03-11 12:38:08 -HTTP METHOD : GET
2019-03-11 12:38:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 12:38:08 -参数 : [{}]
2019-03-11 12:38:09 -<==    Updates: 1
2019-03-11 12:38:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 12:38:09 -==> Parameters: 1(Long)
2019-03-11 12:38:09 -<==      Total: 45
2019-03-11 12:38:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 12:38:09 -==> Parameters: 138(Long)
2019-03-11 12:38:09 -<==      Total: 1
2019-03-11 12:38:09 -耗时 : 468
2019-03-11 12:38:09 -返回值 : index_v1
2019-03-11 12:38:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 12:38:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 468(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 12:38:09.447(Timestamp)
2019-03-11 12:38:09 -请求地址 : http://localhost:8081/main
2019-03-11 12:38:09 -HTTP METHOD : GET
2019-03-11 12:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 12:38:09 -参数 : []
2019-03-11 12:38:09 -耗时 : 0
2019-03-11 12:38:09 -返回值 : main
2019-03-11 12:38:09 -<==    Updates: 1
2019-03-11 12:38:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 12:38:09 -HTTP METHOD : GET
2019-03-11 12:38:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 12:38:09 -参数 : []
2019-03-11 12:38:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 12:38:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 12:38:09 -请求地址 : http://localhost:8081/main
2019-03-11 12:38:09 -HTTP METHOD : GET
2019-03-11 12:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 12:38:09 -参数 : []
2019-03-11 12:38:09 -耗时 : 0
2019-03-11 12:38:09 -返回值 : main
2019-03-11 12:38:09 -<==      Total: 0
2019-03-11 12:38:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 12:38:09 -==> Parameters: 1(Long), 0(String)
2019-03-11 12:38:09 -<==      Total: 1
2019-03-11 12:38:09 -耗时 : 108
2019-03-11 12:38:09 -返回值 : com.bootdo.common.utils.PageUtils@3def4d25
2019-03-11 12:38:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 12:38:20 -==> Parameters: 1(Long)
2019-03-11 12:38:20 -<==      Total: 86
2019-03-11 12:38:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:20 -HTTP METHOD : GET
2019-03-11 12:38:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:20 -参数 : []
2019-03-11 12:38:20 -耗时 : 0
2019-03-11 12:38:20 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:20 -HTTP METHOD : GET
2019-03-11 12:38:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:20 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:21 -<==      Total: 3
2019-03-11 12:38:21 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:21 -==> Parameters: 
2019-03-11 12:38:21 -<==      Total: 1
2019-03-11 12:38:21 -耗时 : 76
2019-03-11 12:38:21 -返回值 : com.bootdo.common.utils.PageUtils@51058a6a
2019-03-11 12:38:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:21 -HTTP METHOD : GET
2019-03-11 12:38:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:21 -参数 : []
2019-03-11 12:38:21 -耗时 : 0
2019-03-11 12:38:21 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:23 -HTTP METHOD : GET
2019-03-11 12:38:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:23 -参数 : []
2019-03-11 12:38:23 -耗时 : 1
2019-03-11 12:38:23 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:23 -HTTP METHOD : GET
2019-03-11 12:38:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:23 -参数 : []
2019-03-11 12:38:23 -耗时 : 0
2019-03-11 12:38:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:24 -HTTP METHOD : GET
2019-03-11 12:38:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:24 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:24 -<==      Total: 3
2019-03-11 12:38:24 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:24 -==> Parameters: 
2019-03-11 12:38:24 -<==      Total: 1
2019-03-11 12:38:24 -耗时 : 8
2019-03-11 12:38:24 -返回值 : com.bootdo.common.utils.PageUtils@56a279e8
2019-03-11 12:38:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:24 -HTTP METHOD : GET
2019-03-11 12:38:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:24 -参数 : []
2019-03-11 12:38:24 -耗时 : 1
2019-03-11 12:38:24 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:25 -HTTP METHOD : GET
2019-03-11 12:38:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:25 -参数 : []
2019-03-11 12:38:25 -耗时 : 0
2019-03-11 12:38:25 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:25 -HTTP METHOD : GET
2019-03-11 12:38:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:25 -参数 : []
2019-03-11 12:38:25 -耗时 : 1
2019-03-11 12:38:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:26 -HTTP METHOD : GET
2019-03-11 12:38:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:26 -参数 : []
2019-03-11 12:38:26 -耗时 : 1
2019-03-11 12:38:26 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:26 -HTTP METHOD : GET
2019-03-11 12:38:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:26 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:26 -<==      Total: 3
2019-03-11 12:38:26 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:26 -==> Parameters: 
2019-03-11 12:38:26 -<==      Total: 1
2019-03-11 12:38:26 -耗时 : 7
2019-03-11 12:38:26 -返回值 : com.bootdo.common.utils.PageUtils@83af686
2019-03-11 12:38:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:27 -HTTP METHOD : GET
2019-03-11 12:38:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:27 -参数 : []
2019-03-11 12:38:27 -耗时 : 0
2019-03-11 12:38:27 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:27 -HTTP METHOD : GET
2019-03-11 12:38:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:27 -参数 : []
2019-03-11 12:38:27 -耗时 : 0
2019-03-11 12:38:27 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:28 -HTTP METHOD : GET
2019-03-11 12:38:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:28 -参数 : []
2019-03-11 12:38:28 -耗时 : 0
2019-03-11 12:38:28 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:28 -HTTP METHOD : GET
2019-03-11 12:38:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:28 -参数 : []
2019-03-11 12:38:28 -耗时 : 1
2019-03-11 12:38:28 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:28 -HTTP METHOD : GET
2019-03-11 12:38:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:28 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:28 -<==      Total: 3
2019-03-11 12:38:28 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:28 -==> Parameters: 
2019-03-11 12:38:28 -<==      Total: 1
2019-03-11 12:38:28 -耗时 : 13
2019-03-11 12:38:28 -返回值 : com.bootdo.common.utils.PageUtils@307531a1
2019-03-11 12:38:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:29 -HTTP METHOD : GET
2019-03-11 12:38:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:29 -参数 : []
2019-03-11 12:38:29 -耗时 : 1
2019-03-11 12:38:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:29 -HTTP METHOD : GET
2019-03-11 12:38:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:29 -参数 : []
2019-03-11 12:38:29 -耗时 : 0
2019-03-11 12:38:29 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:30 -HTTP METHOD : GET
2019-03-11 12:38:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:30 -参数 : []
2019-03-11 12:38:30 -耗时 : 1
2019-03-11 12:38:30 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:31 -HTTP METHOD : GET
2019-03-11 12:38:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:31 -参数 : []
2019-03-11 12:38:31 -耗时 : 0
2019-03-11 12:38:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:31 -HTTP METHOD : GET
2019-03-11 12:38:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:31 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:31 -<==      Total: 3
2019-03-11 12:38:31 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:31 -==> Parameters: 
2019-03-11 12:38:31 -<==      Total: 1
2019-03-11 12:38:31 -耗时 : 11
2019-03-11 12:38:31 -返回值 : com.bootdo.common.utils.PageUtils@7672746c
2019-03-11 12:38:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:32 -HTTP METHOD : GET
2019-03-11 12:38:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:32 -参数 : []
2019-03-11 12:38:32 -耗时 : 1
2019-03-11 12:38:32 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:32 -HTTP METHOD : GET
2019-03-11 12:38:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:32 -参数 : []
2019-03-11 12:38:32 -耗时 : 0
2019-03-11 12:38:32 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:33 -HTTP METHOD : GET
2019-03-11 12:38:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:33 -参数 : []
2019-03-11 12:38:33 -耗时 : 0
2019-03-11 12:38:33 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:33 -HTTP METHOD : GET
2019-03-11 12:38:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:33 -参数 : []
2019-03-11 12:38:33 -耗时 : 1
2019-03-11 12:38:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:33 -HTTP METHOD : GET
2019-03-11 12:38:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:33 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:33 -<==      Total: 3
2019-03-11 12:38:33 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:33 -==> Parameters: 
2019-03-11 12:38:33 -<==      Total: 1
2019-03-11 12:38:33 -耗时 : 14
2019-03-11 12:38:33 -返回值 : com.bootdo.common.utils.PageUtils@4cb8586c
2019-03-11 12:38:34 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-11 12:38:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:50 -HTTP METHOD : GET
2019-03-11 12:38:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:50 -参数 : []
2019-03-11 12:38:50 -耗时 : 1
2019-03-11 12:38:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:51 -HTTP METHOD : GET
2019-03-11 12:38:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:51 -参数 : []
2019-03-11 12:38:51 -耗时 : 0
2019-03-11 12:38:51 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:52 -HTTP METHOD : GET
2019-03-11 12:38:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:52 -参数 : []
2019-03-11 12:38:52 -耗时 : 0
2019-03-11 12:38:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:52 -HTTP METHOD : GET
2019-03-11 12:38:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:52 -参数 : []
2019-03-11 12:38:52 -耗时 : 1
2019-03-11 12:38:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:53 -HTTP METHOD : GET
2019-03-11 12:38:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:53 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:53 -<==      Total: 3
2019-03-11 12:38:53 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:53 -==> Parameters: 
2019-03-11 12:38:53 -<==      Total: 1
2019-03-11 12:38:53 -耗时 : 8
2019-03-11 12:38:53 -返回值 : com.bootdo.common.utils.PageUtils@370f7558
2019-03-11 12:38:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:53 -HTTP METHOD : GET
2019-03-11 12:38:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:53 -参数 : []
2019-03-11 12:38:53 -耗时 : 1
2019-03-11 12:38:53 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:54 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:54 -HTTP METHOD : GET
2019-03-11 12:38:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:54 -参数 : []
2019-03-11 12:38:54 -耗时 : 0
2019-03-11 12:38:54 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:55 -HTTP METHOD : GET
2019-03-11 12:38:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:55 -参数 : []
2019-03-11 12:38:55 -耗时 : 1
2019-03-11 12:38:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:55 -HTTP METHOD : GET
2019-03-11 12:38:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:55 -参数 : []
2019-03-11 12:38:55 -耗时 : 1
2019-03-11 12:38:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:55 -HTTP METHOD : GET
2019-03-11 12:38:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:55 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:55 -<==      Total: 3
2019-03-11 12:38:55 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:55 -==> Parameters: 
2019-03-11 12:38:55 -<==      Total: 1
2019-03-11 12:38:55 -耗时 : 10
2019-03-11 12:38:55 -返回值 : com.bootdo.common.utils.PageUtils@59763ece
2019-03-11 12:38:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:56 -HTTP METHOD : GET
2019-03-11 12:38:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:56 -参数 : []
2019-03-11 12:38:56 -耗时 : 1
2019-03-11 12:38:56 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:57 -HTTP METHOD : GET
2019-03-11 12:38:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:57 -参数 : []
2019-03-11 12:38:57 -耗时 : 0
2019-03-11 12:38:57 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:57 -HTTP METHOD : GET
2019-03-11 12:38:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:57 -参数 : []
2019-03-11 12:38:57 -耗时 : 1
2019-03-11 12:38:57 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:38:58 -HTTP METHOD : GET
2019-03-11 12:38:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:38:58 -参数 : []
2019-03-11 12:38:58 -耗时 : 1
2019-03-11 12:38:58 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:38:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:38:58 -HTTP METHOD : GET
2019-03-11 12:38:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:38:58 -参数 : [{limit=10, offset=0}]
2019-03-11 12:38:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:38:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:38:58 -<==      Total: 3
2019-03-11 12:38:58 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:38:58 -==> Parameters: 
2019-03-11 12:38:58 -<==      Total: 1
2019-03-11 12:38:58 -耗时 : 9
2019-03-11 12:38:58 -返回值 : com.bootdo.common.utils.PageUtils@3919ec28
2019-03-11 12:38:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:58 -HTTP METHOD : GET
2019-03-11 12:38:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:58 -参数 : []
2019-03-11 12:38:58 -耗时 : 0
2019-03-11 12:38:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:38:59 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:38:59 -HTTP METHOD : GET
2019-03-11 12:38:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:38:59 -参数 : []
2019-03-11 12:38:59 -耗时 : 0
2019-03-11 12:38:59 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:38:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:38:59 -HTTP METHOD : GET
2019-03-11 12:38:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:38:59 -参数 : []
2019-03-11 12:38:59 -耗时 : 0
2019-03-11 12:38:59 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:39:00 -HTTP METHOD : GET
2019-03-11 12:39:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:39:00 -参数 : []
2019-03-11 12:39:00 -耗时 : 0
2019-03-11 12:39:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:39:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:39:00 -HTTP METHOD : GET
2019-03-11 12:39:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:39:00 -参数 : [{limit=10, offset=0}]
2019-03-11 12:39:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:39:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:39:00 -<==      Total: 3
2019-03-11 12:39:00 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:39:00 -==> Parameters: 
2019-03-11 12:39:00 -<==      Total: 1
2019-03-11 12:39:00 -耗时 : 12
2019-03-11 12:39:00 -返回值 : com.bootdo.common.utils.PageUtils@30e27d67
2019-03-11 12:39:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:01 -HTTP METHOD : GET
2019-03-11 12:39:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:01 -参数 : []
2019-03-11 12:39:01 -耗时 : 0
2019-03-11 12:39:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:39:02 -HTTP METHOD : GET
2019-03-11 12:39:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:39:02 -参数 : []
2019-03-11 12:39:02 -耗时 : 1
2019-03-11 12:39:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:39:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:04 -HTTP METHOD : GET
2019-03-11 12:39:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:04 -参数 : []
2019-03-11 12:39:04 -耗时 : 0
2019-03-11 12:39:04 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:39:04 -HTTP METHOD : GET
2019-03-11 12:39:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:39:04 -参数 : []
2019-03-11 12:39:04 -耗时 : 1
2019-03-11 12:39:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:39:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:39:05 -HTTP METHOD : GET
2019-03-11 12:39:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:39:05 -参数 : [{limit=10, offset=0}]
2019-03-11 12:39:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:39:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:39:05 -<==      Total: 3
2019-03-11 12:39:05 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:39:05 -==> Parameters: 
2019-03-11 12:39:05 -<==      Total: 1
2019-03-11 12:39:05 -耗时 : 9
2019-03-11 12:39:05 -返回值 : com.bootdo.common.utils.PageUtils@1d3419a
2019-03-11 12:39:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:05 -HTTP METHOD : GET
2019-03-11 12:39:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:05 -参数 : []
2019-03-11 12:39:05 -耗时 : 0
2019-03-11 12:39:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:39:06 -HTTP METHOD : GET
2019-03-11 12:39:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:39:06 -参数 : []
2019-03-11 12:39:06 -耗时 : 0
2019-03-11 12:39:06 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:39:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:07 -HTTP METHOD : GET
2019-03-11 12:39:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:07 -参数 : []
2019-03-11 12:39:07 -耗时 : 0
2019-03-11 12:39:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:39:08 -HTTP METHOD : GET
2019-03-11 12:39:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:39:08 -参数 : []
2019-03-11 12:39:08 -耗时 : 0
2019-03-11 12:39:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:39:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:39:08 -HTTP METHOD : GET
2019-03-11 12:39:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:39:08 -参数 : [{limit=10, offset=0}]
2019-03-11 12:39:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:39:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:39:08 -<==      Total: 3
2019-03-11 12:39:08 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:39:08 -==> Parameters: 
2019-03-11 12:39:08 -<==      Total: 1
2019-03-11 12:39:08 -耗时 : 9
2019-03-11 12:39:08 -返回值 : com.bootdo.common.utils.PageUtils@382f9a4d
2019-03-11 12:39:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:09 -HTTP METHOD : GET
2019-03-11 12:39:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:09 -参数 : []
2019-03-11 12:39:09 -耗时 : 1
2019-03-11 12:39:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:39:09 -HTTP METHOD : GET
2019-03-11 12:39:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:39:09 -参数 : []
2019-03-11 12:39:09 -耗时 : 1
2019-03-11 12:39:09 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:39:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:11 -HTTP METHOD : GET
2019-03-11 12:39:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:11 -参数 : []
2019-03-11 12:39:11 -耗时 : 0
2019-03-11 12:39:11 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:39:11 -HTTP METHOD : GET
2019-03-11 12:39:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:39:11 -参数 : []
2019-03-11 12:39:11 -耗时 : 1
2019-03-11 12:39:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:39:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:39:11 -HTTP METHOD : GET
2019-03-11 12:39:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:39:11 -参数 : [{limit=10, offset=0}]
2019-03-11 12:39:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:39:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:39:11 -<==      Total: 3
2019-03-11 12:39:11 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:39:11 -==> Parameters: 
2019-03-11 12:39:11 -<==      Total: 1
2019-03-11 12:39:11 -耗时 : 7
2019-03-11 12:39:11 -返回值 : com.bootdo.common.utils.PageUtils@3fe9b259
2019-03-11 12:39:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:12 -HTTP METHOD : GET
2019-03-11 12:39:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:12 -参数 : []
2019-03-11 12:39:12 -耗时 : 1
2019-03-11 12:39:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 12:39:13 -HTTP METHOD : GET
2019-03-11 12:39:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 12:39:13 -参数 : []
2019-03-11 12:39:13 -耗时 : 0
2019-03-11 12:39:13 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 12:39:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 12:39:15 -HTTP METHOD : GET
2019-03-11 12:39:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 12:39:15 -参数 : []
2019-03-11 12:39:15 -耗时 : 0
2019-03-11 12:39:15 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 12:39:16 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 12:39:16 -HTTP METHOD : GET
2019-03-11 12:39:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 12:39:16 -参数 : []
2019-03-11 12:39:16 -耗时 : 0
2019-03-11 12:39:16 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 12:39:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 12:39:16 -HTTP METHOD : GET
2019-03-11 12:39:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 12:39:16 -参数 : [{limit=10, offset=0}]
2019-03-11 12:39:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 12:39:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 12:39:16 -<==      Total: 3
2019-03-11 12:39:16 -==>  Preparing: select count(*) from elec_log 
2019-03-11 12:39:16 -==> Parameters: 
2019-03-11 12:39:16 -<==      Total: 1
2019-03-11 12:39:16 -耗时 : 8
2019-03-11 12:39:16 -返回值 : com.bootdo.common.utils.PageUtils@d1aede2
2019-03-11 13:03:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 11748 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 13:03:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 13:03:47 -The following profiles are active: dev
2019-03-11 13:03:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63c5efee: startup date [Mon Mar 11 13:03:47 CST 2019]; root of context hierarchy
2019-03-11 13:03:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 13:03:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd1f5f73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$af788e1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 13:03:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 13:03:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:03:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 13:03:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 13:03:56 -Starting service [Tomcat]
2019-03-11 13:03:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 13:03:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 13:03:56 -Initializing Spring embedded WebApplicationContext
2019-03-11 13:03:56 -Root WebApplicationContext: initialization completed in 9125 ms
2019-03-11 13:03:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 13:03:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 13:03:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 13:03:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 13:03:57 -Filter xssFilter was not registered (disabled)
2019-03-11 13:03:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 13:03:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 13:03:57 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 13:03:57 -Servlet dispatcherServlet mapped to [/]
2019-03-11 13:03:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63c5efee: startup date [Mon Mar 11 13:03:47 CST 2019]; root of context hierarchy
2019-03-11 13:04:00 -Using default implementation for ThreadExecutor
2019-03-11 13:04:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 13:04:00 -Quartz Scheduler v.2.2.1 created.
2019-03-11 13:04:00 -RAMJobStore initialized.
2019-03-11 13:04:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 13:04:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 13:04:00 -Quartz scheduler version: 2.2.1
2019-03-11 13:04:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4b76251c
2019-03-11 13:04:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 13:04:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 13:04:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 13:04:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 13:04:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 13:04:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 13:04:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 13:04:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 13:04:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 13:04:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 13:04:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 13:04:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 13:04:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 13:04:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 13:04:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 13:04:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:04:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 13:04:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:04:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 13:04:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 13:04:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 13:04:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 13:04:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 13:04:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 13:04:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 13:04:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:04:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 13:04:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 13:04:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 13:04:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:04:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 13:04:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 13:04:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 13:04:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 13:04:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 13:04:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 13:04:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:04:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:04:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 13:04:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 13:04:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 13:04:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 13:04:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 13:04:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.waterLog()
2019-03-11 13:04:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 13:04:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 13:04:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 13:04:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 13:04:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 13:04:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 13:04:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 13:04:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 13:04:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 13:04:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 13:04:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 13:04:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:04:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 13:04:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 13:04:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 13:04:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 13:04:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 13:04:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 13:04:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 13:04:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 13:04:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 13:04:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 13:04:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 13:04:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 13:04:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 13:04:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 13:04:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:04:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 13:04:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:04:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:04:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 13:04:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 13:04:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 13:04:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:04:04 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 13:04:04 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:04:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:04:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:04:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 13:04:04 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:04:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 13:04:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:04:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 13:04:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 13:04:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 13:04:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 13:04:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 13:04:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 13:04:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:04:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63c5efee: startup date [Mon Mar 11 13:03:47 CST 2019]; root of context hierarchy
2019-03-11 13:04:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:04:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:04:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:04:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 13:04:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 13:04:08 -Registering beans for JMX exposure on startup
2019-03-11 13:04:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 13:04:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 13:04:08 -Starting beans in phase 2147483647
2019-03-11 13:04:08 -Context refreshed
2019-03-11 13:04:08 -Found 1 custom documentation plugin(s)
2019-03-11 13:04:08 -Scanning for api listing references
2019-03-11 13:04:08 -Generating unique operation named: removeUsingPOST_1
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_1
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_1
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_1
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_2
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_3
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_2
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_2
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_2
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_4
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_5
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_3
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_3
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_3
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_6
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_7
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_4
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_4
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_4
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_8
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_9
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_5
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_5
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_5
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_10
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_11
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 13:04:09 -Generating unique operation named: ElecUsingGET_1
2019-03-11 13:04:09 -Generating unique operation named: addUsingGET_6
2019-03-11 13:04:09 -Generating unique operation named: editUsingGET_6
2019-03-11 13:04:09 -Generating unique operation named: listUsingGET_6
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_12
2019-03-11 13:04:09 -Generating unique operation named: removeUsingPOST_13
2019-03-11 13:04:09 -Generating unique operation named: saveUsingPOST_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingGET_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPOST_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPUT_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 13:04:09 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_7
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_7
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_7
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_8
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_8
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_14
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_15
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingGET_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPUT_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 13:04:10 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_8
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_9
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_9
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_16
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_17
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingGET_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPUT_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 13:04:10 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_9
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_10
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_10
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_18
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_19
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingGET_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPUT_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 13:04:10 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_10
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_11
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_11
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_20
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_21
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingGET_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_11
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPUT_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 13:04:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_11
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_12
2019-03-11 13:04:10 -Generating unique operation named: infoUsingGET_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingPOST_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingPUT_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 13:04:10 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_12
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_22
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_23
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_11
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_12
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_13
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_24
2019-03-11 13:04:10 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_12
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_13
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_14
2019-03-11 13:04:10 -Generating unique operation named: removeUsingPOST_25
2019-03-11 13:04:10 -Generating unique operation named: saveUsingPOST_12
2019-03-11 13:04:10 -Generating unique operation named: treeUsingGET_1
2019-03-11 13:04:10 -Generating unique operation named: treeUsingGET_2
2019-03-11 13:04:10 -Generating unique operation named: updateUsingPOST_13
2019-03-11 13:04:10 -Generating unique operation named: addUsingGET_13
2019-03-11 13:04:10 -Generating unique operation named: editUsingGET_14
2019-03-11 13:04:10 -Generating unique operation named: listUsingGET_15
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_26
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_27
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingGET_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPUT_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 13:04:11 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_14
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_15
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_16
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_28
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_29
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingGET_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPUT_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 13:04:11 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_15
2019-03-11 13:04:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_16
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_17
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_15
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_16
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_16
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_18
2019-03-11 13:04:11 -Generating unique operation named: listUsingHEAD_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingPOST_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingPUT_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingPATCH_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingDELETE_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingTRACE_1
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_16
2019-03-11 13:04:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_17
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_19
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_30
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_17
2019-03-11 13:04:11 -Generating unique operation named: treeUsingGET_3
2019-03-11 13:04:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_17
2019-03-11 13:04:11 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_17
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_18
2019-03-11 13:04:11 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_20
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_31
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_32
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_18
2019-03-11 13:04:11 -Generating unique operation named: updateUsingGET_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_18
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPUT_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 13:04:11 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_18
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_19
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_21
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_33
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_34
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_19
2019-03-11 13:04:11 -Generating unique operation named: updateUsingGET_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_19
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPUT_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 13:04:11 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 13:04:11 -Generating unique operation named: addUsingGET_19
2019-03-11 13:04:11 -Generating unique operation named: editUsingGET_20
2019-03-11 13:04:11 -Generating unique operation named: listUsingGET_22
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_35
2019-03-11 13:04:11 -Generating unique operation named: removeUsingPOST_36
2019-03-11 13:04:11 -Generating unique operation named: saveUsingPOST_20
2019-03-11 13:04:11 -Generating unique operation named: updateUsingGET_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPOST_20
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPUT_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 13:04:11 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 13:04:11 -Starting Quartz Scheduler now
2019-03-11 13:04:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 13:04:11 -Starting...
2019-03-11 13:04:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 13:04:11 -Started.
2019-03-11 13:04:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 13:04:11 -Using a shared selector for servlet write/read
2019-03-11 13:04:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 13:04:12 -Started BootdoApplication in 26.516 seconds (JVM running for 28.211)
2019-03-11 13:04:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 13:04:12 -==> Parameters: 
2019-03-11 13:04:12 -<==      Total: 1
2019-03-11 13:04:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 13:04:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 13:04:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
2019-03-11 13:04:20 -Enabling session validation scheduler...
2019-03-11 13:04:20 -请求地址 : http://localhost:8081/login;JSESSIONID=d70bb11f-10d0-41e3-8391-69af3acc95f3
2019-03-11 13:04:20 -HTTP METHOD : GET
2019-03-11 13:04:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 13:04:20 -参数 : [{}]
2019-03-11 13:04:20 -耗时 : 3
2019-03-11 13:04:20 -返回值 : login
2019-03-11 13:04:21 -请求地址 : http://localhost:8081/getVerify
2019-03-11 13:04:21 -HTTP METHOD : GET
2019-03-11 13:04:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 13:04:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@123424e7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@160bb279]
2019-03-11 13:04:22 -7912
2019-03-11 13:04:22 -耗时 : 557
2019-03-11 13:04:22 -返回值 : null
2019-03-11 13:04:30 -请求地址 : http://localhost:8081/login
2019-03-11 13:04:30 -HTTP METHOD : POST
2019-03-11 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 13:04:30 -参数 : [admin, 111111, 7912, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b37ccad]
2019-03-11 13:04:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 13:04:30 -==> Parameters: admin(String)
2019-03-11 13:04:30 -<==      Total: 1
2019-03-11 13:04:30 -耗时 : 78
2019-03-11 13:04:30 -返回值 : {msg=操作成功, code=0}
2019-03-11 13:04:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 13:04:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:04:30 -==> Parameters: 1(Long), admin(String), 登录(String), 79(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 13:04:30.503(Timestamp)
2019-03-11 13:04:30 -<==    Updates: 1
2019-03-11 13:04:30 -请求地址 : http://localhost:8081/index
2019-03-11 13:04:30 -HTTP METHOD : GET
2019-03-11 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 13:04:30 -参数 : [{}]
2019-03-11 13:04:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 13:04:30 -==> Parameters: 1(Long)
2019-03-11 13:04:30 -<==      Total: 45
2019-03-11 13:04:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 13:04:30 -==> Parameters: 138(Long)
2019-03-11 13:04:30 -<==      Total: 1
2019-03-11 13:04:30 -耗时 : 118
2019-03-11 13:04:30 -返回值 : index_v1
2019-03-11 13:04:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:04:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 118(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 13:04:30.74(Timestamp)
2019-03-11 13:04:30 -<==    Updates: 1
2019-03-11 13:04:30 -请求地址 : http://localhost:8081/main
2019-03-11 13:04:30 -HTTP METHOD : GET
2019-03-11 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:04:30 -参数 : []
2019-03-11 13:04:30 -耗时 : 1
2019-03-11 13:04:30 -返回值 : main
2019-03-11 13:04:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 13:04:31 -HTTP METHOD : GET
2019-03-11 13:04:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 13:04:31 -参数 : []
2019-03-11 13:04:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 13:04:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 13:04:31 -<==      Total: 0
2019-03-11 13:04:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 13:04:31 -==> Parameters: 1(Long), 0(String)
2019-03-11 13:04:31 -<==      Total: 1
2019-03-11 13:04:31 -耗时 : 41
2019-03-11 13:04:31 -返回值 : com.bootdo.common.utils.PageUtils@69b7dc19
2019-03-11 13:04:31 -请求地址 : http://localhost:8081/main
2019-03-11 13:04:31 -HTTP METHOD : GET
2019-03-11 13:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:04:31 -参数 : []
2019-03-11 13:04:31 -耗时 : 0
2019-03-11 13:04:31 -返回值 : main
2019-03-11 13:04:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 13:04:34 -==> Parameters: 1(Long)
2019-03-11 13:04:34 -<==      Total: 86
2019-03-11 13:04:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:04:34 -HTTP METHOD : GET
2019-03-11 13:04:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:04:34 -参数 : []
2019-03-11 13:04:34 -耗时 : 1
2019-03-11 13:04:34 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:04:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:04:35 -HTTP METHOD : GET
2019-03-11 13:04:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:04:35 -参数 : [{limit=10, offset=0}]
2019-03-11 13:04:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:04:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:04:35 -<==      Total: 3
2019-03-11 13:04:35 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:04:35 -==> Parameters: 
2019-03-11 13:04:35 -<==      Total: 1
2019-03-11 13:04:35 -耗时 : 64
2019-03-11 13:04:35 -返回值 : com.bootdo.common.utils.PageUtils@3539819a
2019-03-11 13:04:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:04:36 -HTTP METHOD : GET
2019-03-11 13:04:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:04:36 -参数 : []
2019-03-11 13:04:36 -耗时 : 0
2019-03-11 13:04:36 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:04:36 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:04:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:04:37 -HTTP METHOD : GET
2019-03-11 13:04:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 13:04:37 -参数 : []
2019-03-11 13:04:37 -耗时 : 0
2019-03-11 13:04:37 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:04:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:04:39 -HTTP METHOD : GET
2019-03-11 13:04:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:04:39 -参数 : []
2019-03-11 13:04:39 -耗时 : 0
2019-03-11 13:04:39 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:04:39 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:04:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:04:40 -HTTP METHOD : GET
2019-03-11 13:04:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:04:40 -参数 : []
2019-03-11 13:04:40 -耗时 : 1
2019-03-11 13:04:40 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:04:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:04:40 -HTTP METHOD : GET
2019-03-11 13:04:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:04:40 -参数 : [{limit=10, offset=0}]
2019-03-11 13:04:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:04:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:04:40 -<==      Total: 3
2019-03-11 13:04:40 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:04:40 -==> Parameters: 
2019-03-11 13:04:40 -<==      Total: 1
2019-03-11 13:04:40 -耗时 : 9
2019-03-11 13:04:40 -返回值 : com.bootdo.common.utils.PageUtils@401af31f
2019-03-11 13:04:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:04:41 -HTTP METHOD : GET
2019-03-11 13:04:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:04:41 -参数 : []
2019-03-11 13:04:41 -耗时 : 1
2019-03-11 13:04:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:04:41 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:04:41 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:04:41 -HTTP METHOD : GET
2019-03-11 13:04:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 13:04:41 -参数 : []
2019-03-11 13:04:41 -耗时 : 1
2019-03-11 13:04:41 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:04:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:04:42 -HTTP METHOD : GET
2019-03-11 13:04:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:04:42 -参数 : []
2019-03-11 13:04:42 -耗时 : 0
2019-03-11 13:04:42 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:04:42 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:05:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-11 13:06:47 -请求地址 : http://localhost:8081/index
2019-03-11 13:06:47 -HTTP METHOD : GET
2019-03-11 13:06:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 13:06:47 -参数 : [{}]
2019-03-11 13:06:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 13:06:47 -==> Parameters: 1(Long)
2019-03-11 13:06:47 -<==      Total: 45
2019-03-11 13:06:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 13:06:47 -==> Parameters: 138(Long)
2019-03-11 13:06:47 -<==      Total: 1
2019-03-11 13:06:47 -耗时 : 36
2019-03-11 13:06:47 -返回值 : index_v1
2019-03-11 13:06:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:06:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 13:06:47.233(Timestamp)
2019-03-11 13:06:47 -请求地址 : http://localhost:8081/main
2019-03-11 13:06:47 -HTTP METHOD : GET
2019-03-11 13:06:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:06:47 -参数 : []
2019-03-11 13:06:47 -耗时 : 2
2019-03-11 13:06:47 -返回值 : main
2019-03-11 13:06:47 -<==    Updates: 1
2019-03-11 13:06:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 13:06:47 -HTTP METHOD : GET
2019-03-11 13:06:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 13:06:47 -参数 : []
2019-03-11 13:06:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 13:06:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 13:06:47 -<==      Total: 0
2019-03-11 13:06:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 13:06:47 -==> Parameters: 1(Long), 0(String)
2019-03-11 13:06:47 -<==      Total: 1
2019-03-11 13:06:47 -耗时 : 9
2019-03-11 13:06:47 -返回值 : com.bootdo.common.utils.PageUtils@539b9797
2019-03-11 13:06:48 -请求地址 : http://localhost:8081/main
2019-03-11 13:06:48 -HTTP METHOD : GET
2019-03-11 13:06:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:06:48 -参数 : []
2019-03-11 13:06:48 -耗时 : 1
2019-03-11 13:06:48 -返回值 : main
2019-03-11 13:06:49 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:06:49 -HTTP METHOD : GET
2019-03-11 13:06:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:06:49 -参数 : []
2019-03-11 13:06:49 -耗时 : 1
2019-03-11 13:06:49 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:06:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:06:50 -HTTP METHOD : GET
2019-03-11 13:06:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:06:50 -参数 : [{limit=10, offset=0}]
2019-03-11 13:06:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:06:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:06:50 -<==      Total: 3
2019-03-11 13:06:50 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:06:50 -==> Parameters: 
2019-03-11 13:06:50 -<==      Total: 1
2019-03-11 13:06:50 -耗时 : 12
2019-03-11 13:06:50 -返回值 : com.bootdo.common.utils.PageUtils@545b7ae7
2019-03-11 13:06:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:06:50 -HTTP METHOD : GET
2019-03-11 13:06:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:06:50 -参数 : []
2019-03-11 13:06:50 -耗时 : 0
2019-03-11 13:06:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:06:51 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:06:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:06:52 -HTTP METHOD : GET
2019-03-11 13:06:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:06:52 -参数 : []
2019-03-11 13:06:52 -耗时 : 1
2019-03-11 13:06:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:06:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:06:53 -HTTP METHOD : GET
2019-03-11 13:06:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:06:53 -参数 : [{limit=10, offset=0}]
2019-03-11 13:06:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:06:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:06:53 -<==      Total: 3
2019-03-11 13:06:53 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:06:53 -==> Parameters: 
2019-03-11 13:06:53 -<==      Total: 1
2019-03-11 13:06:53 -耗时 : 9
2019-03-11 13:06:53 -返回值 : com.bootdo.common.utils.PageUtils@6251c808
2019-03-11 13:06:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:06:55 -HTTP METHOD : GET
2019-03-11 13:06:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:06:55 -参数 : []
2019-03-11 13:06:55 -耗时 : 0
2019-03-11 13:06:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:06:55 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:06:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:06:57 -HTTP METHOD : GET
2019-03-11 13:06:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.waterLog
2019-03-11 13:06:57 -参数 : []
2019-03-11 13:06:57 -耗时 : 1
2019-03-11 13:06:57 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:06:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:06:57 -HTTP METHOD : GET
2019-03-11 13:06:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:06:57 -参数 : []
2019-03-11 13:06:57 -耗时 : 0
2019-03-11 13:06:57 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:06:58 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:06:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:06:58 -HTTP METHOD : GET
2019-03-11 13:06:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:06:58 -参数 : []
2019-03-11 13:06:58 -耗时 : 0
2019-03-11 13:06:58 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:06:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:06:58 -HTTP METHOD : GET
2019-03-11 13:06:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:06:58 -参数 : [{limit=10, offset=0}]
2019-03-11 13:06:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:06:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:06:58 -<==      Total: 3
2019-03-11 13:06:58 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:06:58 -==> Parameters: 
2019-03-11 13:06:58 -<==      Total: 1
2019-03-11 13:06:58 -耗时 : 9
2019-03-11 13:06:58 -返回值 : com.bootdo.common.utils.PageUtils@8934844
2019-03-11 13:07:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:07:00 -HTTP METHOD : GET
2019-03-11 13:07:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:07:00 -参数 : []
2019-03-11 13:07:00 -耗时 : 1
2019-03-11 13:07:00 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:07:00 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$bd126f81.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-11 13:08:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 8592 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 13:08:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 13:08:51 -The following profiles are active: dev
2019-03-11 13:08:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40258c2f: startup date [Mon Mar 11 13:08:51 CST 2019]; root of context hierarchy
2019-03-11 13:08:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 13:08:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$febad165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f114000c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 13:08:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 13:08:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:08:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:09:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:09:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 13:09:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 13:09:01 -Starting service [Tomcat]
2019-03-11 13:09:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 13:09:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 13:09:01 -Initializing Spring embedded WebApplicationContext
2019-03-11 13:09:01 -Root WebApplicationContext: initialization completed in 10104 ms
2019-03-11 13:09:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 13:09:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 13:09:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 13:09:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 13:09:02 -Filter xssFilter was not registered (disabled)
2019-03-11 13:09:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 13:09:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 13:09:02 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 13:09:02 -Servlet dispatcherServlet mapped to [/]
2019-03-11 13:09:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40258c2f: startup date [Mon Mar 11 13:08:51 CST 2019]; root of context hierarchy
2019-03-11 13:09:07 -Using default implementation for ThreadExecutor
2019-03-11 13:09:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 13:09:07 -Quartz Scheduler v.2.2.1 created.
2019-03-11 13:09:07 -RAMJobStore initialized.
2019-03-11 13:09:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 13:09:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 13:09:07 -Quartz scheduler version: 2.2.1
2019-03-11 13:09:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@75063bd0
2019-03-11 13:09:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 13:09:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 13:09:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 13:09:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 13:09:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 13:09:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 13:09:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 13:09:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 13:09:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 13:09:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 13:09:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 13:09:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 13:09:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 13:09:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 13:09:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 13:09:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 13:09:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:09:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:09:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 13:09:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 13:09:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 13:09:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 13:09:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 13:09:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 13:09:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 13:09:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 13:09:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:09:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 13:09:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 13:09:11 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 13:09:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:09:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 13:09:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 13:09:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 13:09:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 13:09:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 13:09:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 13:09:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 13:09:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 13:09:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 13:09:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 13:09:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 13:09:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 13:09:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 13:09:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 13:09:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 13:09:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 13:09:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 13:09:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 13:09:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 13:09:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 13:09:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 13:09:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:09:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:09:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 13:09:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 13:09:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 13:09:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 13:09:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 13:09:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 13:09:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 13:09:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 13:09:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 13:09:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 13:09:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 13:09:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 13:09:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 13:09:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 13:09:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 13:09:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:09:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:09:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 13:09:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:09:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 13:09:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 13:09:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 13:09:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 13:09:11 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:09:11 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 13:09:11 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 13:09:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:09:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 13:09:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:09:11 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:09:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 13:09:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:09:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 13:09:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 13:09:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 13:09:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 13:09:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 13:09:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 13:09:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:09:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40258c2f: startup date [Mon Mar 11 13:08:51 CST 2019]; root of context hierarchy
2019-03-11 13:09:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:09:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:09:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:09:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 13:09:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 13:09:15 -Registering beans for JMX exposure on startup
2019-03-11 13:09:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 13:09:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 13:09:15 -Starting beans in phase 2147483647
2019-03-11 13:09:15 -Context refreshed
2019-03-11 13:09:15 -Found 1 custom documentation plugin(s)
2019-03-11 13:09:15 -Scanning for api listing references
2019-03-11 13:09:16 -Generating unique operation named: removeUsingPOST_1
2019-03-11 13:09:16 -Generating unique operation named: addUsingGET_1
2019-03-11 13:09:16 -Generating unique operation named: editUsingGET_1
2019-03-11 13:09:16 -Generating unique operation named: listUsingGET_1
2019-03-11 13:09:16 -Generating unique operation named: removeUsingPOST_2
2019-03-11 13:09:16 -Generating unique operation named: removeUsingPOST_3
2019-03-11 13:09:16 -Generating unique operation named: saveUsingPOST_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingGET_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPOST_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPUT_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 13:09:16 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 13:09:16 -Generating unique operation named: addUsingGET_2
2019-03-11 13:09:16 -Generating unique operation named: editUsingGET_2
2019-03-11 13:09:16 -Generating unique operation named: listUsingGET_2
2019-03-11 13:09:16 -Generating unique operation named: removeUsingPOST_4
2019-03-11 13:09:16 -Generating unique operation named: removeUsingPOST_5
2019-03-11 13:09:16 -Generating unique operation named: saveUsingPOST_2
2019-03-11 13:09:16 -Generating unique operation named: updateUsingGET_2
2019-03-11 13:09:16 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPOST_2
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPUT_2
2019-03-11 13:09:16 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_3
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_3
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_3
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_6
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_7
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_4
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_4
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_4
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_8
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_9
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_5
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_5
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_5
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_10
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_11
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 13:09:17 -Generating unique operation named: ElecUsingGET_1
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_6
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_6
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_6
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_12
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_13
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_7
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_7
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_7
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_8
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_8
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_14
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_15
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_8
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_9
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_9
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_16
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_17
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_9
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_10
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_10
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_18
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_19
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_10
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_11
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_11
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_20
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_21
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingGET_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPOST_11
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPUT_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 13:09:17 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 13:09:17 -Generating unique operation named: addUsingGET_11
2019-03-11 13:09:17 -Generating unique operation named: editUsingGET_12
2019-03-11 13:09:17 -Generating unique operation named: infoUsingGET_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingPOST_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingPUT_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 13:09:17 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 13:09:17 -Generating unique operation named: listUsingGET_12
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_22
2019-03-11 13:09:17 -Generating unique operation named: removeUsingPOST_23
2019-03-11 13:09:17 -Generating unique operation named: saveUsingPOST_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_12
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_13
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_24
2019-03-11 13:09:18 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_12
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_13
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_14
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_25
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_12
2019-03-11 13:09:18 -Generating unique operation named: treeUsingGET_1
2019-03-11 13:09:18 -Generating unique operation named: treeUsingGET_2
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_13
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_13
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_14
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_15
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_26
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_27
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingGET_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_14
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPUT_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 13:09:18 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_14
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_15
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_16
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_28
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_29
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_14
2019-03-11 13:09:18 -Generating unique operation named: updateUsingGET_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_15
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPUT_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 13:09:18 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_15
2019-03-11 13:09:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_16
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_17
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_15
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_16
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_16
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_18
2019-03-11 13:09:18 -Generating unique operation named: listUsingHEAD_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingPOST_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingPUT_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingPATCH_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingDELETE_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingTRACE_1
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_16
2019-03-11 13:09:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_17
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_19
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_30
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_17
2019-03-11 13:09:18 -Generating unique operation named: treeUsingGET_3
2019-03-11 13:09:18 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_17
2019-03-11 13:09:18 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_17
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_18
2019-03-11 13:09:18 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_20
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_31
2019-03-11 13:09:18 -Generating unique operation named: removeUsingPOST_32
2019-03-11 13:09:18 -Generating unique operation named: saveUsingPOST_18
2019-03-11 13:09:18 -Generating unique operation named: updateUsingGET_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPOST_18
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPUT_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 13:09:18 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 13:09:18 -Generating unique operation named: addUsingGET_18
2019-03-11 13:09:18 -Generating unique operation named: editUsingGET_19
2019-03-11 13:09:18 -Generating unique operation named: listUsingGET_21
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_33
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_34
2019-03-11 13:09:19 -Generating unique operation named: saveUsingPOST_19
2019-03-11 13:09:19 -Generating unique operation named: updateUsingGET_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPOST_19
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPUT_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 13:09:19 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 13:09:19 -Generating unique operation named: addUsingGET_19
2019-03-11 13:09:19 -Generating unique operation named: editUsingGET_20
2019-03-11 13:09:19 -Generating unique operation named: listUsingGET_22
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_35
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_36
2019-03-11 13:09:19 -Generating unique operation named: saveUsingPOST_20
2019-03-11 13:09:19 -Generating unique operation named: updateUsingGET_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPOST_20
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPUT_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 13:09:19 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 13:09:19 -Generating unique operation named: addUsingGET_20
2019-03-11 13:09:19 -Generating unique operation named: editUsingGET_21
2019-03-11 13:09:19 -Generating unique operation named: listUsingGET_23
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_37
2019-03-11 13:09:19 -Generating unique operation named: removeUsingPOST_38
2019-03-11 13:09:19 -Generating unique operation named: saveUsingPOST_21
2019-03-11 13:09:19 -Generating unique operation named: updateUsingGET_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPOST_21
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPUT_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 13:09:19 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 13:09:19 -Starting Quartz Scheduler now
2019-03-11 13:09:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 13:09:19 -Starting...
2019-03-11 13:09:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 13:09:19 -Started.
2019-03-11 13:09:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 13:09:19 -Using a shared selector for servlet write/read
2019-03-11 13:09:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 13:09:19 -Started BootdoApplication in 30.531 seconds (JVM running for 32.542)
2019-03-11 13:09:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 13:09:19 -==> Parameters: 
2019-03-11 13:09:19 -<==      Total: 1
2019-03-11 13:10:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-11 13:35:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 13:35:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 13:35:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-03-11 13:35:58 -Enabling session validation scheduler...
2019-03-11 13:35:58 -请求地址 : http://localhost:8081/login;JSESSIONID=2de674dd-d599-4e19-b49b-ddd3cf3d2882
2019-03-11 13:35:58 -HTTP METHOD : GET
2019-03-11 13:35:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 13:35:58 -参数 : [{}]
2019-03-11 13:35:58 -耗时 : 5
2019-03-11 13:35:58 -返回值 : login
2019-03-11 13:35:59 -请求地址 : http://localhost:8081/getVerify
2019-03-11 13:35:59 -HTTP METHOD : GET
2019-03-11 13:35:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 13:35:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ce0611d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5da985a6]
2019-03-11 13:36:00 -5128
2019-03-11 13:36:00 -耗时 : 647
2019-03-11 13:36:00 -返回值 : null
2019-03-11 13:36:15 -请求地址 : http://localhost:8081/login
2019-03-11 13:36:15 -HTTP METHOD : POST
2019-03-11 13:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 13:36:15 -参数 : [admin, 111111, 5128, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59c55d41]
2019-03-11 13:36:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 13:36:15 -==> Parameters: admin(String)
2019-03-11 13:36:15 -<==      Total: 1
2019-03-11 13:36:15 -耗时 : 118
2019-03-11 13:36:15 -返回值 : {msg=操作成功, code=0}
2019-03-11 13:36:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 13:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:15 -==> Parameters: 1(Long), admin(String), 登录(String), 118(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 13:36:15.652(Timestamp)
2019-03-11 13:36:15 -<==    Updates: 1
2019-03-11 13:36:15 -请求地址 : http://localhost:8081/index
2019-03-11 13:36:15 -HTTP METHOD : GET
2019-03-11 13:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 13:36:15 -参数 : [{}]
2019-03-11 13:36:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 13:36:15 -==> Parameters: 1(Long)
2019-03-11 13:36:15 -<==      Total: 45
2019-03-11 13:36:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 13:36:15 -==> Parameters: 138(Long)
2019-03-11 13:36:15 -<==      Total: 1
2019-03-11 13:36:15 -耗时 : 112
2019-03-11 13:36:15 -返回值 : index_v1
2019-03-11 13:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 112(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 13:36:15.893(Timestamp)
2019-03-11 13:36:15 -<==    Updates: 1
2019-03-11 13:36:16 -请求地址 : http://localhost:8081/main
2019-03-11 13:36:16 -HTTP METHOD : GET
2019-03-11 13:36:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:36:16 -参数 : []
2019-03-11 13:36:16 -耗时 : 1
2019-03-11 13:36:16 -返回值 : main
2019-03-11 13:36:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 13:36:16 -HTTP METHOD : GET
2019-03-11 13:36:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 13:36:16 -参数 : []
2019-03-11 13:36:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 13:36:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 13:36:16 -<==      Total: 0
2019-03-11 13:36:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 13:36:16 -==> Parameters: 1(Long), 0(String)
2019-03-11 13:36:16 -<==      Total: 1
2019-03-11 13:36:16 -耗时 : 71
2019-03-11 13:36:16 -返回值 : com.bootdo.common.utils.PageUtils@585af1e5
2019-03-11 13:36:16 -请求地址 : http://localhost:8081/main
2019-03-11 13:36:16 -HTTP METHOD : GET
2019-03-11 13:36:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:36:16 -参数 : []
2019-03-11 13:36:16 -耗时 : 1
2019-03-11 13:36:16 -返回值 : main
2019-03-11 13:36:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 13:36:18 -==> Parameters: 1(Long)
2019-03-11 13:36:18 -<==      Total: 86
2019-03-11 13:36:18 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:36:18 -HTTP METHOD : GET
2019-03-11 13:36:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:36:18 -参数 : []
2019-03-11 13:36:18 -耗时 : 0
2019-03-11 13:36:18 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:36:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:36:19 -HTTP METHOD : GET
2019-03-11 13:36:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:36:19 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:36:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:19 -<==      Total: 3
2019-03-11 13:36:19 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:36:19 -==> Parameters: 
2019-03-11 13:36:19 -<==      Total: 1
2019-03-11 13:36:19 -耗时 : 44
2019-03-11 13:36:19 -返回值 : com.bootdo.common.utils.PageUtils@7bb67a68
2019-03-11 13:36:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:36:19 -HTTP METHOD : GET
2019-03-11 13:36:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:36:19 -参数 : []
2019-03-11 13:36:19 -耗时 : 0
2019-03-11 13:36:19 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:36:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:36:20 -HTTP METHOD : GET
2019-03-11 13:36:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:36:20 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:36:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:20 -{conn-10001, pstmt-20010} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:20 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-11 13:36:20 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-11 13:36:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:20 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-11 13:36:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'(String), null, 2019-03-11 13:36:20.462(Timestamp)
2019-03-11 13:36:20 -<==    Updates: 1
2019-03-11 13:36:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:36:21 -HTTP METHOD : GET
2019-03-11 13:36:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:36:21 -参数 : []
2019-03-11 13:36:21 -耗时 : 1
2019-03-11 13:36:21 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:36:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:36:21 -HTTP METHOD : GET
2019-03-11 13:36:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:36:21 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:36:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:21 -{conn-10001, pstmt-20011} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:21 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-11 13:36:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'(String), null, 2019-03-11 13:36:21.546(Timestamp)
2019-03-11 13:36:21 -<==    Updates: 1
2019-03-11 13:36:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:36:22 -HTTP METHOD : GET
2019-03-11 13:36:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:36:22 -参数 : []
2019-03-11 13:36:22 -耗时 : 0
2019-03-11 13:36:22 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:36:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:36:22 -HTTP METHOD : GET
2019-03-11 13:36:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:36:22 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:36:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:22 -{conn-10001, pstmt-20012} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:22 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-11 13:36:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'(String), null, 2019-03-11 13:36:22.825(Timestamp)
2019-03-11 13:36:22 -<==    Updates: 1
2019-03-11 13:36:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:36:23 -HTTP METHOD : GET
2019-03-11 13:36:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:36:23 -参数 : []
2019-03-11 13:36:23 -耗时 : 0
2019-03-11 13:36:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:36:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:36:23 -HTTP METHOD : GET
2019-03-11 13:36:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:36:23 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:36:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:23 -<==      Total: 3
2019-03-11 13:36:23 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:36:23 -==> Parameters: 
2019-03-11 13:36:23 -<==      Total: 1
2019-03-11 13:36:23 -耗时 : 10
2019-03-11 13:36:23 -返回值 : com.bootdo.common.utils.PageUtils@2e6daac3
2019-03-11 13:36:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:36:24 -HTTP METHOD : GET
2019-03-11 13:36:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:36:24 -参数 : []
2019-03-11 13:36:24 -耗时 : 1
2019-03-11 13:36:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:36:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:36:24 -HTTP METHOD : GET
2019-03-11 13:36:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:36:24 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:36:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:24 -<==      Total: 3
2019-03-11 13:36:24 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:36:24 -==> Parameters: 
2019-03-11 13:36:24 -<==      Total: 1
2019-03-11 13:36:24 -耗时 : 10
2019-03-11 13:36:24 -返回值 : com.bootdo.common.utils.PageUtils@79197acf
2019-03-11 13:36:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:36:25 -HTTP METHOD : GET
2019-03-11 13:36:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:36:25 -参数 : []
2019-03-11 13:36:25 -耗时 : 0
2019-03-11 13:36:25 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:36:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:36:25 -HTTP METHOD : GET
2019-03-11 13:36:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:36:25 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:36:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:25 -{conn-10001, pstmt-20013} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:25 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-11 13:36:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'(String), null, 2019-03-11 13:36:25.623(Timestamp)
2019-03-11 13:36:25 -<==    Updates: 1
2019-03-11 13:36:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:36:26 -HTTP METHOD : GET
2019-03-11 13:36:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:36:26 -参数 : []
2019-03-11 13:36:26 -耗时 : 0
2019-03-11 13:36:26 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:36:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:36:26 -HTTP METHOD : GET
2019-03-11 13:36:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:36:26 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:36:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:26 -{conn-10001, pstmt-20014} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:26 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:20)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:46)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$7890c978.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-11 13:36:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\HeatLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_money' in 'field list'(String), null, 2019-03-11 13:36:26.174(Timestamp)
2019-03-11 13:36:26 -<==    Updates: 1
2019-03-11 13:36:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:36:26 -HTTP METHOD : GET
2019-03-11 13:36:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:36:26 -参数 : []
2019-03-11 13:36:26 -耗时 : 1
2019-03-11 13:36:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:36:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:36:27 -HTTP METHOD : GET
2019-03-11 13:36:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:36:27 -参数 : [{limit=10, offset=0}]
2019-03-11 13:36:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:36:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:36:27 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:36:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:36:27 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy126.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.list(WaterLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:46)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$e18b898b.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-11 13:36:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'water_money' in 'field list'(String), null, 2019-03-11 13:36:27.01(Timestamp)
2019-03-11 13:36:27 -<==    Updates: 1
2019-03-11 13:39:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 3808 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 13:39:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 13:39:17 -The following profiles are active: dev
2019-03-11 13:39:17 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Mon Mar 11 13:39:17 CST 2019]; root of context hierarchy
2019-03-11 13:39:22 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 13:39:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c51c3e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b7756d19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 13:39:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 13:39:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:39:27 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 13:39:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 13:39:27 -Starting service [Tomcat]
2019-03-11 13:39:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 13:39:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 13:39:28 -Initializing Spring embedded WebApplicationContext
2019-03-11 13:39:28 -Root WebApplicationContext: initialization completed in 11097 ms
2019-03-11 13:39:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 13:39:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 13:39:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 13:39:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 13:39:29 -Filter xssFilter was not registered (disabled)
2019-03-11 13:39:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 13:39:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 13:39:29 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 13:39:29 -Servlet dispatcherServlet mapped to [/]
2019-03-11 13:39:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Mon Mar 11 13:39:17 CST 2019]; root of context hierarchy
2019-03-11 13:39:32 -Using default implementation for ThreadExecutor
2019-03-11 13:39:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 13:39:32 -Quartz Scheduler v.2.2.1 created.
2019-03-11 13:39:32 -RAMJobStore initialized.
2019-03-11 13:39:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 13:39:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 13:39:32 -Quartz scheduler version: 2.2.1
2019-03-11 13:39:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6081f330
2019-03-11 13:39:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 13:39:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 13:39:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 13:39:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 13:39:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 13:39:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 13:39:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 13:39:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 13:39:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 13:39:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 13:39:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 13:39:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 13:39:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 13:39:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 13:39:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 13:39:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:39:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 13:39:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:39:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 13:39:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 13:39:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 13:39:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 13:39:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 13:39:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 13:39:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 13:39:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:39:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 13:39:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 13:39:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:39:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:39:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 13:39:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 13:39:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 13:39:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 13:39:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 13:39:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 13:39:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 13:39:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 13:39:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 13:39:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 13:39:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 13:39:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 13:39:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 13:39:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 13:39:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 13:39:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 13:39:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 13:39:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 13:39:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 13:39:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 13:39:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 13:39:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:39:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 13:39:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 13:39:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 13:39:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 13:39:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 13:39:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 13:39:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 13:39:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 13:39:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 13:39:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 13:39:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 13:39:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 13:39:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 13:39:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 13:39:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:39:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:39:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:39:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 13:39:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 13:39:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 13:39:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 13:39:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 13:39:37 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:39:37 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 13:39:37 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 13:39:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:39:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 13:39:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:39:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 13:39:37 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:39:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:39:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 13:39:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 13:39:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 13:39:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 13:39:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 13:39:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 13:39:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:39:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Mon Mar 11 13:39:17 CST 2019]; root of context hierarchy
2019-03-11 13:39:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:39:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:39:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:39:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 13:39:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 13:39:42 -Registering beans for JMX exposure on startup
2019-03-11 13:39:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 13:39:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 13:39:42 -Starting beans in phase 2147483647
2019-03-11 13:39:42 -Context refreshed
2019-03-11 13:39:42 -Found 1 custom documentation plugin(s)
2019-03-11 13:39:42 -Scanning for api listing references
2019-03-11 13:39:43 -Generating unique operation named: removeUsingPOST_1
2019-03-11 13:39:43 -Generating unique operation named: addUsingGET_1
2019-03-11 13:39:43 -Generating unique operation named: editUsingGET_1
2019-03-11 13:39:43 -Generating unique operation named: listUsingGET_1
2019-03-11 13:39:43 -Generating unique operation named: removeUsingPOST_2
2019-03-11 13:39:43 -Generating unique operation named: removeUsingPOST_3
2019-03-11 13:39:43 -Generating unique operation named: saveUsingPOST_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingGET_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingPOST_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingPUT_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 13:39:43 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 13:39:43 -Generating unique operation named: addUsingGET_2
2019-03-11 13:39:43 -Generating unique operation named: editUsingGET_2
2019-03-11 13:39:43 -Generating unique operation named: listUsingGET_2
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_4
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_5
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 13:39:44 -Generating unique operation named: addUsingGET_3
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_3
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_3
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_6
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_7
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 13:39:44 -Generating unique operation named: addUsingGET_4
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_4
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_4
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_8
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_9
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 13:39:44 -Generating unique operation named: addUsingGET_5
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_5
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_5
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_10
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_11
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 13:39:44 -Generating unique operation named: ElecUsingGET_1
2019-03-11 13:39:44 -Generating unique operation named: addUsingGET_6
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_6
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_6
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_12
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_13
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_7
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_7
2019-03-11 13:39:44 -Generating unique operation named: addUsingGET_7
2019-03-11 13:39:44 -Generating unique operation named: editUsingGET_8
2019-03-11 13:39:44 -Generating unique operation named: listUsingGET_8
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_14
2019-03-11 13:39:44 -Generating unique operation named: removeUsingPOST_15
2019-03-11 13:39:44 -Generating unique operation named: saveUsingPOST_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingGET_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPOST_8
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPUT_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 13:39:44 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_8
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_9
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_9
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_16
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_17
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingGET_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPUT_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 13:39:45 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_9
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_10
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_10
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_18
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_19
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingGET_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPUT_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 13:39:45 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_10
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_11
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_11
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_20
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_21
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingGET_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPUT_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 13:39:45 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_11
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_12
2019-03-11 13:39:45 -Generating unique operation named: infoUsingGET_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingPOST_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingPUT_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 13:39:45 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_12
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_22
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_23
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_12
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_13
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_24
2019-03-11 13:39:45 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_12
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_13
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_14
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_25
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_12
2019-03-11 13:39:45 -Generating unique operation named: treeUsingGET_1
2019-03-11 13:39:45 -Generating unique operation named: treeUsingGET_2
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_13
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_13
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_14
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_15
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_26
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_27
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_13
2019-03-11 13:39:45 -Generating unique operation named: updateUsingGET_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_14
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPUT_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 13:39:45 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_14
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_15
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_16
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_28
2019-03-11 13:39:45 -Generating unique operation named: removeUsingPOST_29
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_14
2019-03-11 13:39:45 -Generating unique operation named: updateUsingGET_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_15
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPUT_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 13:39:45 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 13:39:45 -Generating unique operation named: addUsingGET_15
2019-03-11 13:39:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 13:39:45 -Generating unique operation named: editUsingGET_16
2019-03-11 13:39:45 -Generating unique operation named: listUsingGET_17
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_15
2019-03-11 13:39:45 -Generating unique operation named: saveUsingPOST_16
2019-03-11 13:39:45 -Generating unique operation named: updateUsingPOST_16
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_18
2019-03-11 13:39:46 -Generating unique operation named: listUsingHEAD_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingPOST_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingPUT_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingPATCH_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingDELETE_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingTRACE_1
2019-03-11 13:39:46 -Generating unique operation named: addUsingGET_16
2019-03-11 13:39:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 13:39:46 -Generating unique operation named: editUsingGET_17
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_19
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_30
2019-03-11 13:39:46 -Generating unique operation named: saveUsingPOST_17
2019-03-11 13:39:46 -Generating unique operation named: treeUsingGET_3
2019-03-11 13:39:46 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPOST_17
2019-03-11 13:39:46 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 13:39:46 -Generating unique operation named: addUsingGET_17
2019-03-11 13:39:46 -Generating unique operation named: editUsingGET_18
2019-03-11 13:39:46 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_20
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_31
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_32
2019-03-11 13:39:46 -Generating unique operation named: saveUsingPOST_18
2019-03-11 13:39:46 -Generating unique operation named: updateUsingGET_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPOST_18
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPUT_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 13:39:46 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 13:39:46 -Generating unique operation named: addUsingGET_18
2019-03-11 13:39:46 -Generating unique operation named: editUsingGET_19
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_21
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_33
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_34
2019-03-11 13:39:46 -Generating unique operation named: saveUsingPOST_19
2019-03-11 13:39:46 -Generating unique operation named: updateUsingGET_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPOST_19
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPUT_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 13:39:46 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 13:39:46 -Generating unique operation named: addUsingGET_19
2019-03-11 13:39:46 -Generating unique operation named: editUsingGET_20
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_22
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_35
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_36
2019-03-11 13:39:46 -Generating unique operation named: saveUsingPOST_20
2019-03-11 13:39:46 -Generating unique operation named: updateUsingGET_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPOST_20
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPUT_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 13:39:46 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 13:39:46 -Generating unique operation named: addUsingGET_20
2019-03-11 13:39:46 -Generating unique operation named: editUsingGET_21
2019-03-11 13:39:46 -Generating unique operation named: listUsingGET_23
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_37
2019-03-11 13:39:46 -Generating unique operation named: removeUsingPOST_38
2019-03-11 13:39:46 -Generating unique operation named: saveUsingPOST_21
2019-03-11 13:39:46 -Generating unique operation named: updateUsingGET_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPOST_21
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPUT_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 13:39:46 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 13:39:46 -Starting Quartz Scheduler now
2019-03-11 13:39:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 13:39:46 -Starting...
2019-03-11 13:39:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 13:39:46 -Started.
2019-03-11 13:39:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 13:39:46 -Using a shared selector for servlet write/read
2019-03-11 13:39:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 13:39:46 -Started BootdoApplication in 32.738 seconds (JVM running for 34.72)
2019-03-11 13:39:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 13:39:47 -==> Parameters: 
2019-03-11 13:39:47 -<==      Total: 1
2019-03-11 13:40:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 13:40:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 13:40:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2019-03-11 13:40:10 -Enabling session validation scheduler...
2019-03-11 13:40:11 -请求地址 : http://localhost:8081/login;JSESSIONID=74d623d2-bb5c-4130-947b-6f41bc74014b
2019-03-11 13:40:11 -HTTP METHOD : GET
2019-03-11 13:40:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 13:40:11 -参数 : [{}]
2019-03-11 13:40:11 -耗时 : 4
2019-03-11 13:40:11 -返回值 : login
2019-03-11 13:40:12 -请求地址 : http://localhost:8081/getVerify
2019-03-11 13:40:12 -HTTP METHOD : GET
2019-03-11 13:40:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 13:40:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@58072603, org.apache.shiro.web.servlet.ShiroHttpServletResponse@93cd347]
2019-03-11 13:40:13 -2701
2019-03-11 13:40:13 -耗时 : 597
2019-03-11 13:40:13 -返回值 : null
2019-03-11 13:40:18 -请求地址 : http://localhost:8081/login
2019-03-11 13:40:18 -HTTP METHOD : POST
2019-03-11 13:40:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 13:40:18 -参数 : [admin, 111111, 2701, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6eeabbd5]
2019-03-11 13:40:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 13:40:18 -==> Parameters: admin(String)
2019-03-11 13:40:18 -<==      Total: 1
2019-03-11 13:40:18 -耗时 : 108
2019-03-11 13:40:18 -返回值 : {msg=操作成功, code=0}
2019-03-11 13:40:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 13:40:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:40:18 -==> Parameters: 1(Long), admin(String), 登录(String), 110(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 13:40:18.792(Timestamp)
2019-03-11 13:40:18 -请求地址 : http://localhost:8081/index
2019-03-11 13:40:18 -HTTP METHOD : GET
2019-03-11 13:40:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 13:40:18 -参数 : [{}]
2019-03-11 13:40:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 13:40:18 -<==    Updates: 1
2019-03-11 13:40:18 -==> Parameters: 1(Long)
2019-03-11 13:40:19 -<==      Total: 45
2019-03-11 13:40:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 13:40:19 -==> Parameters: 138(Long)
2019-03-11 13:40:19 -<==      Total: 1
2019-03-11 13:40:19 -耗时 : 148
2019-03-11 13:40:19 -返回值 : index_v1
2019-03-11 13:40:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:40:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 149(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 13:40:19.074(Timestamp)
2019-03-11 13:40:19 -<==    Updates: 1
2019-03-11 13:40:19 -请求地址 : http://localhost:8081/main
2019-03-11 13:40:19 -HTTP METHOD : GET
2019-03-11 13:40:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:40:19 -参数 : []
2019-03-11 13:40:19 -耗时 : 1
2019-03-11 13:40:19 -返回值 : main
2019-03-11 13:40:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 13:40:19 -HTTP METHOD : GET
2019-03-11 13:40:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 13:40:19 -参数 : []
2019-03-11 13:40:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 13:40:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 13:40:19 -<==      Total: 0
2019-03-11 13:40:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 13:40:19 -==> Parameters: 1(Long), 0(String)
2019-03-11 13:40:19 -<==      Total: 1
2019-03-11 13:40:19 -耗时 : 43
2019-03-11 13:40:19 -返回值 : com.bootdo.common.utils.PageUtils@2fcc2f22
2019-03-11 13:40:19 -请求地址 : http://localhost:8081/main
2019-03-11 13:40:19 -HTTP METHOD : GET
2019-03-11 13:40:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:40:19 -参数 : []
2019-03-11 13:40:19 -耗时 : 0
2019-03-11 13:40:19 -返回值 : main
2019-03-11 13:40:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 13:40:22 -==> Parameters: 1(Long)
2019-03-11 13:40:22 -<==      Total: 86
2019-03-11 13:40:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:40:22 -HTTP METHOD : GET
2019-03-11 13:40:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:40:22 -参数 : []
2019-03-11 13:40:22 -耗时 : 1
2019-03-11 13:40:22 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:40:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:40:22 -HTTP METHOD : GET
2019-03-11 13:40:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:40:22 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:40:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:22 -<==      Total: 3
2019-03-11 13:40:22 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:40:22 -==> Parameters: 
2019-03-11 13:40:22 -<==      Total: 1
2019-03-11 13:40:22 -耗时 : 72
2019-03-11 13:40:22 -返回值 : com.bootdo.common.utils.PageUtils@44da4392
2019-03-11 13:40:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:40:23 -HTTP METHOD : GET
2019-03-11 13:40:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:40:23 -参数 : []
2019-03-11 13:40:23 -耗时 : 0
2019-03-11 13:40:23 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:40:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:40:23 -HTTP METHOD : GET
2019-03-11 13:40:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:40:23 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:40:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:23 -<==      Total: 3
2019-03-11 13:40:23 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:40:23 -==> Parameters: 
2019-03-11 13:40:23 -<==      Total: 1
2019-03-11 13:40:23 -耗时 : 38
2019-03-11 13:40:23 -返回值 : com.bootdo.common.utils.PageUtils@2aac4f26
2019-03-11 13:40:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:40:25 -HTTP METHOD : GET
2019-03-11 13:40:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:40:25 -参数 : []
2019-03-11 13:40:25 -耗时 : 0
2019-03-11 13:40:25 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:40:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:40:25 -HTTP METHOD : GET
2019-03-11 13:40:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:40:25 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:40:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:25 -<==      Total: 3
2019-03-11 13:40:25 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:40:25 -==> Parameters: 
2019-03-11 13:40:25 -<==      Total: 1
2019-03-11 13:40:25 -耗时 : 28
2019-03-11 13:40:25 -返回值 : com.bootdo.common.utils.PageUtils@147d7f7b
2019-03-11 13:40:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:40:27 -HTTP METHOD : GET
2019-03-11 13:40:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:40:27 -参数 : []
2019-03-11 13:40:27 -耗时 : 0
2019-03-11 13:40:27 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:40:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:40:27 -HTTP METHOD : GET
2019-03-11 13:40:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:40:27 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:40:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:27 -<==      Total: 3
2019-03-11 13:40:27 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:40:27 -==> Parameters: 
2019-03-11 13:40:27 -<==      Total: 1
2019-03-11 13:40:27 -耗时 : 14
2019-03-11 13:40:27 -返回值 : com.bootdo.common.utils.PageUtils@17212b33
2019-03-11 13:40:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:40:28 -HTTP METHOD : GET
2019-03-11 13:40:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:40:28 -参数 : []
2019-03-11 13:40:28 -耗时 : 0
2019-03-11 13:40:28 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:40:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:40:28 -HTTP METHOD : GET
2019-03-11 13:40:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:40:28 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:40:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:28 -<==      Total: 3
2019-03-11 13:40:28 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:40:28 -==> Parameters: 
2019-03-11 13:40:28 -<==      Total: 1
2019-03-11 13:40:28 -耗时 : 12
2019-03-11 13:40:28 -返回值 : com.bootdo.common.utils.PageUtils@31c06b8a
2019-03-11 13:40:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:40:29 -HTTP METHOD : GET
2019-03-11 13:40:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:40:29 -参数 : []
2019-03-11 13:40:29 -耗时 : 1
2019-03-11 13:40:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:40:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:40:30 -HTTP METHOD : GET
2019-03-11 13:40:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:40:30 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:40:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:30 -<==      Total: 3
2019-03-11 13:40:30 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:40:30 -==> Parameters: 
2019-03-11 13:40:30 -<==      Total: 1
2019-03-11 13:40:30 -耗时 : 10
2019-03-11 13:40:30 -返回值 : com.bootdo.common.utils.PageUtils@36370f23
2019-03-11 13:40:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:40:30 -HTTP METHOD : GET
2019-03-11 13:40:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:40:30 -参数 : []
2019-03-11 13:40:30 -耗时 : 1
2019-03-11 13:40:30 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:40:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:40:30 -HTTP METHOD : GET
2019-03-11 13:40:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:40:30 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:40:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:30 -<==      Total: 3
2019-03-11 13:40:30 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:40:30 -==> Parameters: 
2019-03-11 13:40:30 -<==      Total: 1
2019-03-11 13:40:30 -耗时 : 7
2019-03-11 13:40:30 -返回值 : com.bootdo.common.utils.PageUtils@25b5729d
2019-03-11 13:40:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:40:31 -HTTP METHOD : GET
2019-03-11 13:40:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:40:31 -参数 : []
2019-03-11 13:40:31 -耗时 : 0
2019-03-11 13:40:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:40:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:40:31 -HTTP METHOD : GET
2019-03-11 13:40:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:40:31 -参数 : [{limit=10, offset=0}]
2019-03-11 13:40:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:40:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:40:31 -<==      Total: 3
2019-03-11 13:40:31 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:40:31 -==> Parameters: 
2019-03-11 13:40:31 -<==      Total: 1
2019-03-11 13:40:31 -耗时 : 9
2019-03-11 13:40:31 -返回值 : com.bootdo.common.utils.PageUtils@374226b3
2019-03-11 13:40:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/2
2019-03-11 13:40:32 -HTTP METHOD : GET
2019-03-11 13:40:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-11 13:40:32 -参数 : [2, {}]
2019-03-11 13:40:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-11 13:40:32 -==> Parameters: 2(Long)
2019-03-11 13:40:32 -<==      Total: 1
2019-03-11 13:40:32 -耗时 : 8
2019-03-11 13:40:32 -返回值 : moneyLog/heatLog/edit
2019-03-11 13:40:33 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "moneyLog/heatLog/edit": An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "elecLog.id" (template: "moneyLog/heatLog/edit" - line 12, col 32)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "elecLog.id" (template: "moneyLog/heatLog/edit" - line 12, col 32)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-11 13:40:33 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:40:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-11 13:40:36 -HTTP METHOD : GET
2019-03-11 13:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-11 13:40:36 -参数 : []
2019-03-11 13:40:36 -耗时 : 0
2019-03-11 13:40:36 -返回值 : moneyLog/heatLog/add
2019-03-11 13:40:38 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-11 13:40:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/2
2019-03-11 13:40:39 -HTTP METHOD : GET
2019-03-11 13:40:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-11 13:40:39 -参数 : [2, {}]
2019-03-11 13:40:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-11 13:40:39 -==> Parameters: 2(Long)
2019-03-11 13:40:39 -<==      Total: 1
2019-03-11 13:40:39 -耗时 : 5
2019-03-11 13:40:39 -返回值 : moneyLog/heatLog/edit
2019-03-11 13:40:39 -[THYMELEAF][http-nio-8081-exec-8] Exception processing template "moneyLog/heatLog/edit": An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "elecLog.id" (template: "moneyLog/heatLog/edit" - line 12, col 32)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "elecLog.id" (template: "moneyLog/heatLog/edit" - line 12, col 32)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-03-11 13:40:39 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/heatLog/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-11 13:44:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 11968 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 13:44:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 13:44:08 -The following profiles are active: dev
2019-03-11 13:44:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41813449: startup date [Mon Mar 11 13:44:09 CST 2019]; root of context hierarchy
2019-03-11 13:44:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 13:44:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61cf0214] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$542830bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 13:44:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 13:44:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 13:44:19 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 13:44:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 13:44:19 -Starting service [Tomcat]
2019-03-11 13:44:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 13:44:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 13:44:19 -Initializing Spring embedded WebApplicationContext
2019-03-11 13:44:19 -Root WebApplicationContext: initialization completed in 10892 ms
2019-03-11 13:44:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 13:44:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 13:44:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 13:44:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 13:44:20 -Filter xssFilter was not registered (disabled)
2019-03-11 13:44:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 13:44:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 13:44:20 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 13:44:20 -Servlet dispatcherServlet mapped to [/]
2019-03-11 13:44:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41813449: startup date [Mon Mar 11 13:44:09 CST 2019]; root of context hierarchy
2019-03-11 13:44:23 -Using default implementation for ThreadExecutor
2019-03-11 13:44:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 13:44:24 -Quartz Scheduler v.2.2.1 created.
2019-03-11 13:44:24 -RAMJobStore initialized.
2019-03-11 13:44:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 13:44:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 13:44:24 -Quartz scheduler version: 2.2.1
2019-03-11 13:44:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3ca3eba2
2019-03-11 13:44:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 13:44:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 13:44:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 13:44:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 13:44:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 13:44:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 13:44:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 13:44:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 13:44:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 13:44:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 13:44:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 13:44:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 13:44:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 13:44:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 13:44:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 13:44:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:44:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 13:44:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 13:44:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 13:44:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 13:44:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 13:44:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 13:44:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 13:44:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 13:44:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 13:44:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:44:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 13:44:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 13:44:28 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 13:44:28 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 13:44:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:44:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 13:44:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 13:44:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 13:44:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 13:44:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 13:44:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 13:44:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 13:44:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 13:44:28 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 13:44:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 13:44:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 13:44:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 13:44:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 13:44:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 13:44:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 13:44:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 13:44:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 13:44:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 13:44:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 13:44:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 13:44:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 13:44:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 13:44:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 13:44:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 13:44:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:44:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 13:44:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 13:44:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 13:44:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 13:44:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 13:44:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 13:44:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 13:44:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 13:44:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 13:44:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 13:44:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 13:44:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 13:44:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 13:44:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 13:44:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 13:44:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:44:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 13:44:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 13:44:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:44:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 13:44:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 13:44:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 13:44:28 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 13:44:28 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 13:44:28 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 13:44:28 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 13:44:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 13:44:28 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 13:44:28 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 13:44:28 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 13:44:28 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 13:44:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 13:44:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 13:44:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 13:44:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 13:44:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 13:44:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 13:44:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 13:44:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:44:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41813449: startup date [Mon Mar 11 13:44:09 CST 2019]; root of context hierarchy
2019-03-11 13:44:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:44:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:44:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 13:44:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 13:44:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 13:44:33 -Registering beans for JMX exposure on startup
2019-03-11 13:44:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 13:44:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 13:44:33 -Starting beans in phase 2147483647
2019-03-11 13:44:33 -Context refreshed
2019-03-11 13:44:33 -Found 1 custom documentation plugin(s)
2019-03-11 13:44:33 -Scanning for api listing references
2019-03-11 13:44:33 -Generating unique operation named: removeUsingPOST_1
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_1
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_1
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_1
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_2
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_3
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 13:44:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_2
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_2
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_2
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_4
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_5
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 13:44:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_3
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_3
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_3
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_6
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_7
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 13:44:34 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_4
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_4
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_4
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_8
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_9
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 13:44:34 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_5
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_5
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_5
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_10
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_11
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 13:44:34 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 13:44:34 -Generating unique operation named: ElecUsingGET_1
2019-03-11 13:44:34 -Generating unique operation named: addUsingGET_6
2019-03-11 13:44:34 -Generating unique operation named: editUsingGET_6
2019-03-11 13:44:34 -Generating unique operation named: listUsingGET_6
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_12
2019-03-11 13:44:34 -Generating unique operation named: removeUsingPOST_13
2019-03-11 13:44:34 -Generating unique operation named: saveUsingPOST_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingGET_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPOST_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPUT_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 13:44:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 13:44:35 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_7
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_7
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_7
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_8
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_8
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_14
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_15
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingGET_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPUT_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 13:44:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_8
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_9
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_9
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_16
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_17
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingGET_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPUT_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 13:44:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_9
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_10
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_10
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_18
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_19
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingGET_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPUT_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 13:44:35 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_10
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_11
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_11
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_20
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_21
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingGET_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_11
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPUT_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 13:44:35 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_11
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_12
2019-03-11 13:44:35 -Generating unique operation named: infoUsingGET_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingPOST_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingPUT_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 13:44:35 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_12
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_22
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_23
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_11
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_12
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_13
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_24
2019-03-11 13:44:35 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_12
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_13
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_14
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_25
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_12
2019-03-11 13:44:35 -Generating unique operation named: treeUsingGET_1
2019-03-11 13:44:35 -Generating unique operation named: treeUsingGET_2
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_13
2019-03-11 13:44:35 -Generating unique operation named: addUsingGET_13
2019-03-11 13:44:35 -Generating unique operation named: editUsingGET_14
2019-03-11 13:44:35 -Generating unique operation named: listUsingGET_15
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_26
2019-03-11 13:44:35 -Generating unique operation named: removeUsingPOST_27
2019-03-11 13:44:35 -Generating unique operation named: saveUsingPOST_13
2019-03-11 13:44:35 -Generating unique operation named: updateUsingGET_11
2019-03-11 13:44:35 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 13:44:35 -Generating unique operation named: updateUsingPOST_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPUT_11
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 13:44:36 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 13:44:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 13:44:36 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_14
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_15
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_16
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_28
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_29
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingGET_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPUT_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 13:44:36 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_15
2019-03-11 13:44:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_16
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_17
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_15
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_16
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_16
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_18
2019-03-11 13:44:36 -Generating unique operation named: listUsingHEAD_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingPOST_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingPUT_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingPATCH_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingDELETE_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingTRACE_1
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_16
2019-03-11 13:44:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_17
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_19
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_30
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_17
2019-03-11 13:44:36 -Generating unique operation named: treeUsingGET_3
2019-03-11 13:44:36 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_17
2019-03-11 13:44:36 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_17
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_18
2019-03-11 13:44:36 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_20
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_31
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_32
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_18
2019-03-11 13:44:36 -Generating unique operation named: updateUsingGET_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_18
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPUT_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 13:44:36 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_18
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_19
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_21
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_33
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_34
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_19
2019-03-11 13:44:36 -Generating unique operation named: updateUsingGET_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_19
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPUT_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 13:44:36 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_19
2019-03-11 13:44:36 -Generating unique operation named: editUsingGET_20
2019-03-11 13:44:36 -Generating unique operation named: listUsingGET_22
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_35
2019-03-11 13:44:36 -Generating unique operation named: removeUsingPOST_36
2019-03-11 13:44:36 -Generating unique operation named: saveUsingPOST_20
2019-03-11 13:44:36 -Generating unique operation named: updateUsingGET_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPOST_20
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPUT_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 13:44:36 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 13:44:36 -Generating unique operation named: addUsingGET_20
2019-03-11 13:44:37 -Generating unique operation named: editUsingGET_21
2019-03-11 13:44:37 -Generating unique operation named: listUsingGET_23
2019-03-11 13:44:37 -Generating unique operation named: removeUsingPOST_37
2019-03-11 13:44:37 -Generating unique operation named: removeUsingPOST_38
2019-03-11 13:44:37 -Generating unique operation named: saveUsingPOST_21
2019-03-11 13:44:37 -Generating unique operation named: updateUsingGET_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingPOST_21
2019-03-11 13:44:37 -Generating unique operation named: updateUsingPUT_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 13:44:37 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 13:44:37 -Starting Quartz Scheduler now
2019-03-11 13:44:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 13:44:37 -Starting...
2019-03-11 13:44:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 13:44:37 -Started.
2019-03-11 13:44:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 13:44:37 -Using a shared selector for servlet write/read
2019-03-11 13:44:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 13:44:37 -Started BootdoApplication in 31.11 seconds (JVM running for 32.823)
2019-03-11 13:44:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 13:44:37 -==> Parameters: 
2019-03-11 13:44:37 -<==      Total: 1
2019-03-11 13:44:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 13:44:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 13:44:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-03-11 13:44:49 -Enabling session validation scheduler...
2019-03-11 13:44:49 -请求地址 : http://localhost:8081/login;JSESSIONID=f86b17a1-3285-448c-8612-d55486ee2bd6
2019-03-11 13:44:49 -HTTP METHOD : GET
2019-03-11 13:44:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 13:44:49 -参数 : [{}]
2019-03-11 13:44:49 -耗时 : 8
2019-03-11 13:44:49 -返回值 : login
2019-03-11 13:44:51 -请求地址 : http://localhost:8081/getVerify
2019-03-11 13:44:51 -HTTP METHOD : GET
2019-03-11 13:44:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 13:44:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3390f0db, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37af6271]
2019-03-11 13:44:51 -6055
2019-03-11 13:44:51 -耗时 : 733
2019-03-11 13:44:51 -返回值 : null
2019-03-11 13:44:56 -请求地址 : http://localhost:8081/login
2019-03-11 13:44:56 -HTTP METHOD : POST
2019-03-11 13:44:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 13:44:56 -参数 : [admin, 111111, 6055, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f1a6120]
2019-03-11 13:44:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 13:44:56 -==> Parameters: admin(String)
2019-03-11 13:44:56 -<==      Total: 1
2019-03-11 13:44:56 -耗时 : 131
2019-03-11 13:44:56 -返回值 : {msg=操作成功, code=0}
2019-03-11 13:44:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 13:44:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:44:57 -==> Parameters: 1(Long), admin(String), 登录(String), 132(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 13:44:56.992(Timestamp)
2019-03-11 13:44:57 -请求地址 : http://localhost:8081/index
2019-03-11 13:44:57 -HTTP METHOD : GET
2019-03-11 13:44:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 13:44:57 -参数 : [{}]
2019-03-11 13:44:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 13:44:57 -<==    Updates: 1
2019-03-11 13:44:57 -==> Parameters: 1(Long)
2019-03-11 13:44:57 -<==      Total: 45
2019-03-11 13:44:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 13:44:57 -==> Parameters: 138(Long)
2019-03-11 13:44:57 -<==      Total: 1
2019-03-11 13:44:57 -耗时 : 152
2019-03-11 13:44:57 -返回值 : index_v1
2019-03-11 13:44:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 13:44:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 152(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 13:44:57.262(Timestamp)
2019-03-11 13:44:57 -<==    Updates: 1
2019-03-11 13:44:57 -请求地址 : http://localhost:8081/main
2019-03-11 13:44:57 -HTTP METHOD : GET
2019-03-11 13:44:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:44:57 -参数 : []
2019-03-11 13:44:57 -耗时 : 1
2019-03-11 13:44:57 -返回值 : main
2019-03-11 13:44:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 13:44:57 -HTTP METHOD : GET
2019-03-11 13:44:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 13:44:57 -参数 : []
2019-03-11 13:44:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 13:44:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 13:44:57 -<==      Total: 0
2019-03-11 13:44:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 13:44:57 -==> Parameters: 1(Long), 0(String)
2019-03-11 13:44:57 -<==      Total: 1
2019-03-11 13:44:57 -耗时 : 64
2019-03-11 13:44:57 -返回值 : com.bootdo.common.utils.PageUtils@74d44d18
2019-03-11 13:44:57 -请求地址 : http://localhost:8081/main
2019-03-11 13:44:57 -HTTP METHOD : GET
2019-03-11 13:44:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 13:44:57 -参数 : []
2019-03-11 13:44:57 -耗时 : 0
2019-03-11 13:44:57 -返回值 : main
2019-03-11 13:44:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 13:44:59 -==> Parameters: 1(Long)
2019-03-11 13:44:59 -<==      Total: 86
2019-03-11 13:44:59 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:44:59 -HTTP METHOD : GET
2019-03-11 13:44:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:44:59 -参数 : []
2019-03-11 13:44:59 -耗时 : 0
2019-03-11 13:44:59 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:44:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:44:59 -HTTP METHOD : GET
2019-03-11 13:44:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:44:59 -参数 : [{limit=10, offset=0}]
2019-03-11 13:44:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:44:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:44:59 -<==      Total: 3
2019-03-11 13:44:59 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:44:59 -==> Parameters: 
2019-03-11 13:44:59 -<==      Total: 1
2019-03-11 13:44:59 -耗时 : 33
2019-03-11 13:44:59 -返回值 : com.bootdo.common.utils.PageUtils@1e29cddd
2019-03-11 13:45:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:00 -HTTP METHOD : GET
2019-03-11 13:45:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:00 -参数 : []
2019-03-11 13:45:00 -耗时 : 1
2019-03-11 13:45:00 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:00 -HTTP METHOD : GET
2019-03-11 13:45:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:00 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:00 -<==      Total: 3
2019-03-11 13:45:00 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:00 -==> Parameters: 
2019-03-11 13:45:00 -<==      Total: 1
2019-03-11 13:45:00 -耗时 : 34
2019-03-11 13:45:00 -返回值 : com.bootdo.common.utils.PageUtils@491a2e9d
2019-03-11 13:45:00 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:45:00 -HTTP METHOD : GET
2019-03-11 13:45:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:45:00 -参数 : []
2019-03-11 13:45:00 -耗时 : 1
2019-03-11 13:45:00 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:45:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:45:01 -HTTP METHOD : GET
2019-03-11 13:45:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:45:01 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:45:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:01 -<==      Total: 3
2019-03-11 13:45:01 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:45:01 -==> Parameters: 
2019-03-11 13:45:01 -<==      Total: 1
2019-03-11 13:45:01 -耗时 : 39
2019-03-11 13:45:01 -返回值 : com.bootdo.common.utils.PageUtils@b7f39b5
2019-03-11 13:45:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:01 -HTTP METHOD : GET
2019-03-11 13:45:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:01 -参数 : []
2019-03-11 13:45:01 -耗时 : 1
2019-03-11 13:45:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:02 -HTTP METHOD : GET
2019-03-11 13:45:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:02 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:02 -<==      Total: 3
2019-03-11 13:45:02 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:02 -==> Parameters: 
2019-03-11 13:45:02 -<==      Total: 1
2019-03-11 13:45:02 -耗时 : 12
2019-03-11 13:45:02 -返回值 : com.bootdo.common.utils.PageUtils@202c0059
2019-03-11 13:45:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:45:02 -HTTP METHOD : GET
2019-03-11 13:45:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:45:02 -参数 : []
2019-03-11 13:45:02 -耗时 : 0
2019-03-11 13:45:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:45:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:45:02 -HTTP METHOD : GET
2019-03-11 13:45:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:45:02 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:45:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:02 -<==      Total: 3
2019-03-11 13:45:02 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:45:02 -==> Parameters: 
2019-03-11 13:45:02 -<==      Total: 1
2019-03-11 13:45:02 -耗时 : 10
2019-03-11 13:45:02 -返回值 : com.bootdo.common.utils.PageUtils@4a7f05e9
2019-03-11 13:45:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:03 -HTTP METHOD : GET
2019-03-11 13:45:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:03 -参数 : []
2019-03-11 13:45:03 -耗时 : 1
2019-03-11 13:45:03 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:03 -HTTP METHOD : GET
2019-03-11 13:45:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:03 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:03 -<==      Total: 3
2019-03-11 13:45:03 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:03 -==> Parameters: 
2019-03-11 13:45:03 -<==      Total: 1
2019-03-11 13:45:03 -耗时 : 10
2019-03-11 13:45:03 -返回值 : com.bootdo.common.utils.PageUtils@448179e6
2019-03-11 13:45:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:45:03 -HTTP METHOD : GET
2019-03-11 13:45:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:45:03 -参数 : []
2019-03-11 13:45:03 -耗时 : 0
2019-03-11 13:45:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:45:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:45:04 -HTTP METHOD : GET
2019-03-11 13:45:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:45:04 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:45:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:04 -<==      Total: 3
2019-03-11 13:45:04 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:45:04 -==> Parameters: 
2019-03-11 13:45:04 -<==      Total: 1
2019-03-11 13:45:04 -耗时 : 8
2019-03-11 13:45:04 -返回值 : com.bootdo.common.utils.PageUtils@278b3899
2019-03-11 13:45:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-11 13:45:05 -HTTP METHOD : GET
2019-03-11 13:45:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-11 13:45:05 -参数 : [1, {}]
2019-03-11 13:45:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-11 13:45:05 -==> Parameters: 1(Long)
2019-03-11 13:45:05 -<==      Total: 1
2019-03-11 13:45:05 -耗时 : 12
2019-03-11 13:45:05 -返回值 : moneyLog/elecLog/edit
2019-03-11 13:45:05 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-11 13:45:05 -HTTP METHOD : GET
2019-03-11 13:45:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:05 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-11 13:45:05 -HTTP METHOD : GET
2019-03-11 13:45:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:05 -参数 : [userOrg]
2019-03-11 13:45:05 -参数 : [userArea]
2019-03-11 13:45:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 13:45:05 -HTTP METHOD : GET
2019-03-11 13:45:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:05 -参数 : [userType]
2019-03-11 13:45:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:05 -==> Parameters: userOrg(String)
2019-03-11 13:45:05 -==> Parameters: userType(String)
2019-03-11 13:45:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:05 -==> Parameters: userArea(String)
2019-03-11 13:45:05 -<==      Total: 0
2019-03-11 13:45:05 -耗时 : 53
2019-03-11 13:45:05 -返回值 : []
2019-03-11 13:45:05 -<==      Total: 2
2019-03-11 13:45:05 -耗时 : 56
2019-03-11 13:45:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 13:45:05 -<==      Total: 0
2019-03-11 13:45:05 -耗时 : 73
2019-03-11 13:45:05 -返回值 : []
2019-03-11 13:45:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:09 -HTTP METHOD : GET
2019-03-11 13:45:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:09 -参数 : []
2019-03-11 13:45:09 -耗时 : 1
2019-03-11 13:45:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:09 -HTTP METHOD : GET
2019-03-11 13:45:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:09 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:09 -<==      Total: 3
2019-03-11 13:45:09 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:09 -==> Parameters: 
2019-03-11 13:45:09 -<==      Total: 1
2019-03-11 13:45:09 -耗时 : 13
2019-03-11 13:45:09 -返回值 : com.bootdo.common.utils.PageUtils@58268b49
2019-03-11 13:45:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-11 13:45:10 -HTTP METHOD : GET
2019-03-11 13:45:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-11 13:45:10 -参数 : []
2019-03-11 13:45:10 -耗时 : 0
2019-03-11 13:45:10 -返回值 : moneyLog/heatLog/add
2019-03-11 13:45:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/2
2019-03-11 13:45:16 -HTTP METHOD : GET
2019-03-11 13:45:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-11 13:45:16 -参数 : [2, {}]
2019-03-11 13:45:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-11 13:45:16 -==> Parameters: 2(Long)
2019-03-11 13:45:16 -<==      Total: 1
2019-03-11 13:45:16 -耗时 : 7
2019-03-11 13:45:16 -返回值 : moneyLog/heatLog/edit
2019-03-11 13:45:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 13:45:16 -HTTP METHOD : GET
2019-03-11 13:45:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:16 -参数 : [userType]
2019-03-11 13:45:16 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-11 13:45:16 -HTTP METHOD : GET
2019-03-11 13:45:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:16 -参数 : [userArea]
2019-03-11 13:45:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:16 -==> Parameters: userType(String)
2019-03-11 13:45:16 -==> Parameters: userArea(String)
2019-03-11 13:45:16 -<==      Total: 0
2019-03-11 13:45:16 -耗时 : 4
2019-03-11 13:45:16 -返回值 : []
2019-03-11 13:45:16 -<==      Total: 2
2019-03-11 13:45:16 -耗时 : 7
2019-03-11 13:45:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 13:45:16 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-11 13:45:16 -HTTP METHOD : GET
2019-03-11 13:45:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:16 -参数 : [userOrg]
2019-03-11 13:45:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:16 -==> Parameters: userOrg(String)
2019-03-11 13:45:16 -<==      Total: 0
2019-03-11 13:45:16 -耗时 : 5
2019-03-11 13:45:16 -返回值 : []
2019-03-11 13:45:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:45:26 -HTTP METHOD : GET
2019-03-11 13:45:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:45:26 -参数 : []
2019-03-11 13:45:26 -耗时 : 0
2019-03-11 13:45:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:45:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:45:26 -HTTP METHOD : GET
2019-03-11 13:45:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:45:26 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:45:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:26 -<==      Total: 3
2019-03-11 13:45:26 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:45:26 -==> Parameters: 
2019-03-11 13:45:26 -<==      Total: 1
2019-03-11 13:45:26 -耗时 : 12
2019-03-11 13:45:26 -返回值 : com.bootdo.common.utils.PageUtils@40478afc
2019-03-11 13:45:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-03-11 13:45:27 -HTTP METHOD : GET
2019-03-11 13:45:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-03-11 13:45:27 -参数 : [1, {}]
2019-03-11 13:45:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-03-11 13:45:27 -==> Parameters: 1(Long)
2019-03-11 13:45:27 -<==      Total: 1
2019-03-11 13:45:27 -耗时 : 8
2019-03-11 13:45:27 -返回值 : moneyLog/waterLog/edit
2019-03-11 13:45:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 13:45:27 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-11 13:45:27 -HTTP METHOD : GET
2019-03-11 13:45:27 -HTTP METHOD : GET
2019-03-11 13:45:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:27 -参数 : [userType]
2019-03-11 13:45:27 -参数 : [userArea]
2019-03-11 13:45:27 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-11 13:45:27 -HTTP METHOD : GET
2019-03-11 13:45:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:45:27 -参数 : [userOrg]
2019-03-11 13:45:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:45:27 -==> Parameters: userType(String)
2019-03-11 13:45:27 -==> Parameters: userArea(String)
2019-03-11 13:45:27 -==> Parameters: userOrg(String)
2019-03-11 13:45:27 -<==      Total: 0
2019-03-11 13:45:27 -<==      Total: 0
2019-03-11 13:45:27 -耗时 : 2
2019-03-11 13:45:27 -耗时 : 3
2019-03-11 13:45:27 -返回值 : []
2019-03-11 13:45:27 -返回值 : []
2019-03-11 13:45:27 -<==      Total: 2
2019-03-11 13:45:27 -耗时 : 4
2019-03-11 13:45:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 13:45:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-11 13:45:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:54 -HTTP METHOD : GET
2019-03-11 13:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:54 -参数 : []
2019-03-11 13:45:54 -耗时 : 0
2019-03-11 13:45:54 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:54 -HTTP METHOD : GET
2019-03-11 13:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:54 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:54 -<==      Total: 3
2019-03-11 13:45:54 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:54 -==> Parameters: 
2019-03-11 13:45:54 -<==      Total: 1
2019-03-11 13:45:54 -耗时 : 16
2019-03-11 13:45:54 -返回值 : com.bootdo.common.utils.PageUtils@59a04ab9
2019-03-11 13:45:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:45:54 -HTTP METHOD : GET
2019-03-11 13:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:45:54 -参数 : []
2019-03-11 13:45:54 -耗时 : 1
2019-03-11 13:45:54 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:45:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:45:54 -HTTP METHOD : GET
2019-03-11 13:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:45:54 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:45:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:54 -<==      Total: 3
2019-03-11 13:45:55 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:45:55 -==> Parameters: 
2019-03-11 13:45:55 -<==      Total: 1
2019-03-11 13:45:55 -耗时 : 68
2019-03-11 13:45:55 -返回值 : com.bootdo.common.utils.PageUtils@3d97a88d
2019-03-11 13:45:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:55 -HTTP METHOD : GET
2019-03-11 13:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:55 -参数 : []
2019-03-11 13:45:55 -耗时 : 1
2019-03-11 13:45:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:55 -HTTP METHOD : GET
2019-03-11 13:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:55 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:55 -<==      Total: 3
2019-03-11 13:45:55 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:55 -==> Parameters: 
2019-03-11 13:45:55 -<==      Total: 1
2019-03-11 13:45:55 -耗时 : 8
2019-03-11 13:45:55 -返回值 : com.bootdo.common.utils.PageUtils@562eb730
2019-03-11 13:45:55 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:45:55 -HTTP METHOD : GET
2019-03-11 13:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:45:55 -参数 : []
2019-03-11 13:45:55 -耗时 : 0
2019-03-11 13:45:55 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:45:55 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:45:55 -HTTP METHOD : GET
2019-03-11 13:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:45:55 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:45:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:55 -<==      Total: 3
2019-03-11 13:45:55 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:45:55 -==> Parameters: 
2019-03-11 13:45:55 -<==      Total: 1
2019-03-11 13:45:55 -耗时 : 12
2019-03-11 13:45:55 -返回值 : com.bootdo.common.utils.PageUtils@436d25c4
2019-03-11 13:45:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:56 -HTTP METHOD : GET
2019-03-11 13:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:56 -参数 : []
2019-03-11 13:45:56 -耗时 : 1
2019-03-11 13:45:56 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:56 -HTTP METHOD : GET
2019-03-11 13:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:56 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:56 -<==      Total: 3
2019-03-11 13:45:56 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:56 -==> Parameters: 
2019-03-11 13:45:56 -<==      Total: 1
2019-03-11 13:45:56 -耗时 : 9
2019-03-11 13:45:56 -返回值 : com.bootdo.common.utils.PageUtils@6eb6ca7f
2019-03-11 13:45:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:45:56 -HTTP METHOD : GET
2019-03-11 13:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:45:56 -参数 : []
2019-03-11 13:45:56 -耗时 : 1
2019-03-11 13:45:56 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:45:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:45:56 -HTTP METHOD : GET
2019-03-11 13:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:45:56 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:45:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:56 -<==      Total: 3
2019-03-11 13:45:56 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:45:56 -==> Parameters: 
2019-03-11 13:45:56 -<==      Total: 1
2019-03-11 13:45:56 -耗时 : 8
2019-03-11 13:45:56 -返回值 : com.bootdo.common.utils.PageUtils@3776296f
2019-03-11 13:45:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:57 -HTTP METHOD : GET
2019-03-11 13:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:57 -参数 : []
2019-03-11 13:45:57 -耗时 : 1
2019-03-11 13:45:57 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:57 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:57 -HTTP METHOD : GET
2019-03-11 13:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:57 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:57 -<==      Total: 3
2019-03-11 13:45:57 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:57 -==> Parameters: 
2019-03-11 13:45:57 -<==      Total: 1
2019-03-11 13:45:57 -耗时 : 8
2019-03-11 13:45:57 -返回值 : com.bootdo.common.utils.PageUtils@88dde50
2019-03-11 13:45:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:45:57 -HTTP METHOD : GET
2019-03-11 13:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:45:57 -参数 : []
2019-03-11 13:45:57 -耗时 : 0
2019-03-11 13:45:57 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:45:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:45:57 -HTTP METHOD : GET
2019-03-11 13:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:45:57 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:45:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:57 -<==      Total: 3
2019-03-11 13:45:57 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:45:57 -==> Parameters: 
2019-03-11 13:45:57 -<==      Total: 1
2019-03-11 13:45:57 -耗时 : 13
2019-03-11 13:45:57 -返回值 : com.bootdo.common.utils.PageUtils@3e071686
2019-03-11 13:45:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:45:58 -HTTP METHOD : GET
2019-03-11 13:45:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:45:58 -参数 : []
2019-03-11 13:45:58 -耗时 : 1
2019-03-11 13:45:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:45:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:45:58 -HTTP METHOD : GET
2019-03-11 13:45:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:45:58 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:45:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:58 -<==      Total: 3
2019-03-11 13:45:58 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:45:58 -==> Parameters: 
2019-03-11 13:45:58 -<==      Total: 1
2019-03-11 13:45:58 -耗时 : 8
2019-03-11 13:45:58 -返回值 : com.bootdo.common.utils.PageUtils@3d664f23
2019-03-11 13:45:59 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:45:59 -HTTP METHOD : GET
2019-03-11 13:45:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:45:59 -参数 : []
2019-03-11 13:45:59 -耗时 : 1
2019-03-11 13:45:59 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:45:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:45:59 -HTTP METHOD : GET
2019-03-11 13:45:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:45:59 -参数 : [{limit=10, offset=0}]
2019-03-11 13:45:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:45:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:45:59 -<==      Total: 3
2019-03-11 13:45:59 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:45:59 -==> Parameters: 
2019-03-11 13:45:59 -<==      Total: 1
2019-03-11 13:45:59 -耗时 : 10
2019-03-11 13:45:59 -返回值 : com.bootdo.common.utils.PageUtils@a269616
2019-03-11 13:46:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:00 -HTTP METHOD : GET
2019-03-11 13:46:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:00 -参数 : []
2019-03-11 13:46:00 -耗时 : 0
2019-03-11 13:46:00 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:00 -HTTP METHOD : GET
2019-03-11 13:46:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:00 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:00 -<==      Total: 3
2019-03-11 13:46:00 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:00 -==> Parameters: 
2019-03-11 13:46:00 -<==      Total: 1
2019-03-11 13:46:00 -耗时 : 14
2019-03-11 13:46:00 -返回值 : com.bootdo.common.utils.PageUtils@3fe42161
2019-03-11 13:46:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:46:01 -HTTP METHOD : GET
2019-03-11 13:46:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:46:01 -参数 : []
2019-03-11 13:46:01 -耗时 : 0
2019-03-11 13:46:01 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:46:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:46:01 -HTTP METHOD : GET
2019-03-11 13:46:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:46:01 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:46:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:01 -<==      Total: 3
2019-03-11 13:46:01 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:46:01 -==> Parameters: 
2019-03-11 13:46:01 -<==      Total: 1
2019-03-11 13:46:01 -耗时 : 8
2019-03-11 13:46:01 -返回值 : com.bootdo.common.utils.PageUtils@25b6fb90
2019-03-11 13:46:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:01 -HTTP METHOD : GET
2019-03-11 13:46:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:01 -参数 : []
2019-03-11 13:46:01 -耗时 : 1
2019-03-11 13:46:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:02 -HTTP METHOD : GET
2019-03-11 13:46:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:02 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:02 -<==      Total: 3
2019-03-11 13:46:02 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:02 -==> Parameters: 
2019-03-11 13:46:02 -<==      Total: 1
2019-03-11 13:46:02 -耗时 : 8
2019-03-11 13:46:02 -返回值 : com.bootdo.common.utils.PageUtils@190ce0ac
2019-03-11 13:46:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:46:02 -HTTP METHOD : GET
2019-03-11 13:46:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:46:02 -参数 : []
2019-03-11 13:46:02 -耗时 : 1
2019-03-11 13:46:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:46:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:46:02 -HTTP METHOD : GET
2019-03-11 13:46:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:46:02 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:46:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:02 -<==      Total: 3
2019-03-11 13:46:02 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:46:02 -==> Parameters: 
2019-03-11 13:46:02 -<==      Total: 1
2019-03-11 13:46:02 -耗时 : 8
2019-03-11 13:46:02 -返回值 : com.bootdo.common.utils.PageUtils@74cda66b
2019-03-11 13:46:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:03 -HTTP METHOD : GET
2019-03-11 13:46:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:03 -参数 : []
2019-03-11 13:46:03 -耗时 : 0
2019-03-11 13:46:03 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:03 -HTTP METHOD : GET
2019-03-11 13:46:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:03 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:03 -<==      Total: 3
2019-03-11 13:46:03 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:03 -==> Parameters: 
2019-03-11 13:46:03 -<==      Total: 1
2019-03-11 13:46:03 -耗时 : 7
2019-03-11 13:46:03 -返回值 : com.bootdo.common.utils.PageUtils@2eb447c7
2019-03-11 13:46:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:46:04 -HTTP METHOD : GET
2019-03-11 13:46:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:46:04 -参数 : []
2019-03-11 13:46:04 -耗时 : 1
2019-03-11 13:46:04 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:46:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:46:04 -HTTP METHOD : GET
2019-03-11 13:46:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:46:04 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:46:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:04 -<==      Total: 3
2019-03-11 13:46:04 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:46:04 -==> Parameters: 
2019-03-11 13:46:04 -<==      Total: 1
2019-03-11 13:46:04 -耗时 : 7
2019-03-11 13:46:04 -返回值 : com.bootdo.common.utils.PageUtils@2a9a066d
2019-03-11 13:46:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:13 -HTTP METHOD : GET
2019-03-11 13:46:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:13 -参数 : []
2019-03-11 13:46:13 -耗时 : 0
2019-03-11 13:46:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:13 -HTTP METHOD : GET
2019-03-11 13:46:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:13 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:13 -<==      Total: 3
2019-03-11 13:46:13 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:13 -==> Parameters: 
2019-03-11 13:46:13 -<==      Total: 1
2019-03-11 13:46:13 -耗时 : 7
2019-03-11 13:46:13 -返回值 : com.bootdo.common.utils.PageUtils@5f3da93e
2019-03-11 13:46:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:46:13 -HTTP METHOD : GET
2019-03-11 13:46:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:46:13 -参数 : []
2019-03-11 13:46:13 -耗时 : 0
2019-03-11 13:46:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:46:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:46:14 -HTTP METHOD : GET
2019-03-11 13:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:46:14 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:46:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:14 -<==      Total: 3
2019-03-11 13:46:14 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:46:14 -==> Parameters: 
2019-03-11 13:46:14 -<==      Total: 1
2019-03-11 13:46:14 -耗时 : 6
2019-03-11 13:46:14 -返回值 : com.bootdo.common.utils.PageUtils@52f14260
2019-03-11 13:46:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:14 -HTTP METHOD : GET
2019-03-11 13:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:14 -参数 : []
2019-03-11 13:46:14 -耗时 : 0
2019-03-11 13:46:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:14 -HTTP METHOD : GET
2019-03-11 13:46:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:14 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:14 -<==      Total: 3
2019-03-11 13:46:14 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:14 -==> Parameters: 
2019-03-11 13:46:14 -<==      Total: 1
2019-03-11 13:46:14 -耗时 : 9
2019-03-11 13:46:14 -返回值 : com.bootdo.common.utils.PageUtils@6716bdc0
2019-03-11 13:46:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:46:15 -HTTP METHOD : GET
2019-03-11 13:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:46:15 -参数 : []
2019-03-11 13:46:15 -耗时 : 1
2019-03-11 13:46:15 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:46:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:46:15 -HTTP METHOD : GET
2019-03-11 13:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:46:15 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:46:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:15 -<==      Total: 3
2019-03-11 13:46:15 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:46:15 -==> Parameters: 
2019-03-11 13:46:15 -<==      Total: 1
2019-03-11 13:46:15 -耗时 : 7
2019-03-11 13:46:15 -返回值 : com.bootdo.common.utils.PageUtils@2d67e301
2019-03-11 13:46:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:16 -HTTP METHOD : GET
2019-03-11 13:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:16 -参数 : []
2019-03-11 13:46:16 -耗时 : 0
2019-03-11 13:46:16 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:16 -HTTP METHOD : GET
2019-03-11 13:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:16 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:16 -<==      Total: 3
2019-03-11 13:46:16 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:16 -==> Parameters: 
2019-03-11 13:46:16 -<==      Total: 1
2019-03-11 13:46:16 -耗时 : 7
2019-03-11 13:46:16 -返回值 : com.bootdo.common.utils.PageUtils@8f1b368
2019-03-11 13:46:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:46:17 -HTTP METHOD : GET
2019-03-11 13:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:46:17 -参数 : []
2019-03-11 13:46:17 -耗时 : 1
2019-03-11 13:46:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:46:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:46:17 -HTTP METHOD : GET
2019-03-11 13:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:46:17 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:46:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:17 -<==      Total: 3
2019-03-11 13:46:17 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:46:17 -==> Parameters: 
2019-03-11 13:46:17 -<==      Total: 1
2019-03-11 13:46:17 -耗时 : 7
2019-03-11 13:46:17 -返回值 : com.bootdo.common.utils.PageUtils@18420962
2019-03-11 13:46:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:17 -HTTP METHOD : GET
2019-03-11 13:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:17 -参数 : []
2019-03-11 13:46:17 -耗时 : 1
2019-03-11 13:46:17 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:17 -HTTP METHOD : GET
2019-03-11 13:46:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:17 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:17 -<==      Total: 3
2019-03-11 13:46:17 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:17 -==> Parameters: 
2019-03-11 13:46:17 -<==      Total: 1
2019-03-11 13:46:17 -耗时 : 7
2019-03-11 13:46:17 -返回值 : com.bootdo.common.utils.PageUtils@3194d365
2019-03-11 13:46:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:46:18 -HTTP METHOD : GET
2019-03-11 13:46:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:46:18 -参数 : []
2019-03-11 13:46:18 -耗时 : 1
2019-03-11 13:46:18 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:46:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:46:18 -HTTP METHOD : GET
2019-03-11 13:46:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:46:18 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:46:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:18 -<==      Total: 3
2019-03-11 13:46:18 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:46:18 -==> Parameters: 
2019-03-11 13:46:18 -<==      Total: 1
2019-03-11 13:46:18 -耗时 : 9
2019-03-11 13:46:18 -返回值 : com.bootdo.common.utils.PageUtils@73f6e6d5
2019-03-11 13:46:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:29 -HTTP METHOD : GET
2019-03-11 13:46:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:29 -参数 : []
2019-03-11 13:46:29 -耗时 : 0
2019-03-11 13:46:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:29 -HTTP METHOD : GET
2019-03-11 13:46:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:29 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:29 -<==      Total: 3
2019-03-11 13:46:29 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:29 -==> Parameters: 
2019-03-11 13:46:29 -<==      Total: 1
2019-03-11 13:46:29 -耗时 : 7
2019-03-11 13:46:29 -返回值 : com.bootdo.common.utils.PageUtils@7b5789dc
2019-03-11 13:46:30 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:46:30 -HTTP METHOD : GET
2019-03-11 13:46:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:46:30 -参数 : []
2019-03-11 13:46:30 -耗时 : 0
2019-03-11 13:46:30 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:46:30 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:46:30 -HTTP METHOD : GET
2019-03-11 13:46:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:46:30 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:46:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:30 -<==      Total: 3
2019-03-11 13:46:30 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:46:30 -==> Parameters: 
2019-03-11 13:46:30 -<==      Total: 1
2019-03-11 13:46:30 -耗时 : 7
2019-03-11 13:46:30 -返回值 : com.bootdo.common.utils.PageUtils@2324ed6e
2019-03-11 13:46:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:46:31 -HTTP METHOD : GET
2019-03-11 13:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:46:31 -参数 : []
2019-03-11 13:46:31 -耗时 : 0
2019-03-11 13:46:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:46:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:46:31 -HTTP METHOD : GET
2019-03-11 13:46:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:46:31 -参数 : [{limit=10, offset=0}]
2019-03-11 13:46:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:46:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:46:31 -<==      Total: 3
2019-03-11 13:46:31 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:46:31 -==> Parameters: 
2019-03-11 13:46:31 -<==      Total: 1
2019-03-11 13:46:31 -耗时 : 7
2019-03-11 13:46:31 -返回值 : com.bootdo.common.utils.PageUtils@4b31c245
2019-03-11 13:47:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:47:06 -HTTP METHOD : GET
2019-03-11 13:47:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:47:06 -参数 : []
2019-03-11 13:47:06 -耗时 : 1
2019-03-11 13:47:06 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:47:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:47:06 -HTTP METHOD : GET
2019-03-11 13:47:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:47:06 -参数 : [{limit=10, offset=0}]
2019-03-11 13:47:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:47:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:47:06 -<==      Total: 3
2019-03-11 13:47:06 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:47:06 -==> Parameters: 
2019-03-11 13:47:06 -<==      Total: 1
2019-03-11 13:47:06 -耗时 : 6
2019-03-11 13:47:06 -返回值 : com.bootdo.common.utils.PageUtils@302c71c0
2019-03-11 13:48:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:48:48 -HTTP METHOD : GET
2019-03-11 13:48:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:48:48 -参数 : []
2019-03-11 13:48:48 -耗时 : 1
2019-03-11 13:48:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:48:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:48:48 -HTTP METHOD : GET
2019-03-11 13:48:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:48:48 -参数 : [{limit=10, offset=0}]
2019-03-11 13:48:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:48:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:48:48 -<==      Total: 3
2019-03-11 13:48:48 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:48:48 -==> Parameters: 
2019-03-11 13:48:48 -<==      Total: 1
2019-03-11 13:48:48 -耗时 : 8
2019-03-11 13:48:48 -返回值 : com.bootdo.common.utils.PageUtils@6a3fa28
2019-03-11 13:49:46 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:49:46 -HTTP METHOD : GET
2019-03-11 13:49:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:49:46 -参数 : []
2019-03-11 13:49:46 -耗时 : 1
2019-03-11 13:49:46 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:49:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:49:46 -HTTP METHOD : GET
2019-03-11 13:49:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:49:46 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:49:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:46 -<==      Total: 3
2019-03-11 13:49:46 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:49:46 -==> Parameters: 
2019-03-11 13:49:46 -<==      Total: 1
2019-03-11 13:49:46 -耗时 : 7
2019-03-11 13:49:46 -返回值 : com.bootdo.common.utils.PageUtils@52b2eb34
2019-03-11 13:49:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:46 -HTTP METHOD : GET
2019-03-11 13:49:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:46 -参数 : []
2019-03-11 13:49:46 -耗时 : 1
2019-03-11 13:49:46 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:47 -HTTP METHOD : GET
2019-03-11 13:49:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:47 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:47 -<==      Total: 3
2019-03-11 13:49:47 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:47 -==> Parameters: 
2019-03-11 13:49:47 -<==      Total: 1
2019-03-11 13:49:47 -耗时 : 6
2019-03-11 13:49:47 -返回值 : com.bootdo.common.utils.PageUtils@307531a1
2019-03-11 13:49:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:49:47 -HTTP METHOD : GET
2019-03-11 13:49:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:49:47 -参数 : []
2019-03-11 13:49:47 -耗时 : 1
2019-03-11 13:49:47 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:49:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:49:47 -HTTP METHOD : GET
2019-03-11 13:49:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:49:47 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:49:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:47 -<==      Total: 3
2019-03-11 13:49:47 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:49:47 -==> Parameters: 
2019-03-11 13:49:47 -<==      Total: 1
2019-03-11 13:49:47 -耗时 : 7
2019-03-11 13:49:47 -返回值 : com.bootdo.common.utils.PageUtils@75d06a39
2019-03-11 13:49:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:47 -HTTP METHOD : GET
2019-03-11 13:49:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:47 -参数 : []
2019-03-11 13:49:47 -耗时 : 1
2019-03-11 13:49:47 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:47 -HTTP METHOD : GET
2019-03-11 13:49:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:47 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:47 -<==      Total: 3
2019-03-11 13:49:47 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:47 -==> Parameters: 
2019-03-11 13:49:47 -<==      Total: 1
2019-03-11 13:49:47 -耗时 : 6
2019-03-11 13:49:47 -返回值 : com.bootdo.common.utils.PageUtils@5fa7d62c
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:49:48 -参数 : []
2019-03-11 13:49:48 -耗时 : 0
2019-03-11 13:49:48 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:49:48 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:49:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:48 -<==      Total: 3
2019-03-11 13:49:48 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:49:48 -==> Parameters: 
2019-03-11 13:49:48 -<==      Total: 1
2019-03-11 13:49:48 -耗时 : 7
2019-03-11 13:49:48 -返回值 : com.bootdo.common.utils.PageUtils@17dd04cf
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:48 -参数 : []
2019-03-11 13:49:48 -耗时 : 1
2019-03-11 13:49:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:48 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:48 -<==      Total: 3
2019-03-11 13:49:48 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:48 -==> Parameters: 
2019-03-11 13:49:48 -<==      Total: 1
2019-03-11 13:49:48 -耗时 : 7
2019-03-11 13:49:48 -返回值 : com.bootdo.common.utils.PageUtils@a1b1e47
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:49:48 -参数 : []
2019-03-11 13:49:48 -耗时 : 1
2019-03-11 13:49:48 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:49:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:49:48 -HTTP METHOD : GET
2019-03-11 13:49:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:49:48 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:49:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:48 -<==      Total: 3
2019-03-11 13:49:48 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:49:48 -==> Parameters: 
2019-03-11 13:49:48 -<==      Total: 1
2019-03-11 13:49:48 -耗时 : 6
2019-03-11 13:49:48 -返回值 : com.bootdo.common.utils.PageUtils@16ff303
2019-03-11 13:49:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:49 -HTTP METHOD : GET
2019-03-11 13:49:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:49 -参数 : []
2019-03-11 13:49:49 -耗时 : 1
2019-03-11 13:49:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:49 -HTTP METHOD : GET
2019-03-11 13:49:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:49 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:49 -<==      Total: 3
2019-03-11 13:49:49 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:49 -==> Parameters: 
2019-03-11 13:49:49 -<==      Total: 1
2019-03-11 13:49:49 -耗时 : 7
2019-03-11 13:49:49 -返回值 : com.bootdo.common.utils.PageUtils@64d43ff0
2019-03-11 13:49:49 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:49:49 -HTTP METHOD : GET
2019-03-11 13:49:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:49:49 -参数 : []
2019-03-11 13:49:49 -耗时 : 0
2019-03-11 13:49:49 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:49:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:49:49 -HTTP METHOD : GET
2019-03-11 13:49:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:49:49 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:49:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:49 -<==      Total: 3
2019-03-11 13:49:49 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:49:49 -==> Parameters: 
2019-03-11 13:49:49 -<==      Total: 1
2019-03-11 13:49:49 -耗时 : 7
2019-03-11 13:49:49 -返回值 : com.bootdo.common.utils.PageUtils@4b0d7fa0
2019-03-11 13:49:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:50 -HTTP METHOD : GET
2019-03-11 13:49:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:50 -参数 : []
2019-03-11 13:49:50 -耗时 : 0
2019-03-11 13:49:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:50 -HTTP METHOD : GET
2019-03-11 13:49:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:50 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:50 -<==      Total: 3
2019-03-11 13:49:50 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:50 -==> Parameters: 
2019-03-11 13:49:50 -<==      Total: 1
2019-03-11 13:49:50 -耗时 : 6
2019-03-11 13:49:50 -返回值 : com.bootdo.common.utils.PageUtils@23e0023d
2019-03-11 13:49:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:49:50 -HTTP METHOD : GET
2019-03-11 13:49:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:49:50 -参数 : []
2019-03-11 13:49:50 -耗时 : 0
2019-03-11 13:49:50 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:49:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:49:50 -HTTP METHOD : GET
2019-03-11 13:49:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:49:50 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:49:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:50 -<==      Total: 3
2019-03-11 13:49:50 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:49:50 -==> Parameters: 
2019-03-11 13:49:50 -<==      Total: 1
2019-03-11 13:49:50 -耗时 : 6
2019-03-11 13:49:50 -返回值 : com.bootdo.common.utils.PageUtils@1933ee25
2019-03-11 13:49:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:51 -HTTP METHOD : GET
2019-03-11 13:49:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:51 -参数 : []
2019-03-11 13:49:51 -耗时 : 1
2019-03-11 13:49:51 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:51 -HTTP METHOD : GET
2019-03-11 13:49:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:51 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:51 -<==      Total: 3
2019-03-11 13:49:51 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:51 -==> Parameters: 
2019-03-11 13:49:51 -<==      Total: 1
2019-03-11 13:49:51 -耗时 : 7
2019-03-11 13:49:51 -返回值 : com.bootdo.common.utils.PageUtils@77959bab
2019-03-11 13:49:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 13:49:51 -HTTP METHOD : GET
2019-03-11 13:49:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 13:49:51 -参数 : []
2019-03-11 13:49:51 -耗时 : 0
2019-03-11 13:49:51 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 13:49:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 13:49:51 -HTTP METHOD : GET
2019-03-11 13:49:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 13:49:51 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 13:49:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:51 -<==      Total: 3
2019-03-11 13:49:51 -==>  Preparing: select count(*) from water_log 
2019-03-11 13:49:51 -==> Parameters: 
2019-03-11 13:49:51 -<==      Total: 1
2019-03-11 13:49:51 -耗时 : 6
2019-03-11 13:49:51 -返回值 : com.bootdo.common.utils.PageUtils@70aba82c
2019-03-11 13:49:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:49:52 -HTTP METHOD : GET
2019-03-11 13:49:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:49:52 -参数 : []
2019-03-11 13:49:52 -耗时 : 1
2019-03-11 13:49:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:49:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:49:52 -HTTP METHOD : GET
2019-03-11 13:49:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:49:52 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:49:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:52 -<==      Total: 3
2019-03-11 13:49:52 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:49:52 -==> Parameters: 
2019-03-11 13:49:52 -<==      Total: 1
2019-03-11 13:49:52 -耗时 : 6
2019-03-11 13:49:52 -返回值 : com.bootdo.common.utils.PageUtils@99e36b8
2019-03-11 13:49:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 13:49:52 -HTTP METHOD : GET
2019-03-11 13:49:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 13:49:52 -参数 : []
2019-03-11 13:49:52 -耗时 : 0
2019-03-11 13:49:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 13:49:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 13:49:52 -HTTP METHOD : GET
2019-03-11 13:49:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 13:49:52 -参数 : [{limit=10, offset=0}]
2019-03-11 13:49:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 13:49:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:49:52 -<==      Total: 3
2019-03-11 13:49:52 -==>  Preparing: select count(*) from elec_log 
2019-03-11 13:49:52 -==> Parameters: 
2019-03-11 13:49:52 -<==      Total: 1
2019-03-11 13:49:52 -耗时 : 6
2019-03-11 13:49:52 -返回值 : com.bootdo.common.utils.PageUtils@27479014
2019-03-11 13:56:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 13:56:34 -==> Parameters: 1(Long)
2019-03-11 13:56:34 -<==      Total: 86
2019-03-11 13:56:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 13:56:34 -HTTP METHOD : GET
2019-03-11 13:56:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 13:56:34 -参数 : []
2019-03-11 13:56:34 -耗时 : 1
2019-03-11 13:56:34 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 13:56:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 13:56:34 -HTTP METHOD : GET
2019-03-11 13:56:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 13:56:34 -参数 : [{limit=10, offset=0}]
2019-03-11 13:56:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 13:56:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 13:56:34 -<==      Total: 3
2019-03-11 13:56:34 -==>  Preparing: select count(*) from heat_log 
2019-03-11 13:56:34 -==> Parameters: 
2019-03-11 13:56:34 -<==      Total: 1
2019-03-11 13:56:34 -耗时 : 7
2019-03-11 13:56:34 -返回值 : com.bootdo.common.utils.PageUtils@22456742
2019-03-11 13:56:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-11 13:56:40 -HTTP METHOD : GET
2019-03-11 13:56:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-11 13:56:40 -参数 : []
2019-03-11 13:56:40 -耗时 : 0
2019-03-11 13:56:40 -返回值 : moneyLog/heatLog/add
2019-03-11 13:56:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-11 13:56:42 -HTTP METHOD : GET
2019-03-11 13:56:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-11 13:56:42 -参数 : [1, {}]
2019-03-11 13:56:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-11 13:56:42 -==> Parameters: 1(Long)
2019-03-11 13:56:42 -<==      Total: 1
2019-03-11 13:56:42 -耗时 : 4
2019-03-11 13:56:42 -返回值 : moneyLog/heatLog/edit
2019-03-11 13:56:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 13:56:42 -HTTP METHOD : GET
2019-03-11 13:56:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:56:42 -参数 : [userType]
2019-03-11 13:56:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:56:42 -==> Parameters: userType(String)
2019-03-11 13:56:42 -<==      Total: 2
2019-03-11 13:56:42 -耗时 : 3
2019-03-11 13:56:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 13:56:42 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-11 13:56:42 -HTTP METHOD : GET
2019-03-11 13:56:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:56:42 -参数 : [userArea]
2019-03-11 13:56:42 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-11 13:56:42 -HTTP METHOD : GET
2019-03-11 13:56:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 13:56:42 -参数 : [userOrg]
2019-03-11 13:56:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:56:42 -==> Parameters: userArea(String)
2019-03-11 13:56:42 -<==      Total: 0
2019-03-11 13:56:42 -耗时 : 5
2019-03-11 13:56:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 13:56:42 -返回值 : []
2019-03-11 13:56:42 -==> Parameters: userOrg(String)
2019-03-11 13:56:42 -<==      Total: 0
2019-03-11 13:56:42 -耗时 : 7
2019-03-11 13:56:42 -返回值 : []
2019-03-11 14:15:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 441]
2019-03-11 14:22:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 14:22:48 -==> Parameters: 1(Long)
2019-03-11 14:22:48 -<==      Total: 86
2019-03-11 14:22:48 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:22:48 -HTTP METHOD : GET
2019-03-11 14:22:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:22:48 -参数 : []
2019-03-11 14:22:48 -耗时 : 1
2019-03-11 14:22:48 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:22:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:22:49 -HTTP METHOD : GET
2019-03-11 14:22:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:22:49 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:22:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:49 -<==      Total: 3
2019-03-11 14:22:49 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:22:49 -==> Parameters: 
2019-03-11 14:22:49 -<==      Total: 1
2019-03-11 14:22:49 -耗时 : 6
2019-03-11 14:22:49 -返回值 : com.bootdo.common.utils.PageUtils@24526ed1
2019-03-11 14:22:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:22:49 -HTTP METHOD : GET
2019-03-11 14:22:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:22:49 -参数 : []
2019-03-11 14:22:49 -耗时 : 0
2019-03-11 14:22:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:22:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:22:49 -HTTP METHOD : GET
2019-03-11 14:22:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:22:49 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:22:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:49 -<==      Total: 3
2019-03-11 14:22:49 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:22:49 -==> Parameters: 
2019-03-11 14:22:49 -<==      Total: 1
2019-03-11 14:22:49 -耗时 : 6
2019-03-11 14:22:49 -返回值 : com.bootdo.common.utils.PageUtils@60bf1a81
2019-03-11 14:22:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:22:50 -HTTP METHOD : GET
2019-03-11 14:22:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:22:50 -参数 : []
2019-03-11 14:22:50 -耗时 : 1
2019-03-11 14:22:50 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:22:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:22:50 -HTTP METHOD : GET
2019-03-11 14:22:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:22:50 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:22:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:50 -<==      Total: 3
2019-03-11 14:22:50 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:22:50 -==> Parameters: 
2019-03-11 14:22:50 -<==      Total: 1
2019-03-11 14:22:50 -耗时 : 8
2019-03-11 14:22:50 -返回值 : com.bootdo.common.utils.PageUtils@34a0757b
2019-03-11 14:22:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:22:50 -HTTP METHOD : GET
2019-03-11 14:22:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:22:50 -参数 : []
2019-03-11 14:22:50 -耗时 : 1
2019-03-11 14:22:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:22:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:22:51 -HTTP METHOD : GET
2019-03-11 14:22:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:22:51 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:22:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:51 -<==      Total: 3
2019-03-11 14:22:51 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:22:51 -==> Parameters: 
2019-03-11 14:22:51 -<==      Total: 1
2019-03-11 14:22:51 -耗时 : 6
2019-03-11 14:22:51 -返回值 : com.bootdo.common.utils.PageUtils@7eeb7754
2019-03-11 14:22:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:22:51 -HTTP METHOD : GET
2019-03-11 14:22:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:22:51 -参数 : []
2019-03-11 14:22:51 -耗时 : 1
2019-03-11 14:22:51 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:22:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:22:51 -HTTP METHOD : GET
2019-03-11 14:22:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:22:51 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:22:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:51 -<==      Total: 3
2019-03-11 14:22:51 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:22:51 -==> Parameters: 
2019-03-11 14:22:51 -<==      Total: 1
2019-03-11 14:22:51 -耗时 : 7
2019-03-11 14:22:51 -返回值 : com.bootdo.common.utils.PageUtils@7125fe69
2019-03-11 14:22:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:22:51 -HTTP METHOD : GET
2019-03-11 14:22:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:22:51 -参数 : []
2019-03-11 14:22:51 -耗时 : 1
2019-03-11 14:22:51 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:22:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:22:52 -HTTP METHOD : GET
2019-03-11 14:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:22:52 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:22:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:52 -<==      Total: 3
2019-03-11 14:22:52 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:22:52 -==> Parameters: 
2019-03-11 14:22:52 -<==      Total: 1
2019-03-11 14:22:52 -耗时 : 7
2019-03-11 14:22:52 -返回值 : com.bootdo.common.utils.PageUtils@40b95c55
2019-03-11 14:22:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:22:52 -HTTP METHOD : GET
2019-03-11 14:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:22:52 -参数 : []
2019-03-11 14:22:52 -耗时 : 0
2019-03-11 14:22:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:22:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:22:52 -HTTP METHOD : GET
2019-03-11 14:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:22:52 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:22:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:52 -<==      Total: 3
2019-03-11 14:22:52 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:22:52 -==> Parameters: 
2019-03-11 14:22:52 -<==      Total: 1
2019-03-11 14:22:52 -耗时 : 6
2019-03-11 14:22:52 -返回值 : com.bootdo.common.utils.PageUtils@10c8c24
2019-03-11 14:22:52 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:22:52 -HTTP METHOD : GET
2019-03-11 14:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:22:52 -参数 : []
2019-03-11 14:22:52 -耗时 : 1
2019-03-11 14:22:52 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:22:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:22:53 -HTTP METHOD : GET
2019-03-11 14:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:22:53 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:22:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:53 -<==      Total: 3
2019-03-11 14:22:53 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:22:53 -==> Parameters: 
2019-03-11 14:22:53 -<==      Total: 1
2019-03-11 14:22:53 -耗时 : 6
2019-03-11 14:22:53 -返回值 : com.bootdo.common.utils.PageUtils@32a233e3
2019-03-11 14:22:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:22:53 -HTTP METHOD : GET
2019-03-11 14:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:22:53 -参数 : []
2019-03-11 14:22:53 -耗时 : 0
2019-03-11 14:22:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:22:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:22:53 -HTTP METHOD : GET
2019-03-11 14:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:22:53 -参数 : [{limit=10, offset=0}]
2019-03-11 14:22:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:22:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:22:53 -<==      Total: 3
2019-03-11 14:22:53 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:22:53 -==> Parameters: 
2019-03-11 14:22:53 -<==      Total: 1
2019-03-11 14:22:53 -耗时 : 6
2019-03-11 14:22:53 -返回值 : com.bootdo.common.utils.PageUtils@3f7c4ab
2019-03-11 14:24:59 -请求地址 : http://localhost:8081/print/print
2019-03-11 14:24:59 -HTTP METHOD : GET
2019-03-11 14:24:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 14:24:59 -参数 : []
2019-03-11 14:24:59 -耗时 : 1
2019-03-11 14:24:59 -返回值 : print/print/print
2019-03-11 14:26:00 -请求地址 : http://localhost:8081/charts/countRun
2019-03-11 14:26:00 -HTTP METHOD : GET
2019-03-11 14:26:00 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-11 14:26:00 -参数 : []
2019-03-11 14:26:00 -耗时 : 1
2019-03-11 14:26:00 -返回值 : charts/countRun
2019-03-11 14:26:33 -请求地址 : http://localhost:8081/charts/countMM
2019-03-11 14:26:33 -HTTP METHOD : GET
2019-03-11 14:26:33 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-11 14:26:33 -参数 : []
2019-03-11 14:26:33 -耗时 : 0
2019-03-11 14:26:33 -返回值 : charts/countMM
2019-03-11 14:26:35 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-11 14:26:35 -HTTP METHOD : GET
2019-03-11 14:26:35 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-11 14:26:35 -参数 : []
2019-03-11 14:26:35 -耗时 : 0
2019-03-11 14:26:35 -返回值 : charts/countOwe
2019-03-11 14:26:36 -请求地址 : http://localhost:8081/charts/countDD
2019-03-11 14:26:36 -HTTP METHOD : GET
2019-03-11 14:26:36 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-11 14:26:36 -参数 : []
2019-03-11 14:26:36 -耗时 : 1
2019-03-11 14:26:36 -返回值 : charts/countDD
2019-03-11 14:26:45 -请求地址 : http://localhost:8081/charts/countYY
2019-03-11 14:26:45 -HTTP METHOD : GET
2019-03-11 14:26:45 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-11 14:26:45 -参数 : []
2019-03-11 14:26:45 -耗时 : 1
2019-03-11 14:26:45 -返回值 : charts/countYY
2019-03-11 14:27:06 -请求地址 : http://localhost:8081/common/time
2019-03-11 14:27:06 -HTTP METHOD : GET
2019-03-11 14:27:06 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-11 14:27:06 -参数 : []
2019-03-11 14:27:06 -耗时 : 0
2019-03-11 14:27:06 -返回值 : common/job/time
2019-03-11 14:27:11 -请求地址 : http://localhost:8081/common/job
2019-03-11 14:27:11 -HTTP METHOD : GET
2019-03-11 14:27:11 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-11 14:27:11 -参数 : []
2019-03-11 14:27:11 -耗时 : 1
2019-03-11 14:27:11 -返回值 : common/job/job
2019-03-11 14:27:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 14:27:24 -HTTP METHOD : GET
2019-03-11 14:27:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 14:27:24 -参数 : []
2019-03-11 14:27:24 -耗时 : 1
2019-03-11 14:27:24 -返回值 : /moneyList/moneyList
2019-03-11 14:27:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:27:34 -HTTP METHOD : GET
2019-03-11 14:27:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:27:34 -参数 : []
2019-03-11 14:27:34 -耗时 : 0
2019-03-11 14:27:34 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:27:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:27:34 -HTTP METHOD : GET
2019-03-11 14:27:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:27:34 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:27:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:34 -<==      Total: 3
2019-03-11 14:27:34 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:27:34 -==> Parameters: 
2019-03-11 14:27:34 -<==      Total: 1
2019-03-11 14:27:34 -耗时 : 8
2019-03-11 14:27:34 -返回值 : com.bootdo.common.utils.PageUtils@77e3e752
2019-03-11 14:27:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:27:36 -HTTP METHOD : GET
2019-03-11 14:27:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:27:36 -参数 : []
2019-03-11 14:27:36 -耗时 : 1
2019-03-11 14:27:36 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:27:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:27:37 -HTTP METHOD : GET
2019-03-11 14:27:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:27:37 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:27:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:37 -<==      Total: 3
2019-03-11 14:27:37 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:27:37 -==> Parameters: 
2019-03-11 14:27:37 -<==      Total: 1
2019-03-11 14:27:37 -耗时 : 7
2019-03-11 14:27:37 -返回值 : com.bootdo.common.utils.PageUtils@1dea4296
2019-03-11 14:27:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:27:37 -HTTP METHOD : GET
2019-03-11 14:27:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:27:37 -参数 : []
2019-03-11 14:27:37 -耗时 : 1
2019-03-11 14:27:37 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:27:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:27:37 -HTTP METHOD : GET
2019-03-11 14:27:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:27:37 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:27:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:37 -<==      Total: 3
2019-03-11 14:27:37 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:27:37 -==> Parameters: 
2019-03-11 14:27:37 -<==      Total: 1
2019-03-11 14:27:37 -耗时 : 6
2019-03-11 14:27:37 -返回值 : com.bootdo.common.utils.PageUtils@6c6fb585
2019-03-11 14:27:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:27:38 -HTTP METHOD : GET
2019-03-11 14:27:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:27:38 -参数 : []
2019-03-11 14:27:38 -耗时 : 0
2019-03-11 14:27:38 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:27:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:27:38 -HTTP METHOD : GET
2019-03-11 14:27:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:27:38 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:27:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:38 -<==      Total: 3
2019-03-11 14:27:38 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:27:38 -==> Parameters: 
2019-03-11 14:27:38 -<==      Total: 1
2019-03-11 14:27:38 -耗时 : 5
2019-03-11 14:27:38 -返回值 : com.bootdo.common.utils.PageUtils@b496ec3
2019-03-11 14:27:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:27:39 -HTTP METHOD : GET
2019-03-11 14:27:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:27:39 -参数 : []
2019-03-11 14:27:39 -耗时 : 1
2019-03-11 14:27:39 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:27:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:27:39 -HTTP METHOD : GET
2019-03-11 14:27:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:27:39 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:27:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:39 -<==      Total: 3
2019-03-11 14:27:39 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:27:39 -==> Parameters: 
2019-03-11 14:27:39 -<==      Total: 1
2019-03-11 14:27:39 -耗时 : 6
2019-03-11 14:27:39 -返回值 : com.bootdo.common.utils.PageUtils@766ab985
2019-03-11 14:27:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:27:39 -HTTP METHOD : GET
2019-03-11 14:27:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:27:39 -参数 : []
2019-03-11 14:27:39 -耗时 : 0
2019-03-11 14:27:39 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:27:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:27:39 -HTTP METHOD : GET
2019-03-11 14:27:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:27:39 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:27:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:39 -<==      Total: 3
2019-03-11 14:27:39 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:27:39 -==> Parameters: 
2019-03-11 14:27:39 -<==      Total: 1
2019-03-11 14:27:39 -耗时 : 6
2019-03-11 14:27:39 -返回值 : com.bootdo.common.utils.PageUtils@65701f6f
2019-03-11 14:27:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:27:40 -HTTP METHOD : GET
2019-03-11 14:27:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:27:40 -参数 : []
2019-03-11 14:27:40 -耗时 : 1
2019-03-11 14:27:40 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:27:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:27:40 -HTTP METHOD : GET
2019-03-11 14:27:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:27:40 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:27:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:40 -<==      Total: 3
2019-03-11 14:27:40 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:27:40 -==> Parameters: 
2019-03-11 14:27:40 -<==      Total: 1
2019-03-11 14:27:40 -耗时 : 7
2019-03-11 14:27:40 -返回值 : com.bootdo.common.utils.PageUtils@7293b4a0
2019-03-11 14:27:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:27:40 -HTTP METHOD : GET
2019-03-11 14:27:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:27:40 -参数 : []
2019-03-11 14:27:40 -耗时 : 0
2019-03-11 14:27:40 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:27:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:27:41 -HTTP METHOD : GET
2019-03-11 14:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:27:41 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:27:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:41 -<==      Total: 3
2019-03-11 14:27:41 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:27:41 -==> Parameters: 
2019-03-11 14:27:41 -<==      Total: 1
2019-03-11 14:27:41 -耗时 : 6
2019-03-11 14:27:41 -返回值 : com.bootdo.common.utils.PageUtils@7a046b0f
2019-03-11 14:27:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:27:41 -HTTP METHOD : GET
2019-03-11 14:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:27:41 -参数 : []
2019-03-11 14:27:41 -耗时 : 1
2019-03-11 14:27:41 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:27:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:27:41 -HTTP METHOD : GET
2019-03-11 14:27:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:27:41 -参数 : [{limit=10, offset=0}]
2019-03-11 14:27:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:27:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:27:41 -<==      Total: 3
2019-03-11 14:27:41 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:27:41 -==> Parameters: 
2019-03-11 14:27:41 -<==      Total: 1
2019-03-11 14:27:41 -耗时 : 6
2019-03-11 14:27:41 -返回值 : com.bootdo.common.utils.PageUtils@8932c7e
2019-03-11 14:28:34 -请求地址 : http://localhost:8081/index
2019-03-11 14:28:34 -HTTP METHOD : GET
2019-03-11 14:28:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 14:28:34 -参数 : [{}]
2019-03-11 14:28:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 14:28:34 -==> Parameters: 1(Long)
2019-03-11 14:28:34 -<==      Total: 45
2019-03-11 14:28:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 14:28:34 -==> Parameters: 138(Long)
2019-03-11 14:28:34 -<==      Total: 1
2019-03-11 14:28:34 -耗时 : 51
2019-03-11 14:28:34 -返回值 : index_v1
2019-03-11 14:28:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 14:28:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 51(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 14:28:34.216(Timestamp)
2019-03-11 14:28:34 -<==    Updates: 1
2019-03-11 14:28:34 -请求地址 : http://localhost:8081/main
2019-03-11 14:28:34 -HTTP METHOD : GET
2019-03-11 14:28:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:28:34 -参数 : []
2019-03-11 14:28:34 -耗时 : 1
2019-03-11 14:28:34 -返回值 : main
2019-03-11 14:28:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 14:28:34 -HTTP METHOD : GET
2019-03-11 14:28:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 14:28:34 -参数 : []
2019-03-11 14:28:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 14:28:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 14:28:34 -<==      Total: 0
2019-03-11 14:28:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 14:28:34 -==> Parameters: 1(Long), 0(String)
2019-03-11 14:28:34 -<==      Total: 1
2019-03-11 14:28:34 -耗时 : 8
2019-03-11 14:28:34 -返回值 : com.bootdo.common.utils.PageUtils@61fc7e0
2019-03-11 14:28:34 -请求地址 : http://localhost:8081/main
2019-03-11 14:28:34 -HTTP METHOD : GET
2019-03-11 14:28:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:28:34 -参数 : []
2019-03-11 14:28:34 -耗时 : 0
2019-03-11 14:28:34 -返回值 : main
2019-03-11 14:28:37 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-11 14:28:37 -HTTP METHOD : GET
2019-03-11 14:28:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-11 14:28:37 -参数 : []
2019-03-11 14:28:37 -耗时 : 1
2019-03-11 14:28:37 -返回值 : elec/elecPrice/elecPrice
2019-03-11 14:28:37 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-11 14:28:37 -HTTP METHOD : GET
2019-03-11 14:28:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-11 14:28:37 -参数 : [{limit=10, offset=0}]
2019-03-11 14:28:37 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-11 14:28:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:28:37 -<==      Total: 2
2019-03-11 14:28:37 -==>  Preparing: select count(*) from elec_price 
2019-03-11 14:28:37 -==> Parameters: 
2019-03-11 14:28:37 -<==      Total: 1
2019-03-11 14:28:37 -耗时 : 66
2019-03-11 14:28:37 -返回值 : com.bootdo.common.utils.PageUtils@2a82f593
2019-03-11 14:28:39 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 14:28:39 -HTTP METHOD : GET
2019-03-11 14:28:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 14:28:39 -参数 : []
2019-03-11 14:28:39 -耗时 : 1
2019-03-11 14:28:39 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 14:28:42 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 14:28:42 -HTTP METHOD : GET
2019-03-11 14:28:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 14:28:42 -参数 : []
2019-03-11 14:28:42 -耗时 : 1
2019-03-11 14:28:42 -返回值 : elec/elecInto/elecInto
2019-03-11 14:28:43 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 14:28:43 -HTTP METHOD : GET
2019-03-11 14:28:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 14:28:43 -参数 : []
2019-03-11 14:28:43 -耗时 : 0
2019-03-11 14:28:43 -返回值 : elec/elec/elec
2019-03-11 14:28:43 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 14:28:43 -HTTP METHOD : GET
2019-03-11 14:28:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 14:28:43 -参数 : [{limit=10, offset=0}]
2019-03-11 14:28:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 14:28:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:28:43 -<==      Total: 4
2019-03-11 14:28:43 -==>  Preparing: select count(*) from elec 
2019-03-11 14:28:43 -==> Parameters: 
2019-03-11 14:28:43 -<==      Total: 1
2019-03-11 14:28:43 -耗时 : 106
2019-03-11 14:28:43 -返回值 : com.bootdo.common.utils.PageUtils@491547ae
2019-03-11 14:29:07 -请求地址 : http://localhost:8081/index
2019-03-11 14:29:07 -HTTP METHOD : GET
2019-03-11 14:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 14:29:07 -参数 : [{}]
2019-03-11 14:29:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 14:29:07 -==> Parameters: 1(Long)
2019-03-11 14:29:07 -<==      Total: 45
2019-03-11 14:29:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 14:29:07 -==> Parameters: 138(Long)
2019-03-11 14:29:07 -<==      Total: 1
2019-03-11 14:29:07 -耗时 : 23
2019-03-11 14:29:07 -返回值 : index_v1
2019-03-11 14:29:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 14:29:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 14:29:07.851(Timestamp)
2019-03-11 14:29:07 -请求地址 : http://localhost:8081/main
2019-03-11 14:29:07 -HTTP METHOD : GET
2019-03-11 14:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:29:07 -参数 : []
2019-03-11 14:29:07 -耗时 : 1
2019-03-11 14:29:07 -返回值 : main
2019-03-11 14:29:08 -<==    Updates: 1
2019-03-11 14:29:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 14:29:08 -HTTP METHOD : GET
2019-03-11 14:29:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 14:29:08 -参数 : []
2019-03-11 14:29:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 14:29:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 14:29:08 -<==      Total: 0
2019-03-11 14:29:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 14:29:08 -==> Parameters: 1(Long), 0(String)
2019-03-11 14:29:08 -<==      Total: 1
2019-03-11 14:29:08 -耗时 : 6
2019-03-11 14:29:08 -返回值 : com.bootdo.common.utils.PageUtils@473dee1
2019-03-11 14:29:08 -请求地址 : http://localhost:8081/main
2019-03-11 14:29:08 -HTTP METHOD : GET
2019-03-11 14:29:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:29:08 -参数 : []
2019-03-11 14:29:08 -耗时 : 1
2019-03-11 14:29:08 -返回值 : main
2019-03-11 14:29:09 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:29:09 -HTTP METHOD : GET
2019-03-11 14:29:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:29:09 -参数 : []
2019-03-11 14:29:09 -耗时 : 0
2019-03-11 14:29:09 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:29:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:29:09 -HTTP METHOD : GET
2019-03-11 14:29:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:29:09 -参数 : [{limit=10, offset=0}]
2019-03-11 14:29:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:29:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:29:09 -<==      Total: 3
2019-03-11 14:29:09 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:29:09 -==> Parameters: 
2019-03-11 14:29:09 -<==      Total: 1
2019-03-11 14:29:09 -耗时 : 7
2019-03-11 14:29:09 -返回值 : com.bootdo.common.utils.PageUtils@5f4c2202
2019-03-11 14:29:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:29:10 -HTTP METHOD : GET
2019-03-11 14:29:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:29:10 -参数 : []
2019-03-11 14:29:10 -耗时 : 0
2019-03-11 14:29:10 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:29:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:29:10 -HTTP METHOD : GET
2019-03-11 14:29:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:29:10 -参数 : [{limit=10, offset=0}]
2019-03-11 14:29:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:29:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:29:10 -<==      Total: 3
2019-03-11 14:29:10 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:29:10 -==> Parameters: 
2019-03-11 14:29:10 -<==      Total: 1
2019-03-11 14:29:10 -耗时 : 7
2019-03-11 14:29:10 -返回值 : com.bootdo.common.utils.PageUtils@7299e81
2019-03-11 14:29:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:29:11 -HTTP METHOD : GET
2019-03-11 14:29:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:29:11 -参数 : []
2019-03-11 14:29:11 -耗时 : 1
2019-03-11 14:29:11 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:29:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:29:11 -HTTP METHOD : GET
2019-03-11 14:29:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:29:11 -参数 : [{limit=10, offset=0}]
2019-03-11 14:29:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:29:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:29:11 -<==      Total: 3
2019-03-11 14:29:11 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:29:11 -==> Parameters: 
2019-03-11 14:29:11 -<==      Total: 1
2019-03-11 14:29:11 -耗时 : 5
2019-03-11 14:29:11 -返回值 : com.bootdo.common.utils.PageUtils@34a527bb
2019-03-11 14:29:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:29:12 -HTTP METHOD : GET
2019-03-11 14:29:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:29:12 -参数 : []
2019-03-11 14:29:12 -耗时 : 1
2019-03-11 14:29:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:29:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:29:13 -HTTP METHOD : GET
2019-03-11 14:29:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:29:13 -参数 : [{limit=10, offset=0}]
2019-03-11 14:29:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:29:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:29:13 -<==      Total: 3
2019-03-11 14:29:13 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:29:13 -==> Parameters: 
2019-03-11 14:29:13 -<==      Total: 1
2019-03-11 14:29:13 -耗时 : 6
2019-03-11 14:29:13 -返回值 : com.bootdo.common.utils.PageUtils@2e1f80da
2019-03-11 14:29:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:29:13 -HTTP METHOD : GET
2019-03-11 14:29:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:29:13 -参数 : []
2019-03-11 14:29:13 -耗时 : 0
2019-03-11 14:29:13 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:29:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:29:13 -HTTP METHOD : GET
2019-03-11 14:29:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:29:13 -参数 : [{limit=10, offset=0}]
2019-03-11 14:29:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:29:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:29:13 -<==      Total: 3
2019-03-11 14:29:13 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:29:13 -==> Parameters: 
2019-03-11 14:29:13 -<==      Total: 1
2019-03-11 14:29:13 -耗时 : 5
2019-03-11 14:29:13 -返回值 : com.bootdo.common.utils.PageUtils@4d245479
2019-03-11 14:29:57 -请求地址 : http://localhost:8081/index
2019-03-11 14:29:57 -HTTP METHOD : GET
2019-03-11 14:29:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 14:29:57 -参数 : [{}]
2019-03-11 14:29:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 14:29:57 -==> Parameters: 1(Long)
2019-03-11 14:29:57 -<==      Total: 45
2019-03-11 14:29:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 14:29:57 -==> Parameters: 138(Long)
2019-03-11 14:29:57 -<==      Total: 1
2019-03-11 14:29:57 -耗时 : 27
2019-03-11 14:29:57 -返回值 : index_v1
2019-03-11 14:29:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 14:29:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 14:29:57.944(Timestamp)
2019-03-11 14:29:58 -请求地址 : http://localhost:8081/main
2019-03-11 14:29:58 -HTTP METHOD : GET
2019-03-11 14:29:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:29:58 -参数 : []
2019-03-11 14:29:58 -耗时 : 1
2019-03-11 14:29:58 -返回值 : main
2019-03-11 14:29:58 -<==    Updates: 1
2019-03-11 14:29:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 14:29:58 -HTTP METHOD : GET
2019-03-11 14:29:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 14:29:58 -参数 : []
2019-03-11 14:29:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 14:29:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 14:29:58 -<==      Total: 0
2019-03-11 14:29:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 14:29:58 -==> Parameters: 1(Long), 0(String)
2019-03-11 14:29:58 -<==      Total: 1
2019-03-11 14:29:58 -耗时 : 6
2019-03-11 14:29:58 -返回值 : com.bootdo.common.utils.PageUtils@3ce7b614
2019-03-11 14:29:58 -请求地址 : http://localhost:8081/main
2019-03-11 14:29:58 -HTTP METHOD : GET
2019-03-11 14:29:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:29:58 -参数 : []
2019-03-11 14:29:58 -耗时 : 2
2019-03-11 14:29:58 -返回值 : main
2019-03-11 14:30:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:30:02 -HTTP METHOD : GET
2019-03-11 14:30:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:30:02 -参数 : []
2019-03-11 14:30:02 -耗时 : 0
2019-03-11 14:30:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:30:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:30:02 -HTTP METHOD : GET
2019-03-11 14:30:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:30:02 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:30:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:02 -<==      Total: 3
2019-03-11 14:30:02 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:30:02 -==> Parameters: 
2019-03-11 14:30:02 -<==      Total: 1
2019-03-11 14:30:02 -耗时 : 6
2019-03-11 14:30:02 -返回值 : com.bootdo.common.utils.PageUtils@44760942
2019-03-11 14:30:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:30:03 -HTTP METHOD : GET
2019-03-11 14:30:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:30:03 -参数 : []
2019-03-11 14:30:03 -耗时 : 1
2019-03-11 14:30:03 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:30:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:30:04 -HTTP METHOD : GET
2019-03-11 14:30:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:30:04 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:30:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:04 -<==      Total: 3
2019-03-11 14:30:04 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:30:04 -==> Parameters: 
2019-03-11 14:30:04 -<==      Total: 1
2019-03-11 14:30:04 -耗时 : 7
2019-03-11 14:30:04 -返回值 : com.bootdo.common.utils.PageUtils@7d3b8ad5
2019-03-11 14:30:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:30:05 -HTTP METHOD : GET
2019-03-11 14:30:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:30:05 -参数 : []
2019-03-11 14:30:05 -耗时 : 0
2019-03-11 14:30:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:30:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:30:05 -HTTP METHOD : GET
2019-03-11 14:30:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:30:05 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:30:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:05 -<==      Total: 3
2019-03-11 14:30:05 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:30:05 -==> Parameters: 
2019-03-11 14:30:05 -<==      Total: 1
2019-03-11 14:30:05 -耗时 : 5
2019-03-11 14:30:05 -返回值 : com.bootdo.common.utils.PageUtils@1a3d743d
2019-03-11 14:30:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:30:06 -HTTP METHOD : GET
2019-03-11 14:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:30:06 -参数 : []
2019-03-11 14:30:06 -耗时 : 0
2019-03-11 14:30:06 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:30:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:30:06 -HTTP METHOD : GET
2019-03-11 14:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:30:06 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:30:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:06 -<==      Total: 3
2019-03-11 14:30:06 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:30:06 -==> Parameters: 
2019-03-11 14:30:06 -<==      Total: 1
2019-03-11 14:30:06 -耗时 : 6
2019-03-11 14:30:06 -返回值 : com.bootdo.common.utils.PageUtils@1ac0b2e7
2019-03-11 14:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:30:07 -HTTP METHOD : GET
2019-03-11 14:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:30:07 -参数 : []
2019-03-11 14:30:07 -耗时 : 1
2019-03-11 14:30:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:30:07 -HTTP METHOD : GET
2019-03-11 14:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:30:07 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:30:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:07 -<==      Total: 3
2019-03-11 14:30:07 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:30:07 -==> Parameters: 
2019-03-11 14:30:07 -<==      Total: 1
2019-03-11 14:30:07 -耗时 : 6
2019-03-11 14:30:07 -返回值 : com.bootdo.common.utils.PageUtils@4687566d
2019-03-11 14:30:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:30:24 -HTTP METHOD : GET
2019-03-11 14:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:30:24 -参数 : []
2019-03-11 14:30:24 -耗时 : 1
2019-03-11 14:30:24 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:30:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:30:25 -HTTP METHOD : GET
2019-03-11 14:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:30:25 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:30:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:25 -<==      Total: 3
2019-03-11 14:30:25 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:30:25 -==> Parameters: 
2019-03-11 14:30:25 -<==      Total: 1
2019-03-11 14:30:25 -耗时 : 6
2019-03-11 14:30:25 -返回值 : com.bootdo.common.utils.PageUtils@565bd964
2019-03-11 14:30:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:30:26 -HTTP METHOD : GET
2019-03-11 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:30:26 -参数 : []
2019-03-11 14:30:26 -耗时 : 0
2019-03-11 14:30:26 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:30:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:30:26 -HTTP METHOD : GET
2019-03-11 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:30:26 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:26 -<==      Total: 3
2019-03-11 14:30:26 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:30:26 -==> Parameters: 
2019-03-11 14:30:26 -<==      Total: 1
2019-03-11 14:30:26 -耗时 : 5
2019-03-11 14:30:26 -返回值 : com.bootdo.common.utils.PageUtils@2dd9c23b
2019-03-11 14:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:30:26 -HTTP METHOD : GET
2019-03-11 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:30:26 -参数 : []
2019-03-11 14:30:26 -耗时 : 0
2019-03-11 14:30:26 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:30:26 -HTTP METHOD : GET
2019-03-11 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:30:26 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:26 -<==      Total: 3
2019-03-11 14:30:26 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:30:26 -==> Parameters: 
2019-03-11 14:30:26 -<==      Total: 1
2019-03-11 14:30:26 -耗时 : 6
2019-03-11 14:30:26 -返回值 : com.bootdo.common.utils.PageUtils@7b07d0f1
2019-03-11 14:30:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:30:27 -HTTP METHOD : GET
2019-03-11 14:30:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:30:27 -参数 : []
2019-03-11 14:30:27 -耗时 : 1
2019-03-11 14:30:27 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:30:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:30:27 -HTTP METHOD : GET
2019-03-11 14:30:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:30:27 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:30:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:27 -<==      Total: 3
2019-03-11 14:30:27 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:30:27 -==> Parameters: 
2019-03-11 14:30:27 -<==      Total: 1
2019-03-11 14:30:27 -耗时 : 5
2019-03-11 14:30:27 -返回值 : com.bootdo.common.utils.PageUtils@570ea51d
2019-03-11 14:30:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:30:28 -HTTP METHOD : GET
2019-03-11 14:30:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:30:28 -参数 : []
2019-03-11 14:30:28 -耗时 : 0
2019-03-11 14:30:28 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:30:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:30:28 -HTTP METHOD : GET
2019-03-11 14:30:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:30:28 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:30:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:28 -<==      Total: 3
2019-03-11 14:30:28 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:30:28 -==> Parameters: 
2019-03-11 14:30:28 -<==      Total: 1
2019-03-11 14:30:28 -耗时 : 6
2019-03-11 14:30:28 -返回值 : com.bootdo.common.utils.PageUtils@25dded67
2019-03-11 14:30:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:30:29 -HTTP METHOD : GET
2019-03-11 14:30:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:30:29 -参数 : []
2019-03-11 14:30:29 -耗时 : 1
2019-03-11 14:30:29 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:30:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:30:29 -HTTP METHOD : GET
2019-03-11 14:30:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:30:29 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:30:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:29 -<==      Total: 3
2019-03-11 14:30:29 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:30:29 -==> Parameters: 
2019-03-11 14:30:29 -<==      Total: 1
2019-03-11 14:30:29 -耗时 : 6
2019-03-11 14:30:29 -返回值 : com.bootdo.common.utils.PageUtils@50ab6a7b
2019-03-11 14:30:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 14:30:30 -HTTP METHOD : GET
2019-03-11 14:30:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 14:30:30 -参数 : []
2019-03-11 14:30:30 -耗时 : 0
2019-03-11 14:30:30 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 14:30:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-11 14:30:30 -HTTP METHOD : GET
2019-03-11 14:30:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-11 14:30:30 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-11 14:30:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:30 -<==      Total: 3
2019-03-11 14:30:30 -==>  Preparing: select count(*) from heat_log 
2019-03-11 14:30:30 -==> Parameters: 
2019-03-11 14:30:30 -<==      Total: 1
2019-03-11 14:30:30 -耗时 : 6
2019-03-11 14:30:30 -返回值 : com.bootdo.common.utils.PageUtils@1112fc7b
2019-03-11 14:30:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 14:30:31 -HTTP METHOD : GET
2019-03-11 14:30:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 14:30:31 -参数 : []
2019-03-11 14:30:31 -耗时 : 1
2019-03-11 14:30:31 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 14:30:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 14:30:31 -HTTP METHOD : GET
2019-03-11 14:30:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 14:30:31 -参数 : [{limit=10, offset=0}]
2019-03-11 14:30:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 14:30:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:30:31 -<==      Total: 3
2019-03-11 14:30:31 -==>  Preparing: select count(*) from water_log 
2019-03-11 14:30:31 -==> Parameters: 
2019-03-11 14:30:31 -<==      Total: 1
2019-03-11 14:30:31 -耗时 : 7
2019-03-11 14:30:31 -返回值 : com.bootdo.common.utils.PageUtils@66874cbe
2019-03-11 14:30:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 14:30:33 -HTTP METHOD : GET
2019-03-11 14:30:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 14:30:33 -参数 : []
2019-03-11 14:30:33 -耗时 : 0
2019-03-11 14:30:33 -返回值 : /moneyList/moneyList
2019-03-11 14:43:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 14:43:10 -==> Parameters: 1(Long)
2019-03-11 14:43:10 -<==      Total: 86
2019-03-11 14:43:10 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 14:43:10 -HTTP METHOD : GET
2019-03-11 14:43:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 14:43:10 -参数 : []
2019-03-11 14:43:10 -耗时 : 0
2019-03-11 14:43:10 -返回值 : elec/elec/elec
2019-03-11 14:43:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 14:43:11 -HTTP METHOD : GET
2019-03-11 14:43:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 14:43:11 -参数 : [{limit=10, offset=0}]
2019-03-11 14:43:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 14:43:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:43:11 -<==      Total: 4
2019-03-11 14:43:11 -==>  Preparing: select count(*) from elec 
2019-03-11 14:43:11 -==> Parameters: 
2019-03-11 14:43:11 -<==      Total: 1
2019-03-11 14:43:11 -耗时 : 8
2019-03-11 14:43:11 -返回值 : com.bootdo.common.utils.PageUtils@19694e8
2019-03-11 14:43:21 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 14:43:21 -HTTP METHOD : GET
2019-03-11 14:43:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 14:43:21 -参数 : []
2019-03-11 14:43:21 -耗时 : 1
2019-03-11 14:43:21 -返回值 : elec/elecInto/elecInto
2019-03-11 14:43:22 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 14:43:22 -HTTP METHOD : GET
2019-03-11 14:43:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 14:43:22 -参数 : []
2019-03-11 14:43:22 -耗时 : 0
2019-03-11 14:43:22 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 14:44:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 14:44:00 -HTTP METHOD : GET
2019-03-11 14:44:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 14:44:00 -参数 : []
2019-03-11 14:44:00 -耗时 : 1
2019-03-11 14:44:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 14:44:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 14:44:00 -HTTP METHOD : GET
2019-03-11 14:44:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 14:44:00 -参数 : [{limit=10, offset=0}]
2019-03-11 14:44:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 14:44:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:44:00 -<==      Total: 3
2019-03-11 14:44:00 -==>  Preparing: select count(*) from elec_log 
2019-03-11 14:44:00 -==> Parameters: 
2019-03-11 14:44:00 -<==      Total: 1
2019-03-11 14:44:00 -耗时 : 7
2019-03-11 14:44:00 -返回值 : com.bootdo.common.utils.PageUtils@717e3f6d
2019-03-11 14:44:03 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 14:44:03 -HTTP METHOD : GET
2019-03-11 14:44:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 14:44:03 -参数 : []
2019-03-11 14:44:03 -耗时 : 1
2019-03-11 14:44:03 -返回值 : elec/elecInto/elecInto
2019-03-11 14:44:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 14:44:21 -HTTP METHOD : GET
2019-03-11 14:44:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 14:44:21 -参数 : []
2019-03-11 14:44:21 -耗时 : 16
2019-03-11 14:44:21 -返回值 : /moneyList/moneyList
2019-03-11 14:44:49 -Validating all active sessions...
2019-03-11 14:44:49 -Finished session validation.  No sessions were stopped.
2019-03-11 14:45:09 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 14:45:09 -HTTP METHOD : GET
2019-03-11 14:45:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 14:45:09 -参数 : []
2019-03-11 14:45:09 -耗时 : 0
2019-03-11 14:45:09 -返回值 : elec/elec/elec
2019-03-11 14:45:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 14:45:09 -HTTP METHOD : GET
2019-03-11 14:45:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 14:45:09 -参数 : [{limit=10, offset=0}]
2019-03-11 14:45:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 14:45:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 14:45:09 -<==      Total: 4
2019-03-11 14:45:09 -==>  Preparing: select count(*) from elec 
2019-03-11 14:45:09 -==> Parameters: 
2019-03-11 14:45:09 -<==      Total: 1
2019-03-11 14:45:09 -耗时 : 8
2019-03-11 14:45:09 -返回值 : com.bootdo.common.utils.PageUtils@1716e444
2019-03-11 14:45:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 872]
2019-03-11 14:50:04 -请求地址 : http://localhost:8081/index
2019-03-11 14:50:04 -HTTP METHOD : GET
2019-03-11 14:50:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 14:50:04 -参数 : [{}]
2019-03-11 14:50:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 14:50:04 -==> Parameters: 1(Long)
2019-03-11 14:50:04 -<==      Total: 45
2019-03-11 14:50:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 14:50:04 -==> Parameters: 138(Long)
2019-03-11 14:50:04 -<==      Total: 1
2019-03-11 14:50:04 -耗时 : 23
2019-03-11 14:50:04 -返回值 : index_v1
2019-03-11 14:50:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 14:50:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 14:50:04.242(Timestamp)
2019-03-11 14:50:04 -<==    Updates: 1
2019-03-11 14:50:04 -请求地址 : http://localhost:8081/main
2019-03-11 14:50:04 -HTTP METHOD : GET
2019-03-11 14:50:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:50:04 -参数 : []
2019-03-11 14:50:04 -耗时 : 0
2019-03-11 14:50:04 -返回值 : main
2019-03-11 14:50:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 14:50:04 -HTTP METHOD : GET
2019-03-11 14:50:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 14:50:04 -参数 : []
2019-03-11 14:50:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 14:50:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 14:50:04 -<==      Total: 0
2019-03-11 14:50:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 14:50:04 -==> Parameters: 1(Long), 0(String)
2019-03-11 14:50:04 -<==      Total: 1
2019-03-11 14:50:04 -耗时 : 7
2019-03-11 14:50:04 -返回值 : com.bootdo.common.utils.PageUtils@2451c559
2019-03-11 14:50:04 -请求地址 : http://localhost:8081/main
2019-03-11 14:50:04 -HTTP METHOD : GET
2019-03-11 14:50:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 14:50:04 -参数 : []
2019-03-11 14:50:04 -耗时 : 1
2019-03-11 14:50:04 -返回值 : main
2019-03-11 14:51:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 14:51:24 -HTTP METHOD : GET
2019-03-11 14:51:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 14:51:24 -参数 : []
2019-03-11 14:51:24 -耗时 : 1
2019-03-11 14:51:24 -返回值 : /moneyList/moneyList
2019-03-11 15:15:29 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1304]
2019-03-11 15:35:26 -请求地址 : http://localhost:8081/login;JSESSIONID=c19fa69a-7cc6-461a-bbb5-1566b10b86ef
2019-03-11 15:35:26 -HTTP METHOD : GET
2019-03-11 15:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 15:35:26 -参数 : [{}]
2019-03-11 15:35:26 -耗时 : 1
2019-03-11 15:35:26 -返回值 : login
2019-03-11 15:35:26 -请求地址 : http://localhost:8081/login;JSESSIONID=c19fa69a-7cc6-461a-bbb5-1566b10b86ef
2019-03-11 15:35:26 -HTTP METHOD : GET
2019-03-11 15:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 15:35:26 -参数 : [{}]
2019-03-11 15:35:26 -耗时 : 0
2019-03-11 15:35:26 -返回值 : login
2019-03-11 15:35:27 -请求地址 : http://localhost:8081/getVerify
2019-03-11 15:35:27 -HTTP METHOD : GET
2019-03-11 15:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 15:35:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6be415f3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ce740ff]
2019-03-11 15:35:27 -3734
2019-03-11 15:35:27 -耗时 : 57
2019-03-11 15:35:27 -返回值 : null
2019-03-11 15:35:27 -请求地址 : http://localhost:8081/getVerify
2019-03-11 15:35:27 -HTTP METHOD : GET
2019-03-11 15:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 15:35:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@239d385, org.apache.shiro.web.servlet.ShiroHttpServletResponse@83a5341]
2019-03-11 15:35:27 -5012
2019-03-11 15:35:27 -耗时 : 36
2019-03-11 15:35:27 -返回值 : null
2019-03-11 15:35:32 -请求地址 : http://localhost:8081/login
2019-03-11 15:35:32 -HTTP METHOD : POST
2019-03-11 15:35:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 15:35:32 -参数 : [admin, 111111, 5012, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1acac661]
2019-03-11 15:35:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 15:35:32 -==> Parameters: admin(String)
2019-03-11 15:35:32 -<==      Total: 1
2019-03-11 15:35:32 -耗时 : 115
2019-03-11 15:35:32 -返回值 : {msg=操作成功, code=0}
2019-03-11 15:35:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 15:35:32 -==> Parameters: 1(Long), admin(String), 登录(String), 116(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 15:35:32.96(Timestamp)
2019-03-11 15:35:32 -请求地址 : http://localhost:8081/index
2019-03-11 15:35:32 -HTTP METHOD : GET
2019-03-11 15:35:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 15:35:32 -参数 : [{}]
2019-03-11 15:35:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 15:35:33 -==> Parameters: 1(Long)
2019-03-11 15:35:33 -<==      Total: 45
2019-03-11 15:35:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 15:35:33 -==> Parameters: 138(Long)
2019-03-11 15:35:33 -<==      Total: 1
2019-03-11 15:35:33 -耗时 : 28
2019-03-11 15:35:33 -返回值 : index_v1
2019-03-11 15:35:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 15:35:33 -<==    Updates: 1
2019-03-11 15:35:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 15:35:33.022(Timestamp)
2019-03-11 15:35:33 -<==    Updates: 1
2019-03-11 15:35:33 -请求地址 : http://localhost:8081/main
2019-03-11 15:35:33 -HTTP METHOD : GET
2019-03-11 15:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 15:35:33 -参数 : []
2019-03-11 15:35:33 -耗时 : 1
2019-03-11 15:35:33 -返回值 : main
2019-03-11 15:35:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 15:35:33 -HTTP METHOD : GET
2019-03-11 15:35:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 15:35:33 -参数 : []
2019-03-11 15:35:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 15:35:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 15:35:33 -<==      Total: 0
2019-03-11 15:35:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 15:35:33 -==> Parameters: 1(Long), 0(String)
2019-03-11 15:35:33 -<==      Total: 1
2019-03-11 15:35:33 -耗时 : 38
2019-03-11 15:35:33 -返回值 : com.bootdo.common.utils.PageUtils@26563e62
2019-03-11 15:35:33 -请求地址 : http://localhost:8081/main
2019-03-11 15:35:33 -HTTP METHOD : GET
2019-03-11 15:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 15:35:33 -参数 : []
2019-03-11 15:35:33 -耗时 : 0
2019-03-11 15:35:33 -返回值 : main
2019-03-11 15:35:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 15:35:42 -==> Parameters: 1(Long)
2019-03-11 15:35:42 -<==      Total: 86
2019-03-11 15:35:42 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 15:35:42 -HTTP METHOD : GET
2019-03-11 15:35:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 15:35:42 -参数 : []
2019-03-11 15:35:42 -耗时 : 1
2019-03-11 15:35:42 -返回值 : elec/elec/elec
2019-03-11 15:35:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 15:35:42 -HTTP METHOD : GET
2019-03-11 15:35:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 15:35:42 -参数 : [{limit=10, offset=0}]
2019-03-11 15:35:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 15:35:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 15:35:43 -<==      Total: 4
2019-03-11 15:35:43 -==>  Preparing: select count(*) from elec 
2019-03-11 15:35:43 -==> Parameters: 
2019-03-11 15:35:43 -<==      Total: 1
2019-03-11 15:35:43 -耗时 : 41
2019-03-11 15:35:43 -返回值 : com.bootdo.common.utils.PageUtils@18941470
2019-03-11 15:36:02 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 15:36:02 -HTTP METHOD : GET
2019-03-11 15:36:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 15:36:02 -参数 : []
2019-03-11 15:36:02 -耗时 : 0
2019-03-11 15:36:02 -返回值 : elec/elecInto/elecInto
2019-03-11 15:36:03 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 15:36:03 -HTTP METHOD : GET
2019-03-11 15:36:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 15:36:03 -参数 : []
2019-03-11 15:36:03 -耗时 : 1
2019-03-11 15:36:03 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 15:36:07 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-11 15:36:07 -HTTP METHOD : GET
2019-03-11 15:36:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-11 15:36:07 -参数 : []
2019-03-11 15:36:07 -耗时 : 0
2019-03-11 15:36:07 -返回值 : elec/elecPrice/elecPrice
2019-03-11 15:36:08 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-11 15:36:08 -HTTP METHOD : GET
2019-03-11 15:36:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-11 15:36:08 -参数 : [{limit=10, offset=0}]
2019-03-11 15:36:08 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-11 15:36:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 15:36:08 -<==      Total: 2
2019-03-11 15:36:08 -==>  Preparing: select count(*) from elec_price 
2019-03-11 15:36:08 -==> Parameters: 
2019-03-11 15:36:08 -<==      Total: 1
2019-03-11 15:36:08 -耗时 : 103
2019-03-11 15:36:08 -返回值 : com.bootdo.common.utils.PageUtils@6f81740a
2019-03-11 15:36:29 -请求地址 : http://localhost:8081/heat/heat
2019-03-11 15:36:29 -HTTP METHOD : GET
2019-03-11 15:36:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-11 15:36:29 -参数 : []
2019-03-11 15:36:29 -耗时 : 1
2019-03-11 15:36:29 -返回值 : heat/heat/heat
2019-03-11 15:37:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 15:37:21 -HTTP METHOD : GET
2019-03-11 15:37:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 15:37:21 -参数 : []
2019-03-11 15:37:21 -耗时 : 1
2019-03-11 15:37:21 -返回值 : /moneyList/moneyList
2019-03-11 15:44:49 -Validating all active sessions...
2019-03-11 15:44:49 -Finished session validation.  No sessions were stopped.
2019-03-11 15:45:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 9096 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 15:45:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 15:45:36 -The following profiles are active: dev
2019-03-11 15:45:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a97744: startup date [Mon Mar 11 15:45:36 CST 2019]; root of context hierarchy
2019-03-11 15:45:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 15:45:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8b84c4e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7dddf387] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 15:45:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 15:45:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 15:45:47 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 15:45:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 15:45:47 -Starting service [Tomcat]
2019-03-11 15:45:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 15:45:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 15:45:48 -Initializing Spring embedded WebApplicationContext
2019-03-11 15:45:48 -Root WebApplicationContext: initialization completed in 11847 ms
2019-03-11 15:45:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 15:45:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 15:45:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 15:45:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 15:45:49 -Filter xssFilter was not registered (disabled)
2019-03-11 15:45:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 15:45:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 15:45:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 15:45:49 -Servlet dispatcherServlet mapped to [/]
2019-03-11 15:45:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a97744: startup date [Mon Mar 11 15:45:36 CST 2019]; root of context hierarchy
2019-03-11 15:45:53 -Using default implementation for ThreadExecutor
2019-03-11 15:45:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 15:45:53 -Quartz Scheduler v.2.2.1 created.
2019-03-11 15:45:53 -RAMJobStore initialized.
2019-03-11 15:45:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 15:45:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 15:45:53 -Quartz scheduler version: 2.2.1
2019-03-11 15:45:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e355249
2019-03-11 15:45:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 15:45:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 15:46:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 15:46:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 15:46:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 15:46:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 15:46:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 15:46:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 15:46:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 15:46:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 15:46:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 15:46:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 15:46:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 15:46:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 15:46:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 15:46:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 15:46:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 15:46:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 15:46:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 15:46:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 15:46:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 15:46:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 15:46:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 15:46:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 15:46:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 15:46:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 15:46:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 15:46:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 15:46:01 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 15:46:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 15:46:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 15:46:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 15:46:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 15:46:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 15:46:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 15:46:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 15:46:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 15:46:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 15:46:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 15:46:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:01 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 15:46:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 15:46:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 15:46:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 15:46:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 15:46:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 15:46:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 15:46:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 15:46:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-11 15:46:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 15:46:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 15:46:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 15:46:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 15:46:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 15:46:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 15:46:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 15:46:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 15:46:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 15:46:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 15:46:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 15:46:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 15:46:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 15:46:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 15:46:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 15:46:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 15:46:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 15:46:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 15:46:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 15:46:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 15:46:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 15:46:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 15:46:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 15:46:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 15:46:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 15:46:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 15:46:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 15:46:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 15:46:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 15:46:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 15:46:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 15:46:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 15:46:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 15:46:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 15:46:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 15:46:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 15:46:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 15:46:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 15:46:02 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 15:46:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 15:46:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 15:46:02 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 15:46:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 15:46:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 15:46:02 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 15:46:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 15:46:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 15:46:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 15:46:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 15:46:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 15:46:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 15:46:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 15:46:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 15:46:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a97744: startup date [Mon Mar 11 15:45:36 CST 2019]; root of context hierarchy
2019-03-11 15:46:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 15:46:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 15:46:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 15:46:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 15:46:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 15:46:08 -Registering beans for JMX exposure on startup
2019-03-11 15:46:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 15:46:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 15:46:08 -Starting beans in phase 2147483647
2019-03-11 15:46:08 -Context refreshed
2019-03-11 15:46:08 -Found 1 custom documentation plugin(s)
2019-03-11 15:46:08 -Scanning for api listing references
2019-03-11 15:46:08 -Generating unique operation named: removeUsingPOST_1
2019-03-11 15:46:09 -Generating unique operation named: addUsingGET_1
2019-03-11 15:46:09 -Generating unique operation named: editUsingGET_1
2019-03-11 15:46:09 -Generating unique operation named: listUsingGET_1
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_2
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_3
2019-03-11 15:46:09 -Generating unique operation named: saveUsingPOST_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingGET_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPOST_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPUT_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 15:46:09 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 15:46:09 -Generating unique operation named: addUsingGET_2
2019-03-11 15:46:09 -Generating unique operation named: editUsingGET_2
2019-03-11 15:46:09 -Generating unique operation named: listUsingGET_2
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_4
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_5
2019-03-11 15:46:09 -Generating unique operation named: saveUsingPOST_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingGET_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPOST_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPUT_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 15:46:09 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 15:46:09 -Generating unique operation named: addUsingGET_3
2019-03-11 15:46:09 -Generating unique operation named: editUsingGET_3
2019-03-11 15:46:09 -Generating unique operation named: listUsingGET_3
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_6
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_7
2019-03-11 15:46:09 -Generating unique operation named: saveUsingPOST_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingGET_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPOST_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPUT_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 15:46:09 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 15:46:09 -Generating unique operation named: addUsingGET_4
2019-03-11 15:46:09 -Generating unique operation named: editUsingGET_4
2019-03-11 15:46:09 -Generating unique operation named: listUsingGET_4
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_8
2019-03-11 15:46:09 -Generating unique operation named: removeUsingPOST_9
2019-03-11 15:46:09 -Generating unique operation named: saveUsingPOST_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingGET_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPOST_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPUT_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 15:46:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_5
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_5
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_5
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_10
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_11
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 15:46:10 -Generating unique operation named: ElecUsingGET_1
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_6
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_6
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_6
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_12
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_13
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_7
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_7
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_7
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_8
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_8
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_14
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_15
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_8
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_9
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_9
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_16
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_17
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_9
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_10
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_10
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_18
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_19
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_10
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_11
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_11
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_20
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_21
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingGET_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_11
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPUT_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 15:46:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 15:46:10 -Generating unique operation named: addUsingGET_11
2019-03-11 15:46:10 -Generating unique operation named: editUsingGET_12
2019-03-11 15:46:10 -Generating unique operation named: infoUsingGET_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingPOST_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingPUT_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 15:46:10 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_12
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_22
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_23
2019-03-11 15:46:10 -Generating unique operation named: saveUsingPOST_11
2019-03-11 15:46:10 -Generating unique operation named: updateUsingPOST_12
2019-03-11 15:46:10 -Generating unique operation named: listUsingGET_13
2019-03-11 15:46:10 -Generating unique operation named: removeUsingPOST_24
2019-03-11 15:46:11 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_12
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_13
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_14
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_25
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_12
2019-03-11 15:46:11 -Generating unique operation named: treeUsingGET_1
2019-03-11 15:46:11 -Generating unique operation named: treeUsingGET_2
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_13
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_13
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_14
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_15
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_26
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_27
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingGET_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_14
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPUT_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 15:46:11 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_14
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_15
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_16
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_28
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_29
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_14
2019-03-11 15:46:11 -Generating unique operation named: updateUsingGET_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_15
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPUT_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 15:46:11 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_15
2019-03-11 15:46:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_16
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_17
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_15
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_16
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_16
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_18
2019-03-11 15:46:11 -Generating unique operation named: listUsingHEAD_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingPOST_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingPUT_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingPATCH_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingDELETE_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingTRACE_1
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_16
2019-03-11 15:46:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_17
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_19
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_30
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_17
2019-03-11 15:46:11 -Generating unique operation named: treeUsingGET_3
2019-03-11 15:46:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_17
2019-03-11 15:46:11 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_17
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_18
2019-03-11 15:46:11 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_20
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_31
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_32
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_18
2019-03-11 15:46:11 -Generating unique operation named: updateUsingGET_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPOST_18
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPUT_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 15:46:11 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 15:46:11 -Generating unique operation named: addUsingGET_18
2019-03-11 15:46:11 -Generating unique operation named: editUsingGET_19
2019-03-11 15:46:11 -Generating unique operation named: listUsingGET_21
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_33
2019-03-11 15:46:11 -Generating unique operation named: removeUsingPOST_34
2019-03-11 15:46:11 -Generating unique operation named: saveUsingPOST_19
2019-03-11 15:46:12 -Generating unique operation named: updateUsingGET_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPOST_19
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPUT_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 15:46:12 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 15:46:12 -Generating unique operation named: addUsingGET_19
2019-03-11 15:46:12 -Generating unique operation named: editUsingGET_20
2019-03-11 15:46:12 -Generating unique operation named: listUsingGET_22
2019-03-11 15:46:12 -Generating unique operation named: removeUsingPOST_35
2019-03-11 15:46:12 -Generating unique operation named: removeUsingPOST_36
2019-03-11 15:46:12 -Generating unique operation named: saveUsingPOST_20
2019-03-11 15:46:12 -Generating unique operation named: updateUsingGET_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPOST_20
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPUT_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 15:46:12 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 15:46:12 -Generating unique operation named: addUsingGET_20
2019-03-11 15:46:12 -Generating unique operation named: editUsingGET_21
2019-03-11 15:46:12 -Generating unique operation named: listUsingGET_23
2019-03-11 15:46:12 -Generating unique operation named: removeUsingPOST_37
2019-03-11 15:46:12 -Generating unique operation named: removeUsingPOST_38
2019-03-11 15:46:12 -Generating unique operation named: saveUsingPOST_21
2019-03-11 15:46:12 -Generating unique operation named: updateUsingGET_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPOST_21
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPUT_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 15:46:12 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 15:46:12 -Starting Quartz Scheduler now
2019-03-11 15:46:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 15:46:12 -Starting...
2019-03-11 15:46:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 15:46:12 -Started.
2019-03-11 15:46:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 15:46:12 -Using a shared selector for servlet write/read
2019-03-11 15:46:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 15:46:12 -Started BootdoApplication in 38.909 seconds (JVM running for 40.747)
2019-03-11 15:46:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 15:46:13 -==> Parameters: 
2019-03-11 15:46:13 -<==      Total: 1
2019-03-11 15:46:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 15:46:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 15:46:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-03-11 15:46:26 -Enabling session validation scheduler...
2019-03-11 15:46:27 -请求地址 : http://localhost:8081/login;JSESSIONID=20130765-5929-46af-9087-3e35aecfe51e
2019-03-11 15:46:27 -HTTP METHOD : GET
2019-03-11 15:46:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 15:46:27 -参数 : [{}]
2019-03-11 15:46:27 -耗时 : 5
2019-03-11 15:46:27 -返回值 : login
2019-03-11 15:46:28 -请求地址 : http://localhost:8081/getVerify
2019-03-11 15:46:28 -HTTP METHOD : GET
2019-03-11 15:46:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 15:46:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@78c6a0f3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4e19390a]
2019-03-11 15:46:32 -7742
2019-03-11 15:46:32 -耗时 : 3776
2019-03-11 15:46:32 -返回值 : null
2019-03-11 15:46:56 -请求地址 : http://localhost:8081/login
2019-03-11 15:46:56 -HTTP METHOD : POST
2019-03-11 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 15:46:56 -参数 : [admin, 111111, 7742, org.apache.shiro.web.servlet.ShiroHttpServletRequest@f5b8e92]
2019-03-11 15:46:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 15:46:56 -==> Parameters: admin(String)
2019-03-11 15:46:56 -<==      Total: 1
2019-03-11 15:46:56 -耗时 : 183
2019-03-11 15:46:56 -返回值 : {msg=操作成功, code=0}
2019-03-11 15:46:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 15:46:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 15:46:56 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 15:46:56.341(Timestamp)
2019-03-11 15:46:56 -<==    Updates: 1
2019-03-11 15:46:56 -请求地址 : http://localhost:8081/index
2019-03-11 15:46:56 -HTTP METHOD : GET
2019-03-11 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 15:46:56 -参数 : [{}]
2019-03-11 15:46:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 15:46:56 -==> Parameters: 1(Long)
2019-03-11 15:46:56 -<==      Total: 45
2019-03-11 15:46:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 15:46:56 -==> Parameters: 138(Long)
2019-03-11 15:46:56 -<==      Total: 1
2019-03-11 15:46:56 -耗时 : 226
2019-03-11 15:46:56 -返回值 : index_v1
2019-03-11 15:46:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 15:46:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 226(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-id-badge","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}(String), 127.0.0.1(String), 2019-03-11 15:46:56.755(Timestamp)
2019-03-11 15:46:56 -<==    Updates: 1
2019-03-11 15:46:56 -请求地址 : http://localhost:8081/main
2019-03-11 15:46:56 -HTTP METHOD : GET
2019-03-11 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 15:46:56 -参数 : []
2019-03-11 15:46:56 -耗时 : 1
2019-03-11 15:46:56 -返回值 : main
2019-03-11 15:46:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 15:46:57 -HTTP METHOD : GET
2019-03-11 15:46:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 15:46:57 -参数 : []
2019-03-11 15:46:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 15:46:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 15:46:57 -<==      Total: 0
2019-03-11 15:46:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 15:46:57 -==> Parameters: 1(Long), 0(String)
2019-03-11 15:46:57 -<==      Total: 1
2019-03-11 15:46:57 -耗时 : 55
2019-03-11 15:46:57 -返回值 : com.bootdo.common.utils.PageUtils@5e6b03f7
2019-03-11 15:46:57 -请求地址 : http://localhost:8081/main
2019-03-11 15:46:57 -HTTP METHOD : GET
2019-03-11 15:46:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 15:46:57 -参数 : []
2019-03-11 15:46:57 -耗时 : 4
2019-03-11 15:46:57 -返回值 : main
2019-03-11 15:47:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-11 15:47:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 15:47:04 -==> Parameters: 1(Long)
2019-03-11 15:47:04 -<==      Total: 86
2019-03-11 15:47:04 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 15:47:04 -HTTP METHOD : GET
2019-03-11 15:47:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 15:47:04 -参数 : []
2019-03-11 15:47:04 -耗时 : 0
2019-03-11 15:47:04 -返回值 : elec/elec/elec
2019-03-11 15:47:05 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 15:47:05 -HTTP METHOD : GET
2019-03-11 15:47:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 15:47:05 -参数 : [{limit=10, offset=0}]
2019-03-11 15:47:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 15:47:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 15:47:05 -<==      Total: 4
2019-03-11 15:47:05 -==>  Preparing: select count(*) from elec 
2019-03-11 15:47:05 -==> Parameters: 
2019-03-11 15:47:05 -<==      Total: 1
2019-03-11 15:47:05 -耗时 : 103
2019-03-11 15:47:05 -返回值 : com.bootdo.common.utils.PageUtils@4d24539c
2019-03-11 15:47:06 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 15:47:06 -HTTP METHOD : GET
2019-03-11 15:47:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 15:47:06 -参数 : []
2019-03-11 15:47:06 -耗时 : 0
2019-03-11 15:47:06 -返回值 : elec/elecInto/elecInto
2019-03-11 15:47:23 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 15:47:23 -HTTP METHOD : GET
2019-03-11 15:47:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 15:47:23 -参数 : []
2019-03-11 15:47:23 -耗时 : 0
2019-03-11 15:47:23 -返回值 : /moneyList/moneyList
2019-03-11 15:51:29 -请求地址 : http://localhost:8081/print/print
2019-03-11 15:51:29 -HTTP METHOD : GET
2019-03-11 15:51:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 15:51:29 -参数 : []
2019-03-11 15:51:29 -耗时 : 1
2019-03-11 15:51:29 -返回值 : print/print/print
2019-03-11 15:55:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 15:55:42 -HTTP METHOD : GET
2019-03-11 15:55:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 15:55:42 -参数 : []
2019-03-11 15:55:42 -耗时 : 0
2019-03-11 15:55:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 15:55:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 15:55:42 -HTTP METHOD : GET
2019-03-11 15:55:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 15:55:42 -参数 : [{limit=10, offset=0}]
2019-03-11 15:55:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 15:55:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 15:55:42 -<==      Total: 3
2019-03-11 15:55:42 -==>  Preparing: select count(*) from elec_log 
2019-03-11 15:55:42 -==> Parameters: 
2019-03-11 15:55:42 -<==      Total: 1
2019-03-11 15:55:42 -耗时 : 36
2019-03-11 15:55:42 -返回值 : com.bootdo.common.utils.PageUtils@5c3a6580
2019-03-11 16:07:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:07:33 -==> Parameters: 1(Long)
2019-03-11 16:07:33 -<==      Total: 86
2019-03-11 16:07:33 -请求地址 : http://localhost:8081/sys/menu/
2019-03-11 16:07:33 -HTTP METHOD : GET
2019-03-11 16:07:33 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-11 16:07:33 -参数 : [{}]
2019-03-11 16:07:33 -耗时 : 0
2019-03-11 16:07:33 -返回值 : system/menu/menu
2019-03-11 16:07:33 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-11 16:07:33 -HTTP METHOD : GET
2019-03-11 16:07:33 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-11 16:07:33 -参数 : [{sort=order_num}]
2019-03-11 16:07:33 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-11 16:07:33 -==> Parameters: 
2019-03-11 16:07:33 -<==      Total: 105
2019-03-11 16:07:33 -耗时 : 71
2019-03-11 16:07:33 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-id-badge', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-11 16:08:42 -请求地址 : http://localhost:8081/sys/menu/edit/149
2019-03-11 16:08:42 -HTTP METHOD : GET
2019-03-11 16:08:42 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-11 16:08:42 -参数 : [{}, 149]
2019-03-11 16:08:42 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:08:42 -==> Parameters: 149(Long)
2019-03-11 16:08:42 -<==      Total: 1
2019-03-11 16:08:42 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:08:42 -==> Parameters: 108(Long)
2019-03-11 16:08:42 -<==      Total: 1
2019-03-11 16:08:42 -耗时 : 32
2019-03-11 16:08:42 -返回值 : system/menu/edit
2019-03-11 16:08:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:08:42 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 34(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-11 16:08:42.292(Timestamp)
2019-03-11 16:08:42 -<==    Updates: 1
2019-03-11 16:11:10 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-11 16:11:10 -HTTP METHOD : POST
2019-03-11 16:11:10 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-11 16:11:10 -参数 : [MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-address-card-o', orderNum=null, gmtCreate=null, gmtModified=null}]
2019-03-11 16:11:10 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ? where menu_id = ? 
2019-03-11 16:11:10 -==> Parameters: 108(Long), 票据记录(String), /print/print(String), print:print:print(String), 1(Integer), fa fa-address-card-o(String), 149(Long)
2019-03-11 16:11:10 -<==    Updates: 1
2019-03-11 16:11:10 -耗时 : 179
2019-03-11 16:11:10 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:11:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:11:10 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 179(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-11 16:11:10.471(Timestamp)
2019-03-11 16:11:10 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-11 16:11:10 -HTTP METHOD : GET
2019-03-11 16:11:10 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-11 16:11:10 -参数 : [{sort=order_num}]
2019-03-11 16:11:10 -<==    Updates: 1
2019-03-11 16:11:10 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-11 16:11:10 -==> Parameters: 
2019-03-11 16:11:10 -<==      Total: 105
2019-03-11 16:11:10 -耗时 : 121
2019-03-11 16:11:10 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-address-card-o', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-11 16:11:16 -请求地址 : http://localhost:8081/sys/menu/edit/149
2019-03-11 16:11:16 -HTTP METHOD : GET
2019-03-11 16:11:16 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-11 16:11:16 -参数 : [{}, 149]
2019-03-11 16:11:16 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:11:16 -==> Parameters: 149(Long)
2019-03-11 16:11:16 -<==      Total: 1
2019-03-11 16:11:16 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:11:16 -==> Parameters: 108(Long)
2019-03-11 16:11:16 -<==      Total: 1
2019-03-11 16:11:16 -耗时 : 106
2019-03-11 16:11:16 -返回值 : system/menu/edit
2019-03-11 16:11:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:11:16 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 106(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-11 16:11:16.707(Timestamp)
2019-03-11 16:11:16 -<==    Updates: 1
2019-03-11 16:11:28 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-11 16:11:28 -HTTP METHOD : POST
2019-03-11 16:11:28 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-11 16:11:28 -参数 : [MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-address-book-o', orderNum=null, gmtCreate=null, gmtModified=null}]
2019-03-11 16:11:28 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ? where menu_id = ? 
2019-03-11 16:11:28 -==> Parameters: 108(Long), 票据记录(String), /print/print(String), print:print:print(String), 1(Integer), fa fa-address-book-o(String), 149(Long)
2019-03-11 16:11:28 -<==    Updates: 1
2019-03-11 16:11:28 -耗时 : 372
2019-03-11 16:11:28 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:11:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:11:28 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 372(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-11 16:11:28.828(Timestamp)
2019-03-11 16:11:28 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-11 16:11:28 -HTTP METHOD : GET
2019-03-11 16:11:28 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-11 16:11:28 -参数 : [{sort=order_num}]
2019-03-11 16:11:28 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-11 16:11:28 -==> Parameters: 
2019-03-11 16:11:28 -<==    Updates: 1
2019-03-11 16:11:28 -<==      Total: 105
2019-03-11 16:11:28 -耗时 : 23
2019-03-11 16:11:28 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-address-book-o', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-11 16:11:33 -请求地址 : http://localhost:8081/sys/menu/edit/149
2019-03-11 16:11:33 -HTTP METHOD : GET
2019-03-11 16:11:33 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-11 16:11:33 -参数 : [{}, 149]
2019-03-11 16:11:33 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:11:33 -==> Parameters: 149(Long)
2019-03-11 16:11:33 -<==      Total: 1
2019-03-11 16:11:33 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:11:33 -==> Parameters: 108(Long)
2019-03-11 16:11:33 -<==      Total: 1
2019-03-11 16:11:33 -耗时 : 14
2019-03-11 16:11:33 -返回值 : system/menu/edit
2019-03-11 16:11:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:11:33 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 15(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-11 16:11:33.48(Timestamp)
2019-03-11 16:11:33 -<==    Updates: 1
2019-03-11 16:11:52 -请求地址 : http://localhost:8081/sys/menu/update
2019-03-11 16:11:52 -HTTP METHOD : POST
2019-03-11 16:11:52 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-03-11 16:11:52 -参数 : [MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}]
2019-03-11 16:11:52 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-03-11 16:11:52 -==> Parameters: 108(Long), 票据记录(String), /print/print(String), print:print:print(String), 1(Integer), fa fa-bomb(String), 1(Integer), 149(Long)
2019-03-11 16:11:52 -<==    Updates: 1
2019-03-11 16:11:52 -耗时 : 150
2019-03-11 16:11:52 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:11:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:11:53 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 150(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-03-11 16:11:52.996(Timestamp)
2019-03-11 16:11:53 -<==    Updates: 1
2019-03-11 16:11:53 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-11 16:11:53 -HTTP METHOD : GET
2019-03-11 16:11:53 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-11 16:11:53 -参数 : [{sort=order_num}]
2019-03-11 16:11:53 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-11 16:11:53 -==> Parameters: 
2019-03-11 16:11:53 -<==      Total: 105
2019-03-11 16:11:53 -耗时 : 18
2019-03-11 16:11:53 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-11 16:12:03 -请求地址 : http://localhost:8081/sys/menu/edit/108
2019-03-11 16:12:03 -HTTP METHOD : GET
2019-03-11 16:12:03 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-11 16:12:03 -参数 : [{}, 108]
2019-03-11 16:12:03 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:12:03 -==> Parameters: 108(Long)
2019-03-11 16:12:03 -<==      Total: 1
2019-03-11 16:12:03 -耗时 : 6
2019-03-11 16:12:03 -返回值 : system/menu/edit
2019-03-11 16:12:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:12:03 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 6(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-11 16:12:03.159(Timestamp)
2019-03-11 16:12:03 -<==    Updates: 1
2019-03-11 16:17:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-03-11 16:27:30 -Starting BootdoApplication on ZJZL-20180906VX with PID 13144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 16:27:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 16:27:30 -The following profiles are active: dev
2019-03-11 16:27:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 11 16:27:30 CST 2019]; root of context hierarchy
2019-03-11 16:27:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 16:27:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$364caf91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$28a5de38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 16:27:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 16:27:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:27:39 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 16:27:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 16:27:39 -Starting service [Tomcat]
2019-03-11 16:27:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 16:27:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 16:27:39 -Initializing Spring embedded WebApplicationContext
2019-03-11 16:27:39 -Root WebApplicationContext: initialization completed in 9300 ms
2019-03-11 16:27:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 16:27:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 16:27:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 16:27:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 16:27:40 -Filter xssFilter was not registered (disabled)
2019-03-11 16:27:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 16:27:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 16:27:40 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 16:27:40 -Servlet dispatcherServlet mapped to [/]
2019-03-11 16:27:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 11 16:27:30 CST 2019]; root of context hierarchy
2019-03-11 16:27:43 -Using default implementation for ThreadExecutor
2019-03-11 16:27:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 16:27:43 -Quartz Scheduler v.2.2.1 created.
2019-03-11 16:27:43 -RAMJobStore initialized.
2019-03-11 16:27:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 16:27:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 16:27:43 -Quartz scheduler version: 2.2.1
2019-03-11 16:27:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@49639118
2019-03-11 16:27:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 16:27:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 16:27:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 16:27:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 16:27:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 16:27:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 16:27:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 16:27:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 16:27:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 16:27:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 16:27:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 16:27:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 16:27:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 16:27:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 16:27:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 16:27:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:27:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:27:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 16:27:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 16:27:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 16:27:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 16:27:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 16:27:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 16:27:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 16:27:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 16:27:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:27:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 16:27:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 16:27:47 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 16:27:47 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:27:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 16:27:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 16:27:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 16:27:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 16:27:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 16:27:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 16:27:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 16:27:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 16:27:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 16:27:47 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 16:27:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 16:27:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-11 16:27:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 16:27:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 16:27:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 16:27:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 16:27:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 16:27:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 16:27:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 16:27:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 16:27:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 16:27:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 16:27:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 16:27:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 16:27:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 16:27:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:27:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 16:27:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 16:27:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 16:27:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 16:27:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 16:27:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 16:27:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 16:27:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 16:27:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 16:27:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 16:27:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 16:27:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 16:27:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 16:27:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 16:27:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:27:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:27:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 16:27:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:27:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 16:27:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 16:27:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 16:27:47 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:27:47 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 16:27:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:27:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 16:27:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:27:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 16:27:47 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:27:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 16:27:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:27:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 16:27:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 16:27:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 16:27:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 16:27:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 16:27:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 16:27:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:27:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62163b39: startup date [Mon Mar 11 16:27:30 CST 2019]; root of context hierarchy
2019-03-11 16:27:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:27:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:27:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:27:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 16:27:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 16:27:52 -Registering beans for JMX exposure on startup
2019-03-11 16:27:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 16:27:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 16:27:52 -Starting beans in phase 2147483647
2019-03-11 16:27:52 -Context refreshed
2019-03-11 16:27:52 -Found 1 custom documentation plugin(s)
2019-03-11 16:27:52 -Scanning for api listing references
2019-03-11 16:27:52 -Generating unique operation named: removeUsingPOST_1
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_1
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_1
2019-03-11 16:27:53 -Generating unique operation named: listUsingGET_1
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_2
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_3
2019-03-11 16:27:53 -Generating unique operation named: saveUsingPOST_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingGET_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPOST_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPUT_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 16:27:53 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_2
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_2
2019-03-11 16:27:53 -Generating unique operation named: listUsingGET_2
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_4
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_5
2019-03-11 16:27:53 -Generating unique operation named: saveUsingPOST_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingGET_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPOST_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPUT_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 16:27:53 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_3
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_3
2019-03-11 16:27:53 -Generating unique operation named: listUsingGET_3
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_6
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_7
2019-03-11 16:27:53 -Generating unique operation named: saveUsingPOST_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingGET_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPOST_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPUT_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 16:27:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_4
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_4
2019-03-11 16:27:53 -Generating unique operation named: listUsingGET_4
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_8
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_9
2019-03-11 16:27:53 -Generating unique operation named: saveUsingPOST_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingGET_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPOST_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPUT_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 16:27:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_5
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_5
2019-03-11 16:27:53 -Generating unique operation named: listUsingGET_5
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_10
2019-03-11 16:27:53 -Generating unique operation named: removeUsingPOST_11
2019-03-11 16:27:53 -Generating unique operation named: saveUsingPOST_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingGET_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPOST_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPUT_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 16:27:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 16:27:53 -Generating unique operation named: ElecUsingGET_1
2019-03-11 16:27:53 -Generating unique operation named: addUsingGET_6
2019-03-11 16:27:53 -Generating unique operation named: editUsingGET_6
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_6
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_12
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_13
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingGET_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPUT_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 16:27:54 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_7
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_7
2019-03-11 16:27:54 -Generating unique operation named: addUsingGET_7
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_8
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_8
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_14
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_15
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingGET_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPUT_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 16:27:54 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 16:27:54 -Generating unique operation named: addUsingGET_8
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_9
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_9
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_16
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_17
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingGET_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPUT_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 16:27:54 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 16:27:54 -Generating unique operation named: addUsingGET_9
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_10
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_10
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_18
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_19
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingGET_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPUT_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 16:27:54 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 16:27:54 -Generating unique operation named: addUsingGET_10
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_11
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_11
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_20
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_21
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingGET_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_11
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPUT_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 16:27:54 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 16:27:54 -Generating unique operation named: addUsingGET_11
2019-03-11 16:27:54 -Generating unique operation named: editUsingGET_12
2019-03-11 16:27:54 -Generating unique operation named: infoUsingGET_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingPOST_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingPUT_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 16:27:54 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_12
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_22
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_23
2019-03-11 16:27:54 -Generating unique operation named: saveUsingPOST_11
2019-03-11 16:27:54 -Generating unique operation named: updateUsingPOST_12
2019-03-11 16:27:54 -Generating unique operation named: listUsingGET_13
2019-03-11 16:27:54 -Generating unique operation named: removeUsingPOST_24
2019-03-11 16:27:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_12
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_13
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_14
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_25
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_12
2019-03-11 16:27:55 -Generating unique operation named: treeUsingGET_1
2019-03-11 16:27:55 -Generating unique operation named: treeUsingGET_2
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_13
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_13
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_14
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_15
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_26
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_27
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_13
2019-03-11 16:27:55 -Generating unique operation named: updateUsingGET_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_14
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPUT_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 16:27:55 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_14
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_15
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_16
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_28
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_29
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_14
2019-03-11 16:27:55 -Generating unique operation named: updateUsingGET_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_15
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPUT_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 16:27:55 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_15
2019-03-11 16:27:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_16
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_17
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_15
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_16
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_16
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_18
2019-03-11 16:27:55 -Generating unique operation named: listUsingHEAD_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingPOST_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingPUT_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingPATCH_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingDELETE_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingTRACE_1
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_16
2019-03-11 16:27:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_17
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_19
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_30
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_17
2019-03-11 16:27:55 -Generating unique operation named: treeUsingGET_3
2019-03-11 16:27:55 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_17
2019-03-11 16:27:55 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 16:27:55 -Generating unique operation named: addUsingGET_17
2019-03-11 16:27:55 -Generating unique operation named: editUsingGET_18
2019-03-11 16:27:55 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 16:27:55 -Generating unique operation named: listUsingGET_20
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_31
2019-03-11 16:27:55 -Generating unique operation named: removeUsingPOST_32
2019-03-11 16:27:55 -Generating unique operation named: saveUsingPOST_18
2019-03-11 16:27:55 -Generating unique operation named: updateUsingGET_13
2019-03-11 16:27:55 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 16:27:55 -Generating unique operation named: updateUsingPOST_18
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPUT_13
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 16:27:56 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 16:27:56 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 16:27:56 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 16:27:56 -Generating unique operation named: addUsingGET_18
2019-03-11 16:27:56 -Generating unique operation named: editUsingGET_19
2019-03-11 16:27:56 -Generating unique operation named: listUsingGET_21
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_33
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_34
2019-03-11 16:27:56 -Generating unique operation named: saveUsingPOST_19
2019-03-11 16:27:56 -Generating unique operation named: updateUsingGET_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPOST_19
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPUT_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 16:27:56 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 16:27:56 -Generating unique operation named: addUsingGET_19
2019-03-11 16:27:56 -Generating unique operation named: editUsingGET_20
2019-03-11 16:27:56 -Generating unique operation named: listUsingGET_22
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_35
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_36
2019-03-11 16:27:56 -Generating unique operation named: saveUsingPOST_20
2019-03-11 16:27:56 -Generating unique operation named: updateUsingGET_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPOST_20
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPUT_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 16:27:56 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 16:27:56 -Generating unique operation named: addUsingGET_20
2019-03-11 16:27:56 -Generating unique operation named: editUsingGET_21
2019-03-11 16:27:56 -Generating unique operation named: listUsingGET_23
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_37
2019-03-11 16:27:56 -Generating unique operation named: removeUsingPOST_38
2019-03-11 16:27:56 -Generating unique operation named: saveUsingPOST_21
2019-03-11 16:27:56 -Generating unique operation named: updateUsingGET_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPOST_21
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPUT_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 16:27:56 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 16:27:56 -Starting Quartz Scheduler now
2019-03-11 16:27:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 16:27:56 -Starting...
2019-03-11 16:27:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 16:27:56 -Started.
2019-03-11 16:27:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 16:27:56 -Using a shared selector for servlet write/read
2019-03-11 16:27:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 16:27:56 -Started BootdoApplication in 28.169 seconds (JVM running for 29.828)
2019-03-11 16:27:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 16:27:56 -==> Parameters: 
2019-03-11 16:27:56 -<==      Total: 1
2019-03-11 16:28:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 16:28:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 16:28:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-03-11 16:28:09 -Enabling session validation scheduler...
2019-03-11 16:28:09 -请求地址 : http://localhost:8081/login;JSESSIONID=1b4ec18e-7c9a-4ed6-b1a8-75fdc4e5829f
2019-03-11 16:28:09 -HTTP METHOD : GET
2019-03-11 16:28:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:28:09 -参数 : [{}]
2019-03-11 16:28:09 -耗时 : 5
2019-03-11 16:28:09 -返回值 : login
2019-03-11 16:28:10 -请求地址 : http://localhost:8081/getVerify
2019-03-11 16:28:10 -HTTP METHOD : GET
2019-03-11 16:28:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 16:28:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5082e3ef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c2797c9]
2019-03-11 16:28:13 -4870
2019-03-11 16:28:13 -耗时 : 3111
2019-03-11 16:28:13 -返回值 : null
2019-03-11 16:28:21 -请求地址 : http://localhost:8081/login
2019-03-11 16:28:21 -HTTP METHOD : POST
2019-03-11 16:28:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 16:28:21 -参数 : [admin, 111111, 4870, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68bf8071]
2019-03-11 16:28:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 16:28:21 -==> Parameters: admin(String)
2019-03-11 16:28:21 -<==      Total: 1
2019-03-11 16:28:21 -耗时 : 233
2019-03-11 16:28:21 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:28:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 16:28:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:28:22 -==> Parameters: 1(Long), admin(String), 登录(String), 234(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 16:28:21.987(Timestamp)
2019-03-11 16:28:22 -请求地址 : http://localhost:8081/index
2019-03-11 16:28:22 -HTTP METHOD : GET
2019-03-11 16:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 16:28:22 -参数 : [{}]
2019-03-11 16:28:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 16:28:22 -<==    Updates: 1
2019-03-11 16:28:22 -==> Parameters: 1(Long)
2019-03-11 16:28:22 -<==      Total: 45
2019-03-11 16:28:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 16:28:22 -==> Parameters: 138(Long)
2019-03-11 16:28:22 -<==      Total: 1
2019-03-11 16:28:22 -耗时 : 439
2019-03-11 16:28:22 -返回值 : index_v1
2019-03-11 16:28:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:28:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 440(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 16:28:22.609(Timestamp)
2019-03-11 16:28:22 -<==    Updates: 1
2019-03-11 16:28:22 -请求地址 : http://localhost:8081/main
2019-03-11 16:28:22 -HTTP METHOD : GET
2019-03-11 16:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:28:22 -参数 : []
2019-03-11 16:28:22 -耗时 : 0
2019-03-11 16:28:22 -返回值 : main
2019-03-11 16:28:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 16:28:22 -HTTP METHOD : GET
2019-03-11 16:28:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 16:28:22 -参数 : []
2019-03-11 16:28:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 16:28:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 16:28:22 -<==      Total: 0
2019-03-11 16:28:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 16:28:23 -==> Parameters: 1(Long), 0(String)
2019-03-11 16:28:23 -<==      Total: 1
2019-03-11 16:28:23 -耗时 : 60
2019-03-11 16:28:23 -返回值 : com.bootdo.common.utils.PageUtils@2838f8e
2019-03-11 16:28:23 -请求地址 : http://localhost:8081/main
2019-03-11 16:28:23 -HTTP METHOD : GET
2019-03-11 16:28:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:28:23 -参数 : []
2019-03-11 16:28:23 -耗时 : 1
2019-03-11 16:28:23 -返回值 : main
2019-03-11 16:28:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-11 16:28:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:28:57 -==> Parameters: 1(Long)
2019-03-11 16:28:57 -<==      Total: 86
2019-03-11 16:28:57 -请求地址 : http://localhost:8081/print/print
2019-03-11 16:28:57 -HTTP METHOD : GET
2019-03-11 16:28:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 16:28:57 -参数 : []
2019-03-11 16:28:57 -耗时 : 1
2019-03-11 16:28:57 -返回值 : print/print/print
2019-03-11 16:32:21 -请求地址 : http://localhost:8081/
2019-03-11 16:32:21 -HTTP METHOD : GET
2019-03-11 16:32:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-11 16:32:21 -参数 : [{}]
2019-03-11 16:32:21 -耗时 : 1
2019-03-11 16:32:21 -返回值 : redirect:/index
2019-03-11 16:32:21 -请求地址 : http://localhost:8081/login;JSESSIONID=db96633c-0e5c-4921-af37-84c5fc534682
2019-03-11 16:32:21 -HTTP METHOD : GET
2019-03-11 16:32:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:32:21 -参数 : [{}]
2019-03-11 16:32:21 -耗时 : 0
2019-03-11 16:32:21 -返回值 : login
2019-03-11 16:32:22 -请求地址 : http://localhost:8081/getVerify
2019-03-11 16:32:22 -HTTP METHOD : GET
2019-03-11 16:32:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 16:32:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c8844e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ba2d811]
2019-03-11 16:32:22 -4663
2019-03-11 16:32:22 -耗时 : 14
2019-03-11 16:32:22 -返回值 : null
2019-03-11 16:32:23 -请求地址 : http://localhost:8081/login
2019-03-11 16:32:23 -HTTP METHOD : GET
2019-03-11 16:32:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:32:23 -参数 : [{}]
2019-03-11 16:32:23 -耗时 : 1
2019-03-11 16:32:23 -返回值 : login
2019-03-11 16:32:28 -请求地址 : http://localhost:8081/login
2019-03-11 16:32:28 -HTTP METHOD : POST
2019-03-11 16:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 16:32:28 -参数 : [admin, 111111, 4663, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c2cc782]
2019-03-11 16:32:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 16:32:28 -==> Parameters: admin(String)
2019-03-11 16:32:28 -<==      Total: 1
2019-03-11 16:32:28 -耗时 : 282
2019-03-11 16:32:28 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:32:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:32:28 -==> Parameters: 1(Long), admin(String), 登录(String), 282(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 16:32:28.334(Timestamp)
2019-03-11 16:32:28 -请求地址 : http://localhost:8081/index
2019-03-11 16:32:28 -HTTP METHOD : GET
2019-03-11 16:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 16:32:28 -参数 : [{}]
2019-03-11 16:32:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 16:32:28 -==> Parameters: 1(Long)
2019-03-11 16:32:28 -<==    Updates: 1
2019-03-11 16:32:28 -<==      Total: 45
2019-03-11 16:32:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 16:32:28 -==> Parameters: 138(Long)
2019-03-11 16:32:28 -<==      Total: 1
2019-03-11 16:32:28 -耗时 : 152
2019-03-11 16:32:28 -返回值 : index_v1
2019-03-11 16:32:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:32:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 152(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 16:32:28.508(Timestamp)
2019-03-11 16:32:28 -请求地址 : http://localhost:8081/main
2019-03-11 16:32:28 -HTTP METHOD : GET
2019-03-11 16:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:32:28 -参数 : []
2019-03-11 16:32:28 -耗时 : 0
2019-03-11 16:32:28 -返回值 : main
2019-03-11 16:32:28 -<==    Updates: 1
2019-03-11 16:32:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 16:32:29 -HTTP METHOD : GET
2019-03-11 16:32:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 16:32:29 -参数 : []
2019-03-11 16:32:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 16:32:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 16:32:29 -<==      Total: 0
2019-03-11 16:32:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 16:32:29 -请求地址 : http://localhost:8081/main
2019-03-11 16:32:29 -==> Parameters: 1(Long), 0(String)
2019-03-11 16:32:29 -HTTP METHOD : GET
2019-03-11 16:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:32:29 -参数 : []
2019-03-11 16:32:29 -耗时 : 0
2019-03-11 16:32:29 -返回值 : main
2019-03-11 16:32:29 -<==      Total: 1
2019-03-11 16:32:29 -耗时 : 63
2019-03-11 16:32:29 -返回值 : com.bootdo.common.utils.PageUtils@5735f166
2019-03-11 16:32:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:32:34 -==> Parameters: 1(Long)
2019-03-11 16:32:34 -<==      Total: 86
2019-03-11 16:32:34 -请求地址 : http://localhost:8081/print/print
2019-03-11 16:32:34 -HTTP METHOD : GET
2019-03-11 16:32:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 16:32:34 -参数 : []
2019-03-11 16:32:34 -耗时 : 1
2019-03-11 16:32:34 -返回值 : print/print/print
2019-03-11 16:32:35 -请求地址 : http://localhost:8081/print/print/list
2019-03-11 16:32:35 -HTTP METHOD : GET
2019-03-11 16:32:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-11 16:32:35 -参数 : [{limit=10, offset=0}]
2019-03-11 16:32:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id desc limit ?, ? 
2019-03-11 16:32:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:32:35 -<==      Total: 1
2019-03-11 16:32:35 -==>  Preparing: select count(*) from print 
2019-03-11 16:32:35 -==> Parameters: 
2019-03-11 16:32:35 -<==      Total: 1
2019-03-11 16:32:35 -耗时 : 73
2019-03-11 16:32:35 -返回值 : com.bootdo.common.utils.PageUtils@62b7d248
2019-03-11 16:35:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 11952 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 16:35:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 16:35:41 -The following profiles are active: dev
2019-03-11 16:35:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5778826f: startup date [Mon Mar 11 16:35:41 CST 2019]; root of context hierarchy
2019-03-11 16:35:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 16:35:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$22abbd00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1504eba7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 16:35:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 16:35:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:35:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 16:35:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 16:35:52 -Starting service [Tomcat]
2019-03-11 16:35:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 16:35:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 16:35:53 -Initializing Spring embedded WebApplicationContext
2019-03-11 16:35:53 -Root WebApplicationContext: initialization completed in 11858 ms
2019-03-11 16:35:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 16:35:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 16:35:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 16:35:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 16:35:54 -Filter xssFilter was not registered (disabled)
2019-03-11 16:35:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 16:35:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 16:35:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 16:35:54 -Servlet dispatcherServlet mapped to [/]
2019-03-11 16:35:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5778826f: startup date [Mon Mar 11 16:35:41 CST 2019]; root of context hierarchy
2019-03-11 16:35:58 -Using default implementation for ThreadExecutor
2019-03-11 16:35:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 16:35:58 -Quartz Scheduler v.2.2.1 created.
2019-03-11 16:35:58 -RAMJobStore initialized.
2019-03-11 16:35:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 16:35:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 16:35:58 -Quartz scheduler version: 2.2.1
2019-03-11 16:35:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@79424f25
2019-03-11 16:35:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 16:35:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 16:36:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 16:36:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 16:36:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 16:36:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 16:36:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 16:36:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 16:36:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 16:36:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 16:36:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 16:36:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 16:36:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 16:36:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 16:36:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 16:36:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 16:36:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:36:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 16:36:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:36:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 16:36:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 16:36:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 16:36:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 16:36:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 16:36:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 16:36:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 16:36:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:36:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 16:36:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 16:36:03 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 16:36:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:36:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:36:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 16:36:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 16:36:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 16:36:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 16:36:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 16:36:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 16:36:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 16:36:03 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 16:36:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 16:36:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 16:36:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 16:36:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 16:36:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 16:36:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 16:36:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 16:36:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 16:36:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 16:36:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 16:36:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 16:36:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 16:36:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 16:36:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 16:36:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 16:36:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:36:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:36:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 16:36:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 16:36:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 16:36:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 16:36:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 16:36:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 16:36:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 16:36:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 16:36:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 16:36:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 16:36:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 16:36:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 16:36:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 16:36:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 16:36:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:36:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:36:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:36:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 16:36:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 16:36:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 16:36:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 16:36:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 16:36:03 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:36:03 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 16:36:03 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:36:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 16:36:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 16:36:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:36:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:36:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 16:36:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:36:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 16:36:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 16:36:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 16:36:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 16:36:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 16:36:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 16:36:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:36:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5778826f: startup date [Mon Mar 11 16:35:41 CST 2019]; root of context hierarchy
2019-03-11 16:36:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:36:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:36:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:36:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 16:36:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 16:36:09 -Registering beans for JMX exposure on startup
2019-03-11 16:36:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 16:36:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 16:36:09 -Starting beans in phase 2147483647
2019-03-11 16:36:09 -Context refreshed
2019-03-11 16:36:09 -Found 1 custom documentation plugin(s)
2019-03-11 16:36:09 -Scanning for api listing references
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_1
2019-03-11 16:36:10 -Generating unique operation named: addUsingGET_1
2019-03-11 16:36:10 -Generating unique operation named: editUsingGET_1
2019-03-11 16:36:10 -Generating unique operation named: listUsingGET_1
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_2
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_3
2019-03-11 16:36:10 -Generating unique operation named: saveUsingPOST_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingGET_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPOST_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPUT_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 16:36:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 16:36:10 -Generating unique operation named: addUsingGET_2
2019-03-11 16:36:10 -Generating unique operation named: editUsingGET_2
2019-03-11 16:36:10 -Generating unique operation named: listUsingGET_2
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_4
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_5
2019-03-11 16:36:10 -Generating unique operation named: saveUsingPOST_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingGET_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPOST_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPUT_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 16:36:10 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 16:36:10 -Generating unique operation named: addUsingGET_3
2019-03-11 16:36:10 -Generating unique operation named: editUsingGET_3
2019-03-11 16:36:10 -Generating unique operation named: listUsingGET_3
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_6
2019-03-11 16:36:10 -Generating unique operation named: removeUsingPOST_7
2019-03-11 16:36:10 -Generating unique operation named: saveUsingPOST_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingGET_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPOST_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPUT_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 16:36:10 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 16:36:10 -Generating unique operation named: addUsingGET_4
2019-03-11 16:36:10 -Generating unique operation named: editUsingGET_4
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_4
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_8
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_9
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_5
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_5
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_5
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_10
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_11
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 16:36:11 -Generating unique operation named: ElecUsingGET_1
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_6
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_6
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_6
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_12
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_13
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_7
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_7
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_7
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_8
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_8
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_14
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_15
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_8
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_9
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_9
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_16
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_17
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_9
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_10
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_10
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_18
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_19
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_10
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_11
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_11
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_20
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_21
2019-03-11 16:36:11 -Generating unique operation named: saveUsingPOST_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingGET_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPOST_11
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPUT_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 16:36:11 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 16:36:11 -Generating unique operation named: addUsingGET_11
2019-03-11 16:36:11 -Generating unique operation named: editUsingGET_12
2019-03-11 16:36:11 -Generating unique operation named: infoUsingGET_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingPOST_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingPUT_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 16:36:11 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 16:36:11 -Generating unique operation named: listUsingGET_12
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_22
2019-03-11 16:36:11 -Generating unique operation named: removeUsingPOST_23
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_12
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_13
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_24
2019-03-11 16:36:12 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_12
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_13
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_14
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_25
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_12
2019-03-11 16:36:12 -Generating unique operation named: treeUsingGET_1
2019-03-11 16:36:12 -Generating unique operation named: treeUsingGET_2
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_13
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_13
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_14
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_15
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_26
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_27
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_13
2019-03-11 16:36:12 -Generating unique operation named: updateUsingGET_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_14
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPUT_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 16:36:12 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_14
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_15
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_16
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_28
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_29
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_14
2019-03-11 16:36:12 -Generating unique operation named: updateUsingGET_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_15
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPUT_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 16:36:12 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_15
2019-03-11 16:36:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_16
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_17
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_15
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_16
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_16
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_18
2019-03-11 16:36:12 -Generating unique operation named: listUsingHEAD_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingPOST_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingPUT_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingPATCH_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingDELETE_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingTRACE_1
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_16
2019-03-11 16:36:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_17
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_19
2019-03-11 16:36:12 -Generating unique operation named: removeUsingPOST_30
2019-03-11 16:36:12 -Generating unique operation named: saveUsingPOST_17
2019-03-11 16:36:12 -Generating unique operation named: treeUsingGET_3
2019-03-11 16:36:12 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 16:36:12 -Generating unique operation named: updateUsingPOST_17
2019-03-11 16:36:12 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 16:36:12 -Generating unique operation named: addUsingGET_17
2019-03-11 16:36:12 -Generating unique operation named: editUsingGET_18
2019-03-11 16:36:12 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 16:36:12 -Generating unique operation named: listUsingGET_20
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_31
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_32
2019-03-11 16:36:13 -Generating unique operation named: saveUsingPOST_18
2019-03-11 16:36:13 -Generating unique operation named: updateUsingGET_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPOST_18
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPUT_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 16:36:13 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 16:36:13 -Generating unique operation named: addUsingGET_18
2019-03-11 16:36:13 -Generating unique operation named: editUsingGET_19
2019-03-11 16:36:13 -Generating unique operation named: listUsingGET_21
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_33
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_34
2019-03-11 16:36:13 -Generating unique operation named: saveUsingPOST_19
2019-03-11 16:36:13 -Generating unique operation named: updateUsingGET_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPOST_19
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPUT_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 16:36:13 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 16:36:13 -Generating unique operation named: addUsingGET_19
2019-03-11 16:36:13 -Generating unique operation named: editUsingGET_20
2019-03-11 16:36:13 -Generating unique operation named: listUsingGET_22
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_35
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_36
2019-03-11 16:36:13 -Generating unique operation named: saveUsingPOST_20
2019-03-11 16:36:13 -Generating unique operation named: updateUsingGET_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPOST_20
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPUT_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 16:36:13 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 16:36:13 -Generating unique operation named: addUsingGET_20
2019-03-11 16:36:13 -Generating unique operation named: editUsingGET_21
2019-03-11 16:36:13 -Generating unique operation named: listUsingGET_23
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_37
2019-03-11 16:36:13 -Generating unique operation named: removeUsingPOST_38
2019-03-11 16:36:13 -Generating unique operation named: saveUsingPOST_21
2019-03-11 16:36:13 -Generating unique operation named: updateUsingGET_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPOST_21
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPUT_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 16:36:13 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 16:36:13 -Starting Quartz Scheduler now
2019-03-11 16:36:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 16:36:13 -Starting...
2019-03-11 16:36:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 16:36:13 -Started.
2019-03-11 16:36:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 16:36:13 -Using a shared selector for servlet write/read
2019-03-11 16:36:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 16:36:13 -Started BootdoApplication in 34.746 seconds (JVM running for 36.876)
2019-03-11 16:36:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 16:36:14 -==> Parameters: 
2019-03-11 16:36:14 -<==      Total: 1
2019-03-11 16:36:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 16:36:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 16:36:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2019-03-11 16:36:25 -Enabling session validation scheduler...
2019-03-11 16:36:26 -请求地址 : http://localhost:8081/login;JSESSIONID=2f6b8529-6adf-433a-b434-c937d0192ea5
2019-03-11 16:36:26 -HTTP METHOD : GET
2019-03-11 16:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:36:26 -参数 : [{}]
2019-03-11 16:36:26 -耗时 : 5
2019-03-11 16:36:26 -返回值 : login
2019-03-11 16:36:28 -请求地址 : http://localhost:8081/getVerify
2019-03-11 16:36:28 -HTTP METHOD : GET
2019-03-11 16:36:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 16:36:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b35fcd0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e3779d2]
2019-03-11 16:36:32 -9646
2019-03-11 16:36:32 -耗时 : 3881
2019-03-11 16:36:32 -返回值 : null
2019-03-11 16:36:39 -请求地址 : http://localhost:8081/login
2019-03-11 16:36:39 -HTTP METHOD : POST
2019-03-11 16:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 16:36:39 -参数 : [admin, 111111, 9646, org.apache.shiro.web.servlet.ShiroHttpServletRequest@40e0097c]
2019-03-11 16:36:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 16:36:39 -==> Parameters: admin(String)
2019-03-11 16:36:39 -<==      Total: 1
2019-03-11 16:36:39 -耗时 : 91
2019-03-11 16:36:39 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:36:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 16:36:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:36:39 -请求地址 : http://localhost:8081/index
2019-03-11 16:36:39 -HTTP METHOD : GET
2019-03-11 16:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 16:36:39 -参数 : [{}]
2019-03-11 16:36:39 -==> Parameters: 1(Long), admin(String), 登录(String), 92(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 16:36:39.475(Timestamp)
2019-03-11 16:36:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 16:36:39 -<==    Updates: 1
2019-03-11 16:36:39 -==> Parameters: 1(Long)
2019-03-11 16:36:39 -<==      Total: 45
2019-03-11 16:36:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 16:36:39 -==> Parameters: 138(Long)
2019-03-11 16:36:39 -<==      Total: 1
2019-03-11 16:36:39 -耗时 : 297
2019-03-11 16:36:39 -返回值 : index_v1
2019-03-11 16:36:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:36:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 297(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 16:36:39.863(Timestamp)
2019-03-11 16:36:39 -<==    Updates: 1
2019-03-11 16:36:40 -请求地址 : http://localhost:8081/main
2019-03-11 16:36:40 -HTTP METHOD : GET
2019-03-11 16:36:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:36:40 -参数 : []
2019-03-11 16:36:40 -耗时 : 1
2019-03-11 16:36:40 -返回值 : main
2019-03-11 16:36:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 16:36:40 -HTTP METHOD : GET
2019-03-11 16:36:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 16:36:40 -参数 : []
2019-03-11 16:36:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 16:36:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 16:36:40 -<==      Total: 0
2019-03-11 16:36:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 16:36:40 -==> Parameters: 1(Long), 0(String)
2019-03-11 16:36:40 -<==      Total: 1
2019-03-11 16:36:40 -耗时 : 48
2019-03-11 16:36:40 -返回值 : com.bootdo.common.utils.PageUtils@335d4e4
2019-03-11 16:36:40 -请求地址 : http://localhost:8081/main
2019-03-11 16:36:40 -HTTP METHOD : GET
2019-03-11 16:36:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:36:40 -参数 : []
2019-03-11 16:36:40 -耗时 : 1
2019-03-11 16:36:40 -返回值 : main
2019-03-11 16:36:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:36:47 -==> Parameters: 1(Long)
2019-03-11 16:36:47 -<==      Total: 86
2019-03-11 16:36:47 -请求地址 : http://localhost:8081/print/print
2019-03-11 16:36:47 -HTTP METHOD : GET
2019-03-11 16:36:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 16:36:47 -参数 : []
2019-03-11 16:36:47 -耗时 : 0
2019-03-11 16:36:47 -返回值 : print/print/print
2019-03-11 16:36:48 -请求地址 : http://localhost:8081/print/print/list
2019-03-11 16:36:48 -HTTP METHOD : GET
2019-03-11 16:36:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-11 16:36:48 -参数 : [{limit=10, offset=0}]
2019-03-11 16:36:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id desc limit ?, ? 
2019-03-11 16:36:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:36:48 -<==      Total: 1
2019-03-11 16:36:48 -==>  Preparing: select count(*) from print 
2019-03-11 16:36:48 -==> Parameters: 
2019-03-11 16:36:48 -<==      Total: 1
2019-03-11 16:36:48 -耗时 : 126
2019-03-11 16:36:48 -返回值 : com.bootdo.common.utils.PageUtils@6d224fe5
2019-03-11 16:37:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-11 16:38:07 -请求地址 : http://localhost:8081/index
2019-03-11 16:38:07 -HTTP METHOD : GET
2019-03-11 16:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 16:38:07 -参数 : [{}]
2019-03-11 16:38:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 16:38:07 -==> Parameters: 1(Long)
2019-03-11 16:38:07 -<==      Total: 45
2019-03-11 16:38:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 16:38:07 -==> Parameters: 138(Long)
2019-03-11 16:38:07 -<==      Total: 1
2019-03-11 16:38:07 -耗时 : 33
2019-03-11 16:38:07 -返回值 : index_v1
2019-03-11 16:38:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:38:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 16:38:07.616(Timestamp)
2019-03-11 16:38:07 -请求地址 : http://localhost:8081/main
2019-03-11 16:38:07 -HTTP METHOD : GET
2019-03-11 16:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:38:07 -参数 : []
2019-03-11 16:38:07 -耗时 : 0
2019-03-11 16:38:07 -返回值 : main
2019-03-11 16:38:08 -<==    Updates: 1
2019-03-11 16:38:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 16:38:08 -HTTP METHOD : GET
2019-03-11 16:38:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 16:38:08 -参数 : []
2019-03-11 16:38:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 16:38:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 16:38:08 -<==      Total: 0
2019-03-11 16:38:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 16:38:08 -==> Parameters: 1(Long), 0(String)
2019-03-11 16:38:08 -<==      Total: 1
2019-03-11 16:38:08 -耗时 : 10
2019-03-11 16:38:08 -返回值 : com.bootdo.common.utils.PageUtils@6b069102
2019-03-11 16:38:08 -请求地址 : http://localhost:8081/main
2019-03-11 16:38:08 -HTTP METHOD : GET
2019-03-11 16:38:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:38:08 -参数 : []
2019-03-11 16:38:08 -耗时 : 0
2019-03-11 16:38:08 -返回值 : main
2019-03-11 16:38:11 -请求地址 : http://localhost:8081/print/print
2019-03-11 16:38:11 -HTTP METHOD : GET
2019-03-11 16:38:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 16:38:11 -参数 : []
2019-03-11 16:38:11 -耗时 : 0
2019-03-11 16:38:11 -返回值 : print/print/print
2019-03-11 16:38:11 -请求地址 : http://localhost:8081/print/print/list
2019-03-11 16:38:11 -HTTP METHOD : GET
2019-03-11 16:38:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-11 16:38:11 -参数 : [{limit=10, offset=0}]
2019-03-11 16:38:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id desc limit ?, ? 
2019-03-11 16:38:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:38:11 -<==      Total: 1
2019-03-11 16:38:11 -==>  Preparing: select count(*) from print 
2019-03-11 16:38:11 -==> Parameters: 
2019-03-11 16:38:11 -<==      Total: 1
2019-03-11 16:38:11 -耗时 : 11
2019-03-11 16:38:11 -返回值 : com.bootdo.common.utils.PageUtils@7424561d
2019-03-11 16:38:54 -请求地址 : http://localhost:8081/sys/menu/
2019-03-11 16:38:54 -HTTP METHOD : GET
2019-03-11 16:38:54 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-11 16:38:54 -参数 : [{}]
2019-03-11 16:38:54 -耗时 : 2
2019-03-11 16:38:54 -返回值 : system/menu/menu
2019-03-11 16:38:55 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-11 16:38:55 -HTTP METHOD : GET
2019-03-11 16:38:55 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-11 16:38:55 -参数 : [{sort=order_num}]
2019-03-11 16:38:55 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-11 16:38:55 -==> Parameters: 
2019-03-11 16:38:55 -<==      Total: 105
2019-03-11 16:38:55 -耗时 : 93
2019-03-11 16:38:55 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-11 16:39:00 -请求地址 : http://localhost:8081/sys/menu/edit/108
2019-03-11 16:39:00 -HTTP METHOD : GET
2019-03-11 16:39:00 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-11 16:39:00 -参数 : [{}, 108]
2019-03-11 16:39:00 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-11 16:39:00 -==> Parameters: 108(Long)
2019-03-11 16:39:00 -<==      Total: 1
2019-03-11 16:39:00 -耗时 : 15
2019-03-11 16:39:00 -返回值 : system/menu/edit
2019-03-11 16:39:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:39:00 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 16(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-11 16:39:00.756(Timestamp)
2019-03-11 16:39:00 -<==    Updates: 1
2019-03-11 16:43:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 1080 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 16:43:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 16:43:23 -The following profiles are active: dev
2019-03-11 16:43:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 11 16:43:23 CST 2019]; root of context hierarchy
2019-03-11 16:43:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 16:43:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d479268c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c6d25533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 16:43:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 16:43:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 16:43:32 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 16:43:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 16:43:32 -Starting service [Tomcat]
2019-03-11 16:43:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 16:43:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 16:43:33 -Initializing Spring embedded WebApplicationContext
2019-03-11 16:43:33 -Root WebApplicationContext: initialization completed in 9557 ms
2019-03-11 16:43:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 16:43:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 16:43:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 16:43:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 16:43:34 -Filter xssFilter was not registered (disabled)
2019-03-11 16:43:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 16:43:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 16:43:34 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 16:43:34 -Servlet dispatcherServlet mapped to [/]
2019-03-11 16:43:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 11 16:43:23 CST 2019]; root of context hierarchy
2019-03-11 16:43:37 -Using default implementation for ThreadExecutor
2019-03-11 16:43:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 16:43:37 -Quartz Scheduler v.2.2.1 created.
2019-03-11 16:43:37 -RAMJobStore initialized.
2019-03-11 16:43:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 16:43:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 16:43:37 -Quartz scheduler version: 2.2.1
2019-03-11 16:43:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@335896bd
2019-03-11 16:43:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 16:43:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 16:43:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 16:43:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 16:43:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 16:43:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 16:43:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 16:43:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 16:43:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 16:43:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 16:43:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 16:43:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 16:43:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 16:43:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 16:43:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 16:43:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:43:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 16:43:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 16:43:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 16:43:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 16:43:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 16:43:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 16:43:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 16:43:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 16:43:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 16:43:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:43:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 16:43:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 16:43:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 16:43:41 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:43:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 16:43:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 16:43:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 16:43:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 16:43:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 16:43:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 16:43:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 16:43:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 16:43:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 16:43:41 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 16:43:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 16:43:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 16:43:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 16:43:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 16:43:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 16:43:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 16:43:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 16:43:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 16:43:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 16:43:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 16:43:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 16:43:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 16:43:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 16:43:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 16:43:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 16:43:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:43:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 16:43:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 16:43:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 16:43:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 16:43:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 16:43:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 16:43:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 16:43:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 16:43:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 16:43:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 16:43:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 16:43:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 16:43:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 16:43:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 16:43:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 16:43:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 16:43:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:43:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:43:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 16:43:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 16:43:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 16:43:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 16:43:41 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 16:43:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 16:43:41 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 16:43:41 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 16:43:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 16:43:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 16:43:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 16:43:41 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 16:43:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 16:43:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 16:43:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 16:43:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 16:43:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 16:43:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 16:43:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 16:43:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 16:43:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:43:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Mon Mar 11 16:43:23 CST 2019]; root of context hierarchy
2019-03-11 16:43:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:43:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:43:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 16:43:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 16:43:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 16:43:45 -Registering beans for JMX exposure on startup
2019-03-11 16:43:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 16:43:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 16:43:45 -Starting beans in phase 2147483647
2019-03-11 16:43:45 -Context refreshed
2019-03-11 16:43:45 -Found 1 custom documentation plugin(s)
2019-03-11 16:43:45 -Scanning for api listing references
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_1
2019-03-11 16:43:46 -Generating unique operation named: addUsingGET_1
2019-03-11 16:43:46 -Generating unique operation named: editUsingGET_1
2019-03-11 16:43:46 -Generating unique operation named: listUsingGET_1
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_2
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_3
2019-03-11 16:43:46 -Generating unique operation named: saveUsingPOST_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingGET_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPOST_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPUT_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 16:43:46 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 16:43:46 -Generating unique operation named: addUsingGET_2
2019-03-11 16:43:46 -Generating unique operation named: editUsingGET_2
2019-03-11 16:43:46 -Generating unique operation named: listUsingGET_2
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_4
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_5
2019-03-11 16:43:46 -Generating unique operation named: saveUsingPOST_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingGET_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPOST_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPUT_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 16:43:46 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 16:43:46 -Generating unique operation named: addUsingGET_3
2019-03-11 16:43:46 -Generating unique operation named: editUsingGET_3
2019-03-11 16:43:46 -Generating unique operation named: listUsingGET_3
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_6
2019-03-11 16:43:46 -Generating unique operation named: removeUsingPOST_7
2019-03-11 16:43:46 -Generating unique operation named: saveUsingPOST_3
2019-03-11 16:43:46 -Generating unique operation named: updateUsingGET_3
2019-03-11 16:43:46 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 16:43:46 -Generating unique operation named: updateUsingPOST_3
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_3
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_4
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_4
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_4
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_8
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_9
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_5
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_5
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_5
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_10
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_11
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 16:43:47 -Generating unique operation named: ElecUsingGET_1
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_6
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_6
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_6
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_12
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_13
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_7
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_7
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_7
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_8
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_8
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_14
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_15
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_8
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_9
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_9
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_16
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_17
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_9
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_10
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_10
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_18
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_19
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_10
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_11
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_11
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_20
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_21
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingGET_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_11
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPUT_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 16:43:47 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 16:43:47 -Generating unique operation named: addUsingGET_11
2019-03-11 16:43:47 -Generating unique operation named: editUsingGET_12
2019-03-11 16:43:47 -Generating unique operation named: infoUsingGET_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingPOST_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingPUT_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 16:43:47 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_12
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_22
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_23
2019-03-11 16:43:47 -Generating unique operation named: saveUsingPOST_11
2019-03-11 16:43:47 -Generating unique operation named: updateUsingPOST_12
2019-03-11 16:43:47 -Generating unique operation named: listUsingGET_13
2019-03-11 16:43:47 -Generating unique operation named: removeUsingPOST_24
2019-03-11 16:43:47 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_12
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_13
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_14
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_25
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_12
2019-03-11 16:43:48 -Generating unique operation named: treeUsingGET_1
2019-03-11 16:43:48 -Generating unique operation named: treeUsingGET_2
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_13
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_13
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_14
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_15
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_26
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_27
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingGET_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPUT_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 16:43:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_14
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_15
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_16
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_28
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_29
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingGET_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_15
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPUT_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 16:43:48 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_15
2019-03-11 16:43:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_16
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_17
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_15
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_16
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_16
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_18
2019-03-11 16:43:48 -Generating unique operation named: listUsingHEAD_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingPOST_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingPUT_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingPATCH_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingDELETE_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingTRACE_1
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_16
2019-03-11 16:43:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_17
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_19
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_30
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_17
2019-03-11 16:43:48 -Generating unique operation named: treeUsingGET_3
2019-03-11 16:43:48 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_17
2019-03-11 16:43:48 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_17
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_18
2019-03-11 16:43:48 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_20
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_31
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_32
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_18
2019-03-11 16:43:48 -Generating unique operation named: updateUsingGET_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_18
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPUT_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 16:43:48 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_18
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_19
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_21
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_33
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_34
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_19
2019-03-11 16:43:48 -Generating unique operation named: updateUsingGET_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPOST_19
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPUT_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 16:43:48 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 16:43:48 -Generating unique operation named: addUsingGET_19
2019-03-11 16:43:48 -Generating unique operation named: editUsingGET_20
2019-03-11 16:43:48 -Generating unique operation named: listUsingGET_22
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_35
2019-03-11 16:43:48 -Generating unique operation named: removeUsingPOST_36
2019-03-11 16:43:48 -Generating unique operation named: saveUsingPOST_20
2019-03-11 16:43:48 -Generating unique operation named: updateUsingGET_15
2019-03-11 16:43:48 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPOST_20
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPUT_15
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 16:43:49 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 16:43:49 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 16:43:49 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 16:43:49 -Generating unique operation named: addUsingGET_20
2019-03-11 16:43:49 -Generating unique operation named: editUsingGET_21
2019-03-11 16:43:49 -Generating unique operation named: listUsingGET_23
2019-03-11 16:43:49 -Generating unique operation named: removeUsingPOST_37
2019-03-11 16:43:49 -Generating unique operation named: removeUsingPOST_38
2019-03-11 16:43:49 -Generating unique operation named: saveUsingPOST_21
2019-03-11 16:43:49 -Generating unique operation named: updateUsingGET_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPOST_21
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPUT_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 16:43:49 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 16:43:49 -Starting Quartz Scheduler now
2019-03-11 16:43:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 16:43:49 -Starting...
2019-03-11 16:43:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 16:43:49 -Started.
2019-03-11 16:43:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 16:43:49 -Using a shared selector for servlet write/read
2019-03-11 16:43:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 16:43:49 -Started BootdoApplication in 27.683 seconds (JVM running for 29.382)
2019-03-11 16:43:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 16:43:49 -==> Parameters: 
2019-03-11 16:43:49 -<==      Total: 1
2019-03-11 16:43:50 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 16:43:50 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 16:43:50 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-03-11 16:43:50 -Enabling session validation scheduler...
2019-03-11 16:43:50 -请求地址 : http://localhost:8081/login;JSESSIONID=b1013b9e-6630-4cf3-9c23-19af19299462
2019-03-11 16:43:50 -HTTP METHOD : GET
2019-03-11 16:43:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:43:50 -参数 : [{}]
2019-03-11 16:43:50 -耗时 : 2
2019-03-11 16:43:50 -返回值 : login
2019-03-11 16:43:51 -请求地址 : http://localhost:8081/getVerify
2019-03-11 16:43:51 -HTTP METHOD : GET
2019-03-11 16:43:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 16:43:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@346f2b2c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3aa8d3d1]
2019-03-11 16:43:52 -2173
2019-03-11 16:43:52 -耗时 : 487
2019-03-11 16:43:52 -返回值 : null
2019-03-11 16:44:08 -请求地址 : http://localhost:8081/login;JSESSIONID=b1013b9e-6630-4cf3-9c23-19af19299462
2019-03-11 16:44:08 -HTTP METHOD : GET
2019-03-11 16:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:44:08 -参数 : [{}]
2019-03-11 16:44:08 -耗时 : 1
2019-03-11 16:44:08 -返回值 : login
2019-03-11 16:44:08 -请求地址 : http://localhost:8081/getVerify
2019-03-11 16:44:08 -HTTP METHOD : GET
2019-03-11 16:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 16:44:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37eb372c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@349d00f3]
2019-03-11 16:44:08 -4908
2019-03-11 16:44:08 -耗时 : 13
2019-03-11 16:44:08 -返回值 : null
2019-03-11 16:44:08 -请求地址 : http://localhost:8081/login
2019-03-11 16:44:08 -HTTP METHOD : GET
2019-03-11 16:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 16:44:08 -参数 : [{}]
2019-03-11 16:44:08 -耗时 : 1
2019-03-11 16:44:08 -返回值 : login
2019-03-11 16:44:14 -请求地址 : http://localhost:8081/login
2019-03-11 16:44:14 -HTTP METHOD : POST
2019-03-11 16:44:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 16:44:14 -参数 : [admin, 111111, 4908, org.apache.shiro.web.servlet.ShiroHttpServletRequest@41a54c44]
2019-03-11 16:44:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 16:44:15 -==> Parameters: admin(String)
2019-03-11 16:44:15 -<==      Total: 1
2019-03-11 16:44:15 -耗时 : 210
2019-03-11 16:44:15 -返回值 : {msg=操作成功, code=0}
2019-03-11 16:44:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 16:44:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:44:15 -==> Parameters: 1(Long), admin(String), 登录(String), 210(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 16:44:15.269(Timestamp)
2019-03-11 16:44:15 -请求地址 : http://localhost:8081/index
2019-03-11 16:44:15 -HTTP METHOD : GET
2019-03-11 16:44:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 16:44:15 -参数 : [{}]
2019-03-11 16:44:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 16:44:15 -<==    Updates: 1
2019-03-11 16:44:15 -==> Parameters: 1(Long)
2019-03-11 16:44:15 -<==      Total: 45
2019-03-11 16:44:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 16:44:15 -==> Parameters: 138(Long)
2019-03-11 16:44:15 -<==      Total: 1
2019-03-11 16:44:15 -耗时 : 295
2019-03-11 16:44:15 -返回值 : index_v1
2019-03-11 16:44:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 16:44:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 295(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 16:44:15.696(Timestamp)
2019-03-11 16:44:15 -<==    Updates: 1
2019-03-11 16:44:15 -请求地址 : http://localhost:8081/main
2019-03-11 16:44:15 -HTTP METHOD : GET
2019-03-11 16:44:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:44:15 -参数 : []
2019-03-11 16:44:15 -耗时 : 0
2019-03-11 16:44:15 -返回值 : main
2019-03-11 16:44:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 16:44:16 -HTTP METHOD : GET
2019-03-11 16:44:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 16:44:16 -参数 : []
2019-03-11 16:44:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 16:44:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 16:44:16 -<==      Total: 0
2019-03-11 16:44:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 16:44:16 -==> Parameters: 1(Long), 0(String)
2019-03-11 16:44:16 -<==      Total: 1
2019-03-11 16:44:16 -耗时 : 59
2019-03-11 16:44:16 -返回值 : com.bootdo.common.utils.PageUtils@1efbc96c
2019-03-11 16:44:16 -请求地址 : http://localhost:8081/main
2019-03-11 16:44:16 -HTTP METHOD : GET
2019-03-11 16:44:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 16:44:16 -参数 : []
2019-03-11 16:44:16 -耗时 : 0
2019-03-11 16:44:16 -返回值 : main
2019-03-11 16:44:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:44:23 -==> Parameters: 1(Long)
2019-03-11 16:44:23 -<==      Total: 86
2019-03-11 16:44:23 -请求地址 : http://localhost:8081/print/print
2019-03-11 16:44:23 -HTTP METHOD : GET
2019-03-11 16:44:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-11 16:44:23 -参数 : []
2019-03-11 16:44:23 -耗时 : 0
2019-03-11 16:44:23 -返回值 : print/print/print
2019-03-11 16:44:24 -请求地址 : http://localhost:8081/print/print/list
2019-03-11 16:44:24 -HTTP METHOD : GET
2019-03-11 16:44:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-11 16:44:24 -参数 : [{limit=10, offset=0}]
2019-03-11 16:44:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id desc limit ?, ? 
2019-03-11 16:44:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:44:24 -<==      Total: 1
2019-03-11 16:44:24 -==>  Preparing: select count(*) from print 
2019-03-11 16:44:24 -==> Parameters: 
2019-03-11 16:44:24 -<==      Total: 1
2019-03-11 16:44:24 -耗时 : 123
2019-03-11 16:44:24 -返回值 : com.bootdo.common.utils.PageUtils@78a8c9bc
2019-03-11 16:44:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-11 16:44:47 -请求地址 : http://localhost:8081/print/print/add
2019-03-11 16:44:47 -HTTP METHOD : GET
2019-03-11 16:44:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-11 16:44:47 -参数 : []
2019-03-11 16:44:47 -耗时 : 1
2019-03-11 16:44:47 -返回值 : print/print/add
2019-03-11 16:44:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 16:44:48 -HTTP METHOD : GET
2019-03-11 16:44:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 16:44:48 -参数 : [userType]
2019-03-11 16:44:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 16:44:48 -==> Parameters: userType(String)
2019-03-11 16:44:48 -<==      Total: 2
2019-03-11 16:44:48 -耗时 : 66
2019-03-11 16:44:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 16:45:05 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-11 16:45:05 -HTTP METHOD : GET
2019-03-11 16:45:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-11 16:45:05 -参数 : [1, {}]
2019-03-11 16:45:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-11 16:45:05 -==> Parameters: 1(Long)
2019-03-11 16:45:05 -<==      Total: 1
2019-03-11 16:45:05 -耗时 : 10
2019-03-11 16:45:05 -返回值 : print/print/edit
2019-03-11 16:45:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 16:45:05 -HTTP METHOD : GET
2019-03-11 16:45:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 16:45:05 -参数 : [userType]
2019-03-11 16:45:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 16:45:05 -==> Parameters: userType(String)
2019-03-11 16:45:05 -<==      Total: 2
2019-03-11 16:45:05 -耗时 : 11
2019-03-11 16:45:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 16:46:22 -请求地址 : http://localhost:8081/print/print/add
2019-03-11 16:46:22 -HTTP METHOD : GET
2019-03-11 16:46:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-11 16:46:22 -参数 : []
2019-03-11 16:46:22 -耗时 : 1
2019-03-11 16:46:22 -返回值 : print/print/add
2019-03-11 16:46:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 16:46:22 -HTTP METHOD : GET
2019-03-11 16:46:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 16:46:22 -参数 : [userType]
2019-03-11 16:46:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 16:46:22 -==> Parameters: userType(String)
2019-03-11 16:46:22 -<==      Total: 2
2019-03-11 16:46:22 -耗时 : 7
2019-03-11 16:46:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 16:46:39 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-11 16:46:39 -HTTP METHOD : GET
2019-03-11 16:46:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-11 16:46:39 -参数 : [1, {}]
2019-03-11 16:46:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-11 16:46:39 -==> Parameters: 1(Long)
2019-03-11 16:46:39 -<==      Total: 1
2019-03-11 16:46:39 -耗时 : 11
2019-03-11 16:46:39 -返回值 : print/print/edit
2019-03-11 16:46:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-11 16:46:39 -HTTP METHOD : GET
2019-03-11 16:46:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-11 16:46:39 -参数 : [userType]
2019-03-11 16:46:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-11 16:46:39 -==> Parameters: userType(String)
2019-03-11 16:46:39 -<==      Total: 2
2019-03-11 16:46:39 -耗时 : 7
2019-03-11 16:46:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-11 16:49:42 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-11 16:49:42 -HTTP METHOD : GET
2019-03-11 16:49:42 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-11 16:49:42 -参数 : []
2019-03-11 16:49:42 -耗时 : 1
2019-03-11 16:49:42 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-11 16:50:55 -请求地址 : http://localhost:8081/charts/countRun
2019-03-11 16:50:55 -HTTP METHOD : GET
2019-03-11 16:50:55 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-11 16:50:55 -参数 : []
2019-03-11 16:50:55 -耗时 : 0
2019-03-11 16:50:55 -返回值 : charts/countRun
2019-03-11 16:58:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 16:58:38 -==> Parameters: 1(Long)
2019-03-11 16:58:38 -<==      Total: 86
2019-03-11 16:58:38 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 16:58:38 -HTTP METHOD : GET
2019-03-11 16:58:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 16:58:38 -参数 : []
2019-03-11 16:58:38 -耗时 : 1
2019-03-11 16:58:38 -返回值 : elec/elec/elec
2019-03-11 16:58:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 16:58:38 -HTTP METHOD : GET
2019-03-11 16:58:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 16:58:38 -参数 : [{limit=10, offset=0}]
2019-03-11 16:58:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 16:58:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:58:38 -<==      Total: 4
2019-03-11 16:58:38 -==>  Preparing: select count(*) from elec 
2019-03-11 16:58:38 -==> Parameters: 
2019-03-11 16:58:38 -<==      Total: 1
2019-03-11 16:58:38 -耗时 : 161
2019-03-11 16:58:38 -返回值 : com.bootdo.common.utils.PageUtils@120f1fc6
2019-03-11 16:58:39 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 16:58:39 -HTTP METHOD : GET
2019-03-11 16:58:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 16:58:39 -参数 : []
2019-03-11 16:58:39 -耗时 : 0
2019-03-11 16:58:39 -返回值 : elec/elecInto/elecInto
2019-03-11 16:58:45 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 16:58:45 -HTTP METHOD : GET
2019-03-11 16:58:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 16:58:45 -参数 : []
2019-03-11 16:58:45 -耗时 : 1
2019-03-11 16:58:45 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 16:58:46 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-11 16:58:46 -HTTP METHOD : GET
2019-03-11 16:58:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-11 16:58:46 -参数 : []
2019-03-11 16:58:46 -耗时 : 1
2019-03-11 16:58:46 -返回值 : elec/elecPrice/elecPrice
2019-03-11 16:58:46 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-11 16:58:46 -HTTP METHOD : GET
2019-03-11 16:58:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-11 16:58:46 -参数 : [{limit=10, offset=0}]
2019-03-11 16:58:46 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-11 16:58:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 16:58:46 -<==      Total: 2
2019-03-11 16:58:46 -==>  Preparing: select count(*) from elec_price 
2019-03-11 16:58:46 -==> Parameters: 
2019-03-11 16:58:46 -<==      Total: 1
2019-03-11 16:58:46 -耗时 : 78
2019-03-11 16:58:46 -返回值 : com.bootdo.common.utils.PageUtils@4e55e552
2019-03-11 17:14:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-03-11 17:16:25 -请求地址 : http://localhost:8081/common/job
2019-03-11 17:16:25 -HTTP METHOD : GET
2019-03-11 17:16:25 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-11 17:16:25 -参数 : []
2019-03-11 17:16:25 -耗时 : 0
2019-03-11 17:16:25 -返回值 : common/job/job
2019-03-11 18:29:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 3740 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-11 18:29:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-11 18:29:35 -The following profiles are active: dev
2019-03-11 18:29:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Mon Mar 11 18:29:35 CST 2019]; root of context hierarchy
2019-03-11 18:29:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-11 18:29:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9a53edc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8cad1c6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-11 18:29:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-11 18:29:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-11 18:29:48 -Tomcat initialized with port(s): 8081 (http)
2019-03-11 18:29:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-11 18:29:48 -Starting service [Tomcat]
2019-03-11 18:29:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-11 18:29:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-11 18:29:48 -Initializing Spring embedded WebApplicationContext
2019-03-11 18:29:48 -Root WebApplicationContext: initialization completed in 13203 ms
2019-03-11 18:29:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-11 18:29:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-11 18:29:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-11 18:29:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-11 18:29:49 -Filter xssFilter was not registered (disabled)
2019-03-11 18:29:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-11 18:29:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-11 18:29:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-11 18:29:49 -Servlet dispatcherServlet mapped to [/]
2019-03-11 18:29:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Mon Mar 11 18:29:35 CST 2019]; root of context hierarchy
2019-03-11 18:29:53 -Using default implementation for ThreadExecutor
2019-03-11 18:29:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-11 18:29:53 -Quartz Scheduler v.2.2.1 created.
2019-03-11 18:29:53 -RAMJobStore initialized.
2019-03-11 18:29:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-11 18:29:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-11 18:29:53 -Quartz scheduler version: 2.2.1
2019-03-11 18:29:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@28d56028
2019-03-11 18:29:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-11 18:29:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-11 18:29:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-11 18:29:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-11 18:29:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-11 18:29:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-11 18:29:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-11 18:29:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-11 18:29:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-11 18:29:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-11 18:29:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-11 18:29:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-11 18:29:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-11 18:29:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-11 18:29:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-11 18:29:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-11 18:29:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 18:29:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-11 18:29:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-11 18:29:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-11 18:29:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-11 18:29:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-11 18:29:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-11 18:29:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-11 18:29:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-11 18:29:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-11 18:29:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 18:29:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-11 18:29:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-11 18:29:57 -Mapped "{[/elec/elec/queryElec],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.queryElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/ArrearsElec],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elec/exportElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exportElec(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.add()
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.update(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecCostController.save(com.bootdo.elec.domain.ElecCostDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/elec/elecCost],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecCostController.ElecCost()
2019-03-11 18:29:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.domain.ElecDO,javax.servlet.http.HttpServletResponse)
2019-03-11 18:29:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-11 18:29:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-11 18:29:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-11 18:29:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-11 18:29:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-11 18:29:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-11 18:29:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-11 18:29:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-11 18:29:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-11 18:29:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-11 18:29:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-11 18:29:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-11 18:29:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-11 18:29:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-11 18:29:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-11 18:29:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-11 18:29:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-11 18:29:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-11 18:29:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-11 18:29:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-11 18:29:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-11 18:29:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-11 18:29:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-11 18:29:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-11 18:29:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-11 18:29:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 18:29:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-11 18:29:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-11 18:29:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-11 18:29:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-11 18:29:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-11 18:29:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-11 18:29:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-11 18:29:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-11 18:29:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-11 18:29:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-11 18:29:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-11 18:29:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-11 18:29:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-11 18:29:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-11 18:29:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-11 18:29:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-11 18:29:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 18:29:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-11 18:29:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 18:29:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-11 18:29:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-11 18:29:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-11 18:29:57 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-11 18:29:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/water/exportWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exportElec(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse,java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-11 18:29:57 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-11 18:29:57 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-11 18:29:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[POST]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.domain.WaterDO,javax.servlet.http.HttpServletResponse)
2019-03-11 18:29:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-11 18:29:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-11 18:29:57 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-11 18:29:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-11 18:29:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-11 18:29:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-11 18:29:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-11 18:29:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-11 18:29:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-11 18:29:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-11 18:29:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-11 18:29:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 18:29:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Mon Mar 11 18:29:35 CST 2019]; root of context hierarchy
2019-03-11 18:29:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 18:29:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 18:29:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-11 18:29:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-11 18:29:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-11 18:30:02 -Registering beans for JMX exposure on startup
2019-03-11 18:30:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-11 18:30:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-11 18:30:02 -Starting beans in phase 2147483647
2019-03-11 18:30:02 -Context refreshed
2019-03-11 18:30:02 -Found 1 custom documentation plugin(s)
2019-03-11 18:30:02 -Scanning for api listing references
2019-03-11 18:30:02 -Generating unique operation named: removeUsingPOST_1
2019-03-11 18:30:02 -Generating unique operation named: addUsingGET_1
2019-03-11 18:30:02 -Generating unique operation named: editUsingGET_1
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_1
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_2
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_3
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-11 18:30:03 -Generating unique operation named: updateUsingTRACE_1
2019-03-11 18:30:03 -Generating unique operation named: addUsingGET_2
2019-03-11 18:30:03 -Generating unique operation named: editUsingGET_2
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_2
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_4
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_5
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-11 18:30:03 -Generating unique operation named: updateUsingTRACE_2
2019-03-11 18:30:03 -Generating unique operation named: addUsingGET_3
2019-03-11 18:30:03 -Generating unique operation named: editUsingGET_3
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_3
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_6
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_7
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-11 18:30:03 -Generating unique operation named: updateUsingTRACE_3
2019-03-11 18:30:03 -Generating unique operation named: addUsingGET_4
2019-03-11 18:30:03 -Generating unique operation named: editUsingGET_4
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_4
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_8
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_9
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-11 18:30:03 -Generating unique operation named: updateUsingTRACE_4
2019-03-11 18:30:03 -Generating unique operation named: addUsingGET_5
2019-03-11 18:30:03 -Generating unique operation named: editUsingGET_5
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_5
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_10
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_11
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-11 18:30:03 -Generating unique operation named: updateUsingTRACE_5
2019-03-11 18:30:03 -Generating unique operation named: ElecUsingGET_1
2019-03-11 18:30:03 -Generating unique operation named: addUsingGET_6
2019-03-11 18:30:03 -Generating unique operation named: editUsingGET_6
2019-03-11 18:30:03 -Generating unique operation named: listUsingGET_6
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_12
2019-03-11 18:30:03 -Generating unique operation named: removeUsingPOST_13
2019-03-11 18:30:03 -Generating unique operation named: saveUsingPOST_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingGET_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingHEAD_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPOST_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPUT_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingPATCH_6
2019-03-11 18:30:03 -Generating unique operation named: updateUsingDELETE_6
2019-03-11 18:30:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-11 18:30:04 -Generating unique operation named: updateUsingTRACE_6
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_7
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_7
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_7
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_8
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_8
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_14
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_15
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingGET_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingHEAD_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPUT_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPATCH_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingDELETE_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-11 18:30:04 -Generating unique operation named: updateUsingTRACE_7
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_8
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_9
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_9
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_16
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_17
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingGET_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingHEAD_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPUT_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPATCH_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingDELETE_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-11 18:30:04 -Generating unique operation named: updateUsingTRACE_8
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_9
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_10
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_10
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_18
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_19
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingGET_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingHEAD_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPUT_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPATCH_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingDELETE_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-11 18:30:04 -Generating unique operation named: updateUsingTRACE_9
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_10
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_11
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_11
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_20
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_21
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingGET_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingHEAD_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_11
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPUT_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPATCH_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingDELETE_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-11 18:30:04 -Generating unique operation named: updateUsingTRACE_10
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_11
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_12
2019-03-11 18:30:04 -Generating unique operation named: infoUsingGET_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingHEAD_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingPOST_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingPUT_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingPATCH_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingDELETE_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-11 18:30:04 -Generating unique operation named: infoUsingTRACE_1
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_12
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_22
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_23
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_11
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_12
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_13
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_24
2019-03-11 18:30:04 -Generating unique operation named: welcomeUsingGET_1
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_12
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_13
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_14
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_25
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_12
2019-03-11 18:30:04 -Generating unique operation named: treeUsingGET_1
2019-03-11 18:30:04 -Generating unique operation named: treeUsingGET_2
2019-03-11 18:30:04 -Generating unique operation named: updateUsingPOST_13
2019-03-11 18:30:04 -Generating unique operation named: addUsingGET_13
2019-03-11 18:30:04 -Generating unique operation named: editUsingGET_14
2019-03-11 18:30:04 -Generating unique operation named: listUsingGET_15
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_26
2019-03-11 18:30:04 -Generating unique operation named: removeUsingPOST_27
2019-03-11 18:30:04 -Generating unique operation named: saveUsingPOST_13
2019-03-11 18:30:04 -Generating unique operation named: updateUsingGET_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingHEAD_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPOST_14
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPUT_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPATCH_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingDELETE_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-11 18:30:05 -Generating unique operation named: updateUsingTRACE_11
2019-03-11 18:30:05 -Generating unique operation named: addUsingGET_14
2019-03-11 18:30:05 -Generating unique operation named: editUsingGET_15
2019-03-11 18:30:05 -Generating unique operation named: listUsingGET_16
2019-03-11 18:30:05 -Generating unique operation named: removeUsingPOST_28
2019-03-11 18:30:05 -Generating unique operation named: removeUsingPOST_29
2019-03-11 18:30:05 -Generating unique operation named: saveUsingPOST_14
2019-03-11 18:30:05 -Generating unique operation named: updateUsingGET_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingHEAD_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPOST_15
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPUT_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPATCH_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingDELETE_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-11 18:30:05 -Generating unique operation named: updateUsingTRACE_12
2019-03-11 18:30:05 -Generating unique operation named: addUsingGET_15
2019-03-11 18:30:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-11 18:30:05 -Generating unique operation named: editUsingGET_16
2019-03-11 18:30:05 -Generating unique operation named: listUsingGET_17
2019-03-11 18:30:05 -Generating unique operation named: saveUsingPOST_15
2019-03-11 18:30:05 -Generating unique operation named: saveUsingPOST_16
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPOST_16
2019-03-11 18:30:05 -Generating unique operation named: listUsingGET_18
2019-03-11 18:30:05 -Generating unique operation named: listUsingHEAD_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingPOST_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingPUT_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingPATCH_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingDELETE_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingOPTIONS_1
2019-03-11 18:30:05 -Generating unique operation named: listUsingTRACE_1
2019-03-11 18:30:05 -Generating unique operation named: addUsingGET_16
2019-03-11 18:30:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-11 18:30:05 -Generating unique operation named: editUsingGET_17
2019-03-11 18:30:05 -Generating unique operation named: listUsingGET_19
2019-03-11 18:30:05 -Generating unique operation named: removeUsingPOST_30
2019-03-11 18:30:05 -Generating unique operation named: saveUsingPOST_17
2019-03-11 18:30:05 -Generating unique operation named: treeUsingGET_3
2019-03-11 18:30:05 -Generating unique operation named: treeViewUsingGET_1
2019-03-11 18:30:05 -Generating unique operation named: updateUsingPOST_17
2019-03-11 18:30:06 -Generating unique operation named: ArrearsElecUsingGET_1
2019-03-11 18:30:06 -Generating unique operation named: addUsingGET_17
2019-03-11 18:30:06 -Generating unique operation named: editUsingGET_18
2019-03-11 18:30:06 -Generating unique operation named: exportElecUsingGET_1
2019-03-11 18:30:06 -Generating unique operation named: listUsingGET_20
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_31
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_32
2019-03-11 18:30:06 -Generating unique operation named: saveUsingPOST_18
2019-03-11 18:30:06 -Generating unique operation named: updateUsingGET_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingHEAD_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPOST_18
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPUT_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPATCH_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingDELETE_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-11 18:30:06 -Generating unique operation named: updateUsingTRACE_13
2019-03-11 18:30:06 -Generating unique operation named: addUsingGET_18
2019-03-11 18:30:06 -Generating unique operation named: editUsingGET_19
2019-03-11 18:30:06 -Generating unique operation named: listUsingGET_21
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_33
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_34
2019-03-11 18:30:06 -Generating unique operation named: saveUsingPOST_19
2019-03-11 18:30:06 -Generating unique operation named: updateUsingGET_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingHEAD_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPOST_19
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPUT_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPATCH_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingDELETE_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-11 18:30:06 -Generating unique operation named: updateUsingTRACE_14
2019-03-11 18:30:06 -Generating unique operation named: addUsingGET_19
2019-03-11 18:30:06 -Generating unique operation named: editUsingGET_20
2019-03-11 18:30:06 -Generating unique operation named: listUsingGET_22
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_35
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_36
2019-03-11 18:30:06 -Generating unique operation named: saveUsingPOST_20
2019-03-11 18:30:06 -Generating unique operation named: updateUsingGET_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingHEAD_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPOST_20
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPUT_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPATCH_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingDELETE_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-11 18:30:06 -Generating unique operation named: updateUsingTRACE_15
2019-03-11 18:30:06 -Generating unique operation named: addUsingGET_20
2019-03-11 18:30:06 -Generating unique operation named: editUsingGET_21
2019-03-11 18:30:06 -Generating unique operation named: listUsingGET_23
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_37
2019-03-11 18:30:06 -Generating unique operation named: removeUsingPOST_38
2019-03-11 18:30:06 -Generating unique operation named: saveUsingPOST_21
2019-03-11 18:30:06 -Generating unique operation named: updateUsingGET_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingHEAD_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPOST_21
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPUT_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingPATCH_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingDELETE_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingOPTIONS_16
2019-03-11 18:30:06 -Generating unique operation named: updateUsingTRACE_16
2019-03-11 18:30:06 -Starting Quartz Scheduler now
2019-03-11 18:30:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-11 18:30:06 -Starting...
2019-03-11 18:30:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-11 18:30:06 -Started.
2019-03-11 18:30:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-11 18:30:06 -Using a shared selector for servlet write/read
2019-03-11 18:30:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-11 18:30:06 -Started BootdoApplication in 33.266 seconds (JVM running for 34.937)
2019-03-11 18:30:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-11 18:30:07 -==> Parameters: 
2019-03-11 18:30:07 -<==      Total: 1
2019-03-11 18:30:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-11 18:33:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-11 18:33:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-11 18:33:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-03-11 18:33:07 -Enabling session validation scheduler...
2019-03-11 18:33:07 -请求地址 : http://localhost:8081/
2019-03-11 18:33:07 -HTTP METHOD : GET
2019-03-11 18:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-11 18:33:07 -参数 : [{}]
2019-03-11 18:33:07 -耗时 : 4
2019-03-11 18:33:07 -返回值 : redirect:/index
2019-03-11 18:33:07 -请求地址 : http://localhost:8081/login;JSESSIONID=69e3ef90-7624-44ae-9994-d763e686e99f
2019-03-11 18:33:07 -HTTP METHOD : GET
2019-03-11 18:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 18:33:07 -参数 : [{}]
2019-03-11 18:33:07 -耗时 : 0
2019-03-11 18:33:07 -返回值 : login
2019-03-11 18:33:11 -请求地址 : http://localhost:8081/getVerify
2019-03-11 18:33:11 -HTTP METHOD : GET
2019-03-11 18:33:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 18:33:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@cef0a6a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@228e587]
2019-03-11 18:33:15 -6178
2019-03-11 18:33:15 -耗时 : 4191
2019-03-11 18:33:15 -返回值 : null
2019-03-11 18:33:21 -请求地址 : http://localhost:8081/login
2019-03-11 18:33:21 -HTTP METHOD : POST
2019-03-11 18:33:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 18:33:21 -参数 : [admin, 111111, 6178, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71a6fc05]
2019-03-11 18:33:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 18:33:21 -==> Parameters: admin(String)
2019-03-11 18:33:21 -<==      Total: 1
2019-03-11 18:33:21 -耗时 : 92
2019-03-11 18:33:21 -返回值 : {msg=操作成功, code=0}
2019-03-11 18:33:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-11 18:33:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 18:33:21 -==> Parameters: 1(Long), admin(String), 登录(String), 92(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 18:33:21.542(Timestamp)
2019-03-11 18:33:21 -<==    Updates: 1
2019-03-11 18:33:21 -请求地址 : http://localhost:8081/index
2019-03-11 18:33:21 -HTTP METHOD : GET
2019-03-11 18:33:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 18:33:21 -参数 : [{}]
2019-03-11 18:33:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 18:33:21 -==> Parameters: 1(Long)
2019-03-11 18:33:21 -<==      Total: 45
2019-03-11 18:33:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 18:33:21 -==> Parameters: 138(Long)
2019-03-11 18:33:22 -<==      Total: 1
2019-03-11 18:33:22 -耗时 : 225
2019-03-11 18:33:22 -返回值 : index_v1
2019-03-11 18:33:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 18:33:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 226(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 18:33:22.096(Timestamp)
2019-03-11 18:33:22 -<==    Updates: 1
2019-03-11 18:33:22 -请求地址 : http://localhost:8081/main
2019-03-11 18:33:22 -HTTP METHOD : GET
2019-03-11 18:33:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 18:33:22 -参数 : []
2019-03-11 18:33:22 -耗时 : 1
2019-03-11 18:33:22 -返回值 : main
2019-03-11 18:33:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 18:33:23 -HTTP METHOD : GET
2019-03-11 18:33:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 18:33:23 -参数 : []
2019-03-11 18:33:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 18:33:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 18:33:23 -<==      Total: 0
2019-03-11 18:33:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 18:33:23 -==> Parameters: 1(Long), 0(String)
2019-03-11 18:33:23 -<==      Total: 1
2019-03-11 18:33:23 -耗时 : 82
2019-03-11 18:33:23 -返回值 : com.bootdo.common.utils.PageUtils@52cb1352
2019-03-11 18:33:23 -请求地址 : http://localhost:8081/main
2019-03-11 18:33:23 -HTTP METHOD : GET
2019-03-11 18:33:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 18:33:23 -参数 : []
2019-03-11 18:33:23 -耗时 : 1
2019-03-11 18:33:23 -返回值 : main
2019-03-11 18:33:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 18:33:43 -==> Parameters: 1(Long)
2019-03-11 18:33:43 -<==      Total: 86
2019-03-11 18:33:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 18:33:43 -HTTP METHOD : GET
2019-03-11 18:33:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 18:33:43 -参数 : []
2019-03-11 18:33:43 -耗时 : 1
2019-03-11 18:33:43 -返回值 : /moneyList/moneyList
2019-03-11 18:34:41 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 18:34:41 -HTTP METHOD : GET
2019-03-11 18:34:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 18:34:41 -参数 : []
2019-03-11 18:34:41 -耗时 : 1
2019-03-11 18:34:41 -返回值 : elec/elec/elec
2019-03-11 18:34:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 18:34:41 -HTTP METHOD : GET
2019-03-11 18:34:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 18:34:41 -参数 : [{limit=10, offset=0}]
2019-03-11 18:34:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 18:34:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:34:42 -<==      Total: 4
2019-03-11 18:34:42 -==>  Preparing: select count(*) from elec 
2019-03-11 18:34:42 -==> Parameters: 
2019-03-11 18:34:42 -<==      Total: 1
2019-03-11 18:34:42 -耗时 : 96
2019-03-11 18:34:42 -返回值 : com.bootdo.common.utils.PageUtils@f077276
2019-03-11 18:34:44 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-11 18:34:44 -HTTP METHOD : GET
2019-03-11 18:34:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-11 18:34:44 -参数 : []
2019-03-11 18:34:44 -耗时 : 0
2019-03-11 18:34:44 -返回值 : elec/elecInto/elecInto
2019-03-11 18:34:47 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 18:34:47 -HTTP METHOD : GET
2019-03-11 18:34:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 18:34:47 -参数 : []
2019-03-11 18:34:47 -耗时 : 1
2019-03-11 18:34:47 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 18:35:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:35:20 -HTTP METHOD : GET
2019-03-11 18:35:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:35:20 -参数 : []
2019-03-11 18:35:20 -耗时 : 1
2019-03-11 18:35:20 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:35:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:35:20 -HTTP METHOD : GET
2019-03-11 18:35:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:35:20 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:35:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:20 -<==      Total: 3
2019-03-11 18:35:20 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:35:20 -==> Parameters: 
2019-03-11 18:35:20 -<==      Total: 1
2019-03-11 18:35:20 -耗时 : 58
2019-03-11 18:35:20 -返回值 : com.bootdo.common.utils.PageUtils@69682da2
2019-03-11 18:35:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:35:21 -HTTP METHOD : GET
2019-03-11 18:35:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:35:21 -参数 : []
2019-03-11 18:35:21 -耗时 : 1
2019-03-11 18:35:21 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:35:23 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:35:23 -HTTP METHOD : GET
2019-03-11 18:35:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:35:23 -参数 : []
2019-03-11 18:35:23 -耗时 : 0
2019-03-11 18:35:23 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:35:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:35:23 -HTTP METHOD : GET
2019-03-11 18:35:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:35:23 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:35:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:23 -<==      Total: 3
2019-03-11 18:35:23 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:35:23 -==> Parameters: 
2019-03-11 18:35:23 -<==      Total: 1
2019-03-11 18:35:23 -耗时 : 39
2019-03-11 18:35:23 -返回值 : com.bootdo.common.utils.PageUtils@33f5adf
2019-03-11 18:35:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:35:24 -HTTP METHOD : GET
2019-03-11 18:35:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:35:24 -参数 : []
2019-03-11 18:35:24 -耗时 : 1
2019-03-11 18:35:24 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:35:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:35:53 -HTTP METHOD : GET
2019-03-11 18:35:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:35:53 -参数 : []
2019-03-11 18:35:53 -耗时 : 0
2019-03-11 18:35:53 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:35:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:35:54 -HTTP METHOD : GET
2019-03-11 18:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:35:54 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:35:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:54 -<==      Total: 3
2019-03-11 18:35:54 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:35:54 -==> Parameters: 
2019-03-11 18:35:54 -<==      Total: 1
2019-03-11 18:35:54 -耗时 : 12
2019-03-11 18:35:54 -返回值 : com.bootdo.common.utils.PageUtils@71e17a64
2019-03-11 18:35:54 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:35:54 -HTTP METHOD : GET
2019-03-11 18:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:35:54 -参数 : []
2019-03-11 18:35:54 -耗时 : 1
2019-03-11 18:35:54 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:35:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:35:54 -HTTP METHOD : GET
2019-03-11 18:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:35:54 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:35:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:54 -<==      Total: 3
2019-03-11 18:35:54 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:35:54 -==> Parameters: 
2019-03-11 18:35:54 -<==      Total: 1
2019-03-11 18:35:54 -耗时 : 12
2019-03-11 18:35:54 -返回值 : com.bootdo.common.utils.PageUtils@2ebc8417
2019-03-11 18:35:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:35:55 -HTTP METHOD : GET
2019-03-11 18:35:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:35:55 -参数 : []
2019-03-11 18:35:55 -耗时 : 1
2019-03-11 18:35:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:35:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:35:56 -HTTP METHOD : GET
2019-03-11 18:35:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:35:56 -参数 : []
2019-03-11 18:35:56 -耗时 : 1
2019-03-11 18:35:56 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:35:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:35:56 -HTTP METHOD : GET
2019-03-11 18:35:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:35:56 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:35:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:56 -<==      Total: 3
2019-03-11 18:35:56 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:35:56 -==> Parameters: 
2019-03-11 18:35:56 -<==      Total: 1
2019-03-11 18:35:56 -耗时 : 10
2019-03-11 18:35:56 -返回值 : com.bootdo.common.utils.PageUtils@7154c3f2
2019-03-11 18:35:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:35:57 -HTTP METHOD : GET
2019-03-11 18:35:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:35:57 -参数 : []
2019-03-11 18:35:57 -耗时 : 0
2019-03-11 18:35:57 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:35:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:35:57 -HTTP METHOD : GET
2019-03-11 18:35:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:35:57 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:35:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:57 -<==      Total: 3
2019-03-11 18:35:57 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:35:57 -==> Parameters: 
2019-03-11 18:35:57 -<==      Total: 1
2019-03-11 18:35:57 -耗时 : 9
2019-03-11 18:35:57 -返回值 : com.bootdo.common.utils.PageUtils@32f322e1
2019-03-11 18:35:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:35:58 -HTTP METHOD : GET
2019-03-11 18:35:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:35:58 -参数 : []
2019-03-11 18:35:58 -耗时 : 0
2019-03-11 18:35:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:35:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:35:58 -HTTP METHOD : GET
2019-03-11 18:35:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:35:58 -参数 : []
2019-03-11 18:35:58 -耗时 : 1
2019-03-11 18:35:58 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:35:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:35:58 -HTTP METHOD : GET
2019-03-11 18:35:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:35:58 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:35:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:58 -<==      Total: 3
2019-03-11 18:35:58 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:35:58 -==> Parameters: 
2019-03-11 18:35:58 -<==      Total: 1
2019-03-11 18:35:58 -耗时 : 8
2019-03-11 18:35:58 -返回值 : com.bootdo.common.utils.PageUtils@17e9b9fd
2019-03-11 18:35:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:35:59 -HTTP METHOD : GET
2019-03-11 18:35:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:35:59 -参数 : []
2019-03-11 18:35:59 -耗时 : 0
2019-03-11 18:35:59 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:35:59 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:35:59 -HTTP METHOD : GET
2019-03-11 18:35:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:35:59 -参数 : []
2019-03-11 18:35:59 -耗时 : 0
2019-03-11 18:35:59 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:35:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:35:59 -HTTP METHOD : GET
2019-03-11 18:35:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:35:59 -参数 : [{limit=10, offset=0}]
2019-03-11 18:35:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:35:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:35:59 -<==      Total: 3
2019-03-11 18:35:59 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:35:59 -==> Parameters: 
2019-03-11 18:35:59 -<==      Total: 1
2019-03-11 18:35:59 -耗时 : 7
2019-03-11 18:35:59 -返回值 : com.bootdo.common.utils.PageUtils@384e5eea
2019-03-11 18:36:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:00 -HTTP METHOD : GET
2019-03-11 18:36:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:00 -参数 : []
2019-03-11 18:36:00 -耗时 : 0
2019-03-11 18:36:00 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:01 -HTTP METHOD : GET
2019-03-11 18:36:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:01 -参数 : []
2019-03-11 18:36:01 -耗时 : 0
2019-03-11 18:36:01 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:01 -HTTP METHOD : GET
2019-03-11 18:36:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:01 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:01 -<==      Total: 3
2019-03-11 18:36:01 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:01 -==> Parameters: 
2019-03-11 18:36:01 -<==      Total: 1
2019-03-11 18:36:01 -耗时 : 7
2019-03-11 18:36:01 -返回值 : com.bootdo.common.utils.PageUtils@483ec2f6
2019-03-11 18:36:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:01 -HTTP METHOD : GET
2019-03-11 18:36:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:01 -参数 : []
2019-03-11 18:36:01 -耗时 : 0
2019-03-11 18:36:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:02 -HTTP METHOD : GET
2019-03-11 18:36:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:02 -参数 : []
2019-03-11 18:36:02 -耗时 : 1
2019-03-11 18:36:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:02 -HTTP METHOD : GET
2019-03-11 18:36:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:02 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:02 -<==      Total: 3
2019-03-11 18:36:02 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:02 -==> Parameters: 
2019-03-11 18:36:02 -<==      Total: 1
2019-03-11 18:36:02 -耗时 : 10
2019-03-11 18:36:02 -返回值 : com.bootdo.common.utils.PageUtils@544a3327
2019-03-11 18:36:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:02 -HTTP METHOD : GET
2019-03-11 18:36:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:02 -参数 : []
2019-03-11 18:36:02 -耗时 : 1
2019-03-11 18:36:02 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:03 -HTTP METHOD : GET
2019-03-11 18:36:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:03 -参数 : []
2019-03-11 18:36:03 -耗时 : 2
2019-03-11 18:36:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:03 -HTTP METHOD : GET
2019-03-11 18:36:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:03 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:03 -<==      Total: 3
2019-03-11 18:36:03 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:03 -==> Parameters: 
2019-03-11 18:36:03 -<==      Total: 1
2019-03-11 18:36:03 -耗时 : 15
2019-03-11 18:36:03 -返回值 : com.bootdo.common.utils.PageUtils@3f109702
2019-03-11 18:36:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:03 -HTTP METHOD : GET
2019-03-11 18:36:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:03 -参数 : []
2019-03-11 18:36:03 -耗时 : 0
2019-03-11 18:36:03 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:04 -HTTP METHOD : GET
2019-03-11 18:36:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:04 -参数 : []
2019-03-11 18:36:04 -耗时 : 0
2019-03-11 18:36:04 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:04 -HTTP METHOD : GET
2019-03-11 18:36:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:04 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:04 -<==      Total: 3
2019-03-11 18:36:04 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:04 -==> Parameters: 
2019-03-11 18:36:04 -<==      Total: 1
2019-03-11 18:36:04 -耗时 : 11
2019-03-11 18:36:04 -返回值 : com.bootdo.common.utils.PageUtils@6834ea8d
2019-03-11 18:36:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:04 -HTTP METHOD : GET
2019-03-11 18:36:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:04 -参数 : []
2019-03-11 18:36:04 -耗时 : 0
2019-03-11 18:36:04 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:05 -HTTP METHOD : GET
2019-03-11 18:36:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:05 -参数 : []
2019-03-11 18:36:05 -耗时 : 0
2019-03-11 18:36:05 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:05 -HTTP METHOD : GET
2019-03-11 18:36:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:05 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:05 -<==      Total: 3
2019-03-11 18:36:05 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:05 -==> Parameters: 
2019-03-11 18:36:05 -<==      Total: 1
2019-03-11 18:36:05 -耗时 : 9
2019-03-11 18:36:05 -返回值 : com.bootdo.common.utils.PageUtils@5f8829ba
2019-03-11 18:36:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:06 -HTTP METHOD : GET
2019-03-11 18:36:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:06 -参数 : []
2019-03-11 18:36:06 -耗时 : 0
2019-03-11 18:36:06 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:06 -HTTP METHOD : GET
2019-03-11 18:36:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:06 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:06 -<==      Total: 3
2019-03-11 18:36:06 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:06 -==> Parameters: 
2019-03-11 18:36:06 -<==      Total: 1
2019-03-11 18:36:06 -耗时 : 8
2019-03-11 18:36:06 -返回值 : com.bootdo.common.utils.PageUtils@bca0801
2019-03-11 18:36:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:06 -HTTP METHOD : GET
2019-03-11 18:36:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:06 -参数 : []
2019-03-11 18:36:06 -耗时 : 1
2019-03-11 18:36:06 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:07 -HTTP METHOD : GET
2019-03-11 18:36:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:07 -参数 : []
2019-03-11 18:36:07 -耗时 : 1
2019-03-11 18:36:07 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:07 -HTTP METHOD : GET
2019-03-11 18:36:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:07 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:07 -<==      Total: 3
2019-03-11 18:36:07 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:07 -==> Parameters: 
2019-03-11 18:36:07 -<==      Total: 1
2019-03-11 18:36:07 -耗时 : 8
2019-03-11 18:36:07 -返回值 : com.bootdo.common.utils.PageUtils@306d4e92
2019-03-11 18:36:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:07 -HTTP METHOD : GET
2019-03-11 18:36:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:07 -参数 : []
2019-03-11 18:36:07 -耗时 : 0
2019-03-11 18:36:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:08 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:08 -HTTP METHOD : GET
2019-03-11 18:36:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:08 -参数 : []
2019-03-11 18:36:08 -耗时 : 0
2019-03-11 18:36:08 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:08 -HTTP METHOD : GET
2019-03-11 18:36:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:08 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:08 -<==      Total: 3
2019-03-11 18:36:08 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:08 -==> Parameters: 
2019-03-11 18:36:08 -<==      Total: 1
2019-03-11 18:36:08 -耗时 : 7
2019-03-11 18:36:08 -返回值 : com.bootdo.common.utils.PageUtils@7dd6aadb
2019-03-11 18:36:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:08 -HTTP METHOD : GET
2019-03-11 18:36:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:08 -参数 : []
2019-03-11 18:36:08 -耗时 : 0
2019-03-11 18:36:08 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:08 -HTTP METHOD : GET
2019-03-11 18:36:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:08 -参数 : []
2019-03-11 18:36:08 -耗时 : 1
2019-03-11 18:36:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:09 -HTTP METHOD : GET
2019-03-11 18:36:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:09 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:09 -<==      Total: 3
2019-03-11 18:36:09 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:09 -==> Parameters: 
2019-03-11 18:36:09 -<==      Total: 1
2019-03-11 18:36:09 -耗时 : 8
2019-03-11 18:36:09 -返回值 : com.bootdo.common.utils.PageUtils@79719cd4
2019-03-11 18:36:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:09 -HTTP METHOD : GET
2019-03-11 18:36:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:09 -参数 : []
2019-03-11 18:36:09 -耗时 : 0
2019-03-11 18:36:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:09 -HTTP METHOD : GET
2019-03-11 18:36:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:09 -参数 : []
2019-03-11 18:36:09 -耗时 : 1
2019-03-11 18:36:09 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:09 -HTTP METHOD : GET
2019-03-11 18:36:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:09 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:09 -<==      Total: 3
2019-03-11 18:36:09 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:09 -==> Parameters: 
2019-03-11 18:36:09 -<==      Total: 1
2019-03-11 18:36:09 -耗时 : 10
2019-03-11 18:36:09 -返回值 : com.bootdo.common.utils.PageUtils@4485640
2019-03-11 18:36:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:10 -HTTP METHOD : GET
2019-03-11 18:36:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:10 -参数 : []
2019-03-11 18:36:10 -耗时 : 0
2019-03-11 18:36:10 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:36:10 -HTTP METHOD : GET
2019-03-11 18:36:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:36:10 -参数 : []
2019-03-11 18:36:10 -耗时 : 1
2019-03-11 18:36:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:36:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:36:11 -HTTP METHOD : GET
2019-03-11 18:36:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:36:11 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:36:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:11 -<==      Total: 3
2019-03-11 18:36:11 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:36:11 -==> Parameters: 
2019-03-11 18:36:11 -<==      Total: 1
2019-03-11 18:36:11 -耗时 : 7
2019-03-11 18:36:11 -返回值 : com.bootdo.common.utils.PageUtils@1e9f0262
2019-03-11 18:36:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:11 -HTTP METHOD : GET
2019-03-11 18:36:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:11 -参数 : []
2019-03-11 18:36:11 -耗时 : 1
2019-03-11 18:36:11 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:12 -HTTP METHOD : GET
2019-03-11 18:36:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:12 -参数 : []
2019-03-11 18:36:12 -耗时 : 0
2019-03-11 18:36:12 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:12 -HTTP METHOD : GET
2019-03-11 18:36:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:12 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:12 -<==      Total: 3
2019-03-11 18:36:12 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:12 -==> Parameters: 
2019-03-11 18:36:12 -<==      Total: 1
2019-03-11 18:36:12 -耗时 : 7
2019-03-11 18:36:12 -返回值 : com.bootdo.common.utils.PageUtils@7d712cae
2019-03-11 18:36:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:16 -HTTP METHOD : GET
2019-03-11 18:36:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:16 -参数 : []
2019-03-11 18:36:16 -耗时 : 0
2019-03-11 18:36:16 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:36:39 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:36:39 -HTTP METHOD : GET
2019-03-11 18:36:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:36:39 -参数 : []
2019-03-11 18:36:39 -耗时 : 0
2019-03-11 18:36:39 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:36:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:36:39 -HTTP METHOD : GET
2019-03-11 18:36:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:36:39 -参数 : [{limit=10, offset=0}]
2019-03-11 18:36:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:36:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:36:39 -<==      Total: 3
2019-03-11 18:36:39 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:36:39 -==> Parameters: 
2019-03-11 18:36:39 -<==      Total: 1
2019-03-11 18:36:39 -耗时 : 8
2019-03-11 18:36:39 -返回值 : com.bootdo.common.utils.PageUtils@6122d89c
2019-03-11 18:36:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:36:41 -HTTP METHOD : GET
2019-03-11 18:36:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:36:41 -参数 : []
2019-03-11 18:36:41 -耗时 : 1
2019-03-11 18:36:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:39:04 -请求地址 : http://localhost:8081/index
2019-03-11 18:39:04 -HTTP METHOD : GET
2019-03-11 18:39:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 18:39:04 -参数 : [{}]
2019-03-11 18:39:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 18:39:04 -==> Parameters: 1(Long)
2019-03-11 18:39:04 -<==      Total: 45
2019-03-11 18:39:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 18:39:04 -==> Parameters: 138(Long)
2019-03-11 18:39:04 -<==      Total: 1
2019-03-11 18:39:04 -耗时 : 25
2019-03-11 18:39:04 -返回值 : index_v1
2019-03-11 18:39:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 18:39:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 18:39:04.232(Timestamp)
2019-03-11 18:39:04 -<==    Updates: 1
2019-03-11 18:39:04 -请求地址 : http://localhost:8081/main
2019-03-11 18:39:04 -HTTP METHOD : GET
2019-03-11 18:39:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 18:39:04 -参数 : []
2019-03-11 18:39:04 -耗时 : 1
2019-03-11 18:39:04 -返回值 : main
2019-03-11 18:39:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 18:39:04 -HTTP METHOD : GET
2019-03-11 18:39:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 18:39:04 -参数 : []
2019-03-11 18:39:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 18:39:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 18:39:04 -<==      Total: 0
2019-03-11 18:39:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 18:39:04 -==> Parameters: 1(Long), 0(String)
2019-03-11 18:39:04 -<==      Total: 1
2019-03-11 18:39:04 -耗时 : 7
2019-03-11 18:39:04 -返回值 : com.bootdo.common.utils.PageUtils@1eba41ee
2019-03-11 18:39:04 -请求地址 : http://localhost:8081/main
2019-03-11 18:39:04 -HTTP METHOD : GET
2019-03-11 18:39:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 18:39:04 -参数 : []
2019-03-11 18:39:04 -耗时 : 2
2019-03-11 18:39:04 -返回值 : main
2019-03-11 18:39:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:39:08 -HTTP METHOD : GET
2019-03-11 18:39:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:39:08 -参数 : []
2019-03-11 18:39:08 -耗时 : 1
2019-03-11 18:39:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:39:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:39:08 -HTTP METHOD : GET
2019-03-11 18:39:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:39:08 -参数 : [{limit=10, offset=0}]
2019-03-11 18:39:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:39:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:39:08 -<==      Total: 3
2019-03-11 18:39:08 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:39:08 -==> Parameters: 
2019-03-11 18:39:08 -<==      Total: 1
2019-03-11 18:39:08 -耗时 : 6
2019-03-11 18:39:08 -返回值 : com.bootdo.common.utils.PageUtils@5c8934ca
2019-03-11 18:39:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:39:09 -HTTP METHOD : GET
2019-03-11 18:39:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:39:09 -参数 : []
2019-03-11 18:39:09 -耗时 : 1
2019-03-11 18:39:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:39:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:39:29 -HTTP METHOD : GET
2019-03-11 18:39:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:39:29 -参数 : []
2019-03-11 18:39:29 -耗时 : 1
2019-03-11 18:39:29 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:39:29 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:39:29 -HTTP METHOD : GET
2019-03-11 18:39:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:39:29 -参数 : [{limit=10, offset=0}]
2019-03-11 18:39:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:39:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:39:29 -<==      Total: 3
2019-03-11 18:39:29 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:39:29 -==> Parameters: 
2019-03-11 18:39:29 -<==      Total: 1
2019-03-11 18:39:29 -耗时 : 8
2019-03-11 18:39:29 -返回值 : com.bootdo.common.utils.PageUtils@61ccf560
2019-03-11 18:39:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:39:31 -HTTP METHOD : GET
2019-03-11 18:39:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:39:31 -参数 : []
2019-03-11 18:39:31 -耗时 : 0
2019-03-11 18:39:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:39:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:39:32 -HTTP METHOD : GET
2019-03-11 18:39:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:39:32 -参数 : []
2019-03-11 18:39:32 -耗时 : 1
2019-03-11 18:39:32 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:39:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:39:32 -HTTP METHOD : GET
2019-03-11 18:39:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:39:32 -参数 : [{limit=10, offset=0}]
2019-03-11 18:39:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:39:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:39:32 -<==      Total: 3
2019-03-11 18:39:32 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:39:32 -==> Parameters: 
2019-03-11 18:39:32 -<==      Total: 1
2019-03-11 18:39:32 -耗时 : 7
2019-03-11 18:39:32 -返回值 : com.bootdo.common.utils.PageUtils@193f319e
2019-03-11 18:39:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:39:33 -HTTP METHOD : GET
2019-03-11 18:39:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:39:33 -参数 : []
2019-03-11 18:39:33 -耗时 : 0
2019-03-11 18:39:33 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:39:34 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-11 18:39:34 -HTTP METHOD : GET
2019-03-11 18:39:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-11 18:39:34 -参数 : []
2019-03-11 18:39:34 -耗时 : 0
2019-03-11 18:39:34 -返回值 : /moneyLog/waterLog/waterLog
2019-03-11 18:39:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-11 18:39:34 -HTTP METHOD : GET
2019-03-11 18:39:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-11 18:39:34 -参数 : [{limit=10, offset=0}]
2019-03-11 18:39:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-11 18:39:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:39:34 -<==      Total: 3
2019-03-11 18:39:34 -==>  Preparing: select count(*) from water_log 
2019-03-11 18:39:34 -==> Parameters: 
2019-03-11 18:39:34 -<==      Total: 1
2019-03-11 18:39:34 -耗时 : 8
2019-03-11 18:39:34 -返回值 : com.bootdo.common.utils.PageUtils@f869fda
2019-03-11 18:39:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:39:35 -HTTP METHOD : GET
2019-03-11 18:39:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:39:35 -参数 : []
2019-03-11 18:39:35 -耗时 : 1
2019-03-11 18:39:35 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:39:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-11 18:39:35 -HTTP METHOD : GET
2019-03-11 18:39:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-11 18:39:35 -参数 : []
2019-03-11 18:39:35 -耗时 : 0
2019-03-11 18:39:35 -返回值 : /moneyLog/elecLog/elecLog
2019-03-11 18:39:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-11 18:39:35 -HTTP METHOD : GET
2019-03-11 18:39:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-11 18:39:35 -参数 : [{limit=10, offset=0}]
2019-03-11 18:39:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-11 18:39:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:39:35 -<==      Total: 3
2019-03-11 18:39:35 -==>  Preparing: select count(*) from elec_log 
2019-03-11 18:39:35 -==> Parameters: 
2019-03-11 18:39:35 -<==      Total: 1
2019-03-11 18:39:35 -耗时 : 16
2019-03-11 18:39:35 -返回值 : com.bootdo.common.utils.PageUtils@35575aba
2019-03-11 18:39:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-11 18:39:38 -HTTP METHOD : GET
2019-03-11 18:39:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-11 18:39:38 -参数 : []
2019-03-11 18:39:38 -耗时 : 0
2019-03-11 18:39:38 -返回值 : /moneyLog/heatLog/heatLog
2019-03-11 18:40:38 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-11 18:40:38 -HTTP METHOD : GET
2019-03-11 18:40:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-11 18:40:38 -参数 : []
2019-03-11 18:40:38 -耗时 : 1
2019-03-11 18:40:38 -返回值 : /moneyList/moneyList
2019-03-11 18:41:05 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 18:41:05 -HTTP METHOD : GET
2019-03-11 18:41:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 18:41:05 -参数 : []
2019-03-11 18:41:05 -耗时 : 0
2019-03-11 18:41:05 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 18:41:08 -请求地址 : http://localhost:8081/elec/elec
2019-03-11 18:41:08 -HTTP METHOD : GET
2019-03-11 18:41:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-11 18:41:08 -参数 : []
2019-03-11 18:41:08 -耗时 : 0
2019-03-11 18:41:08 -返回值 : elec/elec/elec
2019-03-11 18:41:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-11 18:41:09 -HTTP METHOD : GET
2019-03-11 18:41:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-11 18:41:09 -参数 : [{limit=10, offset=0}]
2019-03-11 18:41:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-11 18:41:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-11 18:41:09 -<==      Total: 4
2019-03-11 18:41:09 -==>  Preparing: select count(*) from elec 
2019-03-11 18:41:09 -==> Parameters: 
2019-03-11 18:41:09 -<==      Total: 1
2019-03-11 18:41:09 -耗时 : 9
2019-03-11 18:41:09 -返回值 : com.bootdo.common.utils.PageUtils@3bec259f
2019-03-11 19:00:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 397]
2019-03-11 19:30:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 830]
2019-03-11 19:33:07 -Validating all active sessions...
2019-03-11 19:33:07 -Finished session validation.  [1] sessions were stopped.
2019-03-11 20:00:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1263]
2019-03-11 20:30:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1696]
2019-03-11 20:32:20 -请求地址 : http://localhost:8081/login;JSESSIONID=13d5c697-a139-498f-9a7a-27b84ade98fb
2019-03-11 20:32:20 -HTTP METHOD : GET
2019-03-11 20:32:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 20:32:20 -参数 : [{}]
2019-03-11 20:32:20 -耗时 : 2
2019-03-11 20:32:20 -返回值 : login
2019-03-11 20:32:20 -请求地址 : http://localhost:8081/login;JSESSIONID=13d5c697-a139-498f-9a7a-27b84ade98fb
2019-03-11 20:32:20 -HTTP METHOD : GET
2019-03-11 20:32:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 20:32:20 -参数 : [{}]
2019-03-11 20:32:20 -耗时 : 1
2019-03-11 20:32:20 -返回值 : login
2019-03-11 20:32:20 -请求地址 : http://localhost:8081/getVerify
2019-03-11 20:32:20 -HTTP METHOD : GET
2019-03-11 20:32:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 20:32:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f00bf1a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6ddf0c24]
2019-03-11 20:32:20 -4978
2019-03-11 20:32:20 -耗时 : 51
2019-03-11 20:32:20 -返回值 : null
2019-03-11 20:32:20 -请求地址 : http://localhost:8081/getVerify
2019-03-11 20:32:20 -HTTP METHOD : GET
2019-03-11 20:32:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 20:32:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@47c49a91, org.apache.shiro.web.servlet.ShiroHttpServletResponse@32e66d6f]
2019-03-11 20:32:20 -8768
2019-03-11 20:32:20 -耗时 : 21
2019-03-11 20:32:20 -返回值 : null
2019-03-11 20:32:24 -请求地址 : http://localhost:8081/login
2019-03-11 20:32:24 -HTTP METHOD : POST
2019-03-11 20:32:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 20:32:24 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@52eb4eeb]
2019-03-11 20:32:24 -耗时 : 1
2019-03-11 20:32:24 -返回值 : {msg=请输入验证码, code=500}
2019-03-11 20:32:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 20:32:25 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 20:32:25.025(Timestamp)
2019-03-11 20:32:25 -<==    Updates: 1
2019-03-11 20:32:32 -请求地址 : http://localhost:8081/login
2019-03-11 20:32:32 -HTTP METHOD : POST
2019-03-11 20:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-11 20:32:32 -参数 : [admin, 111111, 8768, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d5bb013]
2019-03-11 20:32:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-11 20:32:32 -==> Parameters: admin(String)
2019-03-11 20:32:32 -<==      Total: 1
2019-03-11 20:32:32 -耗时 : 21
2019-03-11 20:32:32 -返回值 : {msg=操作成功, code=0}
2019-03-11 20:32:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 20:32:32 -请求地址 : http://localhost:8081/index
2019-03-11 20:32:32 -==> Parameters: 1(Long), admin(String), 登录(String), 21(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-11 20:32:32.04(Timestamp)
2019-03-11 20:32:32 -HTTP METHOD : GET
2019-03-11 20:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-11 20:32:32 -参数 : [{}]
2019-03-11 20:32:32 -<==    Updates: 1
2019-03-11 20:32:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-11 20:32:32 -==> Parameters: 1(Long)
2019-03-11 20:32:32 -<==      Total: 45
2019-03-11 20:32:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-11 20:32:32 -==> Parameters: 138(Long)
2019-03-11 20:32:32 -<==      Total: 1
2019-03-11 20:32:32 -耗时 : 317
2019-03-11 20:32:32 -返回值 : index_v1
2019-03-11 20:32:32 -请求地址 : http://localhost:8081/main
2019-03-11 20:32:32 -HTTP METHOD : GET
2019-03-11 20:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 20:32:32 -参数 : []
2019-03-11 20:32:32 -耗时 : 1
2019-03-11 20:32:32 -返回值 : main
2019-03-11 20:32:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-11 20:32:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 317(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-11 20:32:32.384(Timestamp)
2019-03-11 20:32:32 -<==    Updates: 1
2019-03-11 20:32:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-11 20:32:32 -HTTP METHOD : GET
2019-03-11 20:32:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-11 20:32:32 -参数 : []
2019-03-11 20:32:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-11 20:32:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-11 20:32:32 -<==      Total: 0
2019-03-11 20:32:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-11 20:32:32 -==> Parameters: 1(Long), 0(String)
2019-03-11 20:32:32 -<==      Total: 1
2019-03-11 20:32:32 -耗时 : 8
2019-03-11 20:32:32 -返回值 : com.bootdo.common.utils.PageUtils@12519034
2019-03-11 20:32:32 -请求地址 : http://localhost:8081/main
2019-03-11 20:32:32 -HTTP METHOD : GET
2019-03-11 20:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-11 20:32:32 -参数 : []
2019-03-11 20:32:32 -耗时 : 0
2019-03-11 20:32:32 -返回值 : main
2019-03-11 20:32:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-11 20:32:41 -==> Parameters: 1(Long)
2019-03-11 20:32:41 -<==      Total: 86
2019-03-11 20:32:41 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-11 20:32:41 -HTTP METHOD : GET
2019-03-11 20:32:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-11 20:32:41 -参数 : []
2019-03-11 20:32:41 -耗时 : 0
2019-03-11 20:32:41 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-11 20:32:56 -请求地址 : http://localhost:8081/charts/countDD
2019-03-11 20:32:56 -HTTP METHOD : GET
2019-03-11 20:32:56 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-11 20:32:56 -参数 : []
2019-03-11 20:32:56 -耗时 : 2
2019-03-11 20:32:56 -返回值 : charts/countDD
2019-03-11 20:32:57 -请求地址 : http://localhost:8081/charts/countMM
2019-03-11 20:32:57 -HTTP METHOD : GET
2019-03-11 20:32:57 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-11 20:32:57 -参数 : []
2019-03-11 20:32:57 -耗时 : 1
2019-03-11 20:32:57 -返回值 : charts/countMM
2019-03-11 20:32:59 -请求地址 : http://localhost:8081/charts/countYY
2019-03-11 20:32:59 -HTTP METHOD : GET
2019-03-11 20:32:59 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-11 20:32:59 -参数 : []
2019-03-11 20:32:59 -耗时 : 1
2019-03-11 20:32:59 -返回值 : charts/countYY
2019-03-11 20:33:00 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-11 20:33:00 -HTTP METHOD : GET
2019-03-11 20:33:00 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-11 20:33:00 -参数 : []
2019-03-11 20:33:00 -耗时 : 0
2019-03-11 20:33:00 -返回值 : charts/countOwe
2019-03-11 20:33:01 -请求地址 : http://localhost:8081/charts/countRun
2019-03-11 20:33:01 -HTTP METHOD : GET
2019-03-11 20:33:01 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-11 20:33:01 -参数 : []
2019-03-11 20:33:01 -耗时 : 1
2019-03-11 20:33:01 -返回值 : charts/countRun
2019-03-11 20:33:07 -Validating all active sessions...
2019-03-11 20:33:07 -Finished session validation.  No sessions were stopped.
2019-03-11 21:00:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2128]
2019-03-11 21:08:47 -请求地址 : http://localhost:8081/login;JSESSIONID=eafd9a0f-cb19-4dcf-a5ce-beb1e1772ebb
2019-03-11 21:08:47 -HTTP METHOD : GET
2019-03-11 21:08:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 21:08:47 -参数 : [{}]
2019-03-11 21:08:47 -耗时 : 1
2019-03-11 21:08:47 -返回值 : login
2019-03-11 21:08:47 -请求地址 : http://localhost:8081/login;JSESSIONID=eafd9a0f-cb19-4dcf-a5ce-beb1e1772ebb
2019-03-11 21:08:47 -HTTP METHOD : GET
2019-03-11 21:08:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-11 21:08:47 -参数 : [{}]
2019-03-11 21:08:47 -耗时 : 288
2019-03-11 21:08:47 -返回值 : login
2019-03-11 21:08:47 -请求地址 : http://localhost:8081/getVerify
2019-03-11 21:08:47 -HTTP METHOD : GET
2019-03-11 21:08:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 21:08:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7c3e4cae, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7a81e9bc]
2019-03-11 21:08:47 -1316
2019-03-11 21:08:47 -耗时 : 43
2019-03-11 21:08:47 -返回值 : null
2019-03-11 21:08:47 -请求地址 : http://localhost:8081/getVerify
2019-03-11 21:08:47 -HTTP METHOD : GET
2019-03-11 21:08:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-11 21:08:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@52b3b89, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75e8e746]
2019-03-11 21:08:47 -0815
2019-03-11 21:08:47 -耗时 : 16
2019-03-11 21:08:47 -返回值 : null
2019-03-11 21:30:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2507]
2019-03-11 21:33:07 -Validating all active sessions...
2019-03-11 21:33:07 -Finished session validation.  No sessions were stopped.

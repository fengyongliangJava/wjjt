2019-07-16 14:06:01 -Starting BootdoApplication on PC-201905091110 with PID 29524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 14:06:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 14:06:01 -The following profiles are active: dev
2019-07-16 14:06:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@162be91c: startup date [Tue Jul 16 14:06:01 CST 2019]; root of context hierarchy
2019-07-16 14:06:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 14:06:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7967206d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6bc04f14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 14:06:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 14:06:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:06:25 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 14:06:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 14:06:25 -Starting service [Tomcat]
2019-07-16 14:06:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 14:06:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 14:06:26 -Initializing Spring embedded WebApplicationContext
2019-07-16 14:06:26 -Root WebApplicationContext: initialization completed in 24714 ms
2019-07-16 14:06:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 14:06:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 14:06:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 14:06:28 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 14:06:28 -Filter xssFilter was not registered (disabled)
2019-07-16 14:06:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 14:06:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 14:06:28 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 14:06:28 -Servlet dispatcherServlet mapped to [/]
2019-07-16 14:06:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@162be91c: startup date [Tue Jul 16 14:06:01 CST 2019]; root of context hierarchy
2019-07-16 14:06:39 -Using default implementation for ThreadExecutor
2019-07-16 14:06:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 14:06:39 -Quartz Scheduler v.2.3.0 created.
2019-07-16 14:06:39 -RAMJobStore initialized.
2019-07-16 14:06:39 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 14:06:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 14:06:39 -Quartz scheduler version: 2.3.0
2019-07-16 14:06:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@625db0e0
2019-07-16 14:06:40 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 14:06:40 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 14:06:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 14:06:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 14:06:47 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 14:06:47 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 14:06:47 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 14:06:47 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 14:06:47 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 14:06:47 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 14:06:47 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 14:06:47 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 14:06:47 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 14:06:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 14:06:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 14:06:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 14:06:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 14:06:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 14:06:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:06:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:06:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 14:06:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 14:06:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 14:06:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 14:06:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 14:06:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 14:06:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 14:06:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 14:06:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 14:06:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 14:06:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 14:06:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 14:06:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 14:06:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 14:06:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 14:06:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 14:06:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:06:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:06:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 14:06:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 14:06:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 14:06:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 14:06:47 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 14:06:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 14:06:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 14:06:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 14:06:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 14:06:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 14:06:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 14:06:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 14:06:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 14:06:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 14:06:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 14:06:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 14:06:48 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 14:06:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 14:06:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 14:06:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 14:06:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 14:06:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 14:06:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 14:06:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 14:06:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 14:06:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 14:06:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 14:06:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 14:06:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 14:06:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 14:06:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 14:06:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 14:06:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 14:06:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 14:06:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:06:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:06:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 14:06:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 14:06:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 14:06:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 14:06:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 14:06:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 14:06:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:48 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:06:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 14:06:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:06:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 14:06:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 14:06:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:06:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:06:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:06:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 14:06:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 14:06:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 14:06:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 14:06:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 14:06:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 14:06:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:06:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@162be91c: startup date [Tue Jul 16 14:06:01 CST 2019]; root of context hierarchy
2019-07-16 14:06:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:06:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:06:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 14:06:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 14:06:56 -Registering beans for JMX exposure on startup
2019-07-16 14:06:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 14:06:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 14:06:56 -Starting beans in phase 2147483647
2019-07-16 14:06:56 -Context refreshed
2019-07-16 14:06:56 -Found 1 custom documentation plugin(s)
2019-07-16 14:06:56 -Scanning for api listing references
2019-07-16 14:06:57 -Generating unique operation named: removeUsingPOST_1
2019-07-16 14:06:57 -Generating unique operation named: addUsingGET_1
2019-07-16 14:06:57 -Generating unique operation named: editUsingGET_1
2019-07-16 14:06:57 -Generating unique operation named: listUsingGET_1
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_2
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_3
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingGET_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPUT_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 14:06:58 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 14:06:58 -Generating unique operation named: addUsingGET_2
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_2
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_2
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_4
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_5
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_2
2019-07-16 14:06:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 14:06:58 -Generating unique operation named: addUsingGET_3
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_3
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_3
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_6
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_7
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingGET_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPUT_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 14:06:58 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 14:06:58 -Generating unique operation named: addUsingGET_4
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_4
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_4
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_8
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_9
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingGET_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPUT_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 14:06:58 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 14:06:58 -Generating unique operation named: ElecUsingGET_1
2019-07-16 14:06:58 -Generating unique operation named: addUsingGET_5
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_5
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_5
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_10
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_11
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_5
2019-07-16 14:06:58 -Generating unique operation named: updateUsingGET_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_5
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPUT_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 14:06:58 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_6
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_6
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_6
2019-07-16 14:06:58 -Generating unique operation named: addUsingGET_6
2019-07-16 14:06:58 -Generating unique operation named: editUsingGET_7
2019-07-16 14:06:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 14:06:58 -Generating unique operation named: listUsingGET_7
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_12
2019-07-16 14:06:58 -Generating unique operation named: removeUsingPOST_13
2019-07-16 14:06:58 -Generating unique operation named: saveUsingPOST_6
2019-07-16 14:06:58 -Generating unique operation named: updateUsingGET_5
2019-07-16 14:06:58 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPOST_7
2019-07-16 14:06:58 -Generating unique operation named: updateUsingPUT_5
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 14:06:59 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 14:06:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 14:06:59 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 14:06:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 14:06:59 -Generating unique operation named: addUsingGET_7
2019-07-16 14:06:59 -Generating unique operation named: editUsingGET_8
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_8
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_14
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_15
2019-07-16 14:06:59 -Generating unique operation named: saveUsingPOST_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingGET_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPOST_8
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPUT_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 14:06:59 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 14:06:59 -Generating unique operation named: addUsingGET_8
2019-07-16 14:06:59 -Generating unique operation named: editUsingGET_9
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_9
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_16
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_17
2019-07-16 14:06:59 -Generating unique operation named: saveUsingPOST_8
2019-07-16 14:06:59 -Generating unique operation named: updateUsingGET_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPOST_9
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPUT_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 14:06:59 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 14:06:59 -Generating unique operation named: addUsingGET_9
2019-07-16 14:06:59 -Generating unique operation named: editUsingGET_10
2019-07-16 14:06:59 -Generating unique operation named: infoUsingGET_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingPOST_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingPUT_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 14:06:59 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_10
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_18
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_19
2019-07-16 14:06:59 -Generating unique operation named: saveUsingPOST_9
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPOST_10
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_11
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_20
2019-07-16 14:06:59 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 14:06:59 -Generating unique operation named: addUsingGET_10
2019-07-16 14:06:59 -Generating unique operation named: editUsingGET_11
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_12
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_21
2019-07-16 14:06:59 -Generating unique operation named: saveUsingPOST_10
2019-07-16 14:06:59 -Generating unique operation named: treeUsingGET_1
2019-07-16 14:06:59 -Generating unique operation named: treeUsingGET_2
2019-07-16 14:06:59 -Generating unique operation named: updateUsingPOST_11
2019-07-16 14:06:59 -Generating unique operation named: addUsingGET_11
2019-07-16 14:06:59 -Generating unique operation named: editUsingGET_12
2019-07-16 14:06:59 -Generating unique operation named: listUsingGET_13
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_22
2019-07-16 14:06:59 -Generating unique operation named: removeUsingPOST_23
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPOST_12
2019-07-16 14:07:00 -Generating unique operation named: addUsingGET_12
2019-07-16 14:07:00 -Generating unique operation named: editUsingGET_13
2019-07-16 14:07:00 -Generating unique operation named: listUsingGET_14
2019-07-16 14:07:00 -Generating unique operation named: removeUsingPOST_24
2019-07-16 14:07:00 -Generating unique operation named: removeUsingPOST_25
2019-07-16 14:07:00 -Generating unique operation named: saveUsingPOST_11
2019-07-16 14:07:00 -Generating unique operation named: updateUsingGET_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPOST_13
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPUT_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 14:07:00 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 14:07:00 -Generating unique operation named: addUsingGET_13
2019-07-16 14:07:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 14:07:00 -Generating unique operation named: editUsingGET_14
2019-07-16 14:07:00 -Generating unique operation named: listUsingGET_15
2019-07-16 14:07:00 -Generating unique operation named: printEditUsingGET_1
2019-07-16 14:07:00 -Generating unique operation named: removeUsingPOST_26
2019-07-16 14:07:00 -Generating unique operation named: saveUsingPOST_12
2019-07-16 14:07:00 -Generating unique operation named: updateUsingGET_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPOST_14
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPUT_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 14:07:00 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 14:07:00 -Generating unique operation named: addUsingGET_14
2019-07-16 14:07:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 14:07:00 -Generating unique operation named: editUsingGET_15
2019-07-16 14:07:00 -Generating unique operation named: listUsingGET_16
2019-07-16 14:07:00 -Generating unique operation named: saveUsingPOST_13
2019-07-16 14:07:00 -Generating unique operation named: saveUsingPOST_14
2019-07-16 14:07:00 -Generating unique operation named: updateUsingPOST_15
2019-07-16 14:07:00 -Generating unique operation named: listUsingGET_17
2019-07-16 14:07:00 -Generating unique operation named: listUsingHEAD_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingPOST_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingPUT_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingPATCH_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingDELETE_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 14:07:00 -Generating unique operation named: listUsingTRACE_1
2019-07-16 14:07:00 -Generating unique operation named: countDDUsingGET_1
2019-07-16 14:07:00 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 14:07:00 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 14:07:00 -Generating unique operation named: addUsingGET_15
2019-07-16 14:07:01 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 14:07:01 -Generating unique operation named: editUsingGET_16
2019-07-16 14:07:01 -Generating unique operation named: listUsingGET_18
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_27
2019-07-16 14:07:01 -Generating unique operation named: saveUsingPOST_15
2019-07-16 14:07:01 -Generating unique operation named: treeUsingGET_3
2019-07-16 14:07:01 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPOST_16
2019-07-16 14:07:01 -Generating unique operation named: addUsingGET_16
2019-07-16 14:07:01 -Generating unique operation named: editUsingGET_17
2019-07-16 14:07:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 14:07:01 -Generating unique operation named: listUsingGET_19
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_28
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_29
2019-07-16 14:07:01 -Generating unique operation named: saveUsingPOST_16
2019-07-16 14:07:01 -Generating unique operation named: updateUsingGET_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPOST_17
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPUT_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 14:07:01 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 14:07:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 14:07:01 -Generating unique operation named: addUsingGET_17
2019-07-16 14:07:01 -Generating unique operation named: editUsingGET_18
2019-07-16 14:07:01 -Generating unique operation named: listUsingGET_20
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_30
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_31
2019-07-16 14:07:01 -Generating unique operation named: saveUsingPOST_17
2019-07-16 14:07:01 -Generating unique operation named: updateUsingGET_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPOST_18
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPUT_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 14:07:01 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 14:07:01 -Generating unique operation named: addUsingGET_18
2019-07-16 14:07:01 -Generating unique operation named: editUsingGET_19
2019-07-16 14:07:01 -Generating unique operation named: listUsingGET_21
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_32
2019-07-16 14:07:01 -Generating unique operation named: removeUsingPOST_33
2019-07-16 14:07:01 -Generating unique operation named: saveUsingPOST_18
2019-07-16 14:07:01 -Generating unique operation named: updateUsingGET_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPOST_19
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPUT_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 14:07:01 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 14:07:01 -Starting Quartz Scheduler now
2019-07-16 14:07:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 14:07:01 -Starting...
2019-07-16 14:07:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 14:07:01 -Started.
2019-07-16 14:07:01 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 14:07:02 -Using a shared selector for servlet write/read
2019-07-16 14:07:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 14:07:02 -Started BootdoApplication in 67.146 seconds (JVM running for 71.208)
2019-07-16 14:07:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 14:07:03 -==> Parameters: 
2019-07-16 14:07:03 -<==      Total: 1
2019-07-16 14:07:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 14:19:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 14:19:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 14:19:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 162 ms
2019-07-16 14:19:28 -Enabling session validation scheduler...
2019-07-16 14:19:29 -请求地址 : http://localhost:8081/
2019-07-16 14:19:29 -HTTP METHOD : GET
2019-07-16 14:19:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-16 14:19:29 -参数 : [{}]
2019-07-16 14:19:29 -耗时 : 4
2019-07-16 14:19:29 -返回值 : redirect:/index
2019-07-16 14:19:29 -请求地址 : http://localhost:8081/login;JSESSIONID=c7828d64-f3a7-439b-8bad-df12693ced7e
2019-07-16 14:19:29 -HTTP METHOD : GET
2019-07-16 14:19:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:19:29 -参数 : [{}]
2019-07-16 14:19:29 -耗时 : 3
2019-07-16 14:19:29 -返回值 : login
2019-07-16 14:19:38 -请求地址 : http://localhost:8081/getVerify
2019-07-16 14:19:38 -HTTP METHOD : GET
2019-07-16 14:19:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 14:19:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@52e1c2b9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@597a4701]
2019-07-16 14:19:45 -5796
2019-07-16 14:19:46 -耗时 : 7878
2019-07-16 14:19:46 -返回值 : null
2019-07-16 14:20:01 -请求地址 : http://localhost:8081/login
2019-07-16 14:20:01 -HTTP METHOD : POST
2019-07-16 14:20:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 14:20:01 -参数 : [admin, 111111, 5796, org.apache.shiro.web.servlet.ShiroHttpServletRequest@20188e69]
2019-07-16 14:20:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 14:20:01 -==> Parameters: admin(String)
2019-07-16 14:20:02 -<==      Total: 1
2019-07-16 14:20:02 -耗时 : 584
2019-07-16 14:20:02 -返回值 : {msg=操作成功, code=0}
2019-07-16 14:20:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 14:20:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:20:02 -==> Parameters: 1(Long), admin(String), 登录(String), 585(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 14:20:02.579(Timestamp)
2019-07-16 14:20:03 -请求地址 : http://localhost:8081/index
2019-07-16 14:20:03 -HTTP METHOD : GET
2019-07-16 14:20:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 14:20:03 -参数 : [{}]
2019-07-16 14:20:03 -<==    Updates: 1
2019-07-16 14:20:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 14:20:04 -==> Parameters: 1(Long)
2019-07-16 14:20:04 -<==      Total: 51
2019-07-16 14:20:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 14:20:04 -==> Parameters: 138(Long)
2019-07-16 14:20:04 -<==      Total: 1
2019-07-16 14:20:04 -耗时 : 1106
2019-07-16 14:20:04 -返回值 : index_v1
2019-07-16 14:20:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:20:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1106(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 14:20:04.681(Timestamp)
2019-07-16 14:20:05 -<==    Updates: 1
2019-07-16 14:20:05 -请求地址 : http://localhost:8081/main
2019-07-16 14:20:05 -HTTP METHOD : GET
2019-07-16 14:20:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:20:05 -参数 : []
2019-07-16 14:20:05 -耗时 : 0
2019-07-16 14:20:05 -返回值 : main
2019-07-16 14:20:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 14:20:09 -HTTP METHOD : GET
2019-07-16 14:20:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 14:20:09 -参数 : []
2019-07-16 14:20:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 14:20:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 14:20:09 -<==      Total: 0
2019-07-16 14:20:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 14:20:09 -==> Parameters: 1(Long), 0(String)
2019-07-16 14:20:09 -<==      Total: 1
2019-07-16 14:20:09 -耗时 : 359
2019-07-16 14:20:09 -返回值 : com.bootdo.common.utils.PageUtils@514aba7f
2019-07-16 14:20:09 -请求地址 : http://localhost:8081/main
2019-07-16 14:20:09 -HTTP METHOD : GET
2019-07-16 14:20:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:20:09 -参数 : []
2019-07-16 14:20:09 -耗时 : 1
2019-07-16 14:20:09 -返回值 : main
2019-07-16 14:20:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 14:20:20 -==> Parameters: 1(Long)
2019-07-16 14:20:20 -<==      Total: 95
2019-07-16 14:20:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 14:20:20 -HTTP METHOD : GET
2019-07-16 14:20:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 14:20:20 -参数 : []
2019-07-16 14:20:20 -耗时 : 0
2019-07-16 14:20:20 -返回值 : moneyList/moneyList
2019-07-16 14:30:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 14:30:34 -HTTP METHOD : GET
2019-07-16 14:30:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 14:30:34 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 14:30:34 -耗时 : 1
2019-07-16 14:30:34 -返回值 : system/dept/deptTree
2019-07-16 14:30:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 14:30:35 -HTTP METHOD : GET
2019-07-16 14:30:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 14:30:35 -参数 : []
2019-07-16 14:30:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 14:30:35 -==> Parameters: 
2019-07-16 14:30:35 -<==      Total: 3
2019-07-16 14:30:35 -耗时 : 264
2019-07-16 14:30:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 14:30:40 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:30:40 -HTTP METHOD : POST
2019-07-16 14:30:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:30:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@779dc72d]
2019-07-16 14:30:40 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:30:40 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:30:42 -<==      Total: 3
2019-07-16 14:30:42 -耗时 : 2779
2019-07-16 14:30:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2ae5746f, com.bootdo.moneyList.damain.MoneyListDO@248cdf1a, com.bootdo.moneyList.damain.MoneyListDO@372f2571]
2019-07-16 14:30:54 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 14:30:54 -HTTP METHOD : POST
2019-07-16 14:30:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 14:30:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3881c062]
2019-07-16 14:30:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:30:54 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:30:54 -<==      Total: 3
2019-07-16 14:30:54 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 14:30:54 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:30:54 -<==      Total: 1
2019-07-16 14:30:54 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 14:30:54 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:30:54 -<==      Total: 1
2019-07-16 14:30:54 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 14:30:54 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:30:54 -<==      Total: 0
2019-07-16 14:30:54 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:30:54 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:30:54 -<==    Updates: 1
2019-07-16 14:30:54 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:30:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:30:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecDate' in 'class com.bootdo.moneyLog.domain.ElecLogDO'(String), null, 2019-07-16 14:30:54.697(Timestamp)
2019-07-16 14:30:54 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecDate' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecDate' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:49)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:308)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$a4b2cab7.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecDate' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-16 14:30:54 -<==    Updates: 1
2019-07-16 14:30:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:30:57 -HTTP METHOD : POST
2019-07-16 14:30:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:30:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@9ebc83f]
2019-07-16 14:30:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:30:57 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:30:57 -<==      Total: 3
2019-07-16 14:30:57 -耗时 : 53
2019-07-16 14:30:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@e43526b, com.bootdo.moneyList.damain.MoneyListDO@d0d1661, com.bootdo.moneyList.damain.MoneyListDO@51adf60]
2019-07-16 14:33:10 -Starting BootdoApplication on PC-201905091110 with PID 73564 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 14:33:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 14:33:10 -The following profiles are active: dev
2019-07-16 14:33:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Tue Jul 16 14:33:10 CST 2019]; root of context hierarchy
2019-07-16 14:33:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 14:33:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eb184ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:25 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$10ab375] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 14:33:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 14:33:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:33:36 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 14:33:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 14:33:36 -Starting service [Tomcat]
2019-07-16 14:33:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 14:33:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 14:33:37 -Initializing Spring embedded WebApplicationContext
2019-07-16 14:33:37 -Root WebApplicationContext: initialization completed in 26532 ms
2019-07-16 14:33:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 14:33:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 14:33:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 14:33:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 14:33:38 -Filter xssFilter was not registered (disabled)
2019-07-16 14:33:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 14:33:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 14:33:38 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 14:33:38 -Servlet dispatcherServlet mapped to [/]
2019-07-16 14:33:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Tue Jul 16 14:33:10 CST 2019]; root of context hierarchy
2019-07-16 14:33:46 -Using default implementation for ThreadExecutor
2019-07-16 14:33:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 14:33:46 -Quartz Scheduler v.2.3.0 created.
2019-07-16 14:33:46 -RAMJobStore initialized.
2019-07-16 14:33:46 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 14:33:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 14:33:46 -Quartz scheduler version: 2.3.0
2019-07-16 14:33:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5cd6719d
2019-07-16 14:33:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 14:33:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 14:33:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 14:33:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 14:33:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 14:33:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 14:33:52 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 14:33:52 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 14:33:52 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 14:33:52 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 14:33:52 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 14:33:52 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 14:33:52 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:33:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 14:33:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 14:33:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 14:33:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 14:33:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 14:33:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 14:33:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 14:33:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 14:33:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 14:33:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 14:33:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:33:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:33:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 14:33:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 14:33:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 14:33:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 14:33:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 14:33:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 14:33:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 14:33:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 14:33:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 14:33:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 14:33:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 14:33:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 14:33:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 14:33:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 14:33:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 14:33:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 14:33:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 14:33:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 14:33:53 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 14:33:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 14:33:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 14:33:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 14:33:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:33:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:33:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 14:33:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 14:33:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 14:33:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 14:33:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:33:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 14:33:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 14:33:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 14:33:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 14:33:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 14:33:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 14:33:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 14:33:53 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 14:33:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 14:33:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 14:33:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 14:33:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 14:33:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 14:33:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 14:33:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 14:33:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 14:33:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 14:33:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 14:33:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 14:33:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 14:33:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 14:33:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 14:33:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 14:33:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 14:33:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 14:33:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 14:33:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 14:33:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:33:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:33:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 14:33:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 14:33:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 14:33:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 14:33:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 14:33:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:33:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 14:33:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:33:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 14:33:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:33:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 14:33:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:33:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 14:33:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 14:33:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 14:33:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 14:33:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 14:33:55 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 14:33:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:33:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e1d8f9e: startup date [Tue Jul 16 14:33:10 CST 2019]; root of context hierarchy
2019-07-16 14:33:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:33:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:33:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 14:33:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 14:34:01 -Registering beans for JMX exposure on startup
2019-07-16 14:34:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 14:34:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 14:34:01 -Starting beans in phase 2147483647
2019-07-16 14:34:01 -Context refreshed
2019-07-16 14:34:01 -Found 1 custom documentation plugin(s)
2019-07-16 14:34:01 -Scanning for api listing references
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_1
2019-07-16 14:34:03 -Generating unique operation named: addUsingGET_1
2019-07-16 14:34:03 -Generating unique operation named: editUsingGET_1
2019-07-16 14:34:03 -Generating unique operation named: listUsingGET_1
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_2
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_3
2019-07-16 14:34:03 -Generating unique operation named: saveUsingPOST_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingGET_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingPOST_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingPUT_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 14:34:03 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 14:34:03 -Generating unique operation named: addUsingGET_2
2019-07-16 14:34:03 -Generating unique operation named: editUsingGET_2
2019-07-16 14:34:03 -Generating unique operation named: listUsingGET_2
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_4
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_5
2019-07-16 14:34:03 -Generating unique operation named: saveUsingPOST_2
2019-07-16 14:34:03 -Generating unique operation named: updateUsingPOST_2
2019-07-16 14:34:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 14:34:03 -Generating unique operation named: addUsingGET_3
2019-07-16 14:34:03 -Generating unique operation named: editUsingGET_3
2019-07-16 14:34:03 -Generating unique operation named: listUsingGET_3
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_6
2019-07-16 14:34:03 -Generating unique operation named: removeUsingPOST_7
2019-07-16 14:34:03 -Generating unique operation named: saveUsingPOST_3
2019-07-16 14:34:03 -Generating unique operation named: updateUsingGET_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPOST_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPUT_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 14:34:04 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 14:34:04 -Generating unique operation named: addUsingGET_4
2019-07-16 14:34:04 -Generating unique operation named: editUsingGET_4
2019-07-16 14:34:04 -Generating unique operation named: listUsingGET_4
2019-07-16 14:34:04 -Generating unique operation named: removeUsingPOST_8
2019-07-16 14:34:04 -Generating unique operation named: removeUsingPOST_9
2019-07-16 14:34:04 -Generating unique operation named: saveUsingPOST_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingGET_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPOST_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPUT_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 14:34:04 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 14:34:04 -Generating unique operation named: ElecUsingGET_1
2019-07-16 14:34:04 -Generating unique operation named: addUsingGET_5
2019-07-16 14:34:04 -Generating unique operation named: editUsingGET_5
2019-07-16 14:34:04 -Generating unique operation named: listUsingGET_5
2019-07-16 14:34:04 -Generating unique operation named: removeUsingPOST_10
2019-07-16 14:34:04 -Generating unique operation named: removeUsingPOST_11
2019-07-16 14:34:04 -Generating unique operation named: saveUsingPOST_5
2019-07-16 14:34:04 -Generating unique operation named: updateUsingGET_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPOST_5
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPUT_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 14:34:04 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 14:34:05 -Generating unique operation named: editUsingGET_6
2019-07-16 14:34:05 -Generating unique operation named: listUsingGET_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPOST_6
2019-07-16 14:34:05 -Generating unique operation named: addUsingGET_6
2019-07-16 14:34:05 -Generating unique operation named: editUsingGET_7
2019-07-16 14:34:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 14:34:05 -Generating unique operation named: listUsingGET_7
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_12
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_13
2019-07-16 14:34:05 -Generating unique operation named: saveUsingPOST_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingGET_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPOST_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPUT_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 14:34:05 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 14:34:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 14:34:05 -Generating unique operation named: addUsingGET_7
2019-07-16 14:34:05 -Generating unique operation named: editUsingGET_8
2019-07-16 14:34:05 -Generating unique operation named: listUsingGET_8
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_14
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_15
2019-07-16 14:34:05 -Generating unique operation named: saveUsingPOST_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingGET_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPOST_8
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPUT_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 14:34:05 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 14:34:05 -Generating unique operation named: addUsingGET_8
2019-07-16 14:34:05 -Generating unique operation named: editUsingGET_9
2019-07-16 14:34:05 -Generating unique operation named: listUsingGET_9
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_16
2019-07-16 14:34:05 -Generating unique operation named: removeUsingPOST_17
2019-07-16 14:34:05 -Generating unique operation named: saveUsingPOST_8
2019-07-16 14:34:05 -Generating unique operation named: updateUsingGET_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPOST_9
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPUT_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 14:34:05 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 14:34:06 -Generating unique operation named: addUsingGET_9
2019-07-16 14:34:06 -Generating unique operation named: editUsingGET_10
2019-07-16 14:34:06 -Generating unique operation named: infoUsingGET_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingPOST_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingPUT_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 14:34:06 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 14:34:06 -Generating unique operation named: listUsingGET_10
2019-07-16 14:34:06 -Generating unique operation named: removeUsingPOST_18
2019-07-16 14:34:06 -Generating unique operation named: removeUsingPOST_19
2019-07-16 14:34:06 -Generating unique operation named: saveUsingPOST_9
2019-07-16 14:34:06 -Generating unique operation named: updateUsingPOST_10
2019-07-16 14:34:06 -Generating unique operation named: listUsingGET_11
2019-07-16 14:34:06 -Generating unique operation named: removeUsingPOST_20
2019-07-16 14:34:06 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 14:34:06 -Generating unique operation named: addUsingGET_10
2019-07-16 14:34:06 -Generating unique operation named: editUsingGET_11
2019-07-16 14:34:06 -Generating unique operation named: listUsingGET_12
2019-07-16 14:34:06 -Generating unique operation named: removeUsingPOST_21
2019-07-16 14:34:06 -Generating unique operation named: saveUsingPOST_10
2019-07-16 14:34:06 -Generating unique operation named: treeUsingGET_1
2019-07-16 14:34:06 -Generating unique operation named: treeUsingGET_2
2019-07-16 14:34:06 -Generating unique operation named: updateUsingPOST_11
2019-07-16 14:34:06 -Generating unique operation named: addUsingGET_11
2019-07-16 14:34:06 -Generating unique operation named: editUsingGET_12
2019-07-16 14:34:06 -Generating unique operation named: listUsingGET_13
2019-07-16 14:34:06 -Generating unique operation named: removeUsingPOST_22
2019-07-16 14:34:07 -Generating unique operation named: removeUsingPOST_23
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPOST_12
2019-07-16 14:34:07 -Generating unique operation named: addUsingGET_12
2019-07-16 14:34:07 -Generating unique operation named: editUsingGET_13
2019-07-16 14:34:07 -Generating unique operation named: listUsingGET_14
2019-07-16 14:34:07 -Generating unique operation named: removeUsingPOST_24
2019-07-16 14:34:07 -Generating unique operation named: removeUsingPOST_25
2019-07-16 14:34:07 -Generating unique operation named: saveUsingPOST_11
2019-07-16 14:34:07 -Generating unique operation named: updateUsingGET_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPOST_13
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPUT_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 14:34:07 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 14:34:07 -Generating unique operation named: addUsingGET_13
2019-07-16 14:34:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 14:34:07 -Generating unique operation named: editUsingGET_14
2019-07-16 14:34:07 -Generating unique operation named: listUsingGET_15
2019-07-16 14:34:07 -Generating unique operation named: printEditUsingGET_1
2019-07-16 14:34:07 -Generating unique operation named: removeUsingPOST_26
2019-07-16 14:34:07 -Generating unique operation named: saveUsingPOST_12
2019-07-16 14:34:07 -Generating unique operation named: updateUsingGET_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPOST_14
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPUT_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 14:34:07 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 14:34:07 -Generating unique operation named: addUsingGET_14
2019-07-16 14:34:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 14:34:07 -Generating unique operation named: editUsingGET_15
2019-07-16 14:34:07 -Generating unique operation named: listUsingGET_16
2019-07-16 14:34:07 -Generating unique operation named: saveUsingPOST_13
2019-07-16 14:34:07 -Generating unique operation named: saveUsingPOST_14
2019-07-16 14:34:07 -Generating unique operation named: updateUsingPOST_15
2019-07-16 14:34:07 -Generating unique operation named: listUsingGET_17
2019-07-16 14:34:07 -Generating unique operation named: listUsingHEAD_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingPOST_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingPUT_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingPATCH_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingDELETE_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 14:34:07 -Generating unique operation named: listUsingTRACE_1
2019-07-16 14:34:07 -Generating unique operation named: countDDUsingGET_1
2019-07-16 14:34:07 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 14:34:07 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 14:34:08 -Generating unique operation named: addUsingGET_15
2019-07-16 14:34:08 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 14:34:08 -Generating unique operation named: editUsingGET_16
2019-07-16 14:34:08 -Generating unique operation named: listUsingGET_18
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_27
2019-07-16 14:34:08 -Generating unique operation named: saveUsingPOST_15
2019-07-16 14:34:08 -Generating unique operation named: treeUsingGET_3
2019-07-16 14:34:08 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPOST_16
2019-07-16 14:34:08 -Generating unique operation named: addUsingGET_16
2019-07-16 14:34:08 -Generating unique operation named: editUsingGET_17
2019-07-16 14:34:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 14:34:08 -Generating unique operation named: listUsingGET_19
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_28
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_29
2019-07-16 14:34:08 -Generating unique operation named: saveUsingPOST_16
2019-07-16 14:34:08 -Generating unique operation named: updateUsingGET_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPOST_17
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPUT_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 14:34:08 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 14:34:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 14:34:08 -Generating unique operation named: addUsingGET_17
2019-07-16 14:34:08 -Generating unique operation named: editUsingGET_18
2019-07-16 14:34:08 -Generating unique operation named: listUsingGET_20
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_30
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_31
2019-07-16 14:34:08 -Generating unique operation named: saveUsingPOST_17
2019-07-16 14:34:08 -Generating unique operation named: updateUsingGET_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPOST_18
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPUT_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 14:34:08 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 14:34:08 -Generating unique operation named: addUsingGET_18
2019-07-16 14:34:08 -Generating unique operation named: editUsingGET_19
2019-07-16 14:34:08 -Generating unique operation named: listUsingGET_21
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_32
2019-07-16 14:34:08 -Generating unique operation named: removeUsingPOST_33
2019-07-16 14:34:08 -Generating unique operation named: saveUsingPOST_18
2019-07-16 14:34:08 -Generating unique operation named: updateUsingGET_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPOST_19
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPUT_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 14:34:08 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 14:34:08 -Starting Quartz Scheduler now
2019-07-16 14:34:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 14:34:08 -Starting...
2019-07-16 14:34:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 14:34:08 -Started.
2019-07-16 14:34:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 14:34:09 -Using a shared selector for servlet write/read
2019-07-16 14:34:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 14:34:09 -Started BootdoApplication in 61.694 seconds (JVM running for 63.803)
2019-07-16 14:34:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 14:34:09 -==> Parameters: 
2019-07-16 14:34:09 -<==      Total: 1
2019-07-16 14:34:55 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 14:37:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 14:37:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 14:37:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-07-16 14:37:56 -Enabling session validation scheduler...
2019-07-16 14:37:56 -请求地址 : http://localhost:8081/login;JSESSIONID=900cca2c-8246-43f0-848c-a1cb3110ab22
2019-07-16 14:37:56 -HTTP METHOD : GET
2019-07-16 14:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:37:56 -参数 : [{}]
2019-07-16 14:37:56 -耗时 : 7
2019-07-16 14:37:56 -返回值 : login
2019-07-16 14:38:00 -请求地址 : http://localhost:8081/getVerify
2019-07-16 14:38:00 -HTTP METHOD : GET
2019-07-16 14:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 14:38:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@705c5ac1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@355edaae]
2019-07-16 14:38:08 -5906
2019-07-16 14:38:08 -耗时 : 8702
2019-07-16 14:38:08 -返回值 : null
2019-07-16 14:38:09 -请求地址 : http://localhost:8081/login
2019-07-16 14:38:09 -HTTP METHOD : GET
2019-07-16 14:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:38:09 -参数 : [{}]
2019-07-16 14:38:09 -耗时 : 0
2019-07-16 14:38:09 -返回值 : login
2019-07-16 14:38:13 -请求地址 : http://localhost:8081/login
2019-07-16 14:38:13 -HTTP METHOD : POST
2019-07-16 14:38:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 14:38:13 -参数 : [admin, 111111, 5906, org.apache.shiro.web.servlet.ShiroHttpServletRequest@948c74c]
2019-07-16 14:38:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 14:38:13 -==> Parameters: admin(String)
2019-07-16 14:38:13 -<==      Total: 1
2019-07-16 14:38:13 -耗时 : 368
2019-07-16 14:38:13 -返回值 : {msg=操作成功, code=0}
2019-07-16 14:38:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 14:38:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:38:13 -==> Parameters: 1(Long), admin(String), 登录(String), 368(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 14:38:13.63(Timestamp)
2019-07-16 14:38:13 -请求地址 : http://localhost:8081/index
2019-07-16 14:38:13 -HTTP METHOD : GET
2019-07-16 14:38:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 14:38:13 -参数 : [{}]
2019-07-16 14:38:14 -<==    Updates: 1
2019-07-16 14:38:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 14:38:14 -==> Parameters: 1(Long)
2019-07-16 14:38:14 -<==      Total: 51
2019-07-16 14:38:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 14:38:14 -==> Parameters: 138(Long)
2019-07-16 14:38:14 -<==      Total: 1
2019-07-16 14:38:14 -耗时 : 787
2019-07-16 14:38:14 -返回值 : index_v1
2019-07-16 14:38:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:38:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 787(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 14:38:14.763(Timestamp)
2019-07-16 14:38:14 -<==    Updates: 1
2019-07-16 14:38:15 -请求地址 : http://localhost:8081/main
2019-07-16 14:38:15 -HTTP METHOD : GET
2019-07-16 14:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:38:15 -参数 : []
2019-07-16 14:38:15 -耗时 : 1
2019-07-16 14:38:15 -返回值 : main
2019-07-16 14:38:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 14:38:15 -HTTP METHOD : GET
2019-07-16 14:38:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 14:38:15 -参数 : []
2019-07-16 14:38:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 14:38:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 14:38:15 -请求地址 : http://localhost:8081/main
2019-07-16 14:38:15 -HTTP METHOD : GET
2019-07-16 14:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:38:15 -参数 : []
2019-07-16 14:38:15 -耗时 : 0
2019-07-16 14:38:15 -返回值 : main
2019-07-16 14:38:16 -<==      Total: 0
2019-07-16 14:38:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 14:38:16 -==> Parameters: 1(Long), 0(String)
2019-07-16 14:38:16 -<==      Total: 1
2019-07-16 14:38:16 -耗时 : 760
2019-07-16 14:38:16 -返回值 : com.bootdo.common.utils.PageUtils@2c3aded6
2019-07-16 14:38:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 14:38:31 -==> Parameters: 1(Long)
2019-07-16 14:38:31 -<==      Total: 95
2019-07-16 14:38:31 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 14:38:31 -HTTP METHOD : GET
2019-07-16 14:38:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 14:38:31 -参数 : []
2019-07-16 14:38:31 -耗时 : 1
2019-07-16 14:38:31 -返回值 : moneyList/moneyList
2019-07-16 14:38:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 14:38:36 -HTTP METHOD : GET
2019-07-16 14:38:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 14:38:36 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 14:38:36 -耗时 : 1
2019-07-16 14:38:36 -返回值 : system/dept/deptTree
2019-07-16 14:38:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 14:38:36 -HTTP METHOD : GET
2019-07-16 14:38:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 14:38:36 -参数 : []
2019-07-16 14:38:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 14:38:36 -==> Parameters: 
2019-07-16 14:38:36 -<==      Total: 3
2019-07-16 14:38:36 -耗时 : 55
2019-07-16 14:38:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 14:38:39 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:38:39 -HTTP METHOD : POST
2019-07-16 14:38:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:38:39 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@343a6831]
2019-07-16 14:38:39 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:38:39 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:38:39 -<==      Total: 3
2019-07-16 14:38:39 -耗时 : 392
2019-07-16 14:38:39 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@a87836c, com.bootdo.moneyList.damain.MoneyListDO@5a9ded7f, com.bootdo.moneyList.damain.MoneyListDO@8d9f255]
2019-07-16 14:38:42 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 14:38:42 -HTTP METHOD : POST
2019-07-16 14:38:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 14:38:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@33a2cdea]
2019-07-16 14:38:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:38:42 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:38:42 -<==      Total: 3
2019-07-16 14:38:42 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 14:38:42 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:38:42 -<==      Total: 1
2019-07-16 14:38:42 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 14:38:42 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:38:43 -<==      Total: 1
2019-07-16 14:38:43 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 14:38:43 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:38:43 -<==      Total: 0
2019-07-16 14:38:43 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:38:43 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:38:43 -<==    Updates: 1
2019-07-16 14:38:43 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:38:43 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 14:38:42.961(Timestamp), 2019-06(String), admin(String), 2019-07-16 14:38:42.961(Timestamp), admin(String), null
2019-07-16 14:38:43 -<==    Updates: 1
2019-07-16 14:38:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd') 
2019-07-16 14:38:43 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), null
2019-07-16 14:38:43 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print 
	    
		where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$ffae87a3.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 14:38:43 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-16 14:38:44 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-16 14:38:44 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$ffae87a3.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-16 14:38:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:38:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist(String), null, 2019-07-16 14:38:44.055(Timestamp)
2019-07-16 14:38:44 -<==    Updates: 1
2019-07-16 14:38:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:38:45 -HTTP METHOD : POST
2019-07-16 14:38:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:38:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6e00a131]
2019-07-16 14:38:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:38:45 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:38:45 -<==      Total: 3
2019-07-16 14:38:45 -耗时 : 41
2019-07-16 14:38:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@46f91c0d, com.bootdo.moneyList.damain.MoneyListDO@6f4035ba, com.bootdo.moneyList.damain.MoneyListDO@3c9b26de]
2019-07-16 14:44:48 -Starting BootdoApplication on PC-201905091110 with PID 51284 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 14:44:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 14:44:48 -The following profiles are active: dev
2019-07-16 14:44:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Tue Jul 16 14:44:49 CST 2019]; root of context hierarchy
2019-07-16 14:44:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 14:44:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff818fba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:44:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f1dabe61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 14:45:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 14:45:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:45:03 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 14:45:03 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 14:45:03 -Starting service [Tomcat]
2019-07-16 14:45:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 14:45:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 14:45:04 -Initializing Spring embedded WebApplicationContext
2019-07-16 14:45:04 -Root WebApplicationContext: initialization completed in 15086 ms
2019-07-16 14:45:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 14:45:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 14:45:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 14:45:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 14:45:05 -Filter xssFilter was not registered (disabled)
2019-07-16 14:45:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 14:45:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 14:45:05 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 14:45:05 -Servlet dispatcherServlet mapped to [/]
2019-07-16 14:45:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Tue Jul 16 14:44:49 CST 2019]; root of context hierarchy
2019-07-16 14:45:11 -Using default implementation for ThreadExecutor
2019-07-16 14:45:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 14:45:12 -Quartz Scheduler v.2.3.0 created.
2019-07-16 14:45:12 -RAMJobStore initialized.
2019-07-16 14:45:12 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 14:45:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 14:45:12 -Quartz scheduler version: 2.3.0
2019-07-16 14:45:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@e2f6e13
2019-07-16 14:45:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 14:45:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 14:45:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 14:45:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 14:45:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 14:45:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 14:45:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 14:45:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 14:45:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 14:45:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 14:45:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 14:45:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 14:45:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 14:45:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 14:45:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 14:45:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 14:45:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 14:45:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 14:45:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 14:45:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 14:45:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:45:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 14:45:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:45:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 14:45:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 14:45:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 14:45:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 14:45:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 14:45:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 14:45:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 14:45:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 14:45:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 14:45:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 14:45:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 14:45:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 14:45:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 14:45:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 14:45:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 14:45:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 14:45:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 14:45:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 14:45:18 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 14:45:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 14:45:18 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 14:45:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 14:45:18 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 14:45:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 14:45:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 14:45:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 14:45:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 14:45:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 14:45:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 14:45:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 14:45:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 14:45:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 14:45:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 14:45:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 14:45:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 14:45:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 14:45:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 14:45:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 14:45:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 14:45:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 14:45:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 14:45:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 14:45:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 14:45:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 14:45:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 14:45:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 14:45:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 14:45:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 14:45:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 14:45:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 14:45:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:45:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:45:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 14:45:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 14:45:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 14:45:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 14:45:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 14:45:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:45:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 14:45:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 14:45:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:45:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:45:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:45:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 14:45:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 14:45:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 14:45:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 14:45:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 14:45:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 14:45:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:45:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Tue Jul 16 14:44:49 CST 2019]; root of context hierarchy
2019-07-16 14:45:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:45:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:45:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 14:45:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 14:45:24 -Registering beans for JMX exposure on startup
2019-07-16 14:45:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 14:45:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 14:45:24 -Starting beans in phase 2147483647
2019-07-16 14:45:24 -Context refreshed
2019-07-16 14:45:24 -Found 1 custom documentation plugin(s)
2019-07-16 14:45:24 -Scanning for api listing references
2019-07-16 14:45:25 -Generating unique operation named: removeUsingPOST_1
2019-07-16 14:45:26 -Generating unique operation named: addUsingGET_1
2019-07-16 14:45:26 -Generating unique operation named: editUsingGET_1
2019-07-16 14:45:26 -Generating unique operation named: listUsingGET_1
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_2
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_3
2019-07-16 14:45:26 -Generating unique operation named: saveUsingPOST_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingGET_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPOST_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPUT_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 14:45:26 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 14:45:26 -Generating unique operation named: addUsingGET_2
2019-07-16 14:45:26 -Generating unique operation named: editUsingGET_2
2019-07-16 14:45:26 -Generating unique operation named: listUsingGET_2
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_4
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_5
2019-07-16 14:45:26 -Generating unique operation named: saveUsingPOST_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPOST_2
2019-07-16 14:45:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 14:45:26 -Generating unique operation named: addUsingGET_3
2019-07-16 14:45:26 -Generating unique operation named: editUsingGET_3
2019-07-16 14:45:26 -Generating unique operation named: listUsingGET_3
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_6
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_7
2019-07-16 14:45:26 -Generating unique operation named: saveUsingPOST_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingGET_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPOST_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPUT_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 14:45:26 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 14:45:26 -Generating unique operation named: addUsingGET_4
2019-07-16 14:45:26 -Generating unique operation named: editUsingGET_4
2019-07-16 14:45:26 -Generating unique operation named: listUsingGET_4
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_8
2019-07-16 14:45:26 -Generating unique operation named: removeUsingPOST_9
2019-07-16 14:45:26 -Generating unique operation named: saveUsingPOST_4
2019-07-16 14:45:26 -Generating unique operation named: updateUsingGET_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPOST_4
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPUT_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 14:45:26 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 14:45:26 -Generating unique operation named: ElecUsingGET_1
2019-07-16 14:45:27 -Generating unique operation named: addUsingGET_5
2019-07-16 14:45:27 -Generating unique operation named: editUsingGET_5
2019-07-16 14:45:27 -Generating unique operation named: listUsingGET_5
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_10
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_11
2019-07-16 14:45:27 -Generating unique operation named: saveUsingPOST_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingGET_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPOST_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPUT_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 14:45:27 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 14:45:27 -Generating unique operation named: editUsingGET_6
2019-07-16 14:45:27 -Generating unique operation named: listUsingGET_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPOST_6
2019-07-16 14:45:27 -Generating unique operation named: addUsingGET_6
2019-07-16 14:45:27 -Generating unique operation named: editUsingGET_7
2019-07-16 14:45:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 14:45:27 -Generating unique operation named: listUsingGET_7
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_12
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_13
2019-07-16 14:45:27 -Generating unique operation named: saveUsingPOST_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingGET_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPOST_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPUT_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 14:45:27 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 14:45:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 14:45:27 -Generating unique operation named: addUsingGET_7
2019-07-16 14:45:27 -Generating unique operation named: editUsingGET_8
2019-07-16 14:45:27 -Generating unique operation named: listUsingGET_8
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_14
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_15
2019-07-16 14:45:27 -Generating unique operation named: saveUsingPOST_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingGET_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPOST_8
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPUT_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 14:45:27 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 14:45:27 -Generating unique operation named: addUsingGET_8
2019-07-16 14:45:27 -Generating unique operation named: editUsingGET_9
2019-07-16 14:45:27 -Generating unique operation named: listUsingGET_9
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_16
2019-07-16 14:45:27 -Generating unique operation named: removeUsingPOST_17
2019-07-16 14:45:27 -Generating unique operation named: saveUsingPOST_8
2019-07-16 14:45:27 -Generating unique operation named: updateUsingGET_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPOST_9
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPUT_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 14:45:27 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 14:45:28 -Generating unique operation named: addUsingGET_9
2019-07-16 14:45:28 -Generating unique operation named: editUsingGET_10
2019-07-16 14:45:28 -Generating unique operation named: infoUsingGET_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingPOST_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingPUT_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 14:45:28 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 14:45:28 -Generating unique operation named: listUsingGET_10
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_18
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_19
2019-07-16 14:45:28 -Generating unique operation named: saveUsingPOST_9
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPOST_10
2019-07-16 14:45:28 -Generating unique operation named: listUsingGET_11
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_20
2019-07-16 14:45:28 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 14:45:28 -Generating unique operation named: addUsingGET_10
2019-07-16 14:45:28 -Generating unique operation named: editUsingGET_11
2019-07-16 14:45:28 -Generating unique operation named: listUsingGET_12
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_21
2019-07-16 14:45:28 -Generating unique operation named: saveUsingPOST_10
2019-07-16 14:45:28 -Generating unique operation named: treeUsingGET_1
2019-07-16 14:45:28 -Generating unique operation named: treeUsingGET_2
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPOST_11
2019-07-16 14:45:28 -Generating unique operation named: addUsingGET_11
2019-07-16 14:45:28 -Generating unique operation named: editUsingGET_12
2019-07-16 14:45:28 -Generating unique operation named: listUsingGET_13
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_22
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_23
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPOST_12
2019-07-16 14:45:28 -Generating unique operation named: addUsingGET_12
2019-07-16 14:45:28 -Generating unique operation named: editUsingGET_13
2019-07-16 14:45:28 -Generating unique operation named: listUsingGET_14
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_24
2019-07-16 14:45:28 -Generating unique operation named: removeUsingPOST_25
2019-07-16 14:45:28 -Generating unique operation named: saveUsingPOST_11
2019-07-16 14:45:28 -Generating unique operation named: updateUsingGET_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPOST_13
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPUT_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 14:45:28 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 14:45:28 -Generating unique operation named: addUsingGET_13
2019-07-16 14:45:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_14
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_15
2019-07-16 14:45:29 -Generating unique operation named: printEditUsingGET_1
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_26
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_12
2019-07-16 14:45:29 -Generating unique operation named: updateUsingGET_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPOST_14
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPUT_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 14:45:29 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 14:45:29 -Generating unique operation named: addUsingGET_14
2019-07-16 14:45:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_15
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_16
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_13
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_14
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPOST_15
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_17
2019-07-16 14:45:29 -Generating unique operation named: listUsingHEAD_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingPOST_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingPUT_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingPATCH_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingDELETE_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 14:45:29 -Generating unique operation named: listUsingTRACE_1
2019-07-16 14:45:29 -Generating unique operation named: countDDUsingGET_1
2019-07-16 14:45:29 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 14:45:29 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 14:45:29 -Generating unique operation named: addUsingGET_15
2019-07-16 14:45:29 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_16
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_18
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_27
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_15
2019-07-16 14:45:29 -Generating unique operation named: treeUsingGET_3
2019-07-16 14:45:29 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPOST_16
2019-07-16 14:45:29 -Generating unique operation named: addUsingGET_16
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_17
2019-07-16 14:45:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_19
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_28
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_29
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_16
2019-07-16 14:45:29 -Generating unique operation named: updateUsingGET_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPOST_17
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPUT_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 14:45:29 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 14:45:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 14:45:29 -Generating unique operation named: addUsingGET_17
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_18
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_20
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_30
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_31
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_17
2019-07-16 14:45:29 -Generating unique operation named: updateUsingGET_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPOST_18
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPUT_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 14:45:29 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 14:45:29 -Generating unique operation named: addUsingGET_18
2019-07-16 14:45:29 -Generating unique operation named: editUsingGET_19
2019-07-16 14:45:29 -Generating unique operation named: listUsingGET_21
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_32
2019-07-16 14:45:29 -Generating unique operation named: removeUsingPOST_33
2019-07-16 14:45:29 -Generating unique operation named: saveUsingPOST_18
2019-07-16 14:45:29 -Generating unique operation named: updateUsingGET_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingPOST_19
2019-07-16 14:45:30 -Generating unique operation named: updateUsingPUT_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 14:45:30 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 14:45:30 -Starting Quartz Scheduler now
2019-07-16 14:45:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 14:45:30 -Starting...
2019-07-16 14:45:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 14:45:30 -Started.
2019-07-16 14:45:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 14:45:30 -Using a shared selector for servlet write/read
2019-07-16 14:45:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 14:45:30 -Started BootdoApplication in 44.407 seconds (JVM running for 46.459)
2019-07-16 14:45:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 14:45:31 -==> Parameters: 
2019-07-16 14:45:31 -<==      Total: 1
2019-07-16 14:46:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 14:47:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 14:47:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 14:47:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-07-16 14:47:59 -Enabling session validation scheduler...
2019-07-16 14:47:59 -请求地址 : http://localhost:8081/login;JSESSIONID=d4aa2661-ab32-4251-874d-5b1d1502ad0f
2019-07-16 14:47:59 -HTTP METHOD : GET
2019-07-16 14:47:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:47:59 -参数 : [{}]
2019-07-16 14:47:59 -耗时 : 8
2019-07-16 14:47:59 -返回值 : login
2019-07-16 14:48:02 -请求地址 : http://localhost:8081/getVerify
2019-07-16 14:48:02 -HTTP METHOD : GET
2019-07-16 14:48:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 14:48:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a7baf0a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c02c73a]
2019-07-16 14:48:06 -4070
2019-07-16 14:48:07 -耗时 : 5381
2019-07-16 14:48:07 -返回值 : null
2019-07-16 14:48:11 -请求地址 : http://localhost:8081/login
2019-07-16 14:48:11 -HTTP METHOD : POST
2019-07-16 14:48:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 14:48:11 -参数 : [admin, 111111, 4070, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3498b54e]
2019-07-16 14:48:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 14:48:12 -==> Parameters: admin(String)
2019-07-16 14:48:12 -<==      Total: 1
2019-07-16 14:48:12 -耗时 : 233
2019-07-16 14:48:12 -返回值 : {msg=操作成功, code=0}
2019-07-16 14:48:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 14:48:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:48:12 -==> Parameters: 1(Long), admin(String), 登录(String), 233(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 14:48:12.416(Timestamp)
2019-07-16 14:48:12 -请求地址 : http://localhost:8081/index
2019-07-16 14:48:12 -HTTP METHOD : GET
2019-07-16 14:48:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 14:48:12 -参数 : [{}]
2019-07-16 14:48:12 -<==    Updates: 1
2019-07-16 14:48:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 14:48:13 -==> Parameters: 1(Long)
2019-07-16 14:48:13 -<==      Total: 51
2019-07-16 14:48:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 14:48:13 -==> Parameters: 138(Long)
2019-07-16 14:48:13 -<==      Total: 1
2019-07-16 14:48:13 -耗时 : 789
2019-07-16 14:48:13 -返回值 : index_v1
2019-07-16 14:48:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:48:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 789(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 14:48:13.485(Timestamp)
2019-07-16 14:48:13 -<==    Updates: 1
2019-07-16 14:48:14 -请求地址 : http://localhost:8081/main
2019-07-16 14:48:14 -HTTP METHOD : GET
2019-07-16 14:48:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:48:14 -参数 : []
2019-07-16 14:48:14 -耗时 : 0
2019-07-16 14:48:14 -返回值 : main
2019-07-16 14:48:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 14:48:14 -HTTP METHOD : GET
2019-07-16 14:48:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 14:48:14 -参数 : []
2019-07-16 14:48:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 14:48:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 14:48:14 -<==      Total: 0
2019-07-16 14:48:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 14:48:14 -==> Parameters: 1(Long), 0(String)
2019-07-16 14:48:14 -<==      Total: 1
2019-07-16 14:48:14 -耗时 : 126
2019-07-16 14:48:14 -返回值 : com.bootdo.common.utils.PageUtils@e155f8a
2019-07-16 14:48:14 -请求地址 : http://localhost:8081/main
2019-07-16 14:48:14 -HTTP METHOD : GET
2019-07-16 14:48:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:48:14 -参数 : []
2019-07-16 14:48:14 -耗时 : 0
2019-07-16 14:48:14 -返回值 : main
2019-07-16 14:48:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 14:48:22 -==> Parameters: 1(Long)
2019-07-16 14:48:22 -<==      Total: 95
2019-07-16 14:48:22 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 14:48:22 -HTTP METHOD : GET
2019-07-16 14:48:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 14:48:22 -参数 : []
2019-07-16 14:48:22 -耗时 : 1
2019-07-16 14:48:22 -返回值 : moneyList/moneyList
2019-07-16 14:48:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 14:48:26 -HTTP METHOD : GET
2019-07-16 14:48:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 14:48:26 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 14:48:26 -耗时 : 1
2019-07-16 14:48:26 -返回值 : system/dept/deptTree
2019-07-16 14:48:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 14:48:27 -HTTP METHOD : GET
2019-07-16 14:48:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 14:48:27 -参数 : []
2019-07-16 14:48:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 14:48:27 -==> Parameters: 
2019-07-16 14:48:27 -<==      Total: 3
2019-07-16 14:48:27 -耗时 : 22
2019-07-16 14:48:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 14:48:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:48:29 -HTTP METHOD : POST
2019-07-16 14:48:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:48:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6b214cbc]
2019-07-16 14:48:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:48:30 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:48:30 -<==      Total: 3
2019-07-16 14:48:30 -耗时 : 346
2019-07-16 14:48:30 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2b57bd0, com.bootdo.moneyList.damain.MoneyListDO@487fd61, com.bootdo.moneyList.damain.MoneyListDO@55f897ab]
2019-07-16 14:48:34 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 14:48:34 -HTTP METHOD : POST
2019-07-16 14:48:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 14:48:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1da1d0a5]
2019-07-16 14:48:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:48:34 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:48:34 -<==      Total: 3
2019-07-16 14:48:34 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 14:48:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:48:34 -<==      Total: 1
2019-07-16 14:48:34 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 14:48:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:48:34 -<==      Total: 1
2019-07-16 14:48:34 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 14:48:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:48:34 -<==      Total: 0
2019-07-16 14:48:34 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:48:34 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:48:34 -<==    Updates: 1
2019-07-16 14:48:34 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:48:34 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 14:48:34.554(Timestamp), 2019-06(String), admin(String), 2019-07-16 14:48:34.554(Timestamp), admin(String), null
2019-07-16 14:48:34 -<==    Updates: 1
2019-07-16 14:48:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd') 
2019-07-16 14:48:34 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), null
2019-07-16 14:48:35 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print 
	    
		where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8850bf55.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 14:48:35 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-16 14:48:35 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-16 14:48:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:48:35 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8850bf55.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-16 14:48:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist(String), null, 2019-07-16 14:48:35.453(Timestamp)
2019-07-16 14:48:35 -<==    Updates: 1
2019-07-16 14:48:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:48:36 -HTTP METHOD : POST
2019-07-16 14:48:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:48:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@27593394]
2019-07-16 14:48:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:48:36 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:48:36 -<==      Total: 3
2019-07-16 14:48:36 -耗时 : 54
2019-07-16 14:48:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4ef0a0b5, com.bootdo.moneyList.damain.MoneyListDO@6a91b2fa, com.bootdo.moneyList.damain.MoneyListDO@7ac2af8d]
2019-07-16 14:51:38 -Starting BootdoApplication on PC-201905091110 with PID 50880 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 14:51:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 14:51:38 -The following profiles are active: dev
2019-07-16 14:51:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7651218e: startup date [Tue Jul 16 14:51:39 CST 2019]; root of context hierarchy
2019-07-16 14:51:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 14:51:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7887a791] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6ae0d638] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 14:51:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 14:51:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:51:58 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 14:51:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 14:51:58 -Starting service [Tomcat]
2019-07-16 14:51:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 14:51:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 14:51:59 -Initializing Spring embedded WebApplicationContext
2019-07-16 14:51:59 -Root WebApplicationContext: initialization completed in 20271 ms
2019-07-16 14:52:00 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 14:52:00 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 14:52:00 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 14:52:00 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 14:52:00 -Filter xssFilter was not registered (disabled)
2019-07-16 14:52:00 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 14:52:00 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 14:52:00 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 14:52:00 -Servlet dispatcherServlet mapped to [/]
2019-07-16 14:52:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7651218e: startup date [Tue Jul 16 14:51:39 CST 2019]; root of context hierarchy
2019-07-16 14:52:09 -Using default implementation for ThreadExecutor
2019-07-16 14:52:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 14:52:09 -Quartz Scheduler v.2.3.0 created.
2019-07-16 14:52:09 -RAMJobStore initialized.
2019-07-16 14:52:09 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 14:52:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 14:52:09 -Quartz scheduler version: 2.3.0
2019-07-16 14:52:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@758d4aa9
2019-07-16 14:52:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 14:52:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 14:52:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 14:52:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 14:52:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 14:52:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 14:52:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 14:52:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 14:52:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 14:52:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 14:52:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 14:52:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 14:52:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 14:52:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 14:52:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 14:52:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 14:52:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 14:52:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 14:52:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 14:52:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 14:52:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:52:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 14:52:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 14:52:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:52:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 14:52:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 14:52:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 14:52:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 14:52:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 14:52:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 14:52:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 14:52:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 14:52:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 14:52:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 14:52:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 14:52:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 14:52:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 14:52:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 14:52:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 14:52:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 14:52:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 14:52:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 14:52:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 14:52:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 14:52:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 14:52:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 14:52:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 14:52:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 14:52:17 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 14:52:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 14:52:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 14:52:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 14:52:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 14:52:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 14:52:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 14:52:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 14:52:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 14:52:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 14:52:17 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 14:52:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 14:52:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 14:52:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 14:52:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 14:52:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 14:52:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 14:52:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 14:52:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 14:52:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 14:52:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 14:52:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 14:52:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 14:52:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 14:52:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 14:52:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 14:52:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 14:52:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 14:52:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:52:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:52:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 14:52:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 14:52:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 14:52:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 14:52:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 14:52:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 14:52:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 14:52:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:52:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:52:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 14:52:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 14:52:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:52:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:52:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 14:52:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 14:52:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 14:52:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 14:52:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 14:52:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 14:52:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:52:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7651218e: startup date [Tue Jul 16 14:51:39 CST 2019]; root of context hierarchy
2019-07-16 14:52:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:52:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:52:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 14:52:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 14:52:26 -Registering beans for JMX exposure on startup
2019-07-16 14:52:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 14:52:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 14:52:26 -Starting beans in phase 2147483647
2019-07-16 14:52:26 -Context refreshed
2019-07-16 14:52:29 -Found 1 custom documentation plugin(s)
2019-07-16 14:52:29 -Scanning for api listing references
2019-07-16 14:52:30 -Generating unique operation named: removeUsingPOST_1
2019-07-16 14:52:30 -Generating unique operation named: addUsingGET_1
2019-07-16 14:52:30 -Generating unique operation named: editUsingGET_1
2019-07-16 14:52:30 -Generating unique operation named: listUsingGET_1
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_2
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_3
2019-07-16 14:52:31 -Generating unique operation named: saveUsingPOST_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingGET_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPOST_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPUT_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 14:52:31 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 14:52:31 -Generating unique operation named: addUsingGET_2
2019-07-16 14:52:31 -Generating unique operation named: editUsingGET_2
2019-07-16 14:52:31 -Generating unique operation named: listUsingGET_2
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_4
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_5
2019-07-16 14:52:31 -Generating unique operation named: saveUsingPOST_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPOST_2
2019-07-16 14:52:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 14:52:31 -Generating unique operation named: addUsingGET_3
2019-07-16 14:52:31 -Generating unique operation named: editUsingGET_3
2019-07-16 14:52:31 -Generating unique operation named: listUsingGET_3
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_6
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_7
2019-07-16 14:52:31 -Generating unique operation named: saveUsingPOST_3
2019-07-16 14:52:31 -Generating unique operation named: updateUsingGET_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPOST_3
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPUT_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 14:52:31 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 14:52:31 -Generating unique operation named: addUsingGET_4
2019-07-16 14:52:31 -Generating unique operation named: editUsingGET_4
2019-07-16 14:52:31 -Generating unique operation named: listUsingGET_4
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_8
2019-07-16 14:52:31 -Generating unique operation named: removeUsingPOST_9
2019-07-16 14:52:32 -Generating unique operation named: saveUsingPOST_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingGET_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPUT_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 14:52:32 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 14:52:32 -Generating unique operation named: ElecUsingGET_1
2019-07-16 14:52:32 -Generating unique operation named: addUsingGET_5
2019-07-16 14:52:32 -Generating unique operation named: editUsingGET_5
2019-07-16 14:52:32 -Generating unique operation named: listUsingGET_5
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_10
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_11
2019-07-16 14:52:32 -Generating unique operation named: saveUsingPOST_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingGET_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPUT_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 14:52:32 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 14:52:32 -Generating unique operation named: editUsingGET_6
2019-07-16 14:52:32 -Generating unique operation named: listUsingGET_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_6
2019-07-16 14:52:32 -Generating unique operation named: addUsingGET_6
2019-07-16 14:52:32 -Generating unique operation named: editUsingGET_7
2019-07-16 14:52:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 14:52:32 -Generating unique operation named: listUsingGET_7
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_12
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_13
2019-07-16 14:52:32 -Generating unique operation named: saveUsingPOST_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingGET_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPUT_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 14:52:32 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 14:52:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 14:52:32 -Generating unique operation named: addUsingGET_7
2019-07-16 14:52:32 -Generating unique operation named: editUsingGET_8
2019-07-16 14:52:32 -Generating unique operation named: listUsingGET_8
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_14
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_15
2019-07-16 14:52:32 -Generating unique operation named: saveUsingPOST_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingGET_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_8
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPUT_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 14:52:32 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 14:52:32 -Generating unique operation named: addUsingGET_8
2019-07-16 14:52:32 -Generating unique operation named: editUsingGET_9
2019-07-16 14:52:32 -Generating unique operation named: listUsingGET_9
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_16
2019-07-16 14:52:32 -Generating unique operation named: removeUsingPOST_17
2019-07-16 14:52:32 -Generating unique operation named: saveUsingPOST_8
2019-07-16 14:52:32 -Generating unique operation named: updateUsingGET_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPOST_9
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPUT_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 14:52:32 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 14:52:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 14:52:33 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 14:52:33 -Generating unique operation named: addUsingGET_9
2019-07-16 14:52:33 -Generating unique operation named: editUsingGET_10
2019-07-16 14:52:33 -Generating unique operation named: infoUsingGET_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingPOST_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingPUT_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 14:52:33 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 14:52:33 -Generating unique operation named: listUsingGET_10
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_18
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_19
2019-07-16 14:52:33 -Generating unique operation named: saveUsingPOST_9
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPOST_10
2019-07-16 14:52:33 -Generating unique operation named: listUsingGET_11
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_20
2019-07-16 14:52:33 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 14:52:33 -Generating unique operation named: addUsingGET_10
2019-07-16 14:52:33 -Generating unique operation named: editUsingGET_11
2019-07-16 14:52:33 -Generating unique operation named: listUsingGET_12
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_21
2019-07-16 14:52:33 -Generating unique operation named: saveUsingPOST_10
2019-07-16 14:52:33 -Generating unique operation named: treeUsingGET_1
2019-07-16 14:52:33 -Generating unique operation named: treeUsingGET_2
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPOST_11
2019-07-16 14:52:33 -Generating unique operation named: addUsingGET_11
2019-07-16 14:52:33 -Generating unique operation named: editUsingGET_12
2019-07-16 14:52:33 -Generating unique operation named: listUsingGET_13
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_22
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_23
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPOST_12
2019-07-16 14:52:33 -Generating unique operation named: addUsingGET_12
2019-07-16 14:52:33 -Generating unique operation named: editUsingGET_13
2019-07-16 14:52:33 -Generating unique operation named: listUsingGET_14
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_24
2019-07-16 14:52:33 -Generating unique operation named: removeUsingPOST_25
2019-07-16 14:52:33 -Generating unique operation named: saveUsingPOST_11
2019-07-16 14:52:33 -Generating unique operation named: updateUsingGET_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPOST_13
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPUT_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 14:52:33 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 14:52:33 -Generating unique operation named: addUsingGET_13
2019-07-16 14:52:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 14:52:34 -Generating unique operation named: editUsingGET_14
2019-07-16 14:52:34 -Generating unique operation named: listUsingGET_15
2019-07-16 14:52:34 -Generating unique operation named: printEditUsingGET_1
2019-07-16 14:52:34 -Generating unique operation named: removeUsingPOST_26
2019-07-16 14:52:34 -Generating unique operation named: saveUsingPOST_12
2019-07-16 14:52:34 -Generating unique operation named: updateUsingGET_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingPOST_14
2019-07-16 14:52:34 -Generating unique operation named: updateUsingPUT_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 14:52:34 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 14:52:34 -Generating unique operation named: addUsingGET_14
2019-07-16 14:52:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 14:52:34 -Generating unique operation named: editUsingGET_15
2019-07-16 14:52:34 -Generating unique operation named: listUsingGET_16
2019-07-16 14:52:34 -Generating unique operation named: saveUsingPOST_13
2019-07-16 14:52:34 -Generating unique operation named: saveUsingPOST_14
2019-07-16 14:52:34 -Generating unique operation named: updateUsingPOST_15
2019-07-16 14:52:34 -Generating unique operation named: listUsingGET_17
2019-07-16 14:52:34 -Generating unique operation named: listUsingHEAD_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingPOST_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingPUT_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingPATCH_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingDELETE_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 14:52:34 -Generating unique operation named: listUsingTRACE_1
2019-07-16 14:52:34 -Generating unique operation named: countDDUsingGET_1
2019-07-16 14:52:34 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 14:52:34 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 14:52:34 -Generating unique operation named: addUsingGET_15
2019-07-16 14:52:35 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 14:52:35 -Generating unique operation named: editUsingGET_16
2019-07-16 14:52:35 -Generating unique operation named: listUsingGET_18
2019-07-16 14:52:35 -Generating unique operation named: removeUsingPOST_27
2019-07-16 14:52:35 -Generating unique operation named: saveUsingPOST_15
2019-07-16 14:52:35 -Generating unique operation named: treeUsingGET_3
2019-07-16 14:52:35 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPOST_16
2019-07-16 14:52:35 -Generating unique operation named: addUsingGET_16
2019-07-16 14:52:35 -Generating unique operation named: editUsingGET_17
2019-07-16 14:52:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 14:52:35 -Generating unique operation named: listUsingGET_19
2019-07-16 14:52:35 -Generating unique operation named: removeUsingPOST_28
2019-07-16 14:52:35 -Generating unique operation named: removeUsingPOST_29
2019-07-16 14:52:35 -Generating unique operation named: saveUsingPOST_16
2019-07-16 14:52:35 -Generating unique operation named: updateUsingGET_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPOST_17
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPUT_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 14:52:35 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 14:52:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 14:52:35 -Generating unique operation named: addUsingGET_17
2019-07-16 14:52:35 -Generating unique operation named: editUsingGET_18
2019-07-16 14:52:35 -Generating unique operation named: listUsingGET_20
2019-07-16 14:52:35 -Generating unique operation named: removeUsingPOST_30
2019-07-16 14:52:35 -Generating unique operation named: removeUsingPOST_31
2019-07-16 14:52:35 -Generating unique operation named: saveUsingPOST_17
2019-07-16 14:52:35 -Generating unique operation named: updateUsingGET_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPOST_18
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPUT_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 14:52:35 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 14:52:36 -Generating unique operation named: addUsingGET_18
2019-07-16 14:52:36 -Generating unique operation named: editUsingGET_19
2019-07-16 14:52:36 -Generating unique operation named: listUsingGET_21
2019-07-16 14:52:36 -Generating unique operation named: removeUsingPOST_32
2019-07-16 14:52:36 -Generating unique operation named: removeUsingPOST_33
2019-07-16 14:52:36 -Generating unique operation named: saveUsingPOST_18
2019-07-16 14:52:36 -Generating unique operation named: updateUsingGET_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingPOST_19
2019-07-16 14:52:36 -Generating unique operation named: updateUsingPUT_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 14:52:36 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 14:52:36 -Starting Quartz Scheduler now
2019-07-16 14:52:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 14:52:36 -Starting...
2019-07-16 14:52:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 14:52:36 -Started.
2019-07-16 14:52:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 14:52:36 -Using a shared selector for servlet write/read
2019-07-16 14:52:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 14:52:36 -Started BootdoApplication in 61.697 seconds (JVM running for 63.964)
2019-07-16 14:52:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 14:52:37 -==> Parameters: 
2019-07-16 14:52:37 -<==      Total: 1
2019-07-16 14:53:19 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 14:54:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 14:54:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 14:54:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-07-16 14:54:59 -Enabling session validation scheduler...
2019-07-16 14:54:59 -请求地址 : http://localhost:8081/login;JSESSIONID=6bccb0ce-c155-49ca-8037-5e11a959fee5
2019-07-16 14:54:59 -HTTP METHOD : GET
2019-07-16 14:54:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:54:59 -参数 : [{}]
2019-07-16 14:54:59 -耗时 : 6
2019-07-16 14:54:59 -返回值 : login
2019-07-16 14:55:02 -请求地址 : http://localhost:8081/getVerify
2019-07-16 14:55:02 -HTTP METHOD : GET
2019-07-16 14:55:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 14:55:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@18788262, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ef5c66a]
2019-07-16 14:55:07 -9915
2019-07-16 14:55:07 -耗时 : 5868
2019-07-16 14:55:07 -返回值 : null
2019-07-16 14:55:17 -请求地址 : http://localhost:8081/login
2019-07-16 14:55:17 -HTTP METHOD : POST
2019-07-16 14:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 14:55:17 -参数 : [admin, 111111, 9915, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76df7cd5]
2019-07-16 14:55:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 14:55:17 -==> Parameters: admin(String)
2019-07-16 14:55:17 -<==      Total: 1
2019-07-16 14:55:17 -耗时 : 361
2019-07-16 14:55:17 -返回值 : {msg=操作成功, code=0}
2019-07-16 14:55:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 14:55:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:55:17 -==> Parameters: 1(Long), admin(String), 登录(String), 361(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 14:55:17.8(Timestamp)
2019-07-16 14:55:18 -请求地址 : http://localhost:8081/index
2019-07-16 14:55:18 -HTTP METHOD : GET
2019-07-16 14:55:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 14:55:18 -参数 : [{}]
2019-07-16 14:55:18 -<==    Updates: 1
2019-07-16 14:55:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 14:55:18 -==> Parameters: 1(Long)
2019-07-16 14:55:18 -<==      Total: 51
2019-07-16 14:55:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 14:55:18 -==> Parameters: 138(Long)
2019-07-16 14:55:18 -<==      Total: 1
2019-07-16 14:55:18 -耗时 : 813
2019-07-16 14:55:18 -返回值 : index_v1
2019-07-16 14:55:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:55:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 813(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 14:55:19.025(Timestamp)
2019-07-16 14:55:19 -<==    Updates: 1
2019-07-16 14:55:19 -请求地址 : http://localhost:8081/main
2019-07-16 14:55:19 -HTTP METHOD : GET
2019-07-16 14:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:55:19 -参数 : []
2019-07-16 14:55:19 -耗时 : 1
2019-07-16 14:55:19 -返回值 : main
2019-07-16 14:55:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 14:55:19 -HTTP METHOD : GET
2019-07-16 14:55:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 14:55:19 -参数 : []
2019-07-16 14:55:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 14:55:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 14:55:20 -请求地址 : http://localhost:8081/main
2019-07-16 14:55:20 -HTTP METHOD : GET
2019-07-16 14:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:55:20 -参数 : []
2019-07-16 14:55:20 -耗时 : 0
2019-07-16 14:55:20 -返回值 : main
2019-07-16 14:55:21 -<==      Total: 0
2019-07-16 14:55:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 14:55:21 -==> Parameters: 1(Long), 0(String)
2019-07-16 14:55:21 -<==      Total: 1
2019-07-16 14:55:21 -耗时 : 1221
2019-07-16 14:55:21 -返回值 : com.bootdo.common.utils.PageUtils@48059ef7
2019-07-16 14:55:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 14:55:34 -==> Parameters: 1(Long)
2019-07-16 14:55:34 -<==      Total: 95
2019-07-16 14:55:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 14:55:34 -HTTP METHOD : GET
2019-07-16 14:55:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 14:55:34 -参数 : []
2019-07-16 14:55:34 -耗时 : 1
2019-07-16 14:55:34 -返回值 : moneyList/moneyList
2019-07-16 14:55:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 14:55:41 -HTTP METHOD : GET
2019-07-16 14:55:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 14:55:41 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 14:55:41 -耗时 : 1
2019-07-16 14:55:41 -返回值 : system/dept/deptTree
2019-07-16 14:55:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 14:55:42 -HTTP METHOD : GET
2019-07-16 14:55:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 14:55:42 -参数 : []
2019-07-16 14:55:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 14:55:42 -==> Parameters: 
2019-07-16 14:55:42 -<==      Total: 3
2019-07-16 14:55:42 -耗时 : 57
2019-07-16 14:55:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 14:55:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:55:45 -HTTP METHOD : POST
2019-07-16 14:55:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:55:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4617d668]
2019-07-16 14:55:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:55:45 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:55:45 -<==      Total: 3
2019-07-16 14:55:45 -耗时 : 296
2019-07-16 14:55:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@238b8ddc, com.bootdo.moneyList.damain.MoneyListDO@59d3b61d, com.bootdo.moneyList.damain.MoneyListDO@3f07acad]
2019-07-16 14:55:50 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 14:55:50 -HTTP METHOD : POST
2019-07-16 14:55:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 14:55:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@55cec289]
2019-07-16 14:55:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:55:50 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:55:50 -<==      Total: 3
2019-07-16 14:55:50 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 14:55:50 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:55:50 -<==      Total: 1
2019-07-16 14:55:50 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 14:55:50 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:55:50 -<==      Total: 1
2019-07-16 14:55:50 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 14:55:50 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 14:55:50 -<==      Total: 0
2019-07-16 14:55:50 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:55:50 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:55:50 -<==    Updates: 1
2019-07-16 14:55:50 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:55:50 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 14:55:50.559(Timestamp), 2019-06(String), admin(String), 2019-07-16 14:55:50.56(Timestamp), admin(String), null
2019-07-16 14:55:51 -<==    Updates: 1
2019-07-16 14:55:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd') 
2019-07-16 14:55:51 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), null
2019-07-16 14:55:51 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print 
	    
		where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7d25e61f.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 14:55:51 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-16 14:55:51 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-16 14:55:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:55:51 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7d25e61f.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-16 14:55:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist(String), null, 2019-07-16 14:55:51.481(Timestamp)
2019-07-16 14:55:51 -<==    Updates: 1
2019-07-16 14:55:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 14:55:52 -HTTP METHOD : POST
2019-07-16 14:55:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 14:55:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4a49d4ea]
2019-07-16 14:55:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 14:55:52 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 14:55:52 -<==      Total: 3
2019-07-16 14:55:52 -耗时 : 34
2019-07-16 14:55:52 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3736a746, com.bootdo.moneyList.damain.MoneyListDO@3f09c1dd, com.bootdo.moneyList.damain.MoneyListDO@6000de27]
2019-07-16 14:57:03 -请求地址 : http://localhost:8081/login;JSESSIONID=eb71bde1-d758-486b-bdfa-2c619195bcd5
2019-07-16 14:57:03 -HTTP METHOD : GET
2019-07-16 14:57:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:57:03 -参数 : [{}]
2019-07-16 14:57:03 -耗时 : 0
2019-07-16 14:57:03 -返回值 : login
2019-07-16 14:57:03 -请求地址 : http://localhost:8081/getVerify
2019-07-16 14:57:03 -HTTP METHOD : GET
2019-07-16 14:57:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 14:57:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@795dcfbf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36a85913]
2019-07-16 14:57:03 -8541
2019-07-16 14:57:03 -耗时 : 36
2019-07-16 14:57:03 -返回值 : null
2019-07-16 14:57:03 -请求地址 : http://localhost:8081/login
2019-07-16 14:57:03 -HTTP METHOD : GET
2019-07-16 14:57:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:57:03 -参数 : [{}]
2019-07-16 14:57:03 -耗时 : 1
2019-07-16 14:57:03 -返回值 : login
2019-07-16 14:57:09 -请求地址 : http://localhost:8081/login
2019-07-16 14:57:09 -HTTP METHOD : POST
2019-07-16 14:57:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 14:57:09 -参数 : [admin, 111111, 8541, org.apache.shiro.web.servlet.ShiroHttpServletRequest@79bc44a1]
2019-07-16 14:57:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 14:57:09 -==> Parameters: admin(String)
2019-07-16 14:57:09 -<==      Total: 1
2019-07-16 14:57:09 -耗时 : 9
2019-07-16 14:57:09 -返回值 : {msg=操作成功, code=0}
2019-07-16 14:57:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:57:09 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 14:57:09.652(Timestamp)
2019-07-16 14:57:09 -请求地址 : http://localhost:8081/index
2019-07-16 14:57:09 -HTTP METHOD : GET
2019-07-16 14:57:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 14:57:09 -参数 : [{}]
2019-07-16 14:57:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 14:57:09 -==> Parameters: 1(Long)
2019-07-16 14:57:09 -<==    Updates: 1
2019-07-16 14:57:10 -<==      Total: 51
2019-07-16 14:57:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 14:57:10 -==> Parameters: 138(Long)
2019-07-16 14:57:10 -<==      Total: 1
2019-07-16 14:57:10 -耗时 : 509
2019-07-16 14:57:10 -返回值 : index_v1
2019-07-16 14:57:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 14:57:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 509(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 14:57:10.195(Timestamp)
2019-07-16 14:57:10 -请求地址 : http://localhost:8081/main
2019-07-16 14:57:10 -HTTP METHOD : GET
2019-07-16 14:57:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:57:10 -参数 : []
2019-07-16 14:57:10 -耗时 : 1
2019-07-16 14:57:10 -返回值 : main
2019-07-16 14:57:11 -<==    Updates: 1
2019-07-16 14:57:11 -请求地址 : http://localhost:8081/main
2019-07-16 14:57:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 14:57:11 -HTTP METHOD : GET
2019-07-16 14:57:11 -HTTP METHOD : GET
2019-07-16 14:57:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 14:57:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 14:57:11 -参数 : []
2019-07-16 14:57:11 -参数 : []
2019-07-16 14:57:11 -耗时 : 1
2019-07-16 14:57:11 -返回值 : main
2019-07-16 14:57:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 14:57:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 14:57:11 -<==      Total: 0
2019-07-16 14:57:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 14:57:11 -==> Parameters: 1(Long), 0(String)
2019-07-16 14:57:11 -<==      Total: 1
2019-07-16 14:57:11 -耗时 : 306
2019-07-16 14:57:11 -返回值 : com.bootdo.common.utils.PageUtils@11256682
2019-07-16 14:57:33 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 14:59:03 -Starting BootdoApplication on PC-201905091110 with PID 34896 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 14:59:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 14:59:03 -The following profiles are active: dev
2019-07-16 14:59:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e077866: startup date [Tue Jul 16 14:59:03 CST 2019]; root of context hierarchy
2019-07-16 14:59:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 14:59:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1fc43f8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$121d6e36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 14:59:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 14:59:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 14:59:17 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 14:59:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 14:59:17 -Starting service [Tomcat]
2019-07-16 14:59:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 14:59:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 14:59:18 -Initializing Spring embedded WebApplicationContext
2019-07-16 14:59:18 -Root WebApplicationContext: initialization completed in 14115 ms
2019-07-16 14:59:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 14:59:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 14:59:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 14:59:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 14:59:19 -Filter xssFilter was not registered (disabled)
2019-07-16 14:59:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 14:59:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 14:59:19 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 14:59:19 -Servlet dispatcherServlet mapped to [/]
2019-07-16 14:59:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e077866: startup date [Tue Jul 16 14:59:03 CST 2019]; root of context hierarchy
2019-07-16 14:59:25 -Using default implementation for ThreadExecutor
2019-07-16 14:59:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 14:59:25 -Quartz Scheduler v.2.3.0 created.
2019-07-16 14:59:25 -RAMJobStore initialized.
2019-07-16 14:59:25 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 14:59:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 14:59:25 -Quartz scheduler version: 2.3.0
2019-07-16 14:59:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5751e53e
2019-07-16 14:59:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 14:59:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 14:59:31 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 14:59:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 14:59:31 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 14:59:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 14:59:31 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 14:59:31 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 14:59:31 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 14:59:31 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 14:59:31 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 14:59:31 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 14:59:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 14:59:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 14:59:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 14:59:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 14:59:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 14:59:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 14:59:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 14:59:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:59:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 14:59:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 14:59:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 14:59:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 14:59:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 14:59:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 14:59:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 14:59:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 14:59:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 14:59:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 14:59:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 14:59:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 14:59:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 14:59:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 14:59:31 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 14:59:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 14:59:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 14:59:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:59:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 14:59:31 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 14:59:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 14:59:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 14:59:31 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:31 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 14:59:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 14:59:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 14:59:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 14:59:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 14:59:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 14:59:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 14:59:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 14:59:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 14:59:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 14:59:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 14:59:32 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 14:59:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 14:59:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 14:59:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 14:59:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 14:59:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 14:59:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 14:59:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 14:59:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 14:59:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 14:59:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 14:59:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 14:59:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 14:59:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 14:59:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 14:59:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 14:59:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 14:59:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 14:59:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 14:59:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:59:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 14:59:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 14:59:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 14:59:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 14:59:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 14:59:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 14:59:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 14:59:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 14:59:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 14:59:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 14:59:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 14:59:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 14:59:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 14:59:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 14:59:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 14:59:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 14:59:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 14:59:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 14:59:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 14:59:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 14:59:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:59:35 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e077866: startup date [Tue Jul 16 14:59:03 CST 2019]; root of context hierarchy
2019-07-16 14:59:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:59:35 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 14:59:35 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 14:59:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 14:59:39 -Registering beans for JMX exposure on startup
2019-07-16 14:59:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 14:59:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 14:59:39 -Starting beans in phase 2147483647
2019-07-16 14:59:39 -Context refreshed
2019-07-16 14:59:40 -Found 1 custom documentation plugin(s)
2019-07-16 14:59:40 -Scanning for api listing references
2019-07-16 14:59:41 -Generating unique operation named: removeUsingPOST_1
2019-07-16 14:59:42 -Generating unique operation named: addUsingGET_1
2019-07-16 14:59:42 -Generating unique operation named: editUsingGET_1
2019-07-16 14:59:42 -Generating unique operation named: listUsingGET_1
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_2
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_3
2019-07-16 14:59:42 -Generating unique operation named: saveUsingPOST_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingGET_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPOST_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPUT_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 14:59:42 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 14:59:42 -Generating unique operation named: addUsingGET_2
2019-07-16 14:59:42 -Generating unique operation named: editUsingGET_2
2019-07-16 14:59:42 -Generating unique operation named: listUsingGET_2
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_4
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_5
2019-07-16 14:59:42 -Generating unique operation named: saveUsingPOST_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPOST_2
2019-07-16 14:59:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 14:59:42 -Generating unique operation named: addUsingGET_3
2019-07-16 14:59:42 -Generating unique operation named: editUsingGET_3
2019-07-16 14:59:42 -Generating unique operation named: listUsingGET_3
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_6
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_7
2019-07-16 14:59:42 -Generating unique operation named: saveUsingPOST_3
2019-07-16 14:59:42 -Generating unique operation named: updateUsingGET_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPOST_3
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPUT_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 14:59:42 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 14:59:42 -Generating unique operation named: addUsingGET_4
2019-07-16 14:59:42 -Generating unique operation named: editUsingGET_4
2019-07-16 14:59:42 -Generating unique operation named: listUsingGET_4
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_8
2019-07-16 14:59:42 -Generating unique operation named: removeUsingPOST_9
2019-07-16 14:59:42 -Generating unique operation named: saveUsingPOST_4
2019-07-16 14:59:42 -Generating unique operation named: updateUsingGET_3
2019-07-16 14:59:42 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPOST_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPUT_3
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 14:59:43 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 14:59:43 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 14:59:43 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 14:59:43 -Generating unique operation named: ElecUsingGET_1
2019-07-16 14:59:43 -Generating unique operation named: addUsingGET_5
2019-07-16 14:59:43 -Generating unique operation named: editUsingGET_5
2019-07-16 14:59:43 -Generating unique operation named: listUsingGET_5
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_10
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_11
2019-07-16 14:59:43 -Generating unique operation named: saveUsingPOST_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingGET_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPOST_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPUT_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 14:59:43 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 14:59:43 -Generating unique operation named: editUsingGET_6
2019-07-16 14:59:43 -Generating unique operation named: listUsingGET_6
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPOST_6
2019-07-16 14:59:43 -Generating unique operation named: addUsingGET_6
2019-07-16 14:59:43 -Generating unique operation named: editUsingGET_7
2019-07-16 14:59:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 14:59:43 -Generating unique operation named: listUsingGET_7
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_12
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_13
2019-07-16 14:59:43 -Generating unique operation named: saveUsingPOST_6
2019-07-16 14:59:43 -Generating unique operation named: updateUsingGET_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPOST_7
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPUT_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 14:59:43 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 14:59:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 14:59:43 -Generating unique operation named: addUsingGET_7
2019-07-16 14:59:43 -Generating unique operation named: editUsingGET_8
2019-07-16 14:59:43 -Generating unique operation named: listUsingGET_8
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_14
2019-07-16 14:59:43 -Generating unique operation named: removeUsingPOST_15
2019-07-16 14:59:43 -Generating unique operation named: saveUsingPOST_7
2019-07-16 14:59:43 -Generating unique operation named: updateUsingGET_6
2019-07-16 14:59:43 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 14:59:43 -Generating unique operation named: updateUsingPOST_8
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPUT_6
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 14:59:44 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 14:59:44 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 14:59:44 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 14:59:44 -Generating unique operation named: addUsingGET_8
2019-07-16 14:59:44 -Generating unique operation named: editUsingGET_9
2019-07-16 14:59:44 -Generating unique operation named: listUsingGET_9
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_16
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_17
2019-07-16 14:59:44 -Generating unique operation named: saveUsingPOST_8
2019-07-16 14:59:44 -Generating unique operation named: updateUsingGET_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPOST_9
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPUT_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 14:59:44 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 14:59:44 -Generating unique operation named: addUsingGET_9
2019-07-16 14:59:44 -Generating unique operation named: editUsingGET_10
2019-07-16 14:59:44 -Generating unique operation named: infoUsingGET_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingPOST_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingPUT_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 14:59:44 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 14:59:44 -Generating unique operation named: listUsingGET_10
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_18
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_19
2019-07-16 14:59:44 -Generating unique operation named: saveUsingPOST_9
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPOST_10
2019-07-16 14:59:44 -Generating unique operation named: listUsingGET_11
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_20
2019-07-16 14:59:44 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 14:59:44 -Generating unique operation named: addUsingGET_10
2019-07-16 14:59:44 -Generating unique operation named: editUsingGET_11
2019-07-16 14:59:44 -Generating unique operation named: listUsingGET_12
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_21
2019-07-16 14:59:44 -Generating unique operation named: saveUsingPOST_10
2019-07-16 14:59:44 -Generating unique operation named: treeUsingGET_1
2019-07-16 14:59:44 -Generating unique operation named: treeUsingGET_2
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPOST_11
2019-07-16 14:59:44 -Generating unique operation named: addUsingGET_11
2019-07-16 14:59:44 -Generating unique operation named: editUsingGET_12
2019-07-16 14:59:44 -Generating unique operation named: listUsingGET_13
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_22
2019-07-16 14:59:44 -Generating unique operation named: removeUsingPOST_23
2019-07-16 14:59:44 -Generating unique operation named: updateUsingPOST_12
2019-07-16 14:59:45 -Generating unique operation named: addUsingGET_12
2019-07-16 14:59:45 -Generating unique operation named: editUsingGET_13
2019-07-16 14:59:45 -Generating unique operation named: listUsingGET_14
2019-07-16 14:59:45 -Generating unique operation named: removeUsingPOST_24
2019-07-16 14:59:45 -Generating unique operation named: removeUsingPOST_25
2019-07-16 14:59:45 -Generating unique operation named: saveUsingPOST_11
2019-07-16 14:59:45 -Generating unique operation named: updateUsingGET_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPOST_13
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPUT_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 14:59:45 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 14:59:45 -Generating unique operation named: addUsingGET_13
2019-07-16 14:59:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 14:59:45 -Generating unique operation named: editUsingGET_14
2019-07-16 14:59:45 -Generating unique operation named: listUsingGET_15
2019-07-16 14:59:45 -Generating unique operation named: printEditUsingGET_1
2019-07-16 14:59:45 -Generating unique operation named: removeUsingPOST_26
2019-07-16 14:59:45 -Generating unique operation named: saveUsingPOST_12
2019-07-16 14:59:45 -Generating unique operation named: updateUsingGET_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPOST_14
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPUT_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 14:59:45 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 14:59:45 -Generating unique operation named: addUsingGET_14
2019-07-16 14:59:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 14:59:45 -Generating unique operation named: editUsingGET_15
2019-07-16 14:59:45 -Generating unique operation named: listUsingGET_16
2019-07-16 14:59:45 -Generating unique operation named: saveUsingPOST_13
2019-07-16 14:59:45 -Generating unique operation named: saveUsingPOST_14
2019-07-16 14:59:45 -Generating unique operation named: updateUsingPOST_15
2019-07-16 14:59:45 -Generating unique operation named: listUsingGET_17
2019-07-16 14:59:45 -Generating unique operation named: listUsingHEAD_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingPOST_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingPUT_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingPATCH_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingDELETE_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 14:59:45 -Generating unique operation named: listUsingTRACE_1
2019-07-16 14:59:45 -Generating unique operation named: countDDUsingGET_1
2019-07-16 14:59:45 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 14:59:45 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 14:59:45 -Generating unique operation named: addUsingGET_15
2019-07-16 14:59:45 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 14:59:45 -Generating unique operation named: editUsingGET_16
2019-07-16 14:59:45 -Generating unique operation named: listUsingGET_18
2019-07-16 14:59:45 -Generating unique operation named: removeUsingPOST_27
2019-07-16 14:59:46 -Generating unique operation named: saveUsingPOST_15
2019-07-16 14:59:46 -Generating unique operation named: treeUsingGET_3
2019-07-16 14:59:46 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPOST_16
2019-07-16 14:59:46 -Generating unique operation named: addUsingGET_16
2019-07-16 14:59:46 -Generating unique operation named: editUsingGET_17
2019-07-16 14:59:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 14:59:46 -Generating unique operation named: listUsingGET_19
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_28
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_29
2019-07-16 14:59:46 -Generating unique operation named: saveUsingPOST_16
2019-07-16 14:59:46 -Generating unique operation named: updateUsingGET_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPOST_17
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPUT_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 14:59:46 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 14:59:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 14:59:46 -Generating unique operation named: addUsingGET_17
2019-07-16 14:59:46 -Generating unique operation named: editUsingGET_18
2019-07-16 14:59:46 -Generating unique operation named: listUsingGET_20
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_30
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_31
2019-07-16 14:59:46 -Generating unique operation named: saveUsingPOST_17
2019-07-16 14:59:46 -Generating unique operation named: updateUsingGET_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPOST_18
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPUT_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 14:59:46 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 14:59:46 -Generating unique operation named: addUsingGET_18
2019-07-16 14:59:46 -Generating unique operation named: editUsingGET_19
2019-07-16 14:59:46 -Generating unique operation named: listUsingGET_21
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_32
2019-07-16 14:59:46 -Generating unique operation named: removeUsingPOST_33
2019-07-16 14:59:46 -Generating unique operation named: saveUsingPOST_18
2019-07-16 14:59:46 -Generating unique operation named: updateUsingGET_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPOST_19
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPUT_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 14:59:46 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 14:59:46 -Starting Quartz Scheduler now
2019-07-16 14:59:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 14:59:46 -Starting...
2019-07-16 14:59:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 14:59:46 -Started.
2019-07-16 14:59:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 14:59:46 -Using a shared selector for servlet write/read
2019-07-16 14:59:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 14:59:46 -Started BootdoApplication in 46.175 seconds (JVM running for 48.053)
2019-07-16 14:59:46 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 14:59:47 -==> Parameters: 
2019-07-16 14:59:47 -<==      Total: 1
2019-07-16 14:59:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 14:59:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 14:59:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-07-16 14:59:57 -Enabling session validation scheduler...
2019-07-16 14:59:57 -请求地址 : http://localhost:8081/login;JSESSIONID=d0d662e6-0da0-49d0-ae64-0cee7bf78b08
2019-07-16 14:59:57 -HTTP METHOD : GET
2019-07-16 14:59:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 14:59:57 -参数 : [{}]
2019-07-16 14:59:57 -耗时 : 6
2019-07-16 14:59:57 -返回值 : login
2019-07-16 15:00:00 -请求地址 : http://localhost:8081/getVerify
2019-07-16 15:00:00 -HTTP METHOD : GET
2019-07-16 15:00:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 15:00:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51d2d526, org.apache.shiro.web.servlet.ShiroHttpServletResponse@72a9c482]
2019-07-16 15:00:09 -8963
2019-07-16 15:00:09 -耗时 : 9366
2019-07-16 15:00:09 -返回值 : null
2019-07-16 15:00:12 -请求地址 : http://localhost:8081/login
2019-07-16 15:00:12 -HTTP METHOD : POST
2019-07-16 15:00:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 15:00:12 -参数 : [admin, 111111, 8963, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b8cb5fc]
2019-07-16 15:00:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 15:00:12 -==> Parameters: admin(String)
2019-07-16 15:00:13 -<==      Total: 1
2019-07-16 15:00:13 -耗时 : 214
2019-07-16 15:00:13 -返回值 : {msg=操作成功, code=0}
2019-07-16 15:00:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 15:00:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 15:00:13 -==> Parameters: 1(Long), admin(String), 登录(String), 214(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 15:00:13.237(Timestamp)
2019-07-16 15:00:13 -请求地址 : http://localhost:8081/index
2019-07-16 15:00:13 -HTTP METHOD : GET
2019-07-16 15:00:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 15:00:13 -参数 : [{}]
2019-07-16 15:00:13 -<==    Updates: 1
2019-07-16 15:00:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 15:00:13 -==> Parameters: 1(Long)
2019-07-16 15:00:13 -<==      Total: 51
2019-07-16 15:00:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 15:00:13 -==> Parameters: 138(Long)
2019-07-16 15:00:13 -<==      Total: 1
2019-07-16 15:00:13 -耗时 : 490
2019-07-16 15:00:13 -返回值 : index_v1
2019-07-16 15:00:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 15:00:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 490(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 15:00:14.018(Timestamp)
2019-07-16 15:00:14 -<==    Updates: 1
2019-07-16 15:00:14 -请求地址 : http://localhost:8081/main
2019-07-16 15:00:14 -HTTP METHOD : GET
2019-07-16 15:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 15:00:14 -参数 : []
2019-07-16 15:00:14 -耗时 : 1
2019-07-16 15:00:14 -返回值 : main
2019-07-16 15:00:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 15:00:14 -HTTP METHOD : GET
2019-07-16 15:00:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 15:00:14 -参数 : []
2019-07-16 15:00:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 15:00:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 15:00:14 -请求地址 : http://localhost:8081/main
2019-07-16 15:00:14 -HTTP METHOD : GET
2019-07-16 15:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 15:00:14 -参数 : []
2019-07-16 15:00:14 -耗时 : 1
2019-07-16 15:00:14 -返回值 : main
2019-07-16 15:00:15 -<==      Total: 0
2019-07-16 15:00:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 15:00:15 -==> Parameters: 1(Long), 0(String)
2019-07-16 15:00:15 -<==      Total: 1
2019-07-16 15:00:15 -耗时 : 643
2019-07-16 15:00:15 -返回值 : com.bootdo.common.utils.PageUtils@227a4672
2019-07-16 15:00:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 15:00:18 -==> Parameters: 1(Long)
2019-07-16 15:00:18 -<==      Total: 95
2019-07-16 15:00:18 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 15:00:18 -HTTP METHOD : GET
2019-07-16 15:00:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 15:00:18 -参数 : []
2019-07-16 15:00:18 -耗时 : 1
2019-07-16 15:00:18 -返回值 : moneyList/moneyList
2019-07-16 15:00:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 15:00:23 -HTTP METHOD : GET
2019-07-16 15:00:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 15:00:23 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 15:00:23 -耗时 : 1
2019-07-16 15:00:23 -返回值 : system/dept/deptTree
2019-07-16 15:00:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 15:00:23 -HTTP METHOD : GET
2019-07-16 15:00:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 15:00:23 -参数 : []
2019-07-16 15:00:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 15:00:24 -==> Parameters: 
2019-07-16 15:00:24 -<==      Total: 3
2019-07-16 15:00:24 -耗时 : 180
2019-07-16 15:00:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 15:00:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 15:00:27 -HTTP METHOD : POST
2019-07-16 15:00:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 15:00:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4ad06daa]
2019-07-16 15:00:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 15:00:27 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 15:00:27 -<==      Total: 3
2019-07-16 15:00:27 -耗时 : 207
2019-07-16 15:00:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53f7ce76, com.bootdo.moneyList.damain.MoneyListDO@17a0dbef, com.bootdo.moneyList.damain.MoneyListDO@68ec67dc]
2019-07-16 15:00:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-07-16 15:00:38 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 15:00:38 -HTTP METHOD : POST
2019-07-16 15:00:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 15:00:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4105addf]
2019-07-16 15:00:38 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 15:00:38 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 15:00:38 -<==      Total: 3
2019-07-16 15:00:38 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 15:00:38 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 15:00:38 -<==      Total: 1
2019-07-16 15:00:38 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 15:00:38 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 15:00:38 -<==      Total: 1
2019-07-16 15:00:38 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 15:00:38 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 15:00:38 -<==      Total: 0
2019-07-16 15:00:38 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 15:00:38 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 15:00:38 -<==    Updates: 1
2019-07-16 15:00:38 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 15:00:38 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 15:00:38.535(Timestamp), 2019-06(String), admin(String), 2019-07-16 15:00:38.535(Timestamp), admin(String), null
2019-07-16 15:00:38 -<==    Updates: 1
2019-07-16 15:00:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd') 
2019-07-16 15:00:38 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), null
2019-07-16 15:00:38 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print 
	    
		where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c63c6436.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 15:00:38 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-16 15:00:39 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-16 15:00:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 15:00:39 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:93)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.selectByCondition(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.selectByCondition(PrintServiceImpl.java:63)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:323)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$c63c6436.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-16 15:00:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print          where user_id = ? and user_org = ? and create_time = ?  and to_char(print_date,'yyyy-MM-dd') = to_char(?,'yyyy-MM-dd')
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION bootdo.to_char does not exist(String), null, 2019-07-16 15:00:39.112(Timestamp)
2019-07-16 15:00:39 -<==    Updates: 1
2019-07-16 15:00:40 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 15:00:40 -HTTP METHOD : POST
2019-07-16 15:00:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 15:00:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@62b54121]
2019-07-16 15:00:40 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 15:00:40 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 15:00:40 -<==      Total: 3
2019-07-16 15:00:40 -耗时 : 32
2019-07-16 15:00:40 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7683ea1, com.bootdo.moneyList.damain.MoneyListDO@1bf73451, com.bootdo.moneyList.damain.MoneyListDO@68195696]
2019-07-16 15:25:38 -Starting BootdoApplication on PC-201905091110 with PID 55992 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 15:25:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 15:25:38 -The following profiles are active: dev
2019-07-16 15:25:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8233cd: startup date [Tue Jul 16 15:25:38 CST 2019]; root of context hierarchy
2019-07-16 15:25:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 15:25:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1d86714a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fdf9ff1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 15:25:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 15:25:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 15:25:55 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 15:25:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 15:25:55 -Starting service [Tomcat]
2019-07-16 15:25:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 15:25:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 15:25:56 -Initializing Spring embedded WebApplicationContext
2019-07-16 15:25:56 -Root WebApplicationContext: initialization completed in 17549 ms
2019-07-16 15:25:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 15:25:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 15:25:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 15:25:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 15:25:57 -Filter xssFilter was not registered (disabled)
2019-07-16 15:25:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 15:25:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 15:25:57 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 15:25:57 -Servlet dispatcherServlet mapped to [/]
2019-07-16 15:26:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8233cd: startup date [Tue Jul 16 15:25:38 CST 2019]; root of context hierarchy
2019-07-16 15:26:03 -Using default implementation for ThreadExecutor
2019-07-16 15:26:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 15:26:03 -Quartz Scheduler v.2.3.0 created.
2019-07-16 15:26:03 -RAMJobStore initialized.
2019-07-16 15:26:03 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 15:26:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 15:26:03 -Quartz scheduler version: 2.3.0
2019-07-16 15:26:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@43df1377
2019-07-16 15:26:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 15:26:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 15:26:08 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 15:26:08 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 15:26:08 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 15:26:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 15:26:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 15:26:08 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 15:26:08 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 15:26:08 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 15:26:08 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 15:26:08 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 15:26:08 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 15:26:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 15:26:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 15:26:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 15:26:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 15:26:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 15:26:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 15:26:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 15:26:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 15:26:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 15:26:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 15:26:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 15:26:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 15:26:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 15:26:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 15:26:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 15:26:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 15:26:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 15:26:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 15:26:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 15:26:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 15:26:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 15:26:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 15:26:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 15:26:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 15:26:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 15:26:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 15:26:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 15:26:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 15:26:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 15:26:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:08 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:08 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 15:26:09 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 15:26:09 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 15:26:09 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 15:26:09 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 15:26:09 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 15:26:09 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 15:26:09 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 15:26:09 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 15:26:09 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 15:26:09 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 15:26:09 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 15:26:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 15:26:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 15:26:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 15:26:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 15:26:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 15:26:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 15:26:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 15:26:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 15:26:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 15:26:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 15:26:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 15:26:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 15:26:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 15:26:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 15:26:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 15:26:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 15:26:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 15:26:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 15:26:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 15:26:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 15:26:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 15:26:09 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 15:26:09 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 15:26:09 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 15:26:09 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 15:26:09 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 15:26:09 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 15:26:09 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 15:26:09 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 15:26:09 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 15:26:09 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 15:26:09 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 15:26:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 15:26:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 15:26:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 15:26:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 15:26:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 15:26:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 15:26:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 15:26:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 15:26:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b8233cd: startup date [Tue Jul 16 15:25:38 CST 2019]; root of context hierarchy
2019-07-16 15:26:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 15:26:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 15:26:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 15:26:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 15:26:15 -Registering beans for JMX exposure on startup
2019-07-16 15:26:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 15:26:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 15:26:15 -Starting beans in phase 2147483647
2019-07-16 15:26:15 -Context refreshed
2019-07-16 15:26:15 -Found 1 custom documentation plugin(s)
2019-07-16 15:26:15 -Scanning for api listing references
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_1
2019-07-16 15:26:17 -Generating unique operation named: addUsingGET_1
2019-07-16 15:26:17 -Generating unique operation named: editUsingGET_1
2019-07-16 15:26:17 -Generating unique operation named: listUsingGET_1
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_2
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_3
2019-07-16 15:26:17 -Generating unique operation named: saveUsingPOST_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingGET_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPOST_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPUT_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 15:26:17 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 15:26:17 -Generating unique operation named: addUsingGET_2
2019-07-16 15:26:17 -Generating unique operation named: editUsingGET_2
2019-07-16 15:26:17 -Generating unique operation named: listUsingGET_2
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_4
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_5
2019-07-16 15:26:17 -Generating unique operation named: saveUsingPOST_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPOST_2
2019-07-16 15:26:17 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 15:26:17 -Generating unique operation named: addUsingGET_3
2019-07-16 15:26:17 -Generating unique operation named: editUsingGET_3
2019-07-16 15:26:17 -Generating unique operation named: listUsingGET_3
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_6
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_7
2019-07-16 15:26:17 -Generating unique operation named: saveUsingPOST_3
2019-07-16 15:26:17 -Generating unique operation named: updateUsingGET_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPOST_3
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPUT_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 15:26:17 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 15:26:17 -Generating unique operation named: addUsingGET_4
2019-07-16 15:26:17 -Generating unique operation named: editUsingGET_4
2019-07-16 15:26:17 -Generating unique operation named: listUsingGET_4
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_8
2019-07-16 15:26:17 -Generating unique operation named: removeUsingPOST_9
2019-07-16 15:26:17 -Generating unique operation named: saveUsingPOST_4
2019-07-16 15:26:17 -Generating unique operation named: updateUsingGET_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPUT_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 15:26:18 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 15:26:18 -Generating unique operation named: ElecUsingGET_1
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_5
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_5
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_5
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_10
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_11
2019-07-16 15:26:18 -Generating unique operation named: saveUsingPOST_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingGET_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPUT_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 15:26:18 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_6
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_6
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_6
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_7
2019-07-16 15:26:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_7
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_12
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_13
2019-07-16 15:26:18 -Generating unique operation named: saveUsingPOST_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingGET_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPUT_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 15:26:18 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 15:26:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_7
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_8
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_8
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_14
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_15
2019-07-16 15:26:18 -Generating unique operation named: saveUsingPOST_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingGET_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_8
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPUT_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 15:26:18 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_8
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_9
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_9
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_16
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_17
2019-07-16 15:26:18 -Generating unique operation named: saveUsingPOST_8
2019-07-16 15:26:18 -Generating unique operation named: updateUsingGET_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_9
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPUT_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 15:26:18 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_9
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_10
2019-07-16 15:26:18 -Generating unique operation named: infoUsingGET_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingPOST_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingPUT_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 15:26:18 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_10
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_18
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_19
2019-07-16 15:26:18 -Generating unique operation named: saveUsingPOST_9
2019-07-16 15:26:18 -Generating unique operation named: updateUsingPOST_10
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_11
2019-07-16 15:26:18 -Generating unique operation named: removeUsingPOST_20
2019-07-16 15:26:18 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 15:26:18 -Generating unique operation named: addUsingGET_10
2019-07-16 15:26:18 -Generating unique operation named: editUsingGET_11
2019-07-16 15:26:18 -Generating unique operation named: listUsingGET_12
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_21
2019-07-16 15:26:19 -Generating unique operation named: saveUsingPOST_10
2019-07-16 15:26:19 -Generating unique operation named: treeUsingGET_1
2019-07-16 15:26:19 -Generating unique operation named: treeUsingGET_2
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPOST_11
2019-07-16 15:26:19 -Generating unique operation named: addUsingGET_11
2019-07-16 15:26:19 -Generating unique operation named: editUsingGET_12
2019-07-16 15:26:19 -Generating unique operation named: listUsingGET_13
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_22
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_23
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPOST_12
2019-07-16 15:26:19 -Generating unique operation named: addUsingGET_12
2019-07-16 15:26:19 -Generating unique operation named: editUsingGET_13
2019-07-16 15:26:19 -Generating unique operation named: listUsingGET_14
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_24
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_25
2019-07-16 15:26:19 -Generating unique operation named: saveUsingPOST_11
2019-07-16 15:26:19 -Generating unique operation named: updateUsingGET_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPOST_13
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPUT_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 15:26:19 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 15:26:19 -Generating unique operation named: addUsingGET_13
2019-07-16 15:26:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 15:26:19 -Generating unique operation named: editUsingGET_14
2019-07-16 15:26:19 -Generating unique operation named: listUsingGET_15
2019-07-16 15:26:19 -Generating unique operation named: printEditUsingGET_1
2019-07-16 15:26:19 -Generating unique operation named: removeUsingPOST_26
2019-07-16 15:26:19 -Generating unique operation named: saveUsingPOST_12
2019-07-16 15:26:19 -Generating unique operation named: updateUsingGET_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPOST_14
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPUT_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 15:26:19 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 15:26:19 -Generating unique operation named: addUsingGET_14
2019-07-16 15:26:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 15:26:19 -Generating unique operation named: editUsingGET_15
2019-07-16 15:26:19 -Generating unique operation named: listUsingGET_16
2019-07-16 15:26:19 -Generating unique operation named: saveUsingPOST_13
2019-07-16 15:26:19 -Generating unique operation named: saveUsingPOST_14
2019-07-16 15:26:19 -Generating unique operation named: updateUsingPOST_15
2019-07-16 15:26:19 -Generating unique operation named: listUsingGET_17
2019-07-16 15:26:19 -Generating unique operation named: listUsingHEAD_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingPOST_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingPUT_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingPATCH_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingDELETE_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 15:26:19 -Generating unique operation named: listUsingTRACE_1
2019-07-16 15:26:19 -Generating unique operation named: countDDUsingGET_1
2019-07-16 15:26:19 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 15:26:19 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 15:26:20 -Generating unique operation named: addUsingGET_15
2019-07-16 15:26:20 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 15:26:20 -Generating unique operation named: editUsingGET_16
2019-07-16 15:26:20 -Generating unique operation named: listUsingGET_18
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_27
2019-07-16 15:26:20 -Generating unique operation named: saveUsingPOST_15
2019-07-16 15:26:20 -Generating unique operation named: treeUsingGET_3
2019-07-16 15:26:20 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPOST_16
2019-07-16 15:26:20 -Generating unique operation named: addUsingGET_16
2019-07-16 15:26:20 -Generating unique operation named: editUsingGET_17
2019-07-16 15:26:20 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 15:26:20 -Generating unique operation named: listUsingGET_19
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_28
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_29
2019-07-16 15:26:20 -Generating unique operation named: saveUsingPOST_16
2019-07-16 15:26:20 -Generating unique operation named: updateUsingGET_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPOST_17
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPUT_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 15:26:20 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 15:26:20 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 15:26:20 -Generating unique operation named: addUsingGET_17
2019-07-16 15:26:20 -Generating unique operation named: editUsingGET_18
2019-07-16 15:26:20 -Generating unique operation named: listUsingGET_20
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_30
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_31
2019-07-16 15:26:20 -Generating unique operation named: saveUsingPOST_17
2019-07-16 15:26:20 -Generating unique operation named: updateUsingGET_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPOST_18
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPUT_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 15:26:20 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 15:26:20 -Generating unique operation named: addUsingGET_18
2019-07-16 15:26:20 -Generating unique operation named: editUsingGET_19
2019-07-16 15:26:20 -Generating unique operation named: listUsingGET_21
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_32
2019-07-16 15:26:20 -Generating unique operation named: removeUsingPOST_33
2019-07-16 15:26:20 -Generating unique operation named: saveUsingPOST_18
2019-07-16 15:26:20 -Generating unique operation named: updateUsingGET_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPOST_19
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPUT_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 15:26:20 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 15:26:20 -Starting Quartz Scheduler now
2019-07-16 15:26:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 15:26:20 -Starting...
2019-07-16 15:26:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 15:26:20 -Started.
2019-07-16 15:26:20 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 15:26:21 -Using a shared selector for servlet write/read
2019-07-16 15:26:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 15:26:21 -Started BootdoApplication in 45.623 seconds (JVM running for 47.246)
2019-07-16 15:26:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 15:26:22 -==> Parameters: 
2019-07-16 15:26:22 -<==      Total: 1
2019-07-16 15:27:10 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 15:57:10 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-07-16 16:07:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 16:07:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 16:07:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 138 ms
2019-07-16 16:07:25 -Enabling session validation scheduler...
2019-07-16 16:07:25 -请求地址 : http://localhost:8081/login;JSESSIONID=55bc7f3b-0080-48ed-ad80-96f49547e665
2019-07-16 16:07:25 -请求地址 : http://localhost:8081/login;JSESSIONID=c805c1f5-d351-4e1a-86a5-3b02d5d691cb
2019-07-16 16:07:25 -HTTP METHOD : GET
2019-07-16 16:07:25 -HTTP METHOD : GET
2019-07-16 16:07:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:07:25 -参数 : [{}]
2019-07-16 16:07:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:07:25 -参数 : [{}]
2019-07-16 16:07:25 -耗时 : 6
2019-07-16 16:07:25 -耗时 : 6
2019-07-16 16:07:25 -返回值 : login
2019-07-16 16:07:25 -返回值 : login
2019-07-16 16:07:27 -请求地址 : http://localhost:8081/login;JSESSIONID=55bc7f3b-0080-48ed-ad80-96f49547e665
2019-07-16 16:07:27 -HTTP METHOD : GET
2019-07-16 16:07:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:07:27 -参数 : [{}]
2019-07-16 16:07:27 -耗时 : 0
2019-07-16 16:07:27 -返回值 : login
2019-07-16 16:07:28 -请求地址 : http://localhost:8081/getVerify
2019-07-16 16:07:28 -HTTP METHOD : GET
2019-07-16 16:07:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 16:07:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@46bbf469, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47f374f5]
2019-07-16 16:07:33 -0576
2019-07-16 16:07:34 -耗时 : 5913
2019-07-16 16:07:34 -返回值 : null
2019-07-16 16:14:40 -请求地址 : http://localhost:8081/login;JSESSIONID=2a4de7e0-d246-47d9-ad0d-4c07f08ee293
2019-07-16 16:14:40 -HTTP METHOD : GET
2019-07-16 16:14:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:14:40 -参数 : [{}]
2019-07-16 16:14:40 -耗时 : 0
2019-07-16 16:14:40 -返回值 : login
2019-07-16 16:14:43 -请求地址 : http://localhost:8081/getVerify
2019-07-16 16:14:43 -HTTP METHOD : GET
2019-07-16 16:14:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 16:14:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@79459b6a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@747f89d6]
2019-07-16 16:14:43 -9923
2019-07-16 16:14:43 -耗时 : 23
2019-07-16 16:14:43 -返回值 : null
2019-07-16 16:14:50 -请求地址 : http://localhost:8081/login
2019-07-16 16:14:50 -HTTP METHOD : POST
2019-07-16 16:14:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 16:14:50 -参数 : [admin, 111111, 9923, org.apache.shiro.web.servlet.ShiroHttpServletRequest@53c26b33]
2019-07-16 16:14:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 16:14:50 -==> Parameters: admin(String)
2019-07-16 16:14:51 -<==      Total: 1
2019-07-16 16:14:51 -耗时 : 720
2019-07-16 16:14:51 -返回值 : {msg=操作成功, code=0}
2019-07-16 16:14:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 16:14:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:14:51 -==> Parameters: 1(Long), admin(String), 登录(String), 720(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 16:14:51.829(Timestamp)
2019-07-16 16:14:52 -请求地址 : http://localhost:8081/index
2019-07-16 16:14:52 -HTTP METHOD : GET
2019-07-16 16:14:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 16:14:52 -参数 : [{}]
2019-07-16 16:14:52 -<==    Updates: 1
2019-07-16 16:14:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 16:14:53 -==> Parameters: 1(Long)
2019-07-16 16:14:53 -<==      Total: 51
2019-07-16 16:14:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 16:14:53 -==> Parameters: 138(Long)
2019-07-16 16:14:53 -<==      Total: 1
2019-07-16 16:14:53 -耗时 : 1613
2019-07-16 16:14:53 -返回值 : index_v1
2019-07-16 16:14:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:14:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1613(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 16:14:53.985(Timestamp)
2019-07-16 16:14:54 -请求地址 : http://localhost:8081/main
2019-07-16 16:14:54 -HTTP METHOD : GET
2019-07-16 16:14:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:14:54 -参数 : []
2019-07-16 16:14:54 -耗时 : 0
2019-07-16 16:14:54 -返回值 : main
2019-07-16 16:14:55 -<==    Updates: 1
2019-07-16 16:14:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 16:14:55 -HTTP METHOD : GET
2019-07-16 16:14:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 16:14:55 -参数 : []
2019-07-16 16:14:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 16:14:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 16:14:55 -请求地址 : http://localhost:8081/main
2019-07-16 16:14:55 -HTTP METHOD : GET
2019-07-16 16:14:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:14:55 -参数 : []
2019-07-16 16:14:55 -耗时 : 0
2019-07-16 16:14:55 -返回值 : main
2019-07-16 16:14:57 -<==      Total: 0
2019-07-16 16:14:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 16:14:57 -==> Parameters: 1(Long), 0(String)
2019-07-16 16:14:57 -<==      Total: 1
2019-07-16 16:14:57 -耗时 : 1863
2019-07-16 16:14:57 -返回值 : com.bootdo.common.utils.PageUtils@2084dd0e
2019-07-16 16:15:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 16:15:13 -==> Parameters: 1(Long)
2019-07-16 16:15:13 -<==      Total: 95
2019-07-16 16:15:13 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 16:15:13 -HTTP METHOD : GET
2019-07-16 16:15:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 16:15:13 -参数 : []
2019-07-16 16:15:13 -耗时 : 1
2019-07-16 16:15:13 -返回值 : moneyList/moneyList
2019-07-16 16:15:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 16:15:19 -HTTP METHOD : GET
2019-07-16 16:15:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 16:15:19 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 16:15:19 -耗时 : 1
2019-07-16 16:15:19 -返回值 : system/dept/deptTree
2019-07-16 16:15:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 16:15:19 -HTTP METHOD : GET
2019-07-16 16:15:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 16:15:19 -参数 : []
2019-07-16 16:15:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 16:15:19 -==> Parameters: 
2019-07-16 16:15:19 -<==      Total: 3
2019-07-16 16:15:19 -耗时 : 89
2019-07-16 16:15:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 16:15:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:15:22 -HTTP METHOD : POST
2019-07-16 16:15:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:15:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d4d87c8]
2019-07-16 16:15:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:15:22 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:15:22 -<==      Total: 3
2019-07-16 16:15:22 -耗时 : 473
2019-07-16 16:15:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@687f2029, com.bootdo.moneyList.damain.MoneyListDO@6425723f, com.bootdo.moneyList.damain.MoneyListDO@2412ff46]
2019-07-16 16:15:23 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:15:23 -HTTP METHOD : POST
2019-07-16 16:15:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:15:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40a594d9]
2019-07-16 16:15:23 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:15:23 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:15:23 -<==      Total: 3
2019-07-16 16:15:23 -耗时 : 31
2019-07-16 16:15:23 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6e5f8c73, com.bootdo.moneyList.damain.MoneyListDO@1d307ce0, com.bootdo.moneyList.damain.MoneyListDO@7d6a7510]
2019-07-16 16:15:27 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 16:15:27 -HTTP METHOD : POST
2019-07-16 16:15:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 16:15:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7c001dab]
2019-07-16 16:15:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:15:27 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:15:27 -<==      Total: 3
2019-07-16 16:15:27 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:15:27 -<==      Total: 1
2019-07-16 16:15:27 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:15:27 -<==      Total: 1
2019-07-16 16:15:27 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:15:27 -<==      Total: 0
2019-07-16 16:15:27 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:15:27 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:15:27 -<==    Updates: 1
2019-07-16 16:15:27 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 16:15:27.178(Timestamp), 2019-06(String), admin(String), 2019-07-16 16:15:27.179(Timestamp), admin(String), null
2019-07-16 16:15:27 -<==    Updates: 1
2019-07-16 16:15:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), null
2019-07-16 16:15:27 -<==      Total: 0
2019-07-16 16:15:27 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:15:27 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 300.57(BigDecimal), 50(BigDecimal), null, null, null, null, 2019-07-16 16:15:27.867(Timestamp), 2019-06(String), admin(String), 2019-07-16 16:15:27.867(Timestamp), admin(String), null
2019-07-16 16:15:27 -<==    Updates: 1
2019-07-16 16:15:27 -耗时 : 827
2019-07-16 16:15:27 -返回值 : 1600
2019-07-16 16:15:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:15:29 -HTTP METHOD : POST
2019-07-16 16:15:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:15:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@48857171]
2019-07-16 16:15:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:15:29 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:15:29 -<==      Total: 3
2019-07-16 16:15:29 -耗时 : 34
2019-07-16 16:15:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6022e0e0, com.bootdo.moneyList.damain.MoneyListDO@d7a4c04, com.bootdo.moneyList.damain.MoneyListDO@2547e146]
2019-07-16 16:15:30 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001
2019-07-16 16:15:30 -HTTP METHOD : GET
2019-07-16 16:15:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-16 16:15:30 -参数 : [1600, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@2cee9e77, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@2cee9e77]
2019-07-16 16:15:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-16 16:15:30 -==> Parameters: 1600(Long)
2019-07-16 16:15:30 -<==      Total: 1
2019-07-16 16:15:30 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:386)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:375)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$42d9e6bd.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 16:15:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:15:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-16 16:15:30.541(Timestamp)
2019-07-16 16:15:30 -<==    Updates: 1
2019-07-16 16:20:57 -Starting BootdoApplication on PC-201905091110 with PID 50592 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 16:20:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 16:20:57 -The following profiles are active: dev
2019-07-16 16:20:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Jul 16 16:20:58 CST 2019]; root of context hierarchy
2019-07-16 16:21:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 16:21:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92ba6eb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$85139d58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 16:21:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 16:21:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:11 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:21:13 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 16:21:13 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 16:21:13 -Starting service [Tomcat]
2019-07-16 16:21:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 16:21:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 16:21:13 -Initializing Spring embedded WebApplicationContext
2019-07-16 16:21:13 -Root WebApplicationContext: initialization completed in 15724 ms
2019-07-16 16:21:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 16:21:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 16:21:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 16:21:14 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 16:21:14 -Filter xssFilter was not registered (disabled)
2019-07-16 16:21:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 16:21:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 16:21:15 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 16:21:15 -Servlet dispatcherServlet mapped to [/]
2019-07-16 16:21:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Jul 16 16:20:58 CST 2019]; root of context hierarchy
2019-07-16 16:21:20 -Using default implementation for ThreadExecutor
2019-07-16 16:21:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 16:21:20 -Quartz Scheduler v.2.3.0 created.
2019-07-16 16:21:20 -RAMJobStore initialized.
2019-07-16 16:21:20 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 16:21:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 16:21:20 -Quartz scheduler version: 2.3.0
2019-07-16 16:21:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1e9d721
2019-07-16 16:21:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 16:21:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 16:21:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 16:21:25 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 16:21:25 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 16:21:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 16:21:25 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 16:21:25 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 16:21:25 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 16:21:25 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 16:21:25 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 16:21:25 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 16:21:25 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 16:21:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 16:21:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 16:21:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 16:21:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 16:21:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 16:21:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 16:21:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 16:21:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 16:21:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 16:21:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 16:21:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 16:21:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 16:21:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 16:21:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 16:21:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 16:21:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 16:21:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 16:21:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 16:21:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 16:21:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 16:21:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 16:21:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 16:21:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 16:21:25 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 16:21:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 16:21:25 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 16:21:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 16:21:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 16:21:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 16:21:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 16:21:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 16:21:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 16:21:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 16:21:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 16:21:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 16:21:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 16:21:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 16:21:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 16:21:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 16:21:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 16:21:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 16:21:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 16:21:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 16:21:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 16:21:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 16:21:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 16:21:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 16:21:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 16:21:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 16:21:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 16:21:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 16:21:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 16:21:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 16:21:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 16:21:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 16:21:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 16:21:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 16:21:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 16:21:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 16:21:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 16:21:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 16:21:25 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 16:21:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:21:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 16:21:25 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:21:25 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 16:21:25 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:21:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:21:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 16:21:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 16:21:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 16:21:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 16:21:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 16:21:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 16:21:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:21:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Tue Jul 16 16:20:58 CST 2019]; root of context hierarchy
2019-07-16 16:21:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:21:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:21:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 16:21:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 16:21:30 -Registering beans for JMX exposure on startup
2019-07-16 16:21:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 16:21:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 16:21:30 -Starting beans in phase 2147483647
2019-07-16 16:21:30 -Context refreshed
2019-07-16 16:21:31 -Found 1 custom documentation plugin(s)
2019-07-16 16:21:31 -Scanning for api listing references
2019-07-16 16:21:31 -Generating unique operation named: removeUsingPOST_1
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_2
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_3
2019-07-16 16:21:32 -Generating unique operation named: saveUsingPOST_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPUT_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 16:21:32 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_2
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_2
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_2
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_4
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_5
2019-07-16 16:21:32 -Generating unique operation named: saveUsingPOST_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_2
2019-07-16 16:21:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_3
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_3
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_3
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_6
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_7
2019-07-16 16:21:32 -Generating unique operation named: saveUsingPOST_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingGET_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPUT_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 16:21:32 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_4
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_4
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_4
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_8
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_9
2019-07-16 16:21:32 -Generating unique operation named: saveUsingPOST_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingGET_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPUT_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 16:21:32 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 16:21:32 -Generating unique operation named: ElecUsingGET_1
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_5
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_5
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_5
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_10
2019-07-16 16:21:32 -Generating unique operation named: removeUsingPOST_11
2019-07-16 16:21:32 -Generating unique operation named: saveUsingPOST_5
2019-07-16 16:21:32 -Generating unique operation named: updateUsingGET_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_5
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPUT_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 16:21:32 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_6
2019-07-16 16:21:32 -Generating unique operation named: listUsingGET_6
2019-07-16 16:21:32 -Generating unique operation named: updateUsingPOST_6
2019-07-16 16:21:32 -Generating unique operation named: addUsingGET_6
2019-07-16 16:21:32 -Generating unique operation named: editUsingGET_7
2019-07-16 16:21:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_7
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_12
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_13
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingGET_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPUT_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 16:21:33 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 16:21:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_7
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_8
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_8
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_14
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_15
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingGET_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPUT_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 16:21:33 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_8
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_9
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_9
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_16
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_17
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingGET_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_9
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPUT_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 16:21:33 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_9
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_10
2019-07-16 16:21:33 -Generating unique operation named: infoUsingGET_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingPOST_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingPUT_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 16:21:33 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_10
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_18
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_19
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_9
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_10
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_11
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_20
2019-07-16 16:21:33 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_10
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_11
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_12
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_21
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_10
2019-07-16 16:21:33 -Generating unique operation named: treeUsingGET_1
2019-07-16 16:21:33 -Generating unique operation named: treeUsingGET_2
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_11
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_11
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_12
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_13
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_22
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_23
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_12
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_12
2019-07-16 16:21:33 -Generating unique operation named: editUsingGET_13
2019-07-16 16:21:33 -Generating unique operation named: listUsingGET_14
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_24
2019-07-16 16:21:33 -Generating unique operation named: removeUsingPOST_25
2019-07-16 16:21:33 -Generating unique operation named: saveUsingPOST_11
2019-07-16 16:21:33 -Generating unique operation named: updateUsingGET_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPOST_13
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPUT_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 16:21:33 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 16:21:33 -Generating unique operation named: addUsingGET_13
2019-07-16 16:21:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_14
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_15
2019-07-16 16:21:34 -Generating unique operation named: printEditUsingGET_1
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_26
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingGET_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_14
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPUT_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 16:21:34 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 16:21:34 -Generating unique operation named: addUsingGET_14
2019-07-16 16:21:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_15
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_16
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_13
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_14
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_15
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_17
2019-07-16 16:21:34 -Generating unique operation named: listUsingHEAD_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingPOST_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingPUT_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingPATCH_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingDELETE_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 16:21:34 -Generating unique operation named: listUsingTRACE_1
2019-07-16 16:21:34 -Generating unique operation named: countDDUsingGET_1
2019-07-16 16:21:34 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 16:21:34 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 16:21:34 -Generating unique operation named: addUsingGET_15
2019-07-16 16:21:34 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_16
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_18
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_27
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_15
2019-07-16 16:21:34 -Generating unique operation named: treeUsingGET_3
2019-07-16 16:21:34 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_16
2019-07-16 16:21:34 -Generating unique operation named: addUsingGET_16
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_17
2019-07-16 16:21:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_19
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_28
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_29
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_16
2019-07-16 16:21:34 -Generating unique operation named: updateUsingGET_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_17
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPUT_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 16:21:34 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 16:21:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 16:21:34 -Generating unique operation named: addUsingGET_17
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_18
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_20
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_30
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_31
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_17
2019-07-16 16:21:34 -Generating unique operation named: updateUsingGET_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_18
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPUT_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 16:21:34 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 16:21:34 -Generating unique operation named: addUsingGET_18
2019-07-16 16:21:34 -Generating unique operation named: editUsingGET_19
2019-07-16 16:21:34 -Generating unique operation named: listUsingGET_21
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_32
2019-07-16 16:21:34 -Generating unique operation named: removeUsingPOST_33
2019-07-16 16:21:34 -Generating unique operation named: saveUsingPOST_18
2019-07-16 16:21:34 -Generating unique operation named: updateUsingGET_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPOST_19
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPUT_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 16:21:34 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 16:21:34 -Starting Quartz Scheduler now
2019-07-16 16:21:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 16:21:34 -Starting...
2019-07-16 16:21:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 16:21:34 -Started.
2019-07-16 16:21:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 16:21:35 -Using a shared selector for servlet write/read
2019-07-16 16:21:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 16:21:35 -Started BootdoApplication in 39.537 seconds (JVM running for 41.209)
2019-07-16 16:21:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 16:21:35 -==> Parameters: 
2019-07-16 16:21:36 -<==      Total: 1
2019-07-16 16:22:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-16 16:29:46 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 16:29:46 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 16:29:46 -FrameworkServlet 'dispatcherServlet': initialization completed in 191 ms
2019-07-16 16:29:46 -Enabling session validation scheduler...
2019-07-16 16:29:47 -请求地址 : http://localhost:8081/login;JSESSIONID=6a686f2a-7ecc-4220-912e-c2628e24e9d0
2019-07-16 16:29:47 -HTTP METHOD : GET
2019-07-16 16:29:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:29:47 -参数 : [{}]
2019-07-16 16:29:47 -耗时 : 4
2019-07-16 16:29:47 -返回值 : login
2019-07-16 16:29:50 -请求地址 : http://localhost:8081/getVerify
2019-07-16 16:29:50 -HTTP METHOD : GET
2019-07-16 16:29:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 16:29:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11601abe, org.apache.shiro.web.servlet.ShiroHttpServletResponse@546286f6]
2019-07-16 16:30:04 -请求地址 : http://localhost:8081/login
2019-07-16 16:30:04 -HTTP METHOD : POST
2019-07-16 16:30:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 16:30:04 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d9819ba]
2019-07-16 16:30:04 -耗时 : 10
2019-07-16 16:30:04 -返回值 : {msg=请输入验证码, code=500}
2019-07-16 16:30:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 16:30:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:30:05 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 16:30:04.971(Timestamp)
2019-07-16 16:30:05 -<==    Updates: 1
2019-07-16 16:30:07 -0158
2019-07-16 16:30:09 -耗时 : 18905
2019-07-16 16:30:09 -返回值 : null
2019-07-16 16:30:09 -请求地址 : http://localhost:8081/login
2019-07-16 16:30:09 -HTTP METHOD : GET
2019-07-16 16:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:30:09 -参数 : [{}]
2019-07-16 16:30:09 -耗时 : 0
2019-07-16 16:30:09 -返回值 : login
2019-07-16 16:30:44 -请求地址 : http://localhost:8081/login
2019-07-16 16:30:44 -HTTP METHOD : POST
2019-07-16 16:30:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 16:30:44 -参数 : [admin, 111111, 0158, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ad7247]
2019-07-16 16:30:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 16:30:44 -==> Parameters: admin(String)
2019-07-16 16:30:44 -<==      Total: 1
2019-07-16 16:30:44 -耗时 : 251
2019-07-16 16:30:44 -返回值 : {msg=操作成功, code=0}
2019-07-16 16:30:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:30:44 -==> Parameters: 1(Long), admin(String), 登录(String), 251(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 16:30:44.329(Timestamp)
2019-07-16 16:30:44 -请求地址 : http://localhost:8081/index
2019-07-16 16:30:44 -HTTP METHOD : GET
2019-07-16 16:30:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 16:30:44 -参数 : [{}]
2019-07-16 16:30:44 -<==    Updates: 1
2019-07-16 16:30:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 16:30:45 -==> Parameters: 1(Long)
2019-07-16 16:30:45 -<==      Total: 51
2019-07-16 16:30:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 16:30:45 -==> Parameters: 138(Long)
2019-07-16 16:30:45 -<==      Total: 1
2019-07-16 16:30:45 -耗时 : 935
2019-07-16 16:30:45 -返回值 : index_v1
2019-07-16 16:30:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:30:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 935(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 16:30:45.45(Timestamp)
2019-07-16 16:30:45 -<==    Updates: 1
2019-07-16 16:30:45 -请求地址 : http://localhost:8081/main
2019-07-16 16:30:45 -HTTP METHOD : GET
2019-07-16 16:30:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:30:45 -参数 : []
2019-07-16 16:30:45 -耗时 : 1
2019-07-16 16:30:45 -返回值 : main
2019-07-16 16:30:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 16:30:46 -HTTP METHOD : GET
2019-07-16 16:30:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 16:30:46 -参数 : []
2019-07-16 16:30:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 16:30:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 16:30:46 -请求地址 : http://localhost:8081/main
2019-07-16 16:30:46 -HTTP METHOD : GET
2019-07-16 16:30:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:30:46 -参数 : []
2019-07-16 16:30:46 -耗时 : 0
2019-07-16 16:30:46 -返回值 : main
2019-07-16 16:30:46 -<==      Total: 0
2019-07-16 16:30:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 16:30:46 -==> Parameters: 1(Long), 0(String)
2019-07-16 16:30:46 -<==      Total: 1
2019-07-16 16:30:46 -耗时 : 550
2019-07-16 16:30:46 -返回值 : com.bootdo.common.utils.PageUtils@283070fb
2019-07-16 16:31:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 16:31:03 -==> Parameters: 1(Long)
2019-07-16 16:31:03 -<==      Total: 95
2019-07-16 16:31:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 16:31:03 -HTTP METHOD : GET
2019-07-16 16:31:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 16:31:03 -参数 : []
2019-07-16 16:31:03 -耗时 : 0
2019-07-16 16:31:03 -返回值 : moneyList/moneyList
2019-07-16 16:31:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 16:31:05 -HTTP METHOD : GET
2019-07-16 16:31:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 16:31:05 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 16:31:05 -耗时 : 1
2019-07-16 16:31:05 -返回值 : system/dept/deptTree
2019-07-16 16:31:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 16:31:05 -HTTP METHOD : GET
2019-07-16 16:31:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 16:31:05 -参数 : []
2019-07-16 16:31:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 16:31:05 -==> Parameters: 
2019-07-16 16:31:05 -<==      Total: 3
2019-07-16 16:31:05 -耗时 : 95
2019-07-16 16:31:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 16:31:11 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:31:11 -HTTP METHOD : POST
2019-07-16 16:31:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:31:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@395855bf]
2019-07-16 16:31:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:31:11 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:31:11 -<==      Total: 3
2019-07-16 16:31:11 -耗时 : 272
2019-07-16 16:31:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@52d8e4e0, com.bootdo.moneyList.damain.MoneyListDO@6bfb024e, com.bootdo.moneyList.damain.MoneyListDO@4ace4477]
2019-07-16 16:31:15 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 16:31:15 -HTTP METHOD : POST
2019-07-16 16:31:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 16:31:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@68b14512]
2019-07-16 16:31:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:31:15 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:31:15 -<==      Total: 3
2019-07-16 16:31:15 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 16:31:15 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:31:15 -<==      Total: 1
2019-07-16 16:31:15 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 16:31:15 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:31:15 -<==      Total: 1
2019-07-16 16:31:15 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 16:31:15 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:31:15 -<==      Total: 0
2019-07-16 16:31:15 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:31:15 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:31:15 -<==    Updates: 1
2019-07-16 16:31:15 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:31:15 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 16:31:15.068(Timestamp), 2019-06(String), admin(String), 2019-07-16 16:31:15.068(Timestamp), admin(String), null
2019-07-16 16:31:15 -<==    Updates: 1
2019-07-16 16:31:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-16 16:31:15 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-16 16:31:15.068(Timestamp)
2019-07-16 16:31:15 -<==      Total: 1
2019-07-16 16:31:15 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-16 16:31:15 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 350.57(BigDecimal), 50(BigDecimal), 1600(Long)
2019-07-16 16:31:15 -<==    Updates: 1
2019-07-16 16:31:15 -耗时 : 783
2019-07-16 16:31:15 -返回值 : 1600
2019-07-16 16:31:17 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:31:17 -HTTP METHOD : POST
2019-07-16 16:31:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:31:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c4db87c]
2019-07-16 16:31:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:31:17 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:31:17 -<==      Total: 3
2019-07-16 16:31:17 -耗时 : 33
2019-07-16 16:31:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@324706e3, com.bootdo.moneyList.damain.MoneyListDO@5ddbc8ce, com.bootdo.moneyList.damain.MoneyListDO@5c540551]
2019-07-16 16:31:18 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001
2019-07-16 16:31:18 -HTTP METHOD : GET
2019-07-16 16:31:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-16 16:31:18 -参数 : [1600, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@26bb96aa, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@26bb96aa]
2019-07-16 16:31:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-16 16:31:18 -==> Parameters: 1600(Long)
2019-07-16 16:31:18 -<==      Total: 1
2019-07-16 16:31:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:31:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-16 16:31:18.708(Timestamp)
2019-07-16 16:31:18 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$a46faf1f.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 16:31:18 -<==    Updates: 1
2019-07-16 16:34:33 -Starting BootdoApplication on PC-201905091110 with PID 8076 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 16:34:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 16:34:33 -The following profiles are active: dev
2019-07-16 16:34:33 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7829b776: startup date [Tue Jul 16 16:34:33 CST 2019]; root of context hierarchy
2019-07-16 16:34:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 16:34:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$52c07187] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4519a02e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 16:34:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 16:34:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 16:34:49 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 16:34:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 16:34:49 -Starting service [Tomcat]
2019-07-16 16:34:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 16:34:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 16:34:49 -Initializing Spring embedded WebApplicationContext
2019-07-16 16:34:49 -Root WebApplicationContext: initialization completed in 15885 ms
2019-07-16 16:34:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 16:34:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 16:34:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 16:34:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 16:34:51 -Filter xssFilter was not registered (disabled)
2019-07-16 16:34:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 16:34:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 16:34:51 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 16:34:51 -Servlet dispatcherServlet mapped to [/]
2019-07-16 16:34:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7829b776: startup date [Tue Jul 16 16:34:33 CST 2019]; root of context hierarchy
2019-07-16 16:34:58 -Using default implementation for ThreadExecutor
2019-07-16 16:34:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 16:34:58 -Quartz Scheduler v.2.3.0 created.
2019-07-16 16:34:58 -RAMJobStore initialized.
2019-07-16 16:34:58 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 16:34:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 16:34:58 -Quartz scheduler version: 2.3.0
2019-07-16 16:34:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@283ecb4b
2019-07-16 16:34:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 16:34:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 16:35:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 16:35:04 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 16:35:04 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 16:35:04 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 16:35:04 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 16:35:04 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 16:35:04 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 16:35:04 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 16:35:04 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 16:35:04 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 16:35:04 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 16:35:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 16:35:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 16:35:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 16:35:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 16:35:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 16:35:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 16:35:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 16:35:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 16:35:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 16:35:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 16:35:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 16:35:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 16:35:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 16:35:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 16:35:04 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 16:35:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 16:35:04 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 16:35:04 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 16:35:04 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 16:35:04 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 16:35:04 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 16:35:04 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 16:35:04 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 16:35:04 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 16:35:04 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 16:35:04 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 16:35:04 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 16:35:04 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 16:35:04 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 16:35:04 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 16:35:04 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 16:35:04 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 16:35:04 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 16:35:04 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 16:35:04 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 16:35:04 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 16:35:04 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 16:35:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 16:35:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 16:35:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 16:35:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 16:35:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 16:35:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 16:35:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 16:35:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 16:35:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 16:35:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 16:35:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 16:35:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 16:35:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 16:35:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 16:35:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 16:35:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 16:35:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 16:35:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 16:35:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 16:35:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 16:35:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 16:35:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 16:35:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 16:35:04 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 16:35:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 16:35:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 16:35:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 16:35:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 16:35:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 16:35:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 16:35:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 16:35:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 16:35:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 16:35:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 16:35:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 16:35:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 16:35:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:35:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7829b776: startup date [Tue Jul 16 16:34:33 CST 2019]; root of context hierarchy
2019-07-16 16:35:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:35:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 16:35:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 16:35:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 16:35:12 -Registering beans for JMX exposure on startup
2019-07-16 16:35:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 16:35:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 16:35:12 -Starting beans in phase 2147483647
2019-07-16 16:35:12 -Context refreshed
2019-07-16 16:35:12 -Found 1 custom documentation plugin(s)
2019-07-16 16:35:12 -Scanning for api listing references
2019-07-16 16:35:13 -Generating unique operation named: removeUsingPOST_1
2019-07-16 16:35:13 -Generating unique operation named: addUsingGET_1
2019-07-16 16:35:13 -Generating unique operation named: editUsingGET_1
2019-07-16 16:35:13 -Generating unique operation named: listUsingGET_1
2019-07-16 16:35:13 -Generating unique operation named: removeUsingPOST_2
2019-07-16 16:35:13 -Generating unique operation named: removeUsingPOST_3
2019-07-16 16:35:13 -Generating unique operation named: saveUsingPOST_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingGET_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingPOST_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingPUT_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 16:35:13 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 16:35:13 -Generating unique operation named: addUsingGET_2
2019-07-16 16:35:13 -Generating unique operation named: editUsingGET_2
2019-07-16 16:35:13 -Generating unique operation named: listUsingGET_2
2019-07-16 16:35:13 -Generating unique operation named: removeUsingPOST_4
2019-07-16 16:35:13 -Generating unique operation named: removeUsingPOST_5
2019-07-16 16:35:13 -Generating unique operation named: saveUsingPOST_2
2019-07-16 16:35:13 -Generating unique operation named: updateUsingPOST_2
2019-07-16 16:35:13 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 16:35:13 -Generating unique operation named: addUsingGET_3
2019-07-16 16:35:13 -Generating unique operation named: editUsingGET_3
2019-07-16 16:35:13 -Generating unique operation named: listUsingGET_3
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_6
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_7
2019-07-16 16:35:14 -Generating unique operation named: saveUsingPOST_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingGET_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPOST_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPUT_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 16:35:14 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 16:35:14 -Generating unique operation named: addUsingGET_4
2019-07-16 16:35:14 -Generating unique operation named: editUsingGET_4
2019-07-16 16:35:14 -Generating unique operation named: listUsingGET_4
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_8
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_9
2019-07-16 16:35:14 -Generating unique operation named: saveUsingPOST_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingGET_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPOST_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPUT_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 16:35:14 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 16:35:14 -Generating unique operation named: ElecUsingGET_1
2019-07-16 16:35:14 -Generating unique operation named: addUsingGET_5
2019-07-16 16:35:14 -Generating unique operation named: editUsingGET_5
2019-07-16 16:35:14 -Generating unique operation named: listUsingGET_5
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_10
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_11
2019-07-16 16:35:14 -Generating unique operation named: saveUsingPOST_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingGET_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPOST_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPUT_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 16:35:14 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 16:35:14 -Generating unique operation named: editUsingGET_6
2019-07-16 16:35:14 -Generating unique operation named: listUsingGET_6
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPOST_6
2019-07-16 16:35:14 -Generating unique operation named: addUsingGET_6
2019-07-16 16:35:14 -Generating unique operation named: editUsingGET_7
2019-07-16 16:35:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 16:35:14 -Generating unique operation named: listUsingGET_7
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_12
2019-07-16 16:35:14 -Generating unique operation named: removeUsingPOST_13
2019-07-16 16:35:14 -Generating unique operation named: saveUsingPOST_6
2019-07-16 16:35:14 -Generating unique operation named: updateUsingGET_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPOST_7
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPUT_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 16:35:14 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 16:35:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 16:35:15 -Generating unique operation named: addUsingGET_7
2019-07-16 16:35:15 -Generating unique operation named: editUsingGET_8
2019-07-16 16:35:15 -Generating unique operation named: listUsingGET_8
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_14
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_15
2019-07-16 16:35:15 -Generating unique operation named: saveUsingPOST_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingGET_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPOST_8
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPUT_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 16:35:15 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 16:35:15 -Generating unique operation named: addUsingGET_8
2019-07-16 16:35:15 -Generating unique operation named: editUsingGET_9
2019-07-16 16:35:15 -Generating unique operation named: listUsingGET_9
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_16
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_17
2019-07-16 16:35:15 -Generating unique operation named: saveUsingPOST_8
2019-07-16 16:35:15 -Generating unique operation named: updateUsingGET_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPOST_9
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPUT_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 16:35:15 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 16:35:15 -Generating unique operation named: addUsingGET_9
2019-07-16 16:35:15 -Generating unique operation named: editUsingGET_10
2019-07-16 16:35:15 -Generating unique operation named: infoUsingGET_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingPOST_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingPUT_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 16:35:15 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 16:35:15 -Generating unique operation named: listUsingGET_10
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_18
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_19
2019-07-16 16:35:15 -Generating unique operation named: saveUsingPOST_9
2019-07-16 16:35:15 -Generating unique operation named: updateUsingPOST_10
2019-07-16 16:35:15 -Generating unique operation named: listUsingGET_11
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_20
2019-07-16 16:35:15 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 16:35:15 -Generating unique operation named: addUsingGET_10
2019-07-16 16:35:15 -Generating unique operation named: editUsingGET_11
2019-07-16 16:35:15 -Generating unique operation named: listUsingGET_12
2019-07-16 16:35:15 -Generating unique operation named: removeUsingPOST_21
2019-07-16 16:35:15 -Generating unique operation named: saveUsingPOST_10
2019-07-16 16:35:15 -Generating unique operation named: treeUsingGET_1
2019-07-16 16:35:16 -Generating unique operation named: treeUsingGET_2
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPOST_11
2019-07-16 16:35:16 -Generating unique operation named: addUsingGET_11
2019-07-16 16:35:16 -Generating unique operation named: editUsingGET_12
2019-07-16 16:35:16 -Generating unique operation named: listUsingGET_13
2019-07-16 16:35:16 -Generating unique operation named: removeUsingPOST_22
2019-07-16 16:35:16 -Generating unique operation named: removeUsingPOST_23
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPOST_12
2019-07-16 16:35:16 -Generating unique operation named: addUsingGET_12
2019-07-16 16:35:16 -Generating unique operation named: editUsingGET_13
2019-07-16 16:35:16 -Generating unique operation named: listUsingGET_14
2019-07-16 16:35:16 -Generating unique operation named: removeUsingPOST_24
2019-07-16 16:35:16 -Generating unique operation named: removeUsingPOST_25
2019-07-16 16:35:16 -Generating unique operation named: saveUsingPOST_11
2019-07-16 16:35:16 -Generating unique operation named: updateUsingGET_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPOST_13
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPUT_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 16:35:16 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 16:35:16 -Generating unique operation named: addUsingGET_13
2019-07-16 16:35:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 16:35:16 -Generating unique operation named: editUsingGET_14
2019-07-16 16:35:16 -Generating unique operation named: listUsingGET_15
2019-07-16 16:35:16 -Generating unique operation named: printEditUsingGET_1
2019-07-16 16:35:16 -Generating unique operation named: removeUsingPOST_26
2019-07-16 16:35:16 -Generating unique operation named: saveUsingPOST_12
2019-07-16 16:35:16 -Generating unique operation named: updateUsingGET_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPOST_14
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPUT_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 16:35:16 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 16:35:16 -Generating unique operation named: addUsingGET_14
2019-07-16 16:35:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 16:35:16 -Generating unique operation named: editUsingGET_15
2019-07-16 16:35:16 -Generating unique operation named: listUsingGET_16
2019-07-16 16:35:16 -Generating unique operation named: saveUsingPOST_13
2019-07-16 16:35:16 -Generating unique operation named: saveUsingPOST_14
2019-07-16 16:35:16 -Generating unique operation named: updateUsingPOST_15
2019-07-16 16:35:16 -Generating unique operation named: listUsingGET_17
2019-07-16 16:35:16 -Generating unique operation named: listUsingHEAD_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingPOST_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingPUT_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingPATCH_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingDELETE_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 16:35:16 -Generating unique operation named: listUsingTRACE_1
2019-07-16 16:35:17 -Generating unique operation named: countDDUsingGET_1
2019-07-16 16:35:17 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 16:35:17 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 16:35:17 -Generating unique operation named: addUsingGET_15
2019-07-16 16:35:17 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 16:35:17 -Generating unique operation named: editUsingGET_16
2019-07-16 16:35:17 -Generating unique operation named: listUsingGET_18
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_27
2019-07-16 16:35:17 -Generating unique operation named: saveUsingPOST_15
2019-07-16 16:35:17 -Generating unique operation named: treeUsingGET_3
2019-07-16 16:35:17 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPOST_16
2019-07-16 16:35:17 -Generating unique operation named: addUsingGET_16
2019-07-16 16:35:17 -Generating unique operation named: editUsingGET_17
2019-07-16 16:35:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 16:35:17 -Generating unique operation named: listUsingGET_19
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_28
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_29
2019-07-16 16:35:17 -Generating unique operation named: saveUsingPOST_16
2019-07-16 16:35:17 -Generating unique operation named: updateUsingGET_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPOST_17
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPUT_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 16:35:17 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 16:35:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 16:35:17 -Generating unique operation named: addUsingGET_17
2019-07-16 16:35:17 -Generating unique operation named: editUsingGET_18
2019-07-16 16:35:17 -Generating unique operation named: listUsingGET_20
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_30
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_31
2019-07-16 16:35:17 -Generating unique operation named: saveUsingPOST_17
2019-07-16 16:35:17 -Generating unique operation named: updateUsingGET_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPOST_18
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPUT_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 16:35:17 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 16:35:17 -Generating unique operation named: addUsingGET_18
2019-07-16 16:35:17 -Generating unique operation named: editUsingGET_19
2019-07-16 16:35:17 -Generating unique operation named: listUsingGET_21
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_32
2019-07-16 16:35:17 -Generating unique operation named: removeUsingPOST_33
2019-07-16 16:35:17 -Generating unique operation named: saveUsingPOST_18
2019-07-16 16:35:17 -Generating unique operation named: updateUsingGET_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPOST_19
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPUT_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 16:35:17 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 16:35:17 -Starting Quartz Scheduler now
2019-07-16 16:35:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 16:35:17 -Starting...
2019-07-16 16:35:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 16:35:17 -Started.
2019-07-16 16:35:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 16:35:18 -Using a shared selector for servlet write/read
2019-07-16 16:35:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 16:35:18 -Started BootdoApplication in 48.651 seconds (JVM running for 50.965)
2019-07-16 16:35:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 16:35:19 -==> Parameters: 
2019-07-16 16:35:19 -<==      Total: 1
2019-07-16 16:35:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 16:35:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 16:35:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 129 ms
2019-07-16 16:35:39 -Enabling session validation scheduler...
2019-07-16 16:35:39 -请求地址 : http://localhost:8081/login;JSESSIONID=45a7c41a-51b2-4ef1-88b0-a464c90efa4c
2019-07-16 16:35:39 -HTTP METHOD : GET
2019-07-16 16:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:35:39 -参数 : [{}]
2019-07-16 16:35:39 -耗时 : 6
2019-07-16 16:35:39 -返回值 : login
2019-07-16 16:35:41 -请求地址 : http://localhost:8081/getVerify
2019-07-16 16:35:41 -HTTP METHOD : GET
2019-07-16 16:35:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 16:35:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@9abb60c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ca9295d]
2019-07-16 16:35:46 -1112
2019-07-16 16:35:46 -耗时 : 4871
2019-07-16 16:35:46 -返回值 : null
2019-07-16 16:35:52 -请求地址 : http://localhost:8081/login
2019-07-16 16:35:52 -HTTP METHOD : POST
2019-07-16 16:35:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 16:35:52 -参数 : [admin, 111111, 1112, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2717a8c2]
2019-07-16 16:35:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 16:35:53 -==> Parameters: admin(String)
2019-07-16 16:35:53 -<==      Total: 1
2019-07-16 16:35:53 -耗时 : 182
2019-07-16 16:35:53 -返回值 : {msg=操作成功, code=0}
2019-07-16 16:35:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 16:35:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:35:53 -==> Parameters: 1(Long), admin(String), 登录(String), 182(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 16:35:53.251(Timestamp)
2019-07-16 16:35:53 -请求地址 : http://localhost:8081/index
2019-07-16 16:35:53 -HTTP METHOD : GET
2019-07-16 16:35:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 16:35:53 -参数 : [{}]
2019-07-16 16:35:53 -<==    Updates: 1
2019-07-16 16:35:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 16:35:53 -==> Parameters: 1(Long)
2019-07-16 16:35:53 -<==      Total: 51
2019-07-16 16:35:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 16:35:54 -==> Parameters: 138(Long)
2019-07-16 16:35:54 -<==      Total: 1
2019-07-16 16:35:54 -耗时 : 727
2019-07-16 16:35:54 -返回值 : index_v1
2019-07-16 16:35:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:35:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 727(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 16:35:54.128(Timestamp)
2019-07-16 16:35:54 -<==    Updates: 1
2019-07-16 16:35:54 -请求地址 : http://localhost:8081/main
2019-07-16 16:35:54 -HTTP METHOD : GET
2019-07-16 16:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:35:54 -参数 : []
2019-07-16 16:35:54 -耗时 : 1
2019-07-16 16:35:54 -返回值 : main
2019-07-16 16:35:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 16:35:54 -HTTP METHOD : GET
2019-07-16 16:35:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 16:35:54 -参数 : []
2019-07-16 16:35:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 16:35:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 16:35:54 -请求地址 : http://localhost:8081/main
2019-07-16 16:35:54 -HTTP METHOD : GET
2019-07-16 16:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:35:54 -参数 : []
2019-07-16 16:35:54 -耗时 : 1
2019-07-16 16:35:54 -返回值 : main
2019-07-16 16:35:58 -<==      Total: 0
2019-07-16 16:35:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 16:35:58 -==> Parameters: 1(Long), 0(String)
2019-07-16 16:35:58 -<==      Total: 1
2019-07-16 16:35:58 -耗时 : 3603
2019-07-16 16:35:58 -返回值 : com.bootdo.common.utils.PageUtils@4cb1c018
2019-07-16 16:36:05 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-07-16 16:36:46 -请求地址 : http://localhost:8081/login;JSESSIONID=592d6d43-bd03-407e-9df2-2734b7278f6a
2019-07-16 16:36:46 -HTTP METHOD : GET
2019-07-16 16:36:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:36:46 -参数 : [{}]
2019-07-16 16:36:46 -耗时 : 1
2019-07-16 16:36:46 -返回值 : login
2019-07-16 16:36:47 -请求地址 : http://localhost:8081/login;JSESSIONID=592d6d43-bd03-407e-9df2-2734b7278f6a
2019-07-16 16:36:47 -HTTP METHOD : GET
2019-07-16 16:36:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:36:47 -参数 : [{}]
2019-07-16 16:36:47 -耗时 : 0
2019-07-16 16:36:47 -返回值 : login
2019-07-16 16:36:47 -请求地址 : http://localhost:8081/getVerify
2019-07-16 16:36:47 -HTTP METHOD : GET
2019-07-16 16:36:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 16:36:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@63f622ba, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37369932]
2019-07-16 16:36:47 -1310
2019-07-16 16:36:47 -耗时 : 15
2019-07-16 16:36:47 -返回值 : null
2019-07-16 16:36:47 -请求地址 : http://localhost:8081/login
2019-07-16 16:36:47 -HTTP METHOD : GET
2019-07-16 16:36:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 16:36:47 -参数 : [{}]
2019-07-16 16:36:47 -耗时 : 0
2019-07-16 16:36:47 -返回值 : login
2019-07-16 16:36:52 -请求地址 : http://localhost:8081/login
2019-07-16 16:36:52 -HTTP METHOD : POST
2019-07-16 16:36:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 16:36:52 -参数 : [admin, 111111, 1310, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57c587f4]
2019-07-16 16:36:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 16:36:52 -==> Parameters: admin(String)
2019-07-16 16:36:52 -<==      Total: 1
2019-07-16 16:36:52 -耗时 : 11
2019-07-16 16:36:52 -返回值 : {msg=操作成功, code=0}
2019-07-16 16:36:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:36:52 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 16:36:52.407(Timestamp)
2019-07-16 16:36:52 -请求地址 : http://localhost:8081/index
2019-07-16 16:36:52 -HTTP METHOD : GET
2019-07-16 16:36:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 16:36:52 -参数 : [{}]
2019-07-16 16:36:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 16:36:52 -==> Parameters: 1(Long)
2019-07-16 16:36:52 -<==    Updates: 1
2019-07-16 16:36:52 -<==      Total: 51
2019-07-16 16:36:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 16:36:52 -==> Parameters: 138(Long)
2019-07-16 16:36:52 -<==      Total: 1
2019-07-16 16:36:52 -耗时 : 462
2019-07-16 16:36:52 -返回值 : index_v1
2019-07-16 16:36:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:36:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 462(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 16:36:52.902(Timestamp)
2019-07-16 16:36:53 -请求地址 : http://localhost:8081/main
2019-07-16 16:36:53 -HTTP METHOD : GET
2019-07-16 16:36:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:36:53 -参数 : []
2019-07-16 16:36:53 -耗时 : 1
2019-07-16 16:36:53 -返回值 : main
2019-07-16 16:36:53 -<==    Updates: 1
2019-07-16 16:36:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 16:36:53 -HTTP METHOD : GET
2019-07-16 16:36:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 16:36:53 -参数 : []
2019-07-16 16:36:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 16:36:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 16:36:53 -请求地址 : http://localhost:8081/main
2019-07-16 16:36:53 -HTTP METHOD : GET
2019-07-16 16:36:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:36:53 -参数 : []
2019-07-16 16:36:53 -耗时 : 0
2019-07-16 16:36:53 -返回值 : main
2019-07-16 16:36:53 -<==      Total: 0
2019-07-16 16:36:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 16:36:53 -==> Parameters: 1(Long), 0(String)
2019-07-16 16:36:53 -<==      Total: 1
2019-07-16 16:36:53 -耗时 : 304
2019-07-16 16:36:53 -返回值 : com.bootdo.common.utils.PageUtils@57e828e9
2019-07-16 16:37:14 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 16:38:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 16:38:14 -==> Parameters: 1(Long)
2019-07-16 16:38:14 -<==      Total: 95
2019-07-16 16:38:14 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 16:38:14 -HTTP METHOD : GET
2019-07-16 16:38:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 16:38:14 -参数 : []
2019-07-16 16:38:14 -耗时 : 1
2019-07-16 16:38:14 -返回值 : moneyList/moneyList
2019-07-16 16:38:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 16:38:18 -HTTP METHOD : GET
2019-07-16 16:38:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 16:38:18 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 16:38:18 -耗时 : 2
2019-07-16 16:38:18 -返回值 : system/dept/deptTree
2019-07-16 16:38:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 16:38:19 -HTTP METHOD : GET
2019-07-16 16:38:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 16:38:19 -参数 : []
2019-07-16 16:38:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 16:38:19 -==> Parameters: 
2019-07-16 16:38:19 -<==      Total: 3
2019-07-16 16:38:19 -耗时 : 97
2019-07-16 16:38:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 16:38:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:38:21 -HTTP METHOD : POST
2019-07-16 16:38:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:38:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3114754b]
2019-07-16 16:38:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:38:22 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:38:22 -<==      Total: 3
2019-07-16 16:38:22 -耗时 : 1018
2019-07-16 16:38:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4b587a1c, com.bootdo.moneyList.damain.MoneyListDO@4ea5cf8, com.bootdo.moneyList.damain.MoneyListDO@4054817e]
2019-07-16 16:38:27 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 16:38:27 -HTTP METHOD : POST
2019-07-16 16:38:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 16:38:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4bdf38fc]
2019-07-16 16:38:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:38:27 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:38:27 -<==      Total: 3
2019-07-16 16:38:27 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 16:38:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:38:27 -<==      Total: 1
2019-07-16 16:38:27 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 16:38:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:38:27 -<==      Total: 1
2019-07-16 16:38:27 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 16:38:27 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:38:27 -<==      Total: 0
2019-07-16 16:38:27 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:38:27 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:38:27 -<==    Updates: 1
2019-07-16 16:38:27 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:38:27 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 16:38:27.135(Timestamp), 2019-06(String), admin(String), 2019-07-16 16:38:27.136(Timestamp), admin(String), null
2019-07-16 16:38:27 -<==    Updates: 1
2019-07-16 16:38:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-16 16:38:27 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-16 16:38:27.135(Timestamp)
2019-07-16 16:38:28 -<==      Total: 1
2019-07-16 16:38:28 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-16 16:38:28 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 400.57(BigDecimal), 50(BigDecimal), 1600(Long)
2019-07-16 16:38:28 -<==    Updates: 1
2019-07-16 16:38:28 -耗时 : 1003
2019-07-16 16:38:28 -返回值 : 1600
2019-07-16 16:38:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:38:29 -HTTP METHOD : POST
2019-07-16 16:38:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:38:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7432bc65]
2019-07-16 16:38:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:38:29 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:38:29 -<==      Total: 3
2019-07-16 16:38:29 -耗时 : 117
2019-07-16 16:38:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4bf9c28c, com.bootdo.moneyList.damain.MoneyListDO@5976f4a7, com.bootdo.moneyList.damain.MoneyListDO@3846aa78]
2019-07-16 16:38:31 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001
2019-07-16 16:38:31 -HTTP METHOD : GET
2019-07-16 16:38:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-16 16:38:31 -参数 : [1600, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@2bb8ca2f, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@2bb8ca2f]
2019-07-16 16:38:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-16 16:38:31 -==> Parameters: 1600(Long)
2019-07-16 16:38:31 -<==      Total: 1
2019-07-16 16:39:49 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$5de91c8b.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 16:39:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:39:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-16 16:39:49.468(Timestamp)
2019-07-16 16:39:49 -<==    Updates: 1
2019-07-16 16:40:35 -请求地址 : http://localhost:8081/index
2019-07-16 16:40:35 -HTTP METHOD : GET
2019-07-16 16:40:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 16:40:35 -参数 : [{}]
2019-07-16 16:40:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 16:40:35 -==> Parameters: 1(Long)
2019-07-16 16:40:35 -<==      Total: 51
2019-07-16 16:40:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 16:40:35 -==> Parameters: 138(Long)
2019-07-16 16:40:35 -<==      Total: 1
2019-07-16 16:40:35 -耗时 : 83
2019-07-16 16:40:35 -返回值 : index_v1
2019-07-16 16:40:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:40:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 83(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 16:40:35.942(Timestamp)
2019-07-16 16:40:36 -<==    Updates: 1
2019-07-16 16:40:36 -请求地址 : http://localhost:8081/main
2019-07-16 16:40:36 -HTTP METHOD : GET
2019-07-16 16:40:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:40:36 -参数 : []
2019-07-16 16:40:36 -耗时 : 0
2019-07-16 16:40:36 -返回值 : main
2019-07-16 16:40:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 16:40:37 -HTTP METHOD : GET
2019-07-16 16:40:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 16:40:37 -参数 : []
2019-07-16 16:40:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 16:40:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 16:40:37 -请求地址 : http://localhost:8081/main
2019-07-16 16:40:37 -HTTP METHOD : GET
2019-07-16 16:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 16:40:37 -参数 : []
2019-07-16 16:40:37 -耗时 : 0
2019-07-16 16:40:37 -返回值 : main
2019-07-16 16:40:37 -<==      Total: 0
2019-07-16 16:40:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 16:40:37 -==> Parameters: 1(Long), 0(String)
2019-07-16 16:40:37 -<==      Total: 1
2019-07-16 16:40:37 -耗时 : 289
2019-07-16 16:40:37 -返回值 : com.bootdo.common.utils.PageUtils@256a9e5
2019-07-16 16:40:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 16:40:44 -HTTP METHOD : GET
2019-07-16 16:40:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 16:40:44 -参数 : []
2019-07-16 16:40:44 -耗时 : 1
2019-07-16 16:40:44 -返回值 : moneyList/moneyList
2019-07-16 16:40:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 16:40:47 -HTTP METHOD : GET
2019-07-16 16:40:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 16:40:47 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 16:40:47 -耗时 : 0
2019-07-16 16:40:47 -返回值 : system/dept/deptTree
2019-07-16 16:40:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 16:40:48 -HTTP METHOD : GET
2019-07-16 16:40:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 16:40:48 -参数 : []
2019-07-16 16:40:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 16:40:48 -==> Parameters: 
2019-07-16 16:40:48 -<==      Total: 3
2019-07-16 16:40:48 -耗时 : 3
2019-07-16 16:40:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 16:40:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:40:51 -HTTP METHOD : POST
2019-07-16 16:40:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:40:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3830e1d2]
2019-07-16 16:40:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:40:51 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:40:51 -<==      Total: 3
2019-07-16 16:40:51 -耗时 : 30
2019-07-16 16:40:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4a0bf1e8, com.bootdo.moneyList.damain.MoneyListDO@3ee86ff4, com.bootdo.moneyList.damain.MoneyListDO@21b81e79]
2019-07-16 16:40:54 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 16:40:54 -HTTP METHOD : POST
2019-07-16 16:40:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 16:40:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6dd623cf]
2019-07-16 16:40:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:40:54 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:40:54 -<==      Total: 3
2019-07-16 16:40:54 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 16:40:54 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:40:54 -<==      Total: 1
2019-07-16 16:40:55 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 16:40:55 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:40:55 -<==      Total: 1
2019-07-16 16:40:55 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 16:40:55 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 16:40:55 -<==      Total: 0
2019-07-16 16:40:55 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:40:55 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:40:55 -<==    Updates: 1
2019-07-16 16:40:55 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 16:40:55 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 16:40:54.983(Timestamp), 2019-06(String), admin(String), 2019-07-16 16:40:54.983(Timestamp), admin(String), null
2019-07-16 16:40:55 -<==    Updates: 1
2019-07-16 16:40:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-16 16:40:55 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-16 16:40:54.983(Timestamp)
2019-07-16 16:40:55 -<==      Total: 1
2019-07-16 16:40:55 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-16 16:40:55 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 450.57(BigDecimal), 50(BigDecimal), 1600(Long)
2019-07-16 16:40:55 -<==    Updates: 1
2019-07-16 16:40:55 -耗时 : 259
2019-07-16 16:40:55 -返回值 : 1600
2019-07-16 16:40:56 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 16:40:56 -HTTP METHOD : POST
2019-07-16 16:40:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 16:40:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1bca90be]
2019-07-16 16:40:56 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 16:40:56 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 16:40:56 -<==      Total: 3
2019-07-16 16:40:56 -耗时 : 33
2019-07-16 16:40:56 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6cb56d39, com.bootdo.moneyList.damain.MoneyListDO@d57bc36, com.bootdo.moneyList.damain.MoneyListDO@220fa3b2]
2019-07-16 16:40:57 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001
2019-07-16 16:40:57 -HTTP METHOD : GET
2019-07-16 16:40:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-16 16:40:57 -参数 : [1600, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@70ff87b1, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@70ff87b1]
2019-07-16 16:41:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-16 16:41:31 -==> Parameters: 1600(Long)
2019-07-16 16:41:31 -<==      Total: 1
2019-07-16 17:05:40 -请求地址 : http://localhost:8081/
2019-07-16 17:05:40 -HTTP METHOD : GET
2019-07-16 17:05:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-16 17:05:40 -参数 : [{}]
2019-07-16 17:05:40 -耗时 : 348
2019-07-16 17:05:40 -返回值 : redirect:/index
2019-07-16 17:05:46 -请求地址 : http://localhost:8081/login;JSESSIONID=6f42539a-9d4d-438b-9596-d7abdea3184c
2019-07-16 17:05:46 -HTTP METHOD : GET
2019-07-16 17:05:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 17:05:46 -参数 : [{}]
2019-07-16 17:05:46 -耗时 : 0
2019-07-16 17:05:46 -返回值 : login
2019-07-16 17:05:52 -请求地址 : http://localhost:8081/getVerify
2019-07-16 17:05:52 -HTTP METHOD : GET
2019-07-16 17:05:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 17:05:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30243933, org.apache.shiro.web.servlet.ShiroHttpServletResponse@773f46ab]
2019-07-16 17:05:53 -2502
2019-07-16 17:05:53 -耗时 : 998
2019-07-16 17:05:53 -返回值 : null
2019-07-16 17:06:01 -请求地址 : http://localhost:8081/login
2019-07-16 17:06:01 -HTTP METHOD : POST
2019-07-16 17:06:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 17:06:01 -参数 : [admin, 111111, 2502, org.apache.shiro.web.servlet.ShiroHttpServletRequest@462b9b68]
2019-07-16 17:06:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 17:06:01 -==> Parameters: admin(String)
2019-07-16 17:06:01 -<==      Total: 1
2019-07-16 17:06:01 -耗时 : 604
2019-07-16 17:06:01 -返回值 : {msg=操作成功, code=0}
2019-07-16 17:06:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:06:01 -==> Parameters: 1(Long), admin(String), 登录(String), 604(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 17:06:01.713(Timestamp)
2019-07-16 17:06:01 -<==    Updates: 1
2019-07-16 17:06:02 -请求地址 : http://localhost:8081/index
2019-07-16 17:06:02 -HTTP METHOD : GET
2019-07-16 17:06:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 17:06:02 -参数 : [{}]
2019-07-16 17:06:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 17:06:02 -==> Parameters: 1(Long)
2019-07-16 17:06:02 -<==      Total: 51
2019-07-16 17:06:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 17:06:02 -==> Parameters: 138(Long)
2019-07-16 17:06:02 -<==      Total: 1
2019-07-16 17:06:02 -耗时 : 266
2019-07-16 17:06:02 -返回值 : index_v1
2019-07-16 17:06:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:06:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 266(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 17:06:02.472(Timestamp)
2019-07-16 17:06:03 -<==    Updates: 1
2019-07-16 17:06:03 -请求地址 : http://localhost:8081/main
2019-07-16 17:06:03 -HTTP METHOD : GET
2019-07-16 17:06:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 17:06:03 -参数 : []
2019-07-16 17:06:03 -耗时 : 1
2019-07-16 17:06:03 -返回值 : main
2019-07-16 17:06:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 393]
2019-07-16 17:06:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 17:06:07 -HTTP METHOD : GET
2019-07-16 17:06:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 17:06:07 -参数 : []
2019-07-16 17:06:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 17:06:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 17:06:07 -<==      Total: 0
2019-07-16 17:06:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 17:06:07 -==> Parameters: 1(Long), 0(String)
2019-07-16 17:06:07 -<==      Total: 1
2019-07-16 17:06:07 -耗时 : 31
2019-07-16 17:06:07 -返回值 : com.bootdo.common.utils.PageUtils@696e9814
2019-07-16 17:06:07 -请求地址 : http://localhost:8081/main
2019-07-16 17:06:07 -HTTP METHOD : GET
2019-07-16 17:06:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 17:06:07 -参数 : []
2019-07-16 17:06:07 -耗时 : 50
2019-07-16 17:06:07 -返回值 : main
2019-07-16 17:06:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 17:06:30 -==> Parameters: 1(Long)
2019-07-16 17:06:30 -<==      Total: 95
2019-07-16 17:06:30 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 17:06:30 -HTTP METHOD : GET
2019-07-16 17:06:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 17:06:30 -参数 : []
2019-07-16 17:06:30 -耗时 : 2
2019-07-16 17:06:30 -返回值 : moneyList/moneyList
2019-07-16 17:06:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 17:06:34 -HTTP METHOD : GET
2019-07-16 17:06:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 17:06:34 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 17:06:34 -耗时 : 1
2019-07-16 17:06:34 -返回值 : system/dept/deptTree
2019-07-16 17:06:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 17:06:35 -HTTP METHOD : GET
2019-07-16 17:06:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 17:06:35 -参数 : []
2019-07-16 17:06:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 17:06:35 -==> Parameters: 
2019-07-16 17:06:35 -<==      Total: 3
2019-07-16 17:06:35 -耗时 : 9
2019-07-16 17:06:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 17:06:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 17:06:42 -HTTP METHOD : POST
2019-07-16 17:06:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 17:06:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39bd156]
2019-07-16 17:06:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:06:42 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:06:42 -<==      Total: 3
2019-07-16 17:06:42 -耗时 : 38
2019-07-16 17:06:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@21702b2d, com.bootdo.moneyList.damain.MoneyListDO@1b3b8c04, com.bootdo.moneyList.damain.MoneyListDO@46f7ef54]
2019-07-16 17:06:45 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 17:06:45 -HTTP METHOD : POST
2019-07-16 17:06:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 17:06:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@8441896]
2019-07-16 17:06:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:06:45 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:06:45 -<==      Total: 3
2019-07-16 17:07:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:07:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-16 17:07:19.119(Timestamp)
2019-07-16 17:07:19 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:388)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:377)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$5de91c8b.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 17:07:19 -<==    Updates: 1
2019-07-16 17:09:42 -Starting BootdoApplication on PC-201905091110 with PID 21220 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-16 17:09:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-16 17:09:42 -The following profiles are active: dev
2019-07-16 17:09:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2453f95d: startup date [Tue Jul 16 17:09:42 CST 2019]; root of context hierarchy
2019-07-16 17:09:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-16 17:10:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c86e95fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bac7c4a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:02 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-16 17:10:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-16 17:10:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-16 17:10:06 -Tomcat initialized with port(s): 8081 (http)
2019-07-16 17:10:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-16 17:10:06 -Starting service [Tomcat]
2019-07-16 17:10:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-16 17:10:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-16 17:10:07 -Initializing Spring embedded WebApplicationContext
2019-07-16 17:10:07 -Root WebApplicationContext: initialization completed in 24591 ms
2019-07-16 17:10:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-16 17:10:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-16 17:10:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-16 17:10:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-16 17:10:08 -Filter xssFilter was not registered (disabled)
2019-07-16 17:10:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-16 17:10:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-16 17:10:08 -Servlet statViewServlet mapped to [/druid/*]
2019-07-16 17:10:08 -Servlet dispatcherServlet mapped to [/]
2019-07-16 17:10:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2453f95d: startup date [Tue Jul 16 17:09:42 CST 2019]; root of context hierarchy
2019-07-16 17:10:15 -Using default implementation for ThreadExecutor
2019-07-16 17:10:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-16 17:10:15 -Quartz Scheduler v.2.3.0 created.
2019-07-16 17:10:15 -RAMJobStore initialized.
2019-07-16 17:10:15 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-16 17:10:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-16 17:10:15 -Quartz scheduler version: 2.3.0
2019-07-16 17:10:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@75c8d8e7
2019-07-16 17:10:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-16 17:10:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-16 17:10:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-16 17:10:21 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-16 17:10:21 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-16 17:10:21 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-16 17:10:21 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-16 17:10:21 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-16 17:10:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-16 17:10:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-16 17:10:21 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-16 17:10:21 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-16 17:10:21 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-16 17:10:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-16 17:10:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-16 17:10:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-16 17:10:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-16 17:10:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-16 17:10:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-16 17:10:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-16 17:10:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-16 17:10:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-16 17:10:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-16 17:10:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 17:10:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-16 17:10:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-16 17:10:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-16 17:10:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-16 17:10:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-16 17:10:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-16 17:10:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-16 17:10:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-16 17:10:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-16 17:10:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-16 17:10:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-16 17:10:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-16 17:10:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-16 17:10:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-16 17:10:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-16 17:10:22 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-16 17:10:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-16 17:10:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-16 17:10:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-16 17:10:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-16 17:10:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-16 17:10:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-16 17:10:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-16 17:10:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-16 17:10:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-16 17:10:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-16 17:10:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-16 17:10:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-16 17:10:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-16 17:10:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-16 17:10:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-16 17:10:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-16 17:10:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-16 17:10:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-16 17:10:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-16 17:10:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-16 17:10:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-16 17:10:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-16 17:10:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-16 17:10:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-16 17:10:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-16 17:10:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-16 17:10:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-16 17:10:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-16 17:10:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-16 17:10:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-16 17:10:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-16 17:10:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-16 17:10:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-16 17:10:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-16 17:10:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 17:10:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-16 17:10:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-16 17:10:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-16 17:10:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-16 17:10:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-16 17:10:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-16 17:10:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-16 17:10:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-16 17:10:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-16 17:10:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-16 17:10:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-16 17:10:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-16 17:10:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-16 17:10:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-16 17:10:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-16 17:10:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-16 17:10:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-16 17:10:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-16 17:10:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-16 17:10:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 17:10:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2453f95d: startup date [Tue Jul 16 17:09:42 CST 2019]; root of context hierarchy
2019-07-16 17:10:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 17:10:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-16 17:10:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-16 17:10:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-16 17:10:30 -Registering beans for JMX exposure on startup
2019-07-16 17:10:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-16 17:10:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-16 17:10:30 -Starting beans in phase 2147483647
2019-07-16 17:10:30 -Context refreshed
2019-07-16 17:10:31 -Found 1 custom documentation plugin(s)
2019-07-16 17:10:31 -Scanning for api listing references
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_1
2019-07-16 17:10:32 -Generating unique operation named: addUsingGET_1
2019-07-16 17:10:32 -Generating unique operation named: editUsingGET_1
2019-07-16 17:10:32 -Generating unique operation named: listUsingGET_1
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_2
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_3
2019-07-16 17:10:32 -Generating unique operation named: saveUsingPOST_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingGET_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingHEAD_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingPOST_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingPUT_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingPATCH_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingDELETE_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-16 17:10:32 -Generating unique operation named: updateUsingTRACE_1
2019-07-16 17:10:32 -Generating unique operation named: addUsingGET_2
2019-07-16 17:10:32 -Generating unique operation named: editUsingGET_2
2019-07-16 17:10:32 -Generating unique operation named: listUsingGET_2
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_4
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_5
2019-07-16 17:10:32 -Generating unique operation named: saveUsingPOST_2
2019-07-16 17:10:32 -Generating unique operation named: updateUsingPOST_2
2019-07-16 17:10:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-16 17:10:32 -Generating unique operation named: addUsingGET_3
2019-07-16 17:10:32 -Generating unique operation named: editUsingGET_3
2019-07-16 17:10:32 -Generating unique operation named: listUsingGET_3
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_6
2019-07-16 17:10:32 -Generating unique operation named: removeUsingPOST_7
2019-07-16 17:10:33 -Generating unique operation named: saveUsingPOST_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingGET_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingHEAD_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPOST_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPUT_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPATCH_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingDELETE_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-16 17:10:33 -Generating unique operation named: updateUsingTRACE_2
2019-07-16 17:10:33 -Generating unique operation named: addUsingGET_4
2019-07-16 17:10:33 -Generating unique operation named: editUsingGET_4
2019-07-16 17:10:33 -Generating unique operation named: listUsingGET_4
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_8
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_9
2019-07-16 17:10:33 -Generating unique operation named: saveUsingPOST_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingGET_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingHEAD_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPOST_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPUT_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPATCH_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingDELETE_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-16 17:10:33 -Generating unique operation named: updateUsingTRACE_3
2019-07-16 17:10:33 -Generating unique operation named: ElecUsingGET_1
2019-07-16 17:10:33 -Generating unique operation named: addUsingGET_5
2019-07-16 17:10:33 -Generating unique operation named: editUsingGET_5
2019-07-16 17:10:33 -Generating unique operation named: listUsingGET_5
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_10
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_11
2019-07-16 17:10:33 -Generating unique operation named: saveUsingPOST_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingGET_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingHEAD_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPOST_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPUT_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPATCH_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingDELETE_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-16 17:10:33 -Generating unique operation named: updateUsingTRACE_4
2019-07-16 17:10:33 -Generating unique operation named: editUsingGET_6
2019-07-16 17:10:33 -Generating unique operation named: listUsingGET_6
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPOST_6
2019-07-16 17:10:33 -Generating unique operation named: addUsingGET_6
2019-07-16 17:10:33 -Generating unique operation named: editUsingGET_7
2019-07-16 17:10:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-16 17:10:33 -Generating unique operation named: listUsingGET_7
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_12
2019-07-16 17:10:33 -Generating unique operation named: removeUsingPOST_13
2019-07-16 17:10:33 -Generating unique operation named: saveUsingPOST_6
2019-07-16 17:10:33 -Generating unique operation named: updateUsingGET_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingHEAD_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPOST_7
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPUT_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingPATCH_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingDELETE_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-16 17:10:33 -Generating unique operation named: updateUsingTRACE_5
2019-07-16 17:10:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-16 17:10:34 -Generating unique operation named: addUsingGET_7
2019-07-16 17:10:34 -Generating unique operation named: editUsingGET_8
2019-07-16 17:10:34 -Generating unique operation named: listUsingGET_8
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_14
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_15
2019-07-16 17:10:34 -Generating unique operation named: saveUsingPOST_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingGET_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingHEAD_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPOST_8
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPUT_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPATCH_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingDELETE_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-16 17:10:34 -Generating unique operation named: updateUsingTRACE_6
2019-07-16 17:10:34 -Generating unique operation named: addUsingGET_8
2019-07-16 17:10:34 -Generating unique operation named: editUsingGET_9
2019-07-16 17:10:34 -Generating unique operation named: listUsingGET_9
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_16
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_17
2019-07-16 17:10:34 -Generating unique operation named: saveUsingPOST_8
2019-07-16 17:10:34 -Generating unique operation named: updateUsingGET_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingHEAD_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPOST_9
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPUT_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPATCH_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingDELETE_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-16 17:10:34 -Generating unique operation named: updateUsingTRACE_7
2019-07-16 17:10:34 -Generating unique operation named: addUsingGET_9
2019-07-16 17:10:34 -Generating unique operation named: editUsingGET_10
2019-07-16 17:10:34 -Generating unique operation named: infoUsingGET_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingHEAD_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingPOST_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingPUT_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingPATCH_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingDELETE_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-16 17:10:34 -Generating unique operation named: infoUsingTRACE_1
2019-07-16 17:10:34 -Generating unique operation named: listUsingGET_10
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_18
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_19
2019-07-16 17:10:34 -Generating unique operation named: saveUsingPOST_9
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPOST_10
2019-07-16 17:10:34 -Generating unique operation named: listUsingGET_11
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_20
2019-07-16 17:10:34 -Generating unique operation named: welcomeUsingGET_1
2019-07-16 17:10:34 -Generating unique operation named: addUsingGET_10
2019-07-16 17:10:34 -Generating unique operation named: editUsingGET_11
2019-07-16 17:10:34 -Generating unique operation named: listUsingGET_12
2019-07-16 17:10:34 -Generating unique operation named: removeUsingPOST_21
2019-07-16 17:10:34 -Generating unique operation named: saveUsingPOST_10
2019-07-16 17:10:34 -Generating unique operation named: treeUsingGET_1
2019-07-16 17:10:34 -Generating unique operation named: treeUsingGET_2
2019-07-16 17:10:34 -Generating unique operation named: updateUsingPOST_11
2019-07-16 17:10:34 -Generating unique operation named: addUsingGET_11
2019-07-16 17:10:34 -Generating unique operation named: editUsingGET_12
2019-07-16 17:10:35 -Generating unique operation named: listUsingGET_13
2019-07-16 17:10:35 -Generating unique operation named: removeUsingPOST_22
2019-07-16 17:10:35 -Generating unique operation named: removeUsingPOST_23
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPOST_12
2019-07-16 17:10:35 -Generating unique operation named: addUsingGET_12
2019-07-16 17:10:35 -Generating unique operation named: editUsingGET_13
2019-07-16 17:10:35 -Generating unique operation named: listUsingGET_14
2019-07-16 17:10:35 -Generating unique operation named: removeUsingPOST_24
2019-07-16 17:10:35 -Generating unique operation named: removeUsingPOST_25
2019-07-16 17:10:35 -Generating unique operation named: saveUsingPOST_11
2019-07-16 17:10:35 -Generating unique operation named: updateUsingGET_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingHEAD_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPOST_13
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPUT_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPATCH_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingDELETE_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-16 17:10:35 -Generating unique operation named: updateUsingTRACE_8
2019-07-16 17:10:35 -Generating unique operation named: addUsingGET_13
2019-07-16 17:10:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-16 17:10:35 -Generating unique operation named: editUsingGET_14
2019-07-16 17:10:35 -Generating unique operation named: listUsingGET_15
2019-07-16 17:10:35 -Generating unique operation named: printEditUsingGET_1
2019-07-16 17:10:35 -Generating unique operation named: removeUsingPOST_26
2019-07-16 17:10:35 -Generating unique operation named: saveUsingPOST_12
2019-07-16 17:10:35 -Generating unique operation named: updateUsingGET_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingHEAD_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPOST_14
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPUT_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPATCH_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingDELETE_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-16 17:10:35 -Generating unique operation named: updateUsingTRACE_9
2019-07-16 17:10:35 -Generating unique operation named: addUsingGET_14
2019-07-16 17:10:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-16 17:10:35 -Generating unique operation named: editUsingGET_15
2019-07-16 17:10:35 -Generating unique operation named: listUsingGET_16
2019-07-16 17:10:35 -Generating unique operation named: saveUsingPOST_13
2019-07-16 17:10:35 -Generating unique operation named: saveUsingPOST_14
2019-07-16 17:10:35 -Generating unique operation named: updateUsingPOST_15
2019-07-16 17:10:35 -Generating unique operation named: listUsingGET_17
2019-07-16 17:10:35 -Generating unique operation named: listUsingHEAD_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingPOST_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingPUT_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingPATCH_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingDELETE_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingOPTIONS_1
2019-07-16 17:10:35 -Generating unique operation named: listUsingTRACE_1
2019-07-16 17:10:35 -Generating unique operation named: countDDUsingGET_1
2019-07-16 17:10:35 -Generating unique operation named: exportDDUsingGET_1
2019-07-16 17:10:35 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-16 17:10:36 -Generating unique operation named: addUsingGET_15
2019-07-16 17:10:36 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-16 17:10:36 -Generating unique operation named: editUsingGET_16
2019-07-16 17:10:36 -Generating unique operation named: listUsingGET_18
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_27
2019-07-16 17:10:36 -Generating unique operation named: saveUsingPOST_15
2019-07-16 17:10:36 -Generating unique operation named: treeUsingGET_3
2019-07-16 17:10:36 -Generating unique operation named: treeViewUsingGET_1
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPOST_16
2019-07-16 17:10:36 -Generating unique operation named: addUsingGET_16
2019-07-16 17:10:36 -Generating unique operation named: editUsingGET_17
2019-07-16 17:10:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-16 17:10:36 -Generating unique operation named: listUsingGET_19
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_28
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_29
2019-07-16 17:10:36 -Generating unique operation named: saveUsingPOST_16
2019-07-16 17:10:36 -Generating unique operation named: updateUsingGET_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingHEAD_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPOST_17
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPUT_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPATCH_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingDELETE_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-16 17:10:36 -Generating unique operation named: updateUsingTRACE_10
2019-07-16 17:10:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-16 17:10:36 -Generating unique operation named: addUsingGET_17
2019-07-16 17:10:36 -Generating unique operation named: editUsingGET_18
2019-07-16 17:10:36 -Generating unique operation named: listUsingGET_20
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_30
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_31
2019-07-16 17:10:36 -Generating unique operation named: saveUsingPOST_17
2019-07-16 17:10:36 -Generating unique operation named: updateUsingGET_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingHEAD_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPOST_18
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPUT_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPATCH_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingDELETE_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-16 17:10:36 -Generating unique operation named: updateUsingTRACE_11
2019-07-16 17:10:36 -Generating unique operation named: addUsingGET_18
2019-07-16 17:10:36 -Generating unique operation named: editUsingGET_19
2019-07-16 17:10:36 -Generating unique operation named: listUsingGET_21
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_32
2019-07-16 17:10:36 -Generating unique operation named: removeUsingPOST_33
2019-07-16 17:10:36 -Generating unique operation named: saveUsingPOST_18
2019-07-16 17:10:36 -Generating unique operation named: updateUsingGET_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingHEAD_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPOST_19
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPUT_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingPATCH_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingDELETE_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-16 17:10:36 -Generating unique operation named: updateUsingTRACE_12
2019-07-16 17:10:36 -Starting Quartz Scheduler now
2019-07-16 17:10:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-16 17:10:36 -Starting...
2019-07-16 17:10:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-16 17:10:36 -Started.
2019-07-16 17:10:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-16 17:10:37 -Using a shared selector for servlet write/read
2019-07-16 17:10:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-16 17:10:37 -Started BootdoApplication in 58.378 seconds (JVM running for 60.56)
2019-07-16 17:10:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-16 17:10:37 -==> Parameters: 
2019-07-16 17:10:38 -<==      Total: 1
2019-07-16 17:10:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-16 17:10:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-16 17:10:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-07-16 17:10:47 -Enabling session validation scheduler...
2019-07-16 17:10:47 -请求地址 : http://localhost:8081/login;JSESSIONID=ed796628-d8af-4b7c-a0e2-778be5c1c413
2019-07-16 17:10:47 -HTTP METHOD : GET
2019-07-16 17:10:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-16 17:10:47 -参数 : [{}]
2019-07-16 17:10:47 -耗时 : 7
2019-07-16 17:10:47 -返回值 : login
2019-07-16 17:10:49 -请求地址 : http://localhost:8081/getVerify
2019-07-16 17:10:49 -HTTP METHOD : GET
2019-07-16 17:10:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-16 17:10:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6461c8b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43448227]
2019-07-16 17:10:54 -8579
2019-07-16 17:10:54 -耗时 : 5372
2019-07-16 17:10:54 -返回值 : null
2019-07-16 17:11:01 -请求地址 : http://localhost:8081/login
2019-07-16 17:11:01 -HTTP METHOD : POST
2019-07-16 17:11:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-16 17:11:01 -参数 : [admin, 111111, 8579, org.apache.shiro.web.servlet.ShiroHttpServletRequest@54e2b688]
2019-07-16 17:11:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-16 17:11:01 -==> Parameters: admin(String)
2019-07-16 17:11:01 -<==      Total: 1
2019-07-16 17:11:01 -耗时 : 242
2019-07-16 17:11:01 -返回值 : {msg=操作成功, code=0}
2019-07-16 17:11:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-16 17:11:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:11:01 -==> Parameters: 1(Long), admin(String), 登录(String), 242(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-16 17:11:01.566(Timestamp)
2019-07-16 17:11:01 -<==    Updates: 1
2019-07-16 17:11:01 -请求地址 : http://localhost:8081/index
2019-07-16 17:11:01 -HTTP METHOD : GET
2019-07-16 17:11:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-16 17:11:01 -参数 : [{}]
2019-07-16 17:11:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-16 17:11:02 -==> Parameters: 1(Long)
2019-07-16 17:11:02 -<==      Total: 51
2019-07-16 17:11:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-16 17:11:02 -==> Parameters: 138(Long)
2019-07-16 17:11:02 -<==      Total: 1
2019-07-16 17:11:02 -耗时 : 371
2019-07-16 17:11:02 -返回值 : index_v1
2019-07-16 17:11:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:11:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 371(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-16 17:11:02.414(Timestamp)
2019-07-16 17:11:02 -请求地址 : http://localhost:8081/main
2019-07-16 17:11:02 -HTTP METHOD : GET
2019-07-16 17:11:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 17:11:02 -参数 : []
2019-07-16 17:11:02 -耗时 : 1
2019-07-16 17:11:02 -返回值 : main
2019-07-16 17:11:02 -<==    Updates: 1
2019-07-16 17:11:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-16 17:11:03 -HTTP METHOD : GET
2019-07-16 17:11:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-16 17:11:03 -参数 : []
2019-07-16 17:11:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-16 17:11:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-16 17:11:03 -<==      Total: 0
2019-07-16 17:11:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-16 17:11:03 -==> Parameters: 1(Long), 0(String)
2019-07-16 17:11:03 -<==      Total: 1
2019-07-16 17:11:03 -耗时 : 101
2019-07-16 17:11:03 -返回值 : com.bootdo.common.utils.PageUtils@537eef04
2019-07-16 17:11:03 -请求地址 : http://localhost:8081/main
2019-07-16 17:11:03 -HTTP METHOD : GET
2019-07-16 17:11:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-16 17:11:03 -参数 : []
2019-07-16 17:11:03 -耗时 : 0
2019-07-16 17:11:03 -返回值 : main
2019-07-16 17:11:23 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-07-16 17:11:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-16 17:11:24 -==> Parameters: 1(Long)
2019-07-16 17:11:24 -<==      Total: 95
2019-07-16 17:11:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-16 17:11:24 -HTTP METHOD : GET
2019-07-16 17:11:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-16 17:11:24 -参数 : []
2019-07-16 17:11:24 -耗时 : 0
2019-07-16 17:11:24 -返回值 : moneyList/moneyList
2019-07-16 17:11:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-16 17:11:28 -HTTP METHOD : GET
2019-07-16 17:11:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-16 17:11:28 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-16 17:11:28 -耗时 : 0
2019-07-16 17:11:28 -返回值 : system/dept/deptTree
2019-07-16 17:11:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-16 17:11:29 -HTTP METHOD : GET
2019-07-16 17:11:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-16 17:11:29 -参数 : []
2019-07-16 17:11:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-16 17:11:29 -==> Parameters: 
2019-07-16 17:11:29 -<==      Total: 3
2019-07-16 17:11:29 -耗时 : 45
2019-07-16 17:11:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-16 17:11:31 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 17:11:31 -HTTP METHOD : POST
2019-07-16 17:11:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 17:11:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@233ed8e9]
2019-07-16 17:11:31 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:11:31 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:11:31 -<==      Total: 3
2019-07-16 17:11:31 -耗时 : 232
2019-07-16 17:11:31 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6b60e893, com.bootdo.moneyList.damain.MoneyListDO@7116a8bb, com.bootdo.moneyList.damain.MoneyListDO@2a93c134]
2019-07-16 17:11:35 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-16 17:11:35 -HTTP METHOD : POST
2019-07-16 17:11:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-16 17:11:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1d06497b]
2019-07-16 17:11:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:11:35 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:11:35 -<==      Total: 3
2019-07-16 17:11:35 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-16 17:11:35 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 17:11:35 -<==      Total: 1
2019-07-16 17:11:35 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-16 17:11:35 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 17:11:35 -<==      Total: 1
2019-07-16 17:11:35 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-16 17:11:35 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-16 17:11:35 -<==      Total: 0
2019-07-16 17:11:35 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:11:35 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:11:35 -<==    Updates: 1
2019-07-16 17:11:35 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:11:35 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-16 17:11:35.727(Timestamp), 2019-06(String), admin(String), 2019-07-16 17:11:35.727(Timestamp), admin(String), null
2019-07-16 17:11:36 -<==    Updates: 1
2019-07-16 17:11:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-16 17:11:36 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-16 17:11:35.727(Timestamp)
2019-07-16 17:11:36 -<==      Total: 1
2019-07-16 17:11:36 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-16 17:11:36 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 500.57(BigDecimal), 50(BigDecimal), 1600(Long)
2019-07-16 17:11:36 -<==    Updates: 1
2019-07-16 17:11:36 -耗时 : 592
2019-07-16 17:11:36 -返回值 : 1600
2019-07-16 17:11:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-16 17:11:37 -HTTP METHOD : POST
2019-07-16 17:11:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-16 17:11:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d6269b2]
2019-07-16 17:11:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-16 17:11:37 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-16 17:11:37 -<==      Total: 3
2019-07-16 17:11:37 -耗时 : 81
2019-07-16 17:11:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@66589a78, com.bootdo.moneyList.damain.MoneyListDO@1e12a412, com.bootdo.moneyList.damain.MoneyListDO@50f3619b]
2019-07-16 17:11:38 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001
2019-07-16 17:11:38 -HTTP METHOD : GET
2019-07-16 17:11:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-16 17:11:38 -参数 : [1600, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@5a261bc5, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@5a261bc5]
2019-07-16 17:11:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-16 17:11:38 -==> Parameters: 1600(Long)
2019-07-16 17:11:38 -<==      Total: 1
2019-07-16 17:11:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-16 17:11:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1600/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-16 17:11:38.295(Timestamp)
2019-07-16 17:11:38 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:388)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:377)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$277f77fa.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-16 17:11:38 -<==    Updates: 1

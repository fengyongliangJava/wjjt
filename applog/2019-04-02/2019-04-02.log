2019-04-02 09:40:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 3692 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 09:40:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 09:40:42 -The following profiles are active: dev
2019-04-02 09:40:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 09:40:42 CST 2019]; root of context hierarchy
2019-04-02 09:40:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 09:40:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec7c61e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded5908f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 09:40:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 09:40:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 09:40:54 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 09:40:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 09:40:54 -Starting service [Tomcat]
2019-04-02 09:40:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 09:40:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 09:40:55 -Initializing Spring embedded WebApplicationContext
2019-04-02 09:40:55 -Root WebApplicationContext: initialization completed in 12896 ms
2019-04-02 09:40:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 09:40:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 09:40:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 09:40:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 09:40:56 -Filter xssFilter was not registered (disabled)
2019-04-02 09:40:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 09:40:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 09:40:56 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 09:40:56 -Servlet dispatcherServlet mapped to [/]
2019-04-02 09:41:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 09:40:42 CST 2019]; root of context hierarchy
2019-04-02 09:41:01 -Using default implementation for ThreadExecutor
2019-04-02 09:41:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 09:41:01 -Quartz Scheduler v.2.2.1 created.
2019-04-02 09:41:01 -RAMJobStore initialized.
2019-04-02 09:41:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 09:41:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 09:41:01 -Quartz scheduler version: 2.2.1
2019-04-02 09:41:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7c901203
2019-04-02 09:41:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 09:41:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 09:41:04 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:04 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:04 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 09:41:04 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:04 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 09:41:04 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 09:41:04 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 09:41:04 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 09:41:04 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 09:41:04 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 09:41:04 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 09:41:04 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 09:41:04 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:04 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 09:41:04 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 09:41:04 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 09:41:04 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:04 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 09:41:04 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 09:41:04 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 09:41:04 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:04 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 09:41:04 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 09:41:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 09:41:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 09:41:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 09:41:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 09:41:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 09:41:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 09:41:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 09:41:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 09:41:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 09:41:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 09:41:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 09:41:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 09:41:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 09:41:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 09:41:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 09:41:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 09:41:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 09:41:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 09:41:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 09:41:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 09:41:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 09:41:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 09:41:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 09:41:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 09:41:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 09:41:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 09:41:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 09:41:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 09:41:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 09:41:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 09:41:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 09:41:05 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 09:41:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 09:41:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 09:41:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 09:41:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 09:41:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 09:41:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 09:41:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 09:41:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 09:41:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 09:41:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 09:41:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 09:41:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 09:41:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 09:41:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 09:41:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 09:41:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 09:41:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 09:41:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 09:41:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 09:41:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 09:41:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 09:41:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 09:41:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 09:41:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 09:41:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 09:41:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 09:41:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 09:41:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 09:41:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 09:41:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 09:41:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 09:41:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 09:41:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 09:41:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 09:41:05 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 09:41:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 09:41:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 09:41:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 09:41:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 09:41:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 09:41:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 09:41:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 09:41:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 09:41:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 09:41:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 09:41:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 09:41:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 09:41:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 09:41:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 09:40:42 CST 2019]; root of context hierarchy
2019-04-02 09:41:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 09:41:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 09:41:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 09:41:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 09:41:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 09:41:10 -Registering beans for JMX exposure on startup
2019-04-02 09:41:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 09:41:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 09:41:10 -Starting beans in phase 2147483647
2019-04-02 09:41:10 -Context refreshed
2019-04-02 09:41:11 -Found 1 custom documentation plugin(s)
2019-04-02 09:41:12 -Scanning for api listing references
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_1
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_2
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_3
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 09:41:18 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_2
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_2
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_2
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_4
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_5
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_2
2019-04-02 09:41:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_3
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_3
2019-04-02 09:41:18 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_3
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_6
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_7
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 09:41:18 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_4
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_4
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_4
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_8
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_9
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 09:41:18 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 09:41:18 -Generating unique operation named: ElecUsingGET_1
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_5
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_5
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_5
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_10
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_11
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 09:41:18 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_6
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_6
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_6
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_7
2019-04-02 09:41:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_7
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_12
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_13
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_7
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 09:41:18 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 09:41:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 09:41:18 -Generating unique operation named: addUsingGET_7
2019-04-02 09:41:18 -Generating unique operation named: editUsingGET_8
2019-04-02 09:41:18 -Generating unique operation named: listUsingGET_8
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_14
2019-04-02 09:41:18 -Generating unique operation named: removeUsingPOST_15
2019-04-02 09:41:18 -Generating unique operation named: saveUsingPOST_7
2019-04-02 09:41:18 -Generating unique operation named: updateUsingGET_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPOST_8
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPUT_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 09:41:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_8
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_9
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_9
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_16
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_17
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_9
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_10
2019-04-02 09:41:19 -Generating unique operation named: infoUsingGET_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingPOST_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingPUT_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 09:41:19 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_10
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_18
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_19
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_10
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_11
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_20
2019-04-02 09:41:19 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_10
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_11
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_12
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_21
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_10
2019-04-02 09:41:19 -Generating unique operation named: treeUsingGET_1
2019-04-02 09:41:19 -Generating unique operation named: treeUsingGET_2
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_11
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_11
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_12
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_13
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_22
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_23
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_12
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_13
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_14
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_24
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_25
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_13
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_13
2019-04-02 09:41:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_14
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_15
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_13
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_14
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_14
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_16
2019-04-02 09:41:19 -Generating unique operation named: listUsingHEAD_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingPOST_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingPUT_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingPATCH_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingDELETE_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 09:41:19 -Generating unique operation named: listUsingTRACE_1
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_14
2019-04-02 09:41:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_15
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_17
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_26
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_15
2019-04-02 09:41:19 -Generating unique operation named: treeUsingGET_3
2019-04-02 09:41:19 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_15
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_15
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_16
2019-04-02 09:41:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_18
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_27
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_28
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_16
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_16
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 09:41:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_16
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_17
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_19
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_29
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_30
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_17
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_17
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 09:41:19 -Generating unique operation named: addUsingGET_17
2019-04-02 09:41:19 -Generating unique operation named: editUsingGET_18
2019-04-02 09:41:19 -Generating unique operation named: listUsingGET_20
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_31
2019-04-02 09:41:19 -Generating unique operation named: removeUsingPOST_32
2019-04-02 09:41:19 -Generating unique operation named: saveUsingPOST_18
2019-04-02 09:41:19 -Generating unique operation named: updateUsingGET_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPOST_18
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPUT_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 09:41:19 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 09:41:19 -Starting Quartz Scheduler now
2019-04-02 09:41:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 09:41:19 -Starting...
2019-04-02 09:41:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 09:41:19 -Started.
2019-04-02 09:41:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 09:41:20 -Using a shared selector for servlet write/read
2019-04-02 09:41:20 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 09:41:20 -Started BootdoApplication in 38.978 seconds (JVM running for 39.865)
2019-04-02 09:41:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 09:41:20 -==> Parameters: 
2019-04-02 09:41:20 -<==      Total: 1
2019-04-02 09:42:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-02 09:42:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 09:42:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 09:42:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2019-04-02 09:42:19 -Enabling session validation scheduler...
2019-04-02 09:42:20 -请求地址 : http://localhost:8081/login;JSESSIONID=6ea05af8-71a1-4174-b2be-3bf038161d26
2019-04-02 09:42:20 -HTTP METHOD : GET
2019-04-02 09:42:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 09:42:20 -参数 : [{}]
2019-04-02 09:42:20 -耗时 : 4
2019-04-02 09:42:20 -返回值 : login
2019-04-02 09:42:26 -请求地址 : http://localhost:8081/getVerify
2019-04-02 09:42:26 -HTTP METHOD : GET
2019-04-02 09:42:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 09:42:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@26156aad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7366ff82]
2019-04-02 09:42:32 -4123
2019-04-02 09:42:32 -耗时 : 5912
2019-04-02 09:42:32 -返回值 : null
2019-04-02 09:42:38 -请求地址 : http://localhost:8081/login
2019-04-02 09:42:38 -HTTP METHOD : POST
2019-04-02 09:42:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 09:42:38 -参数 : [admin, 111111, 4123, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6feb40e8]
2019-04-02 09:42:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 09:42:38 -==> Parameters: admin(String)
2019-04-02 09:42:39 -<==      Total: 1
2019-04-02 09:42:39 -耗时 : 611
2019-04-02 09:42:39 -返回值 : {msg=操作成功, code=0}
2019-04-02 09:42:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 09:42:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 09:42:39 -==> Parameters: 1(Long), admin(String), 登录(String), 611(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 09:42:39.487(Timestamp)
2019-04-02 09:42:40 -请求地址 : http://localhost:8081/index
2019-04-02 09:42:40 -HTTP METHOD : GET
2019-04-02 09:42:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 09:42:40 -参数 : [{}]
2019-04-02 09:42:40 -<==    Updates: 1
2019-04-02 09:42:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 09:42:40 -==> Parameters: 1(Long)
2019-04-02 09:42:41 -<==      Total: 46
2019-04-02 09:42:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 09:42:41 -==> Parameters: 138(Long)
2019-04-02 09:42:41 -<==      Total: 1
2019-04-02 09:42:41 -耗时 : 1367
2019-04-02 09:42:41 -返回值 : index_v1
2019-04-02 09:42:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 09:42:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1367(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 09:42:41.694(Timestamp)
2019-04-02 09:42:41 -<==    Updates: 1
2019-04-02 09:42:42 -请求地址 : http://localhost:8081/main
2019-04-02 09:42:42 -HTTP METHOD : GET
2019-04-02 09:42:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 09:42:42 -参数 : []
2019-04-02 09:42:42 -耗时 : 0
2019-04-02 09:42:42 -返回值 : main
2019-04-02 09:42:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 09:42:45 -HTTP METHOD : GET
2019-04-02 09:42:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 09:42:45 -参数 : []
2019-04-02 09:42:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 09:42:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 09:42:45 -<==      Total: 0
2019-04-02 09:42:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 09:42:45 -==> Parameters: 1(Long), 0(String)
2019-04-02 09:42:45 -请求地址 : http://localhost:8081/main
2019-04-02 09:42:45 -HTTP METHOD : GET
2019-04-02 09:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 09:42:45 -参数 : []
2019-04-02 09:42:45 -耗时 : 1
2019-04-02 09:42:45 -返回值 : main
2019-04-02 09:42:45 -<==      Total: 1
2019-04-02 09:42:45 -耗时 : 626
2019-04-02 09:42:45 -返回值 : com.bootdo.common.utils.PageUtils@5d85a5af
2019-04-02 09:43:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 09:43:37 -==> Parameters: 1(Long)
2019-04-02 09:43:37 -<==      Total: 90
2019-04-02 09:43:37 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 09:43:37 -HTTP METHOD : GET
2019-04-02 09:43:37 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 09:43:37 -参数 : []
2019-04-02 09:43:37 -耗时 : 0
2019-04-02 09:43:37 -返回值 : charts/countOwe
2019-04-02 09:43:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 09:43:38 -HTTP METHOD : GET
2019-04-02 09:43:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 09:43:38 -参数 : [userType]
2019-04-02 09:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 09:43:39 -==> Parameters: userType(String)
2019-04-02 09:43:39 -<==      Total: 2
2019-04-02 09:43:39 -耗时 : 234
2019-04-02 09:43:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 09:43:46 -请求地址 : http://localhost:8081/charts/countMM
2019-04-02 09:43:46 -HTTP METHOD : GET
2019-04-02 09:43:46 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-02 09:43:46 -参数 : []
2019-04-02 09:43:46 -耗时 : 0
2019-04-02 09:43:46 -返回值 : charts/countMM
2019-04-02 09:43:47 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 09:43:47 -HTTP METHOD : GET
2019-04-02 09:43:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 09:43:47 -参数 : []
2019-04-02 09:43:47 -耗时 : 1
2019-04-02 09:43:47 -返回值 : charts/countDD
2019-04-02 09:43:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 09:43:47 -HTTP METHOD : GET
2019-04-02 09:43:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 09:43:47 -参数 : [userType]
2019-04-02 09:43:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 09:43:47 -==> Parameters: userType(String)
2019-04-02 09:43:47 -<==      Total: 2
2019-04-02 09:43:47 -耗时 : 5
2019-04-02 09:43:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 09:43:59 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 09:43:59 -HTTP METHOD : GET
2019-04-02 09:43:59 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 09:43:59 -参数 : []
2019-04-02 09:43:59 -耗时 : 2
2019-04-02 09:43:59 -返回值 : charts/countYY
2019-04-02 09:44:05 -请求地址 : http://localhost:8081/charts/countRun
2019-04-02 09:44:05 -HTTP METHOD : GET
2019-04-02 09:44:05 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-04-02 09:44:05 -参数 : []
2019-04-02 09:44:05 -耗时 : 2
2019-04-02 09:44:05 -返回值 : charts/countRun
2019-04-02 10:12:06 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 423]
2019-04-02 10:42:06 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 856]
2019-04-02 10:42:19 -Validating all active sessions...
2019-04-02 10:42:19 -Finished session validation.  [1] sessions were stopped.
2019-04-02 10:54:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 11204 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 10:54:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 10:54:47 -The following profiles are active: dev
2019-04-02 10:54:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 10:54:47 CST 2019]; root of context hierarchy
2019-04-02 10:54:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 10:54:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b64ed7a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a8a80648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 10:54:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 10:54:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 10:54:54 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 10:54:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 10:54:54 -Starting service [Tomcat]
2019-04-02 10:54:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 10:54:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 10:54:55 -Initializing Spring embedded WebApplicationContext
2019-04-02 10:54:55 -Root WebApplicationContext: initialization completed in 7985 ms
2019-04-02 10:54:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 10:54:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 10:54:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 10:54:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 10:54:56 -Filter xssFilter was not registered (disabled)
2019-04-02 10:54:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 10:54:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 10:54:56 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 10:54:56 -Servlet dispatcherServlet mapped to [/]
2019-04-02 10:54:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 10:54:47 CST 2019]; root of context hierarchy
2019-04-02 10:54:59 -Using default implementation for ThreadExecutor
2019-04-02 10:54:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 10:54:59 -Quartz Scheduler v.2.2.1 created.
2019-04-02 10:54:59 -RAMJobStore initialized.
2019-04-02 10:54:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 10:54:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 10:54:59 -Quartz scheduler version: 2.2.1
2019-04-02 10:54:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5b44318
2019-04-02 10:54:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 10:54:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 10:55:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 10:55:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 10:55:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 10:55:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-02 10:55:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 10:55:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 10:55:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 10:55:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 10:55:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 10:55:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 10:55:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 10:55:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 10:55:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 10:55:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 10:55:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 10:55:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 10:55:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 10:55:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 10:55:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 10:55:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 10:55:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 10:55:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 10:55:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 10:55:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 10:55:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 10:55:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 10:55:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 10:55:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 10:55:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 10:55:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 10:55:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 10:55:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 10:55:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 10:55:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 10:55:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 10:55:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 10:55:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 10:55:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 10:55:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 10:55:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 10:55:02 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 10:55:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 10:55:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 10:55:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 10:55:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 10:55:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 10:55:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 10:55:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 10:55:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 10:55:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 10:55:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 10:55:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 10:55:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 10:55:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 10:55:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 10:55:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 10:55:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 10:55:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 10:55:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 10:55:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 10:55:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 10:55:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 10:55:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 10:55:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 10:55:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 10:55:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 10:55:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 10:55:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 10:55:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 10:55:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 10:55:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 10:55:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 10:55:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 10:55:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 10:55:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 10:55:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 10:55:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 10:55:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 10:55:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 10:55:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 10:55:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 10:55:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 10:55:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 10:55:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 10:55:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 10:55:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 10:55:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 10:55:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 10:55:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 10:55:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 10:55:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 10:54:47 CST 2019]; root of context hierarchy
2019-04-02 10:55:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 10:55:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 10:55:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 10:55:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 10:55:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 10:55:06 -Registering beans for JMX exposure on startup
2019-04-02 10:55:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 10:55:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 10:55:06 -Starting beans in phase 2147483647
2019-04-02 10:55:06 -Context refreshed
2019-04-02 10:55:06 -Found 1 custom documentation plugin(s)
2019-04-02 10:55:06 -Scanning for api listing references
2019-04-02 10:55:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 10:55:06 -Generating unique operation named: removeUsingPOST_1
2019-04-02 10:55:06 -Generating unique operation named: addUsingGET_1
2019-04-02 10:55:06 -Generating unique operation named: editUsingGET_1
2019-04-02 10:55:06 -Generating unique operation named: listUsingGET_1
2019-04-02 10:55:06 -Generating unique operation named: removeUsingPOST_2
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_3
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_2
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_2
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_2
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_4
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_5
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_2
2019-04-02 10:55:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_3
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_3
2019-04-02 10:55:07 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_3
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_6
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_7
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_4
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_4
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_4
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_8
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_9
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 10:55:07 -Generating unique operation named: ElecUsingGET_1
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_5
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_5
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_5
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_10
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_11
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_6
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_6
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_6
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_7
2019-04-02 10:55:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_7
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_12
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_13
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 10:55:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_7
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_8
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_8
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_14
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_15
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_8
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_8
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_9
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_9
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_16
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_17
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_8
2019-04-02 10:55:07 -Generating unique operation named: updateUsingGET_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_9
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPUT_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 10:55:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 10:55:07 -Generating unique operation named: addUsingGET_9
2019-04-02 10:55:07 -Generating unique operation named: editUsingGET_10
2019-04-02 10:55:07 -Generating unique operation named: infoUsingGET_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingPOST_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingPUT_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 10:55:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_10
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_18
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_19
2019-04-02 10:55:07 -Generating unique operation named: saveUsingPOST_9
2019-04-02 10:55:07 -Generating unique operation named: updateUsingPOST_10
2019-04-02 10:55:07 -Generating unique operation named: listUsingGET_11
2019-04-02 10:55:07 -Generating unique operation named: removeUsingPOST_20
2019-04-02 10:55:07 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_10
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_11
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_12
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_21
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_10
2019-04-02 10:55:08 -Generating unique operation named: treeUsingGET_1
2019-04-02 10:55:08 -Generating unique operation named: treeUsingGET_2
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_11
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_11
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_12
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_13
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_22
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_23
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingGET_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPUT_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 10:55:08 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_12
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_13
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_14
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_24
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_25
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingGET_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_13
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPUT_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 10:55:08 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_13
2019-04-02 10:55:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_14
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_15
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_13
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_14
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_14
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_16
2019-04-02 10:55:08 -Generating unique operation named: listUsingHEAD_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingPOST_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingPUT_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingPATCH_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingDELETE_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 10:55:08 -Generating unique operation named: listUsingTRACE_1
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_14
2019-04-02 10:55:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_15
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_17
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_26
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_15
2019-04-02 10:55:08 -Generating unique operation named: treeUsingGET_3
2019-04-02 10:55:08 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_15
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_15
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_16
2019-04-02 10:55:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_18
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_27
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_28
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_16
2019-04-02 10:55:08 -Generating unique operation named: updateUsingGET_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_16
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPUT_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 10:55:08 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 10:55:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_16
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_17
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_19
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_29
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_30
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_17
2019-04-02 10:55:08 -Generating unique operation named: updateUsingGET_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_17
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPUT_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 10:55:08 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 10:55:08 -Generating unique operation named: addUsingGET_17
2019-04-02 10:55:08 -Generating unique operation named: editUsingGET_18
2019-04-02 10:55:08 -Generating unique operation named: listUsingGET_20
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_31
2019-04-02 10:55:08 -Generating unique operation named: removeUsingPOST_32
2019-04-02 10:55:08 -Generating unique operation named: saveUsingPOST_18
2019-04-02 10:55:08 -Generating unique operation named: updateUsingGET_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPOST_18
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPUT_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 10:55:08 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 10:55:08 -Starting Quartz Scheduler now
2019-04-02 10:55:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 10:55:08 -Starting...
2019-04-02 10:55:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 10:55:08 -Started.
2019-04-02 10:55:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 10:55:09 -Using a shared selector for servlet write/read
2019-04-02 10:55:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 10:55:09 -Started BootdoApplication in 23.16 seconds (JVM running for 23.967)
2019-04-02 10:55:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 10:55:09 -==> Parameters: 
2019-04-02 10:55:09 -<==      Total: 1
2019-04-02 10:55:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 10:55:16 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 10:55:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 128 ms
2019-04-02 10:55:16 -Enabling session validation scheduler...
2019-04-02 10:55:16 -请求地址 : http://localhost:8081/login;JSESSIONID=ca1be414-90fb-4b7e-9b41-4e60403fa087
2019-04-02 10:55:16 -HTTP METHOD : GET
2019-04-02 10:55:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 10:55:16 -参数 : [{}]
2019-04-02 10:55:16 -耗时 : 3
2019-04-02 10:55:16 -返回值 : login
2019-04-02 10:55:18 -请求地址 : http://localhost:8081/getVerify
2019-04-02 10:55:18 -HTTP METHOD : GET
2019-04-02 10:55:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 10:55:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e00f122, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ea99cde]
2019-04-02 10:55:29 -4697
2019-04-02 10:55:29 -耗时 : 11289
2019-04-02 10:55:29 -返回值 : null
2019-04-02 10:55:30 -请求地址 : http://localhost:8081/login
2019-04-02 10:55:30 -HTTP METHOD : GET
2019-04-02 10:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 10:55:30 -参数 : [{}]
2019-04-02 10:55:30 -耗时 : 1
2019-04-02 10:55:30 -返回值 : login
2019-04-02 10:55:34 -请求地址 : http://localhost:8081/login
2019-04-02 10:55:34 -HTTP METHOD : POST
2019-04-02 10:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 10:55:34 -参数 : [admin, 111111, 4697, org.apache.shiro.web.servlet.ShiroHttpServletRequest@631014cd]
2019-04-02 10:55:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 10:55:35 -==> Parameters: admin(String)
2019-04-02 10:55:35 -<==      Total: 1
2019-04-02 10:55:35 -耗时 : 214
2019-04-02 10:55:35 -返回值 : {msg=操作成功, code=0}
2019-04-02 10:55:35 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 10:55:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 10:55:35 -==> Parameters: 1(Long), admin(String), 登录(String), 214(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 10:55:35.169(Timestamp)
2019-04-02 10:55:35 -请求地址 : http://localhost:8081/index
2019-04-02 10:55:35 -HTTP METHOD : GET
2019-04-02 10:55:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 10:55:35 -参数 : [{}]
2019-04-02 10:55:35 -<==    Updates: 1
2019-04-02 10:55:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 10:55:35 -==> Parameters: 1(Long)
2019-04-02 10:55:35 -<==      Total: 46
2019-04-02 10:55:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 10:55:35 -==> Parameters: 138(Long)
2019-04-02 10:55:36 -<==      Total: 1
2019-04-02 10:55:36 -耗时 : 706
2019-04-02 10:55:36 -返回值 : index_v1
2019-04-02 10:55:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 10:55:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 707(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 10:55:36.07(Timestamp)
2019-04-02 10:55:36 -<==    Updates: 1
2019-04-02 10:55:36 -请求地址 : http://localhost:8081/main
2019-04-02 10:55:36 -HTTP METHOD : GET
2019-04-02 10:55:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 10:55:36 -参数 : []
2019-04-02 10:55:36 -耗时 : 1
2019-04-02 10:55:36 -返回值 : main
2019-04-02 10:55:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 10:55:36 -HTTP METHOD : GET
2019-04-02 10:55:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 10:55:36 -参数 : []
2019-04-02 10:55:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 10:55:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 10:55:36 -<==      Total: 0
2019-04-02 10:55:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 10:55:36 -请求地址 : http://localhost:8081/main
2019-04-02 10:55:36 -HTTP METHOD : GET
2019-04-02 10:55:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 10:55:36 -参数 : []
2019-04-02 10:55:36 -耗时 : 2
2019-04-02 10:55:36 -返回值 : main
2019-04-02 10:55:36 -==> Parameters: 1(Long), 0(String)
2019-04-02 10:55:36 -<==      Total: 1
2019-04-02 10:55:36 -耗时 : 241
2019-04-02 10:55:36 -返回值 : com.bootdo.common.utils.PageUtils@30e88c5f
2019-04-02 10:55:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 10:55:44 -==> Parameters: 1(Long)
2019-04-02 10:55:44 -<==      Total: 90
2019-04-02 10:55:44 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 10:55:44 -HTTP METHOD : GET
2019-04-02 10:55:44 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 10:55:44 -参数 : []
2019-04-02 10:55:44 -耗时 : 0
2019-04-02 10:55:44 -返回值 : charts/countOwe
2019-04-02 10:55:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 10:55:45 -HTTP METHOD : GET
2019-04-02 10:55:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 10:55:45 -参数 : [userType]
2019-04-02 10:55:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 10:55:45 -==> Parameters: userType(String)
2019-04-02 10:55:45 -<==      Total: 2
2019-04-02 10:55:45 -耗时 : 52
2019-04-02 10:55:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 10:56:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-02 11:05:26 -请求地址 : http://localhost:8081/index
2019-04-02 11:05:26 -HTTP METHOD : GET
2019-04-02 11:05:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:05:26 -参数 : [{}]
2019-04-02 11:05:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:05:26 -==> Parameters: 1(Long)
2019-04-02 11:05:26 -<==      Total: 46
2019-04-02 11:05:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:05:26 -==> Parameters: 138(Long)
2019-04-02 11:05:26 -<==      Total: 1
2019-04-02 11:05:26 -耗时 : 179
2019-04-02 11:05:26 -返回值 : index_v1
2019-04-02 11:05:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:05:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 179(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:05:26.448(Timestamp)
2019-04-02 11:05:26 -请求地址 : http://localhost:8081/main
2019-04-02 11:05:26 -HTTP METHOD : GET
2019-04-02 11:05:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:05:26 -参数 : []
2019-04-02 11:05:26 -耗时 : 1
2019-04-02 11:05:26 -返回值 : main
2019-04-02 11:05:26 -<==    Updates: 1
2019-04-02 11:05:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:05:27 -HTTP METHOD : GET
2019-04-02 11:05:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:05:27 -参数 : []
2019-04-02 11:05:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:05:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:05:27 -<==      Total: 0
2019-04-02 11:05:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:05:27 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:05:27 -<==      Total: 1
2019-04-02 11:05:27 -耗时 : 8
2019-04-02 11:05:27 -返回值 : com.bootdo.common.utils.PageUtils@39be98a3
2019-04-02 11:05:27 -请求地址 : http://localhost:8081/main
2019-04-02 11:05:27 -HTTP METHOD : GET
2019-04-02 11:05:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:05:27 -参数 : []
2019-04-02 11:05:27 -耗时 : 0
2019-04-02 11:05:27 -返回值 : main
2019-04-02 11:05:31 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:05:31 -HTTP METHOD : GET
2019-04-02 11:05:31 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:05:31 -参数 : []
2019-04-02 11:05:31 -耗时 : 0
2019-04-02 11:05:31 -返回值 : charts/countOwe
2019-04-02 11:05:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:05:31 -HTTP METHOD : GET
2019-04-02 11:05:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:05:31 -参数 : [userType]
2019-04-02 11:05:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:05:31 -==> Parameters: userType(String)
2019-04-02 11:05:31 -<==      Total: 2
2019-04-02 11:05:31 -耗时 : 10
2019-04-02 11:05:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:05:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 11:05:41 -HTTP METHOD : GET
2019-04-02 11:05:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 11:05:41 -参数 : []
2019-04-02 11:05:41 -耗时 : 1
2019-04-02 11:05:41 -返回值 : system/dept/deptTree
2019-04-02 11:05:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 11:05:42 -HTTP METHOD : GET
2019-04-02 11:05:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 11:05:42 -参数 : []
2019-04-02 11:05:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 11:05:42 -==> Parameters: 
2019-04-02 11:05:42 -<==      Total: 3
2019-04-02 11:05:42 -耗时 : 54
2019-04-02 11:05:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 11:10:40 -Starting BootdoApplication on ZJZL-20180906VX with PID 1460 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 11:10:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 11:10:40 -The following profiles are active: dev
2019-04-02 11:10:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:10:41 CST 2019]; root of context hierarchy
2019-04-02 11:10:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 11:10:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$740a37bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$66636664] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 11:10:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 11:10:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:10:53 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 11:10:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 11:10:54 -Starting service [Tomcat]
2019-04-02 11:10:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 11:10:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 11:10:54 -Initializing Spring embedded WebApplicationContext
2019-04-02 11:10:54 -Root WebApplicationContext: initialization completed in 13767 ms
2019-04-02 11:10:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 11:10:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 11:10:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 11:10:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 11:10:56 -Filter xssFilter was not registered (disabled)
2019-04-02 11:10:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 11:10:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 11:10:56 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 11:10:56 -Servlet dispatcherServlet mapped to [/]
2019-04-02 11:11:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:10:41 CST 2019]; root of context hierarchy
2019-04-02 11:11:02 -Using default implementation for ThreadExecutor
2019-04-02 11:11:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 11:11:02 -Quartz Scheduler v.2.2.1 created.
2019-04-02 11:11:02 -RAMJobStore initialized.
2019-04-02 11:11:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 11:11:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 11:11:02 -Quartz scheduler version: 2.2.1
2019-04-02 11:11:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5873f3f0
2019-04-02 11:11:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 11:11:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 11:11:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 11:11:08 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 11:11:08 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-02 11:11:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 11:11:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 11:11:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 11:11:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 11:11:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 11:11:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 11:11:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 11:11:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 11:11:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 11:11:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 11:11:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 11:11:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 11:11:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 11:11:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:11:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 11:11:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:11:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 11:11:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 11:11:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 11:11:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 11:11:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 11:11:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 11:11:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 11:11:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 11:11:09 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 11:11:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 11:11:09 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:11:09 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:11:09 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:11:09 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 11:11:09 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 11:11:09 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 11:11:09 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 11:11:09 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 11:11:09 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 11:11:09 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 11:11:09 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 11:11:09 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:11:09 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:11:09 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 11:11:09 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 11:11:09 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 11:11:09 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:11:09 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 11:11:09 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 11:11:09 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 11:11:09 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 11:11:09 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 11:11:09 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 11:11:09 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 11:11:09 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 11:11:09 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 11:11:09 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 11:11:09 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 11:11:09 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 11:11:09 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 11:11:09 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 11:11:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 11:11:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 11:11:09 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 11:11:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 11:11:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 11:11:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 11:11:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 11:11:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 11:11:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 11:11:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 11:11:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 11:11:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 11:11:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 11:11:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 11:11:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 11:11:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 11:11:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:11:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:11:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 11:11:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 11:11:09 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 11:11:09 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 11:11:09 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 11:11:09 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 11:11:09 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:11:09 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 11:11:09 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:11:09 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:11:09 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 11:11:09 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 11:11:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:11:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 11:11:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 11:11:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 11:11:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 11:11:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 11:11:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 11:11:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:11:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:10:41 CST 2019]; root of context hierarchy
2019-04-02 11:11:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:11:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:11:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:11:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 11:11:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 11:11:15 -Registering beans for JMX exposure on startup
2019-04-02 11:11:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 11:11:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 11:11:15 -Starting beans in phase 2147483647
2019-04-02 11:11:15 -Context refreshed
2019-04-02 11:11:15 -Found 1 custom documentation plugin(s)
2019-04-02 11:11:15 -Scanning for api listing references
2019-04-02 11:11:17 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_1
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_2
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_3
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_2
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_2
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_2
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_4
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_5
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_2
2019-04-02 11:11:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_3
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_3
2019-04-02 11:11:18 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_3
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_6
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_7
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_4
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_4
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_4
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_8
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_9
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 11:11:18 -Generating unique operation named: ElecUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_5
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_5
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_5
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_10
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_11
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_6
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_6
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_6
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_7
2019-04-02 11:11:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_7
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_12
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_13
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 11:11:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_7
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_8
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_8
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_14
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_15
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_8
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_8
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_9
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_9
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_16
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_17
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_8
2019-04-02 11:11:18 -Generating unique operation named: updateUsingGET_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_9
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPUT_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 11:11:18 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 11:11:18 -Generating unique operation named: addUsingGET_9
2019-04-02 11:11:18 -Generating unique operation named: editUsingGET_10
2019-04-02 11:11:18 -Generating unique operation named: infoUsingGET_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingPOST_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingPUT_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 11:11:18 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_10
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_18
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_19
2019-04-02 11:11:18 -Generating unique operation named: saveUsingPOST_9
2019-04-02 11:11:18 -Generating unique operation named: updateUsingPOST_10
2019-04-02 11:11:18 -Generating unique operation named: listUsingGET_11
2019-04-02 11:11:18 -Generating unique operation named: removeUsingPOST_20
2019-04-02 11:11:18 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_10
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_11
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_12
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_21
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_10
2019-04-02 11:11:19 -Generating unique operation named: treeUsingGET_1
2019-04-02 11:11:19 -Generating unique operation named: treeUsingGET_2
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_11
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_11
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_12
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_13
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_22
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_23
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingGET_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPUT_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 11:11:19 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_12
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_13
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_14
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_24
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_25
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingGET_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_13
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPUT_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 11:11:19 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_13
2019-04-02 11:11:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_14
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_15
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_13
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_14
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_14
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_16
2019-04-02 11:11:19 -Generating unique operation named: listUsingHEAD_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingPOST_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingPUT_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingPATCH_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingDELETE_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 11:11:19 -Generating unique operation named: listUsingTRACE_1
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_14
2019-04-02 11:11:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_15
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_17
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_26
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_15
2019-04-02 11:11:19 -Generating unique operation named: treeUsingGET_3
2019-04-02 11:11:19 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_15
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_15
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_16
2019-04-02 11:11:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_18
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_27
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_28
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_16
2019-04-02 11:11:19 -Generating unique operation named: updateUsingGET_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_16
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPUT_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 11:11:19 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 11:11:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_16
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_17
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_19
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_29
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_30
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_17
2019-04-02 11:11:19 -Generating unique operation named: updateUsingGET_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_17
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPUT_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 11:11:19 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 11:11:19 -Generating unique operation named: addUsingGET_17
2019-04-02 11:11:19 -Generating unique operation named: editUsingGET_18
2019-04-02 11:11:19 -Generating unique operation named: listUsingGET_20
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_31
2019-04-02 11:11:19 -Generating unique operation named: removeUsingPOST_32
2019-04-02 11:11:19 -Generating unique operation named: saveUsingPOST_18
2019-04-02 11:11:19 -Generating unique operation named: updateUsingGET_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPOST_18
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPUT_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 11:11:19 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 11:11:19 -Starting Quartz Scheduler now
2019-04-02 11:11:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 11:11:19 -Starting...
2019-04-02 11:11:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 11:11:19 -Started.
2019-04-02 11:11:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 11:11:19 -Using a shared selector for servlet write/read
2019-04-02 11:11:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 11:11:19 -Started BootdoApplication in 40.331 seconds (JVM running for 41.385)
2019-04-02 11:11:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 11:11:20 -==> Parameters: 
2019-04-02 11:11:20 -<==      Total: 1
2019-04-02 11:11:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 11:11:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 11:11:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-04-02 11:11:35 -Enabling session validation scheduler...
2019-04-02 11:11:35 -请求地址 : http://localhost:8081/login;JSESSIONID=b7d27e94-3649-41a4-9754-cf17f0aef528
2019-04-02 11:11:35 -HTTP METHOD : GET
2019-04-02 11:11:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 11:11:35 -参数 : [{}]
2019-04-02 11:11:35 -耗时 : 3
2019-04-02 11:11:35 -返回值 : login
2019-04-02 11:11:37 -请求地址 : http://localhost:8081/getVerify
2019-04-02 11:11:37 -HTTP METHOD : GET
2019-04-02 11:11:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 11:11:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@284c4853, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c73d982]
2019-04-02 11:11:41 -3031
2019-04-02 11:11:41 -耗时 : 3303
2019-04-02 11:11:41 -返回值 : null
2019-04-02 11:11:41 -请求地址 : http://localhost:8081/login
2019-04-02 11:11:41 -HTTP METHOD : GET
2019-04-02 11:11:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 11:11:41 -参数 : [{}]
2019-04-02 11:11:41 -耗时 : 0
2019-04-02 11:11:41 -返回值 : login
2019-04-02 11:11:48 -请求地址 : http://localhost:8081/login
2019-04-02 11:11:48 -HTTP METHOD : POST
2019-04-02 11:11:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 11:11:48 -参数 : [admin, 111111, 3031, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5261a56a]
2019-04-02 11:11:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 11:11:48 -==> Parameters: admin(String)
2019-04-02 11:11:48 -<==      Total: 1
2019-04-02 11:11:48 -耗时 : 203
2019-04-02 11:11:48 -返回值 : {msg=操作成功, code=0}
2019-04-02 11:11:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 11:11:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:11:48 -==> Parameters: 1(Long), admin(String), 登录(String), 204(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 11:11:48.847(Timestamp)
2019-04-02 11:11:48 -请求地址 : http://localhost:8081/index
2019-04-02 11:11:48 -HTTP METHOD : GET
2019-04-02 11:11:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:11:48 -参数 : [{}]
2019-04-02 11:11:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:11:49 -<==    Updates: 1
2019-04-02 11:11:49 -==> Parameters: 1(Long)
2019-04-02 11:11:49 -<==      Total: 46
2019-04-02 11:11:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:11:49 -==> Parameters: 138(Long)
2019-04-02 11:11:49 -<==      Total: 1
2019-04-02 11:11:49 -耗时 : 521
2019-04-02 11:11:49 -返回值 : index_v1
2019-04-02 11:11:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:11:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 521(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:11:49.504(Timestamp)
2019-04-02 11:11:49 -请求地址 : http://localhost:8081/main
2019-04-02 11:11:49 -HTTP METHOD : GET
2019-04-02 11:11:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:11:49 -参数 : []
2019-04-02 11:11:49 -耗时 : 1
2019-04-02 11:11:49 -返回值 : main
2019-04-02 11:11:49 -<==    Updates: 1
2019-04-02 11:11:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:11:50 -HTTP METHOD : GET
2019-04-02 11:11:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:11:50 -参数 : []
2019-04-02 11:11:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:11:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:11:50 -请求地址 : http://localhost:8081/main
2019-04-02 11:11:50 -HTTP METHOD : GET
2019-04-02 11:11:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:11:50 -参数 : []
2019-04-02 11:11:50 -耗时 : 1
2019-04-02 11:11:50 -返回值 : main
2019-04-02 11:11:51 -<==      Total: 0
2019-04-02 11:11:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:11:51 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:11:51 -<==      Total: 1
2019-04-02 11:11:51 -耗时 : 1001
2019-04-02 11:11:51 -返回值 : com.bootdo.common.utils.PageUtils@20f375db
2019-04-02 11:12:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 11:12:05 -==> Parameters: 1(Long)
2019-04-02 11:12:05 -<==      Total: 90
2019-04-02 11:12:05 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:12:05 -HTTP METHOD : GET
2019-04-02 11:12:05 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:12:05 -参数 : []
2019-04-02 11:12:05 -耗时 : 1
2019-04-02 11:12:05 -返回值 : charts/countOwe
2019-04-02 11:12:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:12:06 -HTTP METHOD : GET
2019-04-02 11:12:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:12:06 -参数 : [userType]
2019-04-02 11:12:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:12:06 -==> Parameters: userType(String)
2019-04-02 11:12:06 -<==      Total: 2
2019-04-02 11:12:06 -耗时 : 97
2019-04-02 11:12:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:12:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-02 11:12:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 11:12:14 -HTTP METHOD : GET
2019-04-02 11:12:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 11:12:14 -参数 : []
2019-04-02 11:12:14 -耗时 : 0
2019-04-02 11:12:14 -返回值 : system/dept/deptTree
2019-04-02 11:12:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 11:12:14 -HTTP METHOD : GET
2019-04-02 11:12:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 11:12:14 -参数 : []
2019-04-02 11:12:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 11:12:14 -==> Parameters: 
2019-04-02 11:12:14 -<==      Total: 3
2019-04-02 11:12:14 -耗时 : 26
2019-04-02 11:12:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 11:12:17 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:12:17 -HTTP METHOD : POST
2019-04-02 11:12:17 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:12:17 -参数 : [com.bootdo.elec.vo.ElecVo@73a83b3d, com.bootdo.water.vo.WaterVo@58881e88, com.bootdo.heat.vo.HeatVo@421877ac]
2019-04-02 11:12:17 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:12:17 -==> Parameters: 
2019-04-02 11:12:17 -<==      Total: 1
2019-04-02 11:12:17 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:12:17 -==> Parameters: 
2019-04-02 11:12:17 -<==      Total: 1
2019-04-02 11:12:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:12:17 -==> Parameters: 
2019-04-02 11:12:18 -<==      Total: 1
2019-04-02 11:12:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:12:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countOwe/getCountOwe(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.waterSumOwe(String), null, 2019-04-02 11:12:18.087(Timestamp)
2019-04-02 11:12:18 -Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.waterSumOwe
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.water.dao.WaterDao.waterSumOwe
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy107.waterSumOwe(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.WaterSumOwe(WaterServiceImpl.java:68)
	at com.bootdo.charts.controller.countOweController.getCountD(countOweController.java:55)
	at com.bootdo.charts.controller.countOweController$$FastClassBySpringCGLIB$$3b54d947.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countOweController$$EnhancerBySpringCGLIB$$36175aeb.getCountD(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-02 11:12:18 -<==    Updates: 1
2019-04-02 11:18:29 -Starting BootdoApplication on ZJZL-20180906VX with PID 748 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 11:18:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 11:18:29 -The following profiles are active: dev
2019-04-02 11:18:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:18:30 CST 2019]; root of context hierarchy
2019-04-02 11:18:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 11:18:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$178e271] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f3d21118] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 11:18:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 11:18:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:18:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 11:18:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 11:18:41 -Starting service [Tomcat]
2019-04-02 11:18:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 11:18:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 11:18:41 -Initializing Spring embedded WebApplicationContext
2019-04-02 11:18:41 -Root WebApplicationContext: initialization completed in 11516 ms
2019-04-02 11:18:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 11:18:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 11:18:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 11:18:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 11:18:42 -Filter xssFilter was not registered (disabled)
2019-04-02 11:18:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 11:18:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 11:18:42 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 11:18:42 -Servlet dispatcherServlet mapped to [/]
2019-04-02 11:18:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:18:30 CST 2019]; root of context hierarchy
2019-04-02 11:18:47 -Using default implementation for ThreadExecutor
2019-04-02 11:18:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 11:18:47 -Quartz Scheduler v.2.2.1 created.
2019-04-02 11:18:47 -RAMJobStore initialized.
2019-04-02 11:18:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 11:18:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 11:18:47 -Quartz scheduler version: 2.2.1
2019-04-02 11:18:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@63dda940
2019-04-02 11:18:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 11:18:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 11:18:52 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 11:18:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 11:18:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 11:18:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-02 11:18:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 11:18:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 11:18:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 11:18:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 11:18:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 11:18:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 11:18:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 11:18:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 11:18:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 11:18:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 11:18:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 11:18:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:18:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 11:18:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:18:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 11:18:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 11:18:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 11:18:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 11:18:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 11:18:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 11:18:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 11:18:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 11:18:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 11:18:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 11:18:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 11:18:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 11:18:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 11:18:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 11:18:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 11:18:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 11:18:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 11:18:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:18:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:18:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 11:18:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 11:18:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 11:18:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:18:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 11:18:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 11:18:53 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 11:18:53 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 11:18:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 11:18:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 11:18:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 11:18:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 11:18:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 11:18:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 11:18:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 11:18:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 11:18:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 11:18:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 11:18:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 11:18:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 11:18:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 11:18:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 11:18:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 11:18:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 11:18:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 11:18:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 11:18:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 11:18:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 11:18:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 11:18:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 11:18:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 11:18:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 11:18:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 11:18:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 11:18:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:18:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 11:18:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:18:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 11:18:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 11:18:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 11:18:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 11:18:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 11:18:53 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:18:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 11:18:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:18:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 11:18:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:18:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 11:18:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:18:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 11:18:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 11:18:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 11:18:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 11:18:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 11:18:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 11:18:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:18:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 11:18:30 CST 2019]; root of context hierarchy
2019-04-02 11:18:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:18:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:18:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:18:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 11:18:56 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 11:19:00 -Registering beans for JMX exposure on startup
2019-04-02 11:19:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 11:19:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 11:19:00 -Starting beans in phase 2147483647
2019-04-02 11:19:00 -Context refreshed
2019-04-02 11:19:00 -Found 1 custom documentation plugin(s)
2019-04-02 11:19:00 -Scanning for api listing references
2019-04-02 11:19:01 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_1
2019-04-02 11:19:01 -Generating unique operation named: addUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: editUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: listUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_2
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_3
2019-04-02 11:19:01 -Generating unique operation named: saveUsingPOST_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPOST_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPUT_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 11:19:01 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 11:19:01 -Generating unique operation named: addUsingGET_2
2019-04-02 11:19:01 -Generating unique operation named: editUsingGET_2
2019-04-02 11:19:01 -Generating unique operation named: listUsingGET_2
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_4
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_5
2019-04-02 11:19:01 -Generating unique operation named: saveUsingPOST_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPOST_2
2019-04-02 11:19:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: addUsingGET_3
2019-04-02 11:19:01 -Generating unique operation named: editUsingGET_3
2019-04-02 11:19:01 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 11:19:01 -Generating unique operation named: listUsingGET_3
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_6
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_7
2019-04-02 11:19:01 -Generating unique operation named: saveUsingPOST_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingGET_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPOST_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPUT_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 11:19:01 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 11:19:01 -Generating unique operation named: addUsingGET_4
2019-04-02 11:19:01 -Generating unique operation named: editUsingGET_4
2019-04-02 11:19:01 -Generating unique operation named: listUsingGET_4
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_8
2019-04-02 11:19:01 -Generating unique operation named: removeUsingPOST_9
2019-04-02 11:19:01 -Generating unique operation named: saveUsingPOST_4
2019-04-02 11:19:01 -Generating unique operation named: updateUsingGET_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPOST_4
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPUT_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 11:19:01 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 11:19:01 -Generating unique operation named: ElecUsingGET_1
2019-04-02 11:19:02 -Generating unique operation named: addUsingGET_5
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_5
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_5
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_10
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_11
2019-04-02 11:19:02 -Generating unique operation named: saveUsingPOST_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingGET_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPUT_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 11:19:02 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_6
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_6
2019-04-02 11:19:02 -Generating unique operation named: addUsingGET_6
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_7
2019-04-02 11:19:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_7
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_12
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_13
2019-04-02 11:19:02 -Generating unique operation named: saveUsingPOST_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingGET_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPUT_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 11:19:02 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 11:19:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 11:19:02 -Generating unique operation named: addUsingGET_7
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_8
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_8
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_14
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_15
2019-04-02 11:19:02 -Generating unique operation named: saveUsingPOST_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingGET_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_8
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPUT_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 11:19:02 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 11:19:02 -Generating unique operation named: addUsingGET_8
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_9
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_9
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_16
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_17
2019-04-02 11:19:02 -Generating unique operation named: saveUsingPOST_8
2019-04-02 11:19:02 -Generating unique operation named: updateUsingGET_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_9
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPUT_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 11:19:02 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 11:19:02 -Generating unique operation named: addUsingGET_9
2019-04-02 11:19:02 -Generating unique operation named: editUsingGET_10
2019-04-02 11:19:02 -Generating unique operation named: infoUsingGET_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingPOST_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingPUT_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 11:19:02 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_10
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_18
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_19
2019-04-02 11:19:02 -Generating unique operation named: saveUsingPOST_9
2019-04-02 11:19:02 -Generating unique operation named: updateUsingPOST_10
2019-04-02 11:19:02 -Generating unique operation named: listUsingGET_11
2019-04-02 11:19:02 -Generating unique operation named: removeUsingPOST_20
2019-04-02 11:19:02 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 11:19:03 -Generating unique operation named: addUsingGET_10
2019-04-02 11:19:03 -Generating unique operation named: editUsingGET_11
2019-04-02 11:19:03 -Generating unique operation named: listUsingGET_12
2019-04-02 11:19:03 -Generating unique operation named: removeUsingPOST_21
2019-04-02 11:19:03 -Generating unique operation named: saveUsingPOST_10
2019-04-02 11:19:03 -Generating unique operation named: treeUsingGET_1
2019-04-02 11:19:03 -Generating unique operation named: treeUsingGET_2
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPOST_11
2019-04-02 11:19:03 -Generating unique operation named: addUsingGET_11
2019-04-02 11:19:03 -Generating unique operation named: editUsingGET_12
2019-04-02 11:19:03 -Generating unique operation named: listUsingGET_13
2019-04-02 11:19:03 -Generating unique operation named: removeUsingPOST_22
2019-04-02 11:19:03 -Generating unique operation named: removeUsingPOST_23
2019-04-02 11:19:03 -Generating unique operation named: saveUsingPOST_11
2019-04-02 11:19:03 -Generating unique operation named: updateUsingGET_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPOST_12
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPUT_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 11:19:03 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 11:19:03 -Generating unique operation named: addUsingGET_12
2019-04-02 11:19:03 -Generating unique operation named: editUsingGET_13
2019-04-02 11:19:03 -Generating unique operation named: listUsingGET_14
2019-04-02 11:19:03 -Generating unique operation named: removeUsingPOST_24
2019-04-02 11:19:03 -Generating unique operation named: removeUsingPOST_25
2019-04-02 11:19:03 -Generating unique operation named: saveUsingPOST_12
2019-04-02 11:19:03 -Generating unique operation named: updateUsingGET_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPOST_13
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPUT_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 11:19:03 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 11:19:03 -Generating unique operation named: addUsingGET_13
2019-04-02 11:19:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 11:19:03 -Generating unique operation named: editUsingGET_14
2019-04-02 11:19:03 -Generating unique operation named: listUsingGET_15
2019-04-02 11:19:03 -Generating unique operation named: saveUsingPOST_13
2019-04-02 11:19:03 -Generating unique operation named: saveUsingPOST_14
2019-04-02 11:19:03 -Generating unique operation named: updateUsingPOST_14
2019-04-02 11:19:03 -Generating unique operation named: listUsingGET_16
2019-04-02 11:19:03 -Generating unique operation named: listUsingHEAD_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingPOST_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingPUT_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingPATCH_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingDELETE_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 11:19:03 -Generating unique operation named: listUsingTRACE_1
2019-04-02 11:19:03 -Generating unique operation named: addUsingGET_14
2019-04-02 11:19:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 11:19:04 -Generating unique operation named: editUsingGET_15
2019-04-02 11:19:04 -Generating unique operation named: listUsingGET_17
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_26
2019-04-02 11:19:04 -Generating unique operation named: saveUsingPOST_15
2019-04-02 11:19:04 -Generating unique operation named: treeUsingGET_3
2019-04-02 11:19:04 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPOST_15
2019-04-02 11:19:04 -Generating unique operation named: addUsingGET_15
2019-04-02 11:19:04 -Generating unique operation named: editUsingGET_16
2019-04-02 11:19:04 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 11:19:04 -Generating unique operation named: listUsingGET_18
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_27
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_28
2019-04-02 11:19:04 -Generating unique operation named: saveUsingPOST_16
2019-04-02 11:19:04 -Generating unique operation named: updateUsingGET_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPOST_16
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPUT_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 11:19:04 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 11:19:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 11:19:04 -Generating unique operation named: addUsingGET_16
2019-04-02 11:19:04 -Generating unique operation named: editUsingGET_17
2019-04-02 11:19:04 -Generating unique operation named: listUsingGET_19
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_29
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_30
2019-04-02 11:19:04 -Generating unique operation named: saveUsingPOST_17
2019-04-02 11:19:04 -Generating unique operation named: updateUsingGET_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPOST_17
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPUT_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 11:19:04 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 11:19:04 -Generating unique operation named: addUsingGET_17
2019-04-02 11:19:04 -Generating unique operation named: editUsingGET_18
2019-04-02 11:19:04 -Generating unique operation named: listUsingGET_20
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_31
2019-04-02 11:19:04 -Generating unique operation named: removeUsingPOST_32
2019-04-02 11:19:04 -Generating unique operation named: saveUsingPOST_18
2019-04-02 11:19:04 -Generating unique operation named: updateUsingGET_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPOST_18
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPUT_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 11:19:04 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 11:19:04 -Starting Quartz Scheduler now
2019-04-02 11:19:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 11:19:04 -Starting...
2019-04-02 11:19:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 11:19:04 -Started.
2019-04-02 11:19:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 11:19:04 -Using a shared selector for servlet write/read
2019-04-02 11:19:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 11:19:04 -Started BootdoApplication in 36.393 seconds (JVM running for 37.433)
2019-04-02 11:19:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 11:19:05 -==> Parameters: 
2019-04-02 11:19:05 -<==      Total: 1
2019-04-02 11:19:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 11:19:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 11:19:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 112 ms
2019-04-02 11:19:13 -Enabling session validation scheduler...
2019-04-02 11:19:14 -请求地址 : http://localhost:8081/login;JSESSIONID=7735dcee-aaf1-4949-9fdb-24e670c2d2b0
2019-04-02 11:19:14 -HTTP METHOD : GET
2019-04-02 11:19:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 11:19:14 -参数 : [{}]
2019-04-02 11:19:14 -耗时 : 3
2019-04-02 11:19:14 -返回值 : login
2019-04-02 11:19:16 -请求地址 : http://localhost:8081/getVerify
2019-04-02 11:19:16 -HTTP METHOD : GET
2019-04-02 11:19:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 11:19:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@492fc708, org.apache.shiro.web.servlet.ShiroHttpServletResponse@165e5684]
2019-04-02 11:19:16 -5339
2019-04-02 11:19:16 -耗时 : 621
2019-04-02 11:19:16 -返回值 : null
2019-04-02 11:19:26 -请求地址 : http://localhost:8081/login
2019-04-02 11:19:26 -HTTP METHOD : POST
2019-04-02 11:19:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 11:19:26 -参数 : [admin, 111111, 5339, org.apache.shiro.web.servlet.ShiroHttpServletRequest@20e25644]
2019-04-02 11:19:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 11:19:26 -==> Parameters: admin(String)
2019-04-02 11:19:26 -<==      Total: 1
2019-04-02 11:19:26 -耗时 : 282
2019-04-02 11:19:26 -返回值 : {msg=操作成功, code=0}
2019-04-02 11:19:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 11:19:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:19:26 -==> Parameters: 1(Long), admin(String), 登录(String), 282(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 11:19:26.487(Timestamp)
2019-04-02 11:19:26 -请求地址 : http://localhost:8081/index
2019-04-02 11:19:26 -HTTP METHOD : GET
2019-04-02 11:19:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:19:26 -参数 : [{}]
2019-04-02 11:19:26 -<==    Updates: 1
2019-04-02 11:19:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:19:26 -==> Parameters: 1(Long)
2019-04-02 11:19:26 -<==      Total: 46
2019-04-02 11:19:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:19:26 -==> Parameters: 138(Long)
2019-04-02 11:19:26 -<==      Total: 1
2019-04-02 11:19:26 -耗时 : 170
2019-04-02 11:19:26 -返回值 : index_v1
2019-04-02 11:19:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:19:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 170(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:19:26.826(Timestamp)
2019-04-02 11:19:26 -<==    Updates: 1
2019-04-02 11:19:26 -请求地址 : http://localhost:8081/main
2019-04-02 11:19:26 -HTTP METHOD : GET
2019-04-02 11:19:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:19:26 -参数 : []
2019-04-02 11:19:26 -耗时 : 0
2019-04-02 11:19:26 -返回值 : main
2019-04-02 11:19:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:19:27 -HTTP METHOD : GET
2019-04-02 11:19:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:19:27 -参数 : []
2019-04-02 11:19:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:19:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:19:27 -请求地址 : http://localhost:8081/main
2019-04-02 11:19:27 -HTTP METHOD : GET
2019-04-02 11:19:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:19:27 -参数 : []
2019-04-02 11:19:27 -耗时 : 0
2019-04-02 11:19:27 -返回值 : main
2019-04-02 11:19:27 -<==      Total: 0
2019-04-02 11:19:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:19:27 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:19:27 -<==      Total: 1
2019-04-02 11:19:27 -耗时 : 450
2019-04-02 11:19:27 -返回值 : com.bootdo.common.utils.PageUtils@7e487fb6
2019-04-02 11:19:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 11:19:34 -==> Parameters: 1(Long)
2019-04-02 11:19:34 -<==      Total: 90
2019-04-02 11:19:34 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:19:34 -HTTP METHOD : GET
2019-04-02 11:19:34 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:19:34 -参数 : []
2019-04-02 11:19:34 -耗时 : 0
2019-04-02 11:19:34 -返回值 : charts/countOwe
2019-04-02 11:19:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:19:34 -HTTP METHOD : GET
2019-04-02 11:19:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:19:34 -参数 : [userType]
2019-04-02 11:19:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:19:34 -==> Parameters: userType(String)
2019-04-02 11:19:34 -<==      Total: 2
2019-04-02 11:19:34 -耗时 : 75
2019-04-02 11:19:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:19:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 11:19:47 -HTTP METHOD : GET
2019-04-02 11:19:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 11:19:47 -参数 : []
2019-04-02 11:19:47 -耗时 : 1
2019-04-02 11:19:47 -返回值 : system/dept/deptTree
2019-04-02 11:19:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 11:19:47 -HTTP METHOD : GET
2019-04-02 11:19:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 11:19:47 -参数 : []
2019-04-02 11:19:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 11:19:47 -==> Parameters: 
2019-04-02 11:19:47 -<==      Total: 3
2019-04-02 11:19:47 -耗时 : 112
2019-04-02 11:19:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 11:19:50 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:19:50 -HTTP METHOD : POST
2019-04-02 11:19:50 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:19:50 -参数 : [com.bootdo.elec.vo.ElecVo@2739d4e8, com.bootdo.water.vo.WaterVo@91a12d7, com.bootdo.heat.vo.HeatVo@43b2a380]
2019-04-02 11:19:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:19:50 -==> Parameters: 
2019-04-02 11:19:50 -<==      Total: 1
2019-04-02 11:19:50 -耗时 : 258
2019-04-02 11:19:50 -返回值 : com.bootdo.charts.vo.CountOweVo@6b22bdb0
2019-04-02 11:19:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-02 11:20:12 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:20:12 -HTTP METHOD : POST
2019-04-02 11:20:12 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:20:12 -参数 : [com.bootdo.elec.vo.ElecVo@20981670, com.bootdo.water.vo.WaterVo@11ddc7a2, com.bootdo.heat.vo.HeatVo@4c0f99d6]
2019-04-02 11:20:12 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:20:12 -==> Parameters: 
2019-04-02 11:20:12 -<==      Total: 1
2019-04-02 11:20:12 -耗时 : 19
2019-04-02 11:20:12 -返回值 : com.bootdo.charts.vo.CountOweVo@6f0bdea5
2019-04-02 11:23:24 -请求地址 : http://localhost:8081/index
2019-04-02 11:23:24 -HTTP METHOD : GET
2019-04-02 11:23:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:23:24 -参数 : [{}]
2019-04-02 11:23:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:23:24 -==> Parameters: 1(Long)
2019-04-02 11:23:24 -<==      Total: 46
2019-04-02 11:23:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:23:24 -==> Parameters: 138(Long)
2019-04-02 11:23:24 -<==      Total: 1
2019-04-02 11:23:24 -耗时 : 109
2019-04-02 11:23:24 -返回值 : index_v1
2019-04-02 11:23:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:23:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 110(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:23:24.833(Timestamp)
2019-04-02 11:23:25 -请求地址 : http://localhost:8081/main
2019-04-02 11:23:25 -HTTP METHOD : GET
2019-04-02 11:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:23:25 -参数 : []
2019-04-02 11:23:25 -耗时 : 0
2019-04-02 11:23:25 -返回值 : main
2019-04-02 11:23:25 -<==    Updates: 1
2019-04-02 11:23:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:23:25 -HTTP METHOD : GET
2019-04-02 11:23:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:23:25 -参数 : []
2019-04-02 11:23:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:23:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:23:25 -<==      Total: 0
2019-04-02 11:23:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:23:25 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:23:25 -<==      Total: 1
2019-04-02 11:23:25 -耗时 : 8
2019-04-02 11:23:25 -返回值 : com.bootdo.common.utils.PageUtils@6efdb6b
2019-04-02 11:23:25 -请求地址 : http://localhost:8081/main
2019-04-02 11:23:25 -HTTP METHOD : GET
2019-04-02 11:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:23:25 -参数 : []
2019-04-02 11:23:25 -耗时 : 0
2019-04-02 11:23:25 -返回值 : main
2019-04-02 11:23:29 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:23:29 -HTTP METHOD : GET
2019-04-02 11:23:29 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:23:29 -参数 : []
2019-04-02 11:23:29 -耗时 : 1
2019-04-02 11:23:29 -返回值 : charts/countOwe
2019-04-02 11:23:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:23:30 -HTTP METHOD : GET
2019-04-02 11:23:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:23:30 -参数 : [userType]
2019-04-02 11:23:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:23:30 -==> Parameters: userType(String)
2019-04-02 11:23:30 -<==      Total: 2
2019-04-02 11:23:30 -耗时 : 5
2019-04-02 11:23:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:23:45 -请求地址 : http://localhost:8081/index
2019-04-02 11:23:45 -HTTP METHOD : GET
2019-04-02 11:23:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:23:45 -参数 : [{}]
2019-04-02 11:23:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:23:45 -==> Parameters: 1(Long)
2019-04-02 11:23:45 -<==      Total: 46
2019-04-02 11:23:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:23:45 -==> Parameters: 138(Long)
2019-04-02 11:23:45 -<==      Total: 1
2019-04-02 11:23:45 -耗时 : 27
2019-04-02 11:23:45 -返回值 : index_v1
2019-04-02 11:23:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:23:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:23:45.169(Timestamp)
2019-04-02 11:23:45 -请求地址 : http://localhost:8081/main
2019-04-02 11:23:45 -HTTP METHOD : GET
2019-04-02 11:23:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:23:45 -参数 : []
2019-04-02 11:23:45 -耗时 : 0
2019-04-02 11:23:45 -返回值 : main
2019-04-02 11:23:45 -<==    Updates: 1
2019-04-02 11:23:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:23:45 -HTTP METHOD : GET
2019-04-02 11:23:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:23:45 -参数 : []
2019-04-02 11:23:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:23:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:23:45 -<==      Total: 0
2019-04-02 11:23:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:23:45 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:23:45 -<==      Total: 1
2019-04-02 11:23:45 -耗时 : 7
2019-04-02 11:23:45 -返回值 : com.bootdo.common.utils.PageUtils@4f82dde3
2019-04-02 11:23:45 -请求地址 : http://localhost:8081/main
2019-04-02 11:23:45 -HTTP METHOD : GET
2019-04-02 11:23:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:23:45 -参数 : []
2019-04-02 11:23:45 -耗时 : 0
2019-04-02 11:23:45 -返回值 : main
2019-04-02 11:23:50 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:23:50 -HTTP METHOD : GET
2019-04-02 11:23:50 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:23:50 -参数 : []
2019-04-02 11:23:50 -耗时 : 0
2019-04-02 11:23:50 -返回值 : charts/countOwe
2019-04-02 11:23:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:23:51 -HTTP METHOD : GET
2019-04-02 11:23:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:23:51 -参数 : [userType]
2019-04-02 11:23:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:23:51 -==> Parameters: userType(String)
2019-04-02 11:23:51 -<==      Total: 2
2019-04-02 11:23:51 -耗时 : 6
2019-04-02 11:23:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:24:53 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 11:24:53 -HTTP METHOD : GET
2019-04-02 11:24:53 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 11:24:53 -参数 : []
2019-04-02 11:24:53 -耗时 : 1
2019-04-02 11:24:53 -返回值 : charts/countDD
2019-04-02 11:24:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:24:54 -HTTP METHOD : GET
2019-04-02 11:24:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:24:54 -参数 : [userType]
2019-04-02 11:24:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:24:54 -==> Parameters: userType(String)
2019-04-02 11:24:54 -<==      Total: 2
2019-04-02 11:24:54 -耗时 : 6
2019-04-02 11:24:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:24:55 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 11:24:55 -HTTP METHOD : GET
2019-04-02 11:24:55 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 11:24:55 -参数 : []
2019-04-02 11:24:55 -耗时 : 0
2019-04-02 11:24:55 -返回值 : charts/countYY
2019-04-02 11:29:24 -请求地址 : http://localhost:8081/index
2019-04-02 11:29:24 -HTTP METHOD : GET
2019-04-02 11:29:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:29:24 -参数 : [{}]
2019-04-02 11:29:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:29:24 -==> Parameters: 1(Long)
2019-04-02 11:29:24 -<==      Total: 46
2019-04-02 11:29:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:29:24 -==> Parameters: 138(Long)
2019-04-02 11:29:24 -<==      Total: 1
2019-04-02 11:29:24 -耗时 : 31
2019-04-02 11:29:24 -返回值 : index_v1
2019-04-02 11:29:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:29:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:29:24.687(Timestamp)
2019-04-02 11:29:24 -请求地址 : http://localhost:8081/main
2019-04-02 11:29:24 -HTTP METHOD : GET
2019-04-02 11:29:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:29:24 -参数 : []
2019-04-02 11:29:24 -耗时 : 8
2019-04-02 11:29:24 -返回值 : main
2019-04-02 11:29:24 -<==    Updates: 1
2019-04-02 11:29:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:29:25 -HTTP METHOD : GET
2019-04-02 11:29:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:29:25 -参数 : []
2019-04-02 11:29:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:29:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:29:25 -<==      Total: 0
2019-04-02 11:29:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:29:25 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:29:25 -<==      Total: 1
2019-04-02 11:29:25 -耗时 : 12
2019-04-02 11:29:25 -返回值 : com.bootdo.common.utils.PageUtils@4d677254
2019-04-02 11:29:25 -请求地址 : http://localhost:8081/main
2019-04-02 11:29:25 -HTTP METHOD : GET
2019-04-02 11:29:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:29:25 -参数 : []
2019-04-02 11:29:25 -耗时 : 1
2019-04-02 11:29:25 -返回值 : main
2019-04-02 11:30:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 10596 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 11:30:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 11:30:45 -The following profiles are active: dev
2019-04-02 11:30:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31e75d13: startup date [Tue Apr 02 11:30:46 CST 2019]; root of context hierarchy
2019-04-02 11:30:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 11:30:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f895f33] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$11e28dda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 11:30:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 11:30:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 11:30:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 11:30:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 11:30:57 -Starting service [Tomcat]
2019-04-02 11:30:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 11:30:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 11:30:57 -Initializing Spring embedded WebApplicationContext
2019-04-02 11:30:57 -Root WebApplicationContext: initialization completed in 11612 ms
2019-04-02 11:30:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 11:30:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 11:30:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 11:30:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 11:30:58 -Filter xssFilter was not registered (disabled)
2019-04-02 11:30:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 11:30:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 11:30:58 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 11:30:58 -Servlet dispatcherServlet mapped to [/]
2019-04-02 11:31:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31e75d13: startup date [Tue Apr 02 11:30:46 CST 2019]; root of context hierarchy
2019-04-02 11:31:03 -Using default implementation for ThreadExecutor
2019-04-02 11:31:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 11:31:03 -Quartz Scheduler v.2.2.1 created.
2019-04-02 11:31:03 -RAMJobStore initialized.
2019-04-02 11:31:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 11:31:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 11:31:03 -Quartz scheduler version: 2.2.1
2019-04-02 11:31:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3b64f131
2019-04-02 11:31:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 11:31:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 11:31:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 11:31:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 11:31:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 11:31:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 11:31:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 11:31:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 11:31:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 11:31:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 11:31:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 11:31:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 11:31:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 11:31:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 11:31:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:31:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 11:31:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 11:31:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 11:31:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 11:31:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 11:31:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 11:31:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 11:31:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 11:31:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 11:31:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 11:31:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 11:31:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:31:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:31:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 11:31:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 11:31:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 11:31:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 11:31:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 11:31:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 11:31:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 11:31:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 11:31:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 11:31:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:31:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 11:31:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 11:31:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 11:31:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 11:31:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 11:31:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:31:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 11:31:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 11:31:07 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 11:31:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 11:31:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 11:31:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 11:31:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 11:31:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 11:31:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 11:31:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 11:31:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 11:31:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 11:31:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 11:31:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 11:31:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 11:31:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 11:31:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 11:31:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 11:31:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 11:31:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 11:31:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 11:31:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 11:31:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 11:31:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 11:31:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 11:31:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 11:31:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 11:31:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 11:31:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 11:31:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 11:31:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 11:31:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 11:31:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:31:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 11:31:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 11:31:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 11:31:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 11:31:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 11:31:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 11:31:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 11:31:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 11:31:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 11:31:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 11:31:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 11:31:08 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 11:31:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 11:31:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 11:31:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 11:31:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 11:31:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 11:31:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 11:31:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 11:31:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 11:31:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 11:31:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 11:31:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 11:31:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 11:31:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 11:31:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 11:31:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:31:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31e75d13: startup date [Tue Apr 02 11:30:46 CST 2019]; root of context hierarchy
2019-04-02 11:31:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:31:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:31:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 11:31:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 11:31:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 11:31:12 -Registering beans for JMX exposure on startup
2019-04-02 11:31:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 11:31:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 11:31:12 -Starting beans in phase 2147483647
2019-04-02 11:31:12 -Context refreshed
2019-04-02 11:31:13 -Found 1 custom documentation plugin(s)
2019-04-02 11:31:13 -Scanning for api listing references
2019-04-02 11:31:13 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 11:31:13 -Generating unique operation named: removeUsingPOST_1
2019-04-02 11:31:13 -Generating unique operation named: addUsingGET_1
2019-04-02 11:31:13 -Generating unique operation named: editUsingGET_1
2019-04-02 11:31:13 -Generating unique operation named: listUsingGET_1
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_2
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_3
2019-04-02 11:31:14 -Generating unique operation named: saveUsingPOST_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingGET_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPOST_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPUT_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 11:31:14 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 11:31:14 -Generating unique operation named: addUsingGET_2
2019-04-02 11:31:14 -Generating unique operation named: editUsingGET_2
2019-04-02 11:31:14 -Generating unique operation named: listUsingGET_2
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_4
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_5
2019-04-02 11:31:14 -Generating unique operation named: saveUsingPOST_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPOST_2
2019-04-02 11:31:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 11:31:14 -Generating unique operation named: addUsingGET_3
2019-04-02 11:31:14 -Generating unique operation named: editUsingGET_3
2019-04-02 11:31:14 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 11:31:14 -Generating unique operation named: listUsingGET_3
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_6
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_7
2019-04-02 11:31:14 -Generating unique operation named: saveUsingPOST_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingGET_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPOST_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPUT_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 11:31:14 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 11:31:14 -Generating unique operation named: addUsingGET_4
2019-04-02 11:31:14 -Generating unique operation named: editUsingGET_4
2019-04-02 11:31:14 -Generating unique operation named: listUsingGET_4
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_8
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_9
2019-04-02 11:31:14 -Generating unique operation named: saveUsingPOST_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingGET_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPOST_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPUT_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 11:31:14 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 11:31:14 -Generating unique operation named: ElecUsingGET_1
2019-04-02 11:31:14 -Generating unique operation named: addUsingGET_5
2019-04-02 11:31:14 -Generating unique operation named: editUsingGET_5
2019-04-02 11:31:14 -Generating unique operation named: listUsingGET_5
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_10
2019-04-02 11:31:14 -Generating unique operation named: removeUsingPOST_11
2019-04-02 11:31:14 -Generating unique operation named: saveUsingPOST_5
2019-04-02 11:31:14 -Generating unique operation named: updateUsingGET_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPOST_5
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPUT_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 11:31:14 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_6
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_6
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_6
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_7
2019-04-02 11:31:15 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_7
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_12
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_13
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingGET_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPUT_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 11:31:15 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 11:31:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_7
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_8
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_8
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_14
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_15
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingGET_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_8
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPUT_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 11:31:15 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_8
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_9
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_9
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_16
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_17
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_8
2019-04-02 11:31:15 -Generating unique operation named: updateUsingGET_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_9
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPUT_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 11:31:15 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_9
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_10
2019-04-02 11:31:15 -Generating unique operation named: infoUsingGET_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingPOST_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingPUT_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 11:31:15 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_10
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_18
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_19
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_9
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_10
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_11
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_20
2019-04-02 11:31:15 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_10
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_11
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_12
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_21
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_10
2019-04-02 11:31:15 -Generating unique operation named: treeUsingGET_1
2019-04-02 11:31:15 -Generating unique operation named: treeUsingGET_2
2019-04-02 11:31:15 -Generating unique operation named: updateUsingPOST_11
2019-04-02 11:31:15 -Generating unique operation named: addUsingGET_11
2019-04-02 11:31:15 -Generating unique operation named: editUsingGET_12
2019-04-02 11:31:15 -Generating unique operation named: listUsingGET_13
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_22
2019-04-02 11:31:15 -Generating unique operation named: removeUsingPOST_23
2019-04-02 11:31:15 -Generating unique operation named: saveUsingPOST_11
2019-04-02 11:31:16 -Generating unique operation named: updateUsingGET_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPOST_12
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPUT_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 11:31:16 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 11:31:16 -Generating unique operation named: addUsingGET_12
2019-04-02 11:31:16 -Generating unique operation named: editUsingGET_13
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_14
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_24
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_25
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_12
2019-04-02 11:31:16 -Generating unique operation named: updateUsingGET_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPOST_13
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPUT_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 11:31:16 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 11:31:16 -Generating unique operation named: addUsingGET_13
2019-04-02 11:31:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 11:31:16 -Generating unique operation named: editUsingGET_14
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_15
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_13
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_14
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPOST_14
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_16
2019-04-02 11:31:16 -Generating unique operation named: listUsingHEAD_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingPOST_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingPUT_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingPATCH_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingDELETE_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 11:31:16 -Generating unique operation named: listUsingTRACE_1
2019-04-02 11:31:16 -Generating unique operation named: addUsingGET_14
2019-04-02 11:31:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 11:31:16 -Generating unique operation named: editUsingGET_15
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_17
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_26
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_15
2019-04-02 11:31:16 -Generating unique operation named: treeUsingGET_3
2019-04-02 11:31:16 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPOST_15
2019-04-02 11:31:16 -Generating unique operation named: addUsingGET_15
2019-04-02 11:31:16 -Generating unique operation named: editUsingGET_16
2019-04-02 11:31:16 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_18
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_27
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_28
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_16
2019-04-02 11:31:16 -Generating unique operation named: updateUsingGET_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPOST_16
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPUT_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 11:31:16 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 11:31:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 11:31:16 -Generating unique operation named: addUsingGET_16
2019-04-02 11:31:16 -Generating unique operation named: editUsingGET_17
2019-04-02 11:31:16 -Generating unique operation named: listUsingGET_19
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_29
2019-04-02 11:31:16 -Generating unique operation named: removeUsingPOST_30
2019-04-02 11:31:16 -Generating unique operation named: saveUsingPOST_17
2019-04-02 11:31:16 -Generating unique operation named: updateUsingGET_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPOST_17
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPUT_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 11:31:17 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 11:31:17 -Generating unique operation named: addUsingGET_17
2019-04-02 11:31:17 -Generating unique operation named: editUsingGET_18
2019-04-02 11:31:17 -Generating unique operation named: listUsingGET_20
2019-04-02 11:31:17 -Generating unique operation named: removeUsingPOST_31
2019-04-02 11:31:17 -Generating unique operation named: removeUsingPOST_32
2019-04-02 11:31:17 -Generating unique operation named: saveUsingPOST_18
2019-04-02 11:31:17 -Generating unique operation named: updateUsingGET_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPOST_18
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPUT_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 11:31:17 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 11:31:17 -Starting Quartz Scheduler now
2019-04-02 11:31:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 11:31:17 -Starting...
2019-04-02 11:31:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 11:31:17 -Started.
2019-04-02 11:31:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 11:31:17 -Using a shared selector for servlet write/read
2019-04-02 11:31:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 11:31:17 -Started BootdoApplication in 33.806 seconds (JVM running for 36.181)
2019-04-02 11:31:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 11:31:17 -==> Parameters: 
2019-04-02 11:31:18 -<==      Total: 1
2019-04-02 11:31:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 11:31:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 11:31:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-04-02 11:31:30 -Enabling session validation scheduler...
2019-04-02 11:31:30 -请求地址 : http://localhost:8081/login;JSESSIONID=1c83536d-e2c6-4b35-868b-0320fd17abba
2019-04-02 11:31:30 -HTTP METHOD : GET
2019-04-02 11:31:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 11:31:30 -参数 : [{}]
2019-04-02 11:31:30 -耗时 : 4
2019-04-02 11:31:30 -返回值 : login
2019-04-02 11:31:32 -请求地址 : http://localhost:8081/getVerify
2019-04-02 11:31:32 -HTTP METHOD : GET
2019-04-02 11:31:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 11:31:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c8e0bfc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@32279eff]
2019-04-02 11:31:32 -6890
2019-04-02 11:31:32 -耗时 : 574
2019-04-02 11:31:32 -返回值 : null
2019-04-02 11:31:42 -请求地址 : http://localhost:8081/login
2019-04-02 11:31:42 -HTTP METHOD : POST
2019-04-02 11:31:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 11:31:42 -参数 : [admin, 111111, 6890, org.apache.shiro.web.servlet.ShiroHttpServletRequest@38867e53]
2019-04-02 11:31:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 11:31:42 -==> Parameters: admin(String)
2019-04-02 11:31:42 -<==      Total: 1
2019-04-02 11:31:42 -耗时 : 300
2019-04-02 11:31:42 -返回值 : {msg=操作成功, code=0}
2019-04-02 11:31:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 11:31:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:31:43 -==> Parameters: 1(Long), admin(String), 登录(String), 300(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 11:31:43.107(Timestamp)
2019-04-02 11:31:43 -请求地址 : http://localhost:8081/index
2019-04-02 11:31:43 -HTTP METHOD : GET
2019-04-02 11:31:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:31:43 -参数 : [{}]
2019-04-02 11:31:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:31:43 -==> Parameters: 1(Long)
2019-04-02 11:31:43 -<==    Updates: 1
2019-04-02 11:31:43 -<==      Total: 46
2019-04-02 11:31:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:31:43 -==> Parameters: 138(Long)
2019-04-02 11:31:43 -<==      Total: 1
2019-04-02 11:31:43 -耗时 : 516
2019-04-02 11:31:43 -返回值 : index_v1
2019-04-02 11:31:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:31:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 516(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:31:43.768(Timestamp)
2019-04-02 11:31:43 -<==    Updates: 1
2019-04-02 11:31:43 -请求地址 : http://localhost:8081/main
2019-04-02 11:31:43 -HTTP METHOD : GET
2019-04-02 11:31:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:31:43 -参数 : []
2019-04-02 11:31:43 -耗时 : 1
2019-04-02 11:31:43 -返回值 : main
2019-04-02 11:31:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 11:31:44 -HTTP METHOD : GET
2019-04-02 11:31:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 11:31:44 -参数 : []
2019-04-02 11:31:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 11:31:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 11:31:44 -请求地址 : http://localhost:8081/main
2019-04-02 11:31:44 -HTTP METHOD : GET
2019-04-02 11:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 11:31:44 -参数 : []
2019-04-02 11:31:44 -耗时 : 1
2019-04-02 11:31:44 -返回值 : main
2019-04-02 11:31:44 -<==      Total: 0
2019-04-02 11:31:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 11:31:44 -==> Parameters: 1(Long), 0(String)
2019-04-02 11:31:44 -<==      Total: 1
2019-04-02 11:31:44 -耗时 : 270
2019-04-02 11:31:44 -返回值 : com.bootdo.common.utils.PageUtils@baddbe9
2019-04-02 11:31:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 11:31:54 -==> Parameters: 1(Long)
2019-04-02 11:31:54 -<==      Total: 90
2019-04-02 11:31:54 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-02 11:31:54 -HTTP METHOD : GET
2019-04-02 11:31:54 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-02 11:31:54 -参数 : []
2019-04-02 11:31:54 -耗时 : 1
2019-04-02 11:31:54 -返回值 : charts/countOwe
2019-04-02 11:31:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 11:31:54 -HTTP METHOD : GET
2019-04-02 11:31:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 11:31:54 -参数 : [userType]
2019-04-02 11:31:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 11:31:54 -==> Parameters: userType(String)
2019-04-02 11:31:55 -<==      Total: 2
2019-04-02 11:31:55 -耗时 : 169
2019-04-02 11:31:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 11:32:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 11:32:05 -HTTP METHOD : GET
2019-04-02 11:32:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 11:32:05 -参数 : []
2019-04-02 11:32:05 -耗时 : 0
2019-04-02 11:32:05 -返回值 : system/dept/deptTree
2019-04-02 11:32:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 11:32:05 -HTTP METHOD : GET
2019-04-02 11:32:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 11:32:05 -参数 : []
2019-04-02 11:32:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 11:32:05 -==> Parameters: 
2019-04-02 11:32:06 -<==      Total: 3
2019-04-02 11:32:06 -耗时 : 174
2019-04-02 11:32:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 11:32:07 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:32:07 -HTTP METHOD : POST
2019-04-02 11:32:07 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:32:07 -参数 : [com.bootdo.elec.vo.ElecVo@6549f751, com.bootdo.water.vo.WaterVo@528284e8, com.bootdo.heat.vo.HeatVo@7a894de4, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@6ecff6f0]
2019-04-02 11:32:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-02 11:32:22 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:32:22 -==> Parameters: 
2019-04-02 11:32:22 -<==      Total: 1
2019-04-02 11:32:33 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:32:33 -==> Parameters: 
2019-04-02 11:32:33 -<==      Total: 1
2019-04-02 11:32:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:32:34 -==> Parameters: 
2019-04-02 11:32:34 -<==      Total: 1
2019-04-02 11:32:36 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:32:36 -==> Parameters: 
2019-04-02 11:32:36 -<==      Total: 1
2019-04-02 11:32:37 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:32:37 -==> Parameters: 
2019-04-02 11:32:37 -<==      Total: 1
2019-04-02 11:32:44 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:32:44 -==> Parameters: 
2019-04-02 11:32:44 -<==      Total: 1
2019-04-02 11:32:48 -耗时 : 40914
2019-04-02 11:32:48 -返回值 : com.bootdo.charts.vo.CountOweVo@53e45e14
2019-04-02 11:32:48 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:32:48 -HTTP METHOD : POST
2019-04-02 11:32:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:32:48 -参数 : [com.bootdo.elec.vo.ElecVo@198fcecc, com.bootdo.water.vo.WaterVo@79626179, com.bootdo.heat.vo.HeatVo@14cad9e, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@544169e8]
2019-04-02 11:32:52 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-02 11:32:52 -==> Parameters: 
2019-04-02 11:32:52 -<==      Total: 1
2019-04-02 11:32:52 -耗时 : 3358
2019-04-02 11:32:52 -返回值 : com.bootdo.charts.vo.CountOweVo@3c33d362
2019-04-02 11:32:52 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-02 11:32:52 -HTTP METHOD : POST
2019-04-02 11:32:52 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-02 11:32:52 -参数 : [com.bootdo.elec.vo.ElecVo@3a627173, com.bootdo.water.vo.WaterVo@769c1d1a, com.bootdo.heat.vo.HeatVo@24343a30, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@505c5376]
2019-04-02 11:33:22 -请求地址 : http://localhost:8081/index
2019-04-02 11:33:22 -HTTP METHOD : GET
2019-04-02 11:33:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 11:33:22 -参数 : [{}]
2019-04-02 11:33:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 11:33:22 -==> Parameters: 1(Long)
2019-04-02 11:33:22 -<==      Total: 46
2019-04-02 11:33:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 11:33:22 -==> Parameters: 138(Long)
2019-04-02 11:33:22 -<==      Total: 1
2019-04-02 11:33:22 -耗时 : 39
2019-04-02 11:33:22 -返回值 : index_v1
2019-04-02 11:33:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 11:33:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 11:33:22.464(Timestamp)
2019-04-02 11:33:22 -<==    Updates: 1
2019-04-02 12:02:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 371]
2019-04-02 12:32:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 732]
2019-04-02 12:41:52 -Validating all active sessions...
2019-04-02 12:41:52 -Finished session validation.  [1] sessions were stopped.
2019-04-02 13:02:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1093]
2019-04-02 13:32:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1454]
2019-04-02 13:57:02 -Validating all active sessions...
2019-04-02 13:57:02 -Finished session validation.  No sessions were stopped.
2019-04-02 14:02:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1815]
2019-04-02 14:31:30 -Validating all active sessions...
2019-04-02 14:31:30 -Finished session validation.  No sessions were stopped.
2019-04-02 14:32:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2176]
2019-04-02 15:02:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2537]
2019-04-02 15:38:41 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 2874]
2019-04-02 15:41:47 -Validating all active sessions...
2019-04-02 15:41:47 -Finished session validation.  No sessions were stopped.
2019-04-02 16:02:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3259]
2019-04-02 16:29:01 -Starting BootdoApplication on ZJZL-20180906VX with PID 13124 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 16:29:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 16:29:01 -The following profiles are active: dev
2019-04-02 16:29:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 16:29:01 CST 2019]; root of context hierarchy
2019-04-02 16:29:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 16:29:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eb45a204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$dd9ed0ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 16:29:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 16:29:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 16:29:21 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 16:29:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 16:29:21 -Starting service [Tomcat]
2019-04-02 16:29:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 16:29:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 16:29:22 -Initializing Spring embedded WebApplicationContext
2019-04-02 16:29:22 -Root WebApplicationContext: initialization completed in 20475 ms
2019-04-02 16:29:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 16:29:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 16:29:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 16:29:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 16:29:23 -Filter xssFilter was not registered (disabled)
2019-04-02 16:29:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 16:29:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 16:29:23 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 16:29:23 -Servlet dispatcherServlet mapped to [/]
2019-04-02 16:29:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 16:29:01 CST 2019]; root of context hierarchy
2019-04-02 16:29:27 -Using default implementation for ThreadExecutor
2019-04-02 16:29:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 16:29:27 -Quartz Scheduler v.2.2.1 created.
2019-04-02 16:29:27 -RAMJobStore initialized.
2019-04-02 16:29:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 16:29:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 16:29:27 -Quartz scheduler version: 2.2.1
2019-04-02 16:29:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@bb8ead8
2019-04-02 16:29:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 16:29:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 16:29:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 16:29:30 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 16:29:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 16:29:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 16:29:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 16:29:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 16:29:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 16:29:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 16:29:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 16:29:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 16:29:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 16:29:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 16:29:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 16:29:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 16:29:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 16:29:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 16:29:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 16:29:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 16:29:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 16:29:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 16:29:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 16:29:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 16:29:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 16:29:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 16:29:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 16:29:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 16:29:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 16:29:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 16:29:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 16:29:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 16:29:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 16:29:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 16:29:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 16:29:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 16:29:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 16:29:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 16:29:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 16:29:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 16:29:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 16:29:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 16:29:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 16:29:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 16:29:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 16:29:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 16:29:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 16:29:31 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 16:29:31 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 16:29:31 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 16:29:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 16:29:31 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 16:29:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 16:29:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 16:29:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 16:29:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 16:29:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 16:29:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 16:29:31 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 16:29:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 16:29:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 16:29:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 16:29:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 16:29:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 16:29:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 16:29:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 16:29:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 16:29:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 16:29:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 16:29:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 16:29:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 16:29:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 16:29:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 16:29:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 16:29:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 16:29:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 16:29:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 16:29:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 16:29:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 16:29:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 16:29:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 16:29:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 16:29:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 16:29:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 16:29:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 16:29:31 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 16:29:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 16:29:31 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 16:29:31 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 16:29:31 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 16:29:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 16:29:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 16:29:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 16:29:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 16:29:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 16:29:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 16:29:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 16:29:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 16:29:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 16:29:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Tue Apr 02 16:29:01 CST 2019]; root of context hierarchy
2019-04-02 16:29:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 16:29:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 16:29:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 16:29:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 16:29:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 16:29:35 -Registering beans for JMX exposure on startup
2019-04-02 16:29:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 16:29:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 16:29:35 -Starting beans in phase 2147483647
2019-04-02 16:29:35 -Context refreshed
2019-04-02 16:29:36 -Found 1 custom documentation plugin(s)
2019-04-02 16:29:36 -Scanning for api listing references
2019-04-02 16:29:36 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 16:29:36 -Generating unique operation named: removeUsingPOST_1
2019-04-02 16:29:36 -Generating unique operation named: addUsingGET_1
2019-04-02 16:29:36 -Generating unique operation named: editUsingGET_1
2019-04-02 16:29:36 -Generating unique operation named: listUsingGET_1
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_2
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_3
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_2
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_2
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_2
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_4
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_5
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_2
2019-04-02 16:29:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_3
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_3
2019-04-02 16:29:37 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_3
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_6
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_7
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_4
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_4
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_4
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_8
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_9
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 16:29:37 -Generating unique operation named: ElecUsingGET_1
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_5
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_5
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_5
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_10
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_11
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_6
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_6
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_6
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_7
2019-04-02 16:29:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_7
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_12
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_13
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 16:29:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_7
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_8
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_8
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_14
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_15
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_8
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_8
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_9
2019-04-02 16:29:37 -Generating unique operation named: listUsingGET_9
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_16
2019-04-02 16:29:37 -Generating unique operation named: removeUsingPOST_17
2019-04-02 16:29:37 -Generating unique operation named: saveUsingPOST_8
2019-04-02 16:29:37 -Generating unique operation named: updateUsingGET_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPOST_9
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPUT_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 16:29:37 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 16:29:37 -Generating unique operation named: addUsingGET_9
2019-04-02 16:29:37 -Generating unique operation named: editUsingGET_10
2019-04-02 16:29:38 -Generating unique operation named: infoUsingGET_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingPOST_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingPUT_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 16:29:38 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_10
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_18
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_19
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_10
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_11
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_20
2019-04-02 16:29:38 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_10
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_11
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_12
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_21
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_10
2019-04-02 16:29:38 -Generating unique operation named: treeUsingGET_1
2019-04-02 16:29:38 -Generating unique operation named: treeUsingGET_2
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_11
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_11
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_12
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_13
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_22
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_23
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingGET_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_12
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPUT_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 16:29:38 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_12
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_13
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_14
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_24
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_25
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_12
2019-04-02 16:29:38 -Generating unique operation named: updateUsingGET_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_13
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPUT_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 16:29:38 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_13
2019-04-02 16:29:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_14
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_15
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_13
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_14
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_14
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_16
2019-04-02 16:29:38 -Generating unique operation named: listUsingHEAD_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingPOST_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingPUT_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingPATCH_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingDELETE_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 16:29:38 -Generating unique operation named: listUsingTRACE_1
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_14
2019-04-02 16:29:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_15
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_17
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_26
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_15
2019-04-02 16:29:38 -Generating unique operation named: treeUsingGET_3
2019-04-02 16:29:38 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_15
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_15
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_16
2019-04-02 16:29:38 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_18
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_27
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_28
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_16
2019-04-02 16:29:38 -Generating unique operation named: updateUsingGET_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_16
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPUT_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 16:29:38 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 16:29:38 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_16
2019-04-02 16:29:38 -Generating unique operation named: editUsingGET_17
2019-04-02 16:29:38 -Generating unique operation named: listUsingGET_19
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_29
2019-04-02 16:29:38 -Generating unique operation named: removeUsingPOST_30
2019-04-02 16:29:38 -Generating unique operation named: saveUsingPOST_17
2019-04-02 16:29:38 -Generating unique operation named: updateUsingGET_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPOST_17
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPUT_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 16:29:38 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 16:29:38 -Generating unique operation named: addUsingGET_17
2019-04-02 16:29:39 -Generating unique operation named: editUsingGET_18
2019-04-02 16:29:39 -Generating unique operation named: listUsingGET_20
2019-04-02 16:29:39 -Generating unique operation named: removeUsingPOST_31
2019-04-02 16:29:39 -Generating unique operation named: removeUsingPOST_32
2019-04-02 16:29:39 -Generating unique operation named: saveUsingPOST_18
2019-04-02 16:29:39 -Generating unique operation named: updateUsingGET_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingPOST_18
2019-04-02 16:29:39 -Generating unique operation named: updateUsingPUT_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 16:29:39 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 16:29:39 -Starting Quartz Scheduler now
2019-04-02 16:29:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 16:29:39 -Starting...
2019-04-02 16:29:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 16:29:39 -Started.
2019-04-02 16:29:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 16:29:39 -Using a shared selector for servlet write/read
2019-04-02 16:29:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 16:29:39 -Started BootdoApplication in 39.535 seconds (JVM running for 40.432)
2019-04-02 16:29:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 16:29:39 -==> Parameters: 
2019-04-02 16:29:39 -<==      Total: 1
2019-04-02 16:30:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-02 16:53:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 16:53:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 16:53:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 159 ms
2019-04-02 16:53:52 -Enabling session validation scheduler...
2019-04-02 16:53:52 -请求地址 : http://localhost:8081/login;JSESSIONID=9ab2bf4f-2eaa-4a97-a651-46fec20fced7
2019-04-02 16:53:52 -HTTP METHOD : GET
2019-04-02 16:53:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 16:53:52 -参数 : [{}]
2019-04-02 16:53:52 -耗时 : 4
2019-04-02 16:53:52 -返回值 : login
2019-04-02 16:53:55 -请求地址 : http://localhost:8081/getVerify
2019-04-02 16:53:55 -HTTP METHOD : GET
2019-04-02 16:53:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 16:53:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3064e2a8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75667ac0]
2019-04-02 16:54:02 -4072
2019-04-02 16:54:02 -耗时 : 6951
2019-04-02 16:54:02 -返回值 : null
2019-04-02 16:54:02 -请求地址 : http://localhost:8081/login
2019-04-02 16:54:02 -HTTP METHOD : GET
2019-04-02 16:54:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 16:54:02 -参数 : [{}]
2019-04-02 16:54:02 -耗时 : 0
2019-04-02 16:54:02 -返回值 : login
2019-04-02 16:54:13 -请求地址 : http://localhost:8081/login
2019-04-02 16:54:13 -HTTP METHOD : POST
2019-04-02 16:54:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 16:54:13 -参数 : [admin, 111111, 4072, org.apache.shiro.web.servlet.ShiroHttpServletRequest@14cab47e]
2019-04-02 16:54:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 16:54:13 -==> Parameters: admin(String)
2019-04-02 16:54:14 -<==      Total: 1
2019-04-02 16:54:14 -耗时 : 1298
2019-04-02 16:54:14 -返回值 : {msg=操作成功, code=0}
2019-04-02 16:54:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 16:54:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 16:54:15 -==> Parameters: 1(Long), admin(String), 登录(String), 1298(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 16:54:14.883(Timestamp)
2019-04-02 16:54:15 -<==    Updates: 1
2019-04-02 16:54:15 -请求地址 : http://localhost:8081/index
2019-04-02 16:54:15 -HTTP METHOD : GET
2019-04-02 16:54:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 16:54:15 -参数 : [{}]
2019-04-02 16:54:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 16:54:16 -==> Parameters: 1(Long)
2019-04-02 16:54:16 -<==      Total: 46
2019-04-02 16:54:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 16:54:16 -==> Parameters: 138(Long)
2019-04-02 16:54:16 -<==      Total: 1
2019-04-02 16:54:16 -耗时 : 1217
2019-04-02 16:54:16 -返回值 : index_v1
2019-04-02 16:54:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 16:54:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1218(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 16:54:17.086(Timestamp)
2019-04-02 16:54:17 -<==    Updates: 1
2019-04-02 16:54:17 -请求地址 : http://localhost:8081/main
2019-04-02 16:54:17 -HTTP METHOD : GET
2019-04-02 16:54:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 16:54:17 -参数 : []
2019-04-02 16:54:17 -耗时 : 1
2019-04-02 16:54:17 -返回值 : main
2019-04-02 16:54:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 16:54:20 -HTTP METHOD : GET
2019-04-02 16:54:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 16:54:20 -参数 : []
2019-04-02 16:54:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 16:54:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 16:54:20 -请求地址 : http://localhost:8081/main
2019-04-02 16:54:20 -HTTP METHOD : GET
2019-04-02 16:54:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 16:54:20 -参数 : []
2019-04-02 16:54:20 -耗时 : 0
2019-04-02 16:54:20 -返回值 : main
2019-04-02 16:54:20 -<==      Total: 0
2019-04-02 16:54:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 16:54:20 -==> Parameters: 1(Long), 0(String)
2019-04-02 16:54:20 -<==      Total: 1
2019-04-02 16:54:20 -耗时 : 225
2019-04-02 16:54:20 -返回值 : com.bootdo.common.utils.PageUtils@5449145e
2019-04-02 16:54:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 16:54:28 -==> Parameters: 1(Long)
2019-04-02 16:54:28 -<==      Total: 90
2019-04-02 16:54:28 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 16:54:28 -HTTP METHOD : GET
2019-04-02 16:54:28 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 16:54:28 -参数 : []
2019-04-02 16:54:28 -耗时 : 0
2019-04-02 16:54:28 -返回值 : charts/countYY
2019-04-02 16:54:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 16:54:29 -HTTP METHOD : GET
2019-04-02 16:54:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 16:54:29 -参数 : [userType]
2019-04-02 16:54:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 16:54:29 -==> Parameters: userType(String)
2019-04-02 16:54:30 -<==      Total: 2
2019-04-02 16:54:30 -耗时 : 135
2019-04-02 16:54:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 16:54:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 16:54:41 -HTTP METHOD : GET
2019-04-02 16:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 16:54:41 -参数 : []
2019-04-02 16:54:41 -耗时 : 1
2019-04-02 16:54:41 -返回值 : system/dept/deptTree
2019-04-02 16:54:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 16:54:41 -HTTP METHOD : GET
2019-04-02 16:54:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 16:54:41 -参数 : []
2019-04-02 16:54:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 16:54:41 -==> Parameters: 
2019-04-02 16:54:41 -<==      Total: 3
2019-04-02 16:54:41 -耗时 : 92
2019-04-02 16:54:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 16:59:27 -请求地址 : http://localhost:8081/index
2019-04-02 16:59:27 -HTTP METHOD : GET
2019-04-02 16:59:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 16:59:27 -参数 : [{}]
2019-04-02 16:59:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 16:59:27 -==> Parameters: 1(Long)
2019-04-02 16:59:27 -<==      Total: 46
2019-04-02 16:59:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 16:59:27 -==> Parameters: 138(Long)
2019-04-02 16:59:27 -<==      Total: 1
2019-04-02 16:59:27 -耗时 : 50
2019-04-02 16:59:27 -返回值 : index_v1
2019-04-02 16:59:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 16:59:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 50(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 16:59:27.108(Timestamp)
2019-04-02 16:59:27 -请求地址 : http://localhost:8081/main
2019-04-02 16:59:27 -HTTP METHOD : GET
2019-04-02 16:59:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 16:59:27 -参数 : []
2019-04-02 16:59:27 -耗时 : 0
2019-04-02 16:59:27 -返回值 : main
2019-04-02 16:59:27 -<==    Updates: 1
2019-04-02 16:59:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 16:59:28 -HTTP METHOD : GET
2019-04-02 16:59:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 16:59:28 -参数 : []
2019-04-02 16:59:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 16:59:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 16:59:28 -请求地址 : http://localhost:8081/main
2019-04-02 16:59:28 -HTTP METHOD : GET
2019-04-02 16:59:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 16:59:28 -参数 : []
2019-04-02 16:59:28 -耗时 : 1
2019-04-02 16:59:28 -返回值 : main
2019-04-02 16:59:28 -<==      Total: 0
2019-04-02 16:59:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 16:59:28 -==> Parameters: 1(Long), 0(String)
2019-04-02 16:59:28 -<==      Total: 1
2019-04-02 16:59:28 -耗时 : 182
2019-04-02 16:59:28 -返回值 : com.bootdo.common.utils.PageUtils@595e2ad9
2019-04-02 16:59:33 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 16:59:33 -HTTP METHOD : GET
2019-04-02 16:59:33 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 16:59:33 -参数 : []
2019-04-02 16:59:33 -耗时 : 0
2019-04-02 16:59:33 -返回值 : charts/countYY
2019-04-02 16:59:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 16:59:34 -HTTP METHOD : GET
2019-04-02 16:59:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 16:59:34 -参数 : [userType]
2019-04-02 16:59:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 16:59:34 -==> Parameters: userType(String)
2019-04-02 16:59:34 -<==      Total: 2
2019-04-02 16:59:34 -耗时 : 4
2019-04-02 16:59:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 17:00:12 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-02 17:00:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 92]
2019-04-02 17:01:53 -Starting BootdoApplication on ZJZL-20180906VX with PID 6776 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 17:01:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 17:01:53 -The following profiles are active: dev
2019-04-02 17:01:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7adf16aa: startup date [Tue Apr 02 17:01:53 CST 2019]; root of context hierarchy
2019-04-02 17:01:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 17:02:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69ea4650] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c4374f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 17:02:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 17:02:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 17:02:07 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 17:02:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 17:02:07 -Starting service [Tomcat]
2019-04-02 17:02:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 17:02:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 17:02:09 -Initializing Spring embedded WebApplicationContext
2019-04-02 17:02:09 -Root WebApplicationContext: initialization completed in 16226 ms
2019-04-02 17:02:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 17:02:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 17:02:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 17:02:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 17:02:13 -Filter xssFilter was not registered (disabled)
2019-04-02 17:02:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 17:02:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 17:02:13 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 17:02:13 -Servlet dispatcherServlet mapped to [/]
2019-04-02 17:02:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7adf16aa: startup date [Tue Apr 02 17:01:53 CST 2019]; root of context hierarchy
2019-04-02 17:02:19 -Using default implementation for ThreadExecutor
2019-04-02 17:02:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 17:02:19 -Quartz Scheduler v.2.2.1 created.
2019-04-02 17:02:19 -RAMJobStore initialized.
2019-04-02 17:02:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 17:02:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 17:02:19 -Quartz scheduler version: 2.2.1
2019-04-02 17:02:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@24f3fb87
2019-04-02 17:02:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 17:02:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 17:02:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 17:02:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 17:02:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 17:02:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 17:02:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 17:02:24 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-02 17:02:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 17:02:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 17:02:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 17:02:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 17:02:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 17:02:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 17:02:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 17:02:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 17:02:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 17:02:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 17:02:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 17:02:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 17:02:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 17:02:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 17:02:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 17:02:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 17:02:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 17:02:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 17:02:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 17:02:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 17:02:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 17:02:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 17:02:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 17:02:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 17:02:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 17:02:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 17:02:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 17:02:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 17:02:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 17:02:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 17:02:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 17:02:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 17:02:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 17:02:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 17:02:24 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 17:02:24 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 17:02:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 17:02:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 17:02:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 17:02:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 17:02:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 17:02:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 17:02:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 17:02:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 17:02:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 17:02:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 17:02:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 17:02:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 17:02:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 17:02:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 17:02:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 17:02:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 17:02:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 17:02:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 17:02:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 17:02:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 17:02:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 17:02:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 17:02:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 17:02:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 17:02:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 17:02:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 17:02:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 17:02:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 17:02:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 17:02:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 17:02:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 17:02:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 17:02:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 17:02:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 17:02:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 17:02:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 17:02:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 17:02:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 17:02:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 17:02:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 17:02:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 17:02:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 17:02:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 17:02:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 17:02:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 17:02:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 17:02:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 17:02:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 17:02:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7adf16aa: startup date [Tue Apr 02 17:01:53 CST 2019]; root of context hierarchy
2019-04-02 17:02:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 17:02:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 17:02:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 17:02:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 17:02:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 17:02:31 -Registering beans for JMX exposure on startup
2019-04-02 17:02:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 17:02:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 17:02:31 -Starting beans in phase 2147483647
2019-04-02 17:02:31 -Context refreshed
2019-04-02 17:02:31 -Found 1 custom documentation plugin(s)
2019-04-02 17:02:32 -Scanning for api listing references
2019-04-02 17:02:32 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 17:02:32 -Generating unique operation named: getCountDUsingPOST_2
2019-04-02 17:02:32 -Generating unique operation named: removeUsingPOST_1
2019-04-02 17:02:33 -Generating unique operation named: addUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: editUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: listUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_2
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_3
2019-04-02 17:02:33 -Generating unique operation named: saveUsingPOST_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPOST_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPUT_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 17:02:33 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 17:02:33 -Generating unique operation named: addUsingGET_2
2019-04-02 17:02:33 -Generating unique operation named: editUsingGET_2
2019-04-02 17:02:33 -Generating unique operation named: listUsingGET_2
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_4
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_5
2019-04-02 17:02:33 -Generating unique operation named: saveUsingPOST_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPOST_2
2019-04-02 17:02:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: addUsingGET_3
2019-04-02 17:02:33 -Generating unique operation named: editUsingGET_3
2019-04-02 17:02:33 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: listUsingGET_3
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_6
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_7
2019-04-02 17:02:33 -Generating unique operation named: saveUsingPOST_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingGET_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPOST_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPUT_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 17:02:33 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 17:02:33 -Generating unique operation named: addUsingGET_4
2019-04-02 17:02:33 -Generating unique operation named: editUsingGET_4
2019-04-02 17:02:33 -Generating unique operation named: listUsingGET_4
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_8
2019-04-02 17:02:33 -Generating unique operation named: removeUsingPOST_9
2019-04-02 17:02:33 -Generating unique operation named: saveUsingPOST_4
2019-04-02 17:02:33 -Generating unique operation named: updateUsingGET_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPOST_4
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPUT_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 17:02:33 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 17:02:33 -Generating unique operation named: ElecUsingGET_1
2019-04-02 17:02:33 -Generating unique operation named: addUsingGET_5
2019-04-02 17:02:33 -Generating unique operation named: editUsingGET_5
2019-04-02 17:02:33 -Generating unique operation named: listUsingGET_5
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_10
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_11
2019-04-02 17:02:34 -Generating unique operation named: saveUsingPOST_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingGET_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPUT_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 17:02:34 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 17:02:34 -Generating unique operation named: editUsingGET_6
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_6
2019-04-02 17:02:34 -Generating unique operation named: addUsingGET_6
2019-04-02 17:02:34 -Generating unique operation named: editUsingGET_7
2019-04-02 17:02:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_7
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_12
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_13
2019-04-02 17:02:34 -Generating unique operation named: saveUsingPOST_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingGET_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPUT_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 17:02:34 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 17:02:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 17:02:34 -Generating unique operation named: addUsingGET_7
2019-04-02 17:02:34 -Generating unique operation named: editUsingGET_8
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_8
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_14
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_15
2019-04-02 17:02:34 -Generating unique operation named: saveUsingPOST_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingGET_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_8
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPUT_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 17:02:34 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 17:02:34 -Generating unique operation named: addUsingGET_8
2019-04-02 17:02:34 -Generating unique operation named: editUsingGET_9
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_9
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_16
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_17
2019-04-02 17:02:34 -Generating unique operation named: saveUsingPOST_8
2019-04-02 17:02:34 -Generating unique operation named: updateUsingGET_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_9
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPUT_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 17:02:34 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 17:02:34 -Generating unique operation named: addUsingGET_9
2019-04-02 17:02:34 -Generating unique operation named: editUsingGET_10
2019-04-02 17:02:34 -Generating unique operation named: infoUsingGET_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingPOST_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingPUT_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 17:02:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_10
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_18
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_19
2019-04-02 17:02:34 -Generating unique operation named: saveUsingPOST_9
2019-04-02 17:02:34 -Generating unique operation named: updateUsingPOST_10
2019-04-02 17:02:34 -Generating unique operation named: listUsingGET_11
2019-04-02 17:02:34 -Generating unique operation named: removeUsingPOST_20
2019-04-02 17:02:34 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 17:02:35 -Generating unique operation named: addUsingGET_10
2019-04-02 17:02:35 -Generating unique operation named: editUsingGET_11
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_12
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_21
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_10
2019-04-02 17:02:35 -Generating unique operation named: treeUsingGET_1
2019-04-02 17:02:35 -Generating unique operation named: treeUsingGET_2
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPOST_11
2019-04-02 17:02:35 -Generating unique operation named: addUsingGET_11
2019-04-02 17:02:35 -Generating unique operation named: editUsingGET_12
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_13
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_22
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_23
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_11
2019-04-02 17:02:35 -Generating unique operation named: updateUsingGET_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPOST_12
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPUT_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 17:02:35 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 17:02:35 -Generating unique operation named: addUsingGET_12
2019-04-02 17:02:35 -Generating unique operation named: editUsingGET_13
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_14
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_24
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_25
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_12
2019-04-02 17:02:35 -Generating unique operation named: updateUsingGET_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPOST_13
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPUT_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 17:02:35 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 17:02:35 -Generating unique operation named: addUsingGET_13
2019-04-02 17:02:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 17:02:35 -Generating unique operation named: editUsingGET_14
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_15
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_13
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_14
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPOST_14
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_16
2019-04-02 17:02:35 -Generating unique operation named: listUsingHEAD_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingPOST_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingPUT_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingPATCH_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingDELETE_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 17:02:35 -Generating unique operation named: listUsingTRACE_1
2019-04-02 17:02:35 -Generating unique operation named: addUsingGET_14
2019-04-02 17:02:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 17:02:35 -Generating unique operation named: editUsingGET_15
2019-04-02 17:02:35 -Generating unique operation named: listUsingGET_17
2019-04-02 17:02:35 -Generating unique operation named: removeUsingPOST_26
2019-04-02 17:02:35 -Generating unique operation named: saveUsingPOST_15
2019-04-02 17:02:35 -Generating unique operation named: treeUsingGET_3
2019-04-02 17:02:35 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 17:02:35 -Generating unique operation named: updateUsingPOST_15
2019-04-02 17:02:36 -Generating unique operation named: addUsingGET_15
2019-04-02 17:02:36 -Generating unique operation named: editUsingGET_16
2019-04-02 17:02:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 17:02:36 -Generating unique operation named: listUsingGET_18
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_27
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_28
2019-04-02 17:02:36 -Generating unique operation named: saveUsingPOST_16
2019-04-02 17:02:36 -Generating unique operation named: updateUsingGET_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPOST_16
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPUT_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 17:02:36 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 17:02:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 17:02:36 -Generating unique operation named: addUsingGET_16
2019-04-02 17:02:36 -Generating unique operation named: editUsingGET_17
2019-04-02 17:02:36 -Generating unique operation named: listUsingGET_19
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_29
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_30
2019-04-02 17:02:36 -Generating unique operation named: saveUsingPOST_17
2019-04-02 17:02:36 -Generating unique operation named: updateUsingGET_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPOST_17
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPUT_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 17:02:36 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 17:02:36 -Generating unique operation named: addUsingGET_17
2019-04-02 17:02:36 -Generating unique operation named: editUsingGET_18
2019-04-02 17:02:36 -Generating unique operation named: listUsingGET_20
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_31
2019-04-02 17:02:36 -Generating unique operation named: removeUsingPOST_32
2019-04-02 17:02:36 -Generating unique operation named: saveUsingPOST_18
2019-04-02 17:02:36 -Generating unique operation named: updateUsingGET_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPOST_18
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPUT_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 17:02:36 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 17:02:36 -Starting Quartz Scheduler now
2019-04-02 17:02:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 17:02:36 -Starting...
2019-04-02 17:02:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 17:02:36 -Started.
2019-04-02 17:02:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 17:02:36 -Using a shared selector for servlet write/read
2019-04-02 17:02:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 17:02:36 -Started BootdoApplication in 46.267 seconds (JVM running for 48.702)
2019-04-02 17:02:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 17:02:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 17:02:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 17:02:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 127 ms
2019-04-02 17:02:37 -Enabling session validation scheduler...
2019-04-02 17:02:37 -请求地址 : http://localhost:8081/login;JSESSIONID=d41d80f4-e3dc-41aa-9743-68c3472c41ee
2019-04-02 17:02:37 -HTTP METHOD : GET
2019-04-02 17:02:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 17:02:37 -参数 : [{}]
2019-04-02 17:02:37 -耗时 : 24
2019-04-02 17:02:37 -返回值 : login
2019-04-02 17:02:37 -==> Parameters: 
2019-04-02 17:02:37 -<==      Total: 1
2019-04-02 17:02:39 -请求地址 : http://localhost:8081/getVerify
2019-04-02 17:02:39 -HTTP METHOD : GET
2019-04-02 17:02:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 17:02:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68565bb0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@cf5196f]
2019-04-02 17:02:43 -0673
2019-04-02 17:02:44 -耗时 : 4599
2019-04-02 17:02:44 -返回值 : null
2019-04-02 17:02:51 -请求地址 : http://localhost:8081/login
2019-04-02 17:02:51 -HTTP METHOD : POST
2019-04-02 17:02:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 17:02:51 -参数 : [admin, 111111, 0673, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3db39fa2]
2019-04-02 17:02:51 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 17:02:51 -==> Parameters: admin(String)
2019-04-02 17:02:52 -<==      Total: 1
2019-04-02 17:02:52 -耗时 : 708
2019-04-02 17:02:52 -返回值 : {msg=操作成功, code=0}
2019-04-02 17:02:52 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 17:02:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 17:02:52 -==> Parameters: 1(Long), admin(String), 登录(String), 708(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 17:02:52.455(Timestamp)
2019-04-02 17:02:52 -请求地址 : http://localhost:8081/index
2019-04-02 17:02:52 -HTTP METHOD : GET
2019-04-02 17:02:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 17:02:52 -参数 : [{}]
2019-04-02 17:02:52 -<==    Updates: 1
2019-04-02 17:02:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 17:02:53 -==> Parameters: 1(Long)
2019-04-02 17:02:53 -<==      Total: 46
2019-04-02 17:02:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 17:02:53 -==> Parameters: 138(Long)
2019-04-02 17:02:53 -<==      Total: 1
2019-04-02 17:02:53 -耗时 : 544
2019-04-02 17:02:53 -返回值 : index_v1
2019-04-02 17:02:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 17:02:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 545(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 17:02:53.469(Timestamp)
2019-04-02 17:02:53 -请求地址 : http://localhost:8081/main
2019-04-02 17:02:53 -HTTP METHOD : GET
2019-04-02 17:02:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 17:02:53 -参数 : []
2019-04-02 17:02:53 -耗时 : 0
2019-04-02 17:02:53 -返回值 : main
2019-04-02 17:02:53 -<==    Updates: 1
2019-04-02 17:02:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 17:02:54 -HTTP METHOD : GET
2019-04-02 17:02:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 17:02:54 -参数 : []
2019-04-02 17:02:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 17:02:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 17:02:54 -<==      Total: 0
2019-04-02 17:02:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 17:02:54 -==> Parameters: 1(Long), 0(String)
2019-04-02 17:02:54 -<==      Total: 1
2019-04-02 17:02:54 -耗时 : 198
2019-04-02 17:02:54 -返回值 : com.bootdo.common.utils.PageUtils@1e226bbd
2019-04-02 17:02:54 -请求地址 : http://localhost:8081/main
2019-04-02 17:02:54 -HTTP METHOD : GET
2019-04-02 17:02:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 17:02:54 -参数 : []
2019-04-02 17:02:54 -耗时 : 2
2019-04-02 17:02:54 -返回值 : main
2019-04-02 17:03:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 17:03:01 -==> Parameters: 1(Long)
2019-04-02 17:03:02 -<==      Total: 90
2019-04-02 17:03:02 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 17:03:02 -HTTP METHOD : GET
2019-04-02 17:03:02 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 17:03:02 -参数 : []
2019-04-02 17:03:02 -耗时 : 0
2019-04-02 17:03:02 -返回值 : charts/countYY
2019-04-02 17:03:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 17:03:04 -HTTP METHOD : GET
2019-04-02 17:03:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 17:03:04 -参数 : [userType]
2019-04-02 17:03:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 17:03:04 -==> Parameters: userType(String)
2019-04-02 17:03:05 -<==      Total: 2
2019-04-02 17:03:05 -耗时 : 455
2019-04-02 17:03:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 17:03:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 17:03:12 -HTTP METHOD : GET
2019-04-02 17:03:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 17:03:12 -参数 : []
2019-04-02 17:03:12 -耗时 : 3
2019-04-02 17:03:12 -返回值 : system/dept/deptTree
2019-04-02 17:03:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 17:03:12 -HTTP METHOD : GET
2019-04-02 17:03:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 17:03:12 -参数 : []
2019-04-02 17:03:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 17:03:12 -==> Parameters: 
2019-04-02 17:03:12 -<==      Total: 3
2019-04-02 17:03:12 -耗时 : 36
2019-04-02 17:03:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 17:03:25 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-02 17:07:24 -请求地址 : http://localhost:8081/index
2019-04-02 17:07:24 -HTTP METHOD : GET
2019-04-02 17:07:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 17:07:24 -参数 : [{}]
2019-04-02 17:07:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 17:07:24 -==> Parameters: 1(Long)
2019-04-02 17:07:24 -<==      Total: 46
2019-04-02 17:07:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 17:07:24 -==> Parameters: 138(Long)
2019-04-02 17:07:24 -<==      Total: 1
2019-04-02 17:07:24 -耗时 : 33
2019-04-02 17:07:24 -返回值 : index_v1
2019-04-02 17:07:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 17:07:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 17:07:24.87(Timestamp)
2019-04-02 17:07:25 -<==    Updates: 1
2019-04-02 17:07:25 -请求地址 : http://localhost:8081/main
2019-04-02 17:07:25 -HTTP METHOD : GET
2019-04-02 17:07:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 17:07:25 -参数 : []
2019-04-02 17:07:25 -耗时 : 1
2019-04-02 17:07:25 -返回值 : main
2019-04-02 17:07:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 17:07:25 -HTTP METHOD : GET
2019-04-02 17:07:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 17:07:25 -参数 : []
2019-04-02 17:07:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 17:07:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 17:07:25 -<==      Total: 0
2019-04-02 17:07:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 17:07:25 -==> Parameters: 1(Long), 0(String)
2019-04-02 17:07:25 -<==      Total: 1
2019-04-02 17:07:25 -耗时 : 34
2019-04-02 17:07:25 -返回值 : com.bootdo.common.utils.PageUtils@53dc2ed5
2019-04-02 17:07:25 -请求地址 : http://localhost:8081/main
2019-04-02 17:07:25 -HTTP METHOD : GET
2019-04-02 17:07:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 17:07:25 -参数 : []
2019-04-02 17:07:25 -耗时 : 1
2019-04-02 17:07:25 -返回值 : main
2019-04-02 17:07:49 -请求地址 : http://localhost:8081/charts/countYY
2019-04-02 17:07:49 -HTTP METHOD : GET
2019-04-02 17:07:49 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-02 17:07:49 -参数 : []
2019-04-02 17:07:49 -耗时 : 2
2019-04-02 17:07:49 -返回值 : charts/countYY
2019-04-02 17:07:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 17:07:50 -HTTP METHOD : GET
2019-04-02 17:07:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 17:07:50 -参数 : [userType]
2019-04-02 17:07:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 17:07:50 -==> Parameters: userType(String)
2019-04-02 17:07:50 -<==      Total: 2
2019-04-02 17:07:50 -耗时 : 6
2019-04-02 17:07:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 17:07:58 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-02 17:08:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 17:08:00 -HTTP METHOD : GET
2019-04-02 17:08:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 17:08:00 -参数 : []
2019-04-02 17:08:00 -耗时 : 1
2019-04-02 17:08:00 -返回值 : system/dept/deptTree
2019-04-02 17:08:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 17:08:00 -HTTP METHOD : GET
2019-04-02 17:08:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 17:08:00 -参数 : []
2019-04-02 17:08:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 17:08:00 -==> Parameters: 
2019-04-02 17:08:00 -<==      Total: 3
2019-04-02 17:08:00 -耗时 : 3
2019-04-02 17:08:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 17:08:03 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-04-02 17:08:03 -HTTP METHOD : POST
2019-04-02 17:08:03 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountD
2019-04-02 17:08:03 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@780de231]
2019-04-02 17:08:29 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG 
2019-04-02 17:08:29 -==> Parameters: 
2019-04-02 17:08:29 -<==      Total: 1
2019-04-02 17:33:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 395]
2019-04-02 18:02:37 -Validating all active sessions...
2019-04-02 18:02:38 -Finished session validation.  [1] sessions were stopped.
2019-04-02 18:03:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 756]
2019-04-02 20:53:19 -Starting BootdoApplication on ZJZL-20180906VX with PID 14088 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-02 20:53:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-02 20:53:19 -The following profiles are active: dev
2019-04-02 20:53:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 02 20:53:20 CST 2019]; root of context hierarchy
2019-04-02 20:53:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-02 20:53:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fefdb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$64582c58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-02 20:53:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-02 20:53:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-02 20:53:45 -Tomcat initialized with port(s): 8081 (http)
2019-04-02 20:53:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-02 20:53:45 -Starting service [Tomcat]
2019-04-02 20:53:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-02 20:53:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-02 20:53:46 -Initializing Spring embedded WebApplicationContext
2019-04-02 20:53:46 -Root WebApplicationContext: initialization completed in 26032 ms
2019-04-02 20:53:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-02 20:53:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-02 20:53:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-02 20:53:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-02 20:53:47 -Filter xssFilter was not registered (disabled)
2019-04-02 20:53:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-02 20:53:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-02 20:53:47 -Servlet statViewServlet mapped to [/druid/*]
2019-04-02 20:53:47 -Servlet dispatcherServlet mapped to [/]
2019-04-02 20:53:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 02 20:53:20 CST 2019]; root of context hierarchy
2019-04-02 20:53:52 -Using default implementation for ThreadExecutor
2019-04-02 20:53:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-02 20:53:52 -Quartz Scheduler v.2.2.1 created.
2019-04-02 20:53:52 -RAMJobStore initialized.
2019-04-02 20:53:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-02 20:53:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-02 20:53:52 -Quartz scheduler version: 2.2.1
2019-04-02 20:53:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2dcd0e41
2019-04-02 20:53:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-02 20:53:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-02 20:53:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-02 20:53:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-02 20:53:57 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-02 20:53:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-02 20:53:57 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-02 20:53:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-02 20:53:57 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-02 20:53:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-02 20:53:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-02 20:53:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-02 20:53:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-02 20:53:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-02 20:53:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-02 20:53:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-02 20:53:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 20:53:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-02 20:53:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-02 20:53:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-02 20:53:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-02 20:53:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-02 20:53:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-02 20:53:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-02 20:53:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-02 20:53:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-02 20:53:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-02 20:53:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-02 20:53:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-02 20:53:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-02 20:53:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-02 20:53:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-02 20:53:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-02 20:53:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-02 20:53:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-02 20:53:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-02 20:53:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-02 20:53:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-02 20:53:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-02 20:53:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-02 20:53:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-02 20:53:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-02 20:53:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-02 20:53:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-02 20:53:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-02 20:53:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-02 20:53:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-02 20:53:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-02 20:53:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-02 20:53:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-02 20:53:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-02 20:53:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-02 20:53:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-02 20:53:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-02 20:53:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-02 20:53:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-02 20:53:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-02 20:53:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-02 20:53:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-02 20:53:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-02 20:53:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-02 20:53:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-02 20:53:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-02 20:53:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-02 20:53:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-02 20:53:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-02 20:53:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-02 20:53:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-02 20:53:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-02 20:53:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-02 20:53:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-02 20:53:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-02 20:53:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-02 20:53:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-02 20:53:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-02 20:53:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-02 20:53:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 20:53:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-02 20:53:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-02 20:53:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-02 20:53:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-02 20:53:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-02 20:53:57 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-02 20:53:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-02 20:53:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-02 20:53:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-02 20:53:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-02 20:53:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-02 20:53:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-02 20:53:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-02 20:53:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-02 20:53:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-02 20:53:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-02 20:53:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-02 20:53:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-02 20:53:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-02 20:53:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-02 20:53:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 20:53:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Tue Apr 02 20:53:20 CST 2019]; root of context hierarchy
2019-04-02 20:53:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 20:53:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 20:53:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-02 20:53:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-02 20:53:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-02 20:54:03 -Registering beans for JMX exposure on startup
2019-04-02 20:54:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-02 20:54:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-02 20:54:03 -Starting beans in phase 2147483647
2019-04-02 20:54:03 -Context refreshed
2019-04-02 20:54:03 -Found 1 custom documentation plugin(s)
2019-04-02 20:54:03 -Scanning for api listing references
2019-04-02 20:54:04 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: getCountDUsingPOST_1
2019-04-02 20:54:04 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-02 20:54:04 -Generating unique operation named: getCountDUsingPOST_2
2019-04-02 20:54:04 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-02 20:54:04 -Generating unique operation named: getCountDUsingPOST_3
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_1
2019-04-02 20:54:04 -Generating unique operation named: addUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: editUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: listUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_2
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_3
2019-04-02 20:54:04 -Generating unique operation named: saveUsingPOST_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingHEAD_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPOST_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPUT_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPATCH_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingDELETE_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-02 20:54:04 -Generating unique operation named: updateUsingTRACE_1
2019-04-02 20:54:04 -Generating unique operation named: addUsingGET_2
2019-04-02 20:54:04 -Generating unique operation named: editUsingGET_2
2019-04-02 20:54:04 -Generating unique operation named: listUsingGET_2
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_4
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_5
2019-04-02 20:54:04 -Generating unique operation named: saveUsingPOST_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPOST_2
2019-04-02 20:54:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-02 20:54:04 -Generating unique operation named: addUsingGET_3
2019-04-02 20:54:04 -Generating unique operation named: editUsingGET_3
2019-04-02 20:54:04 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-02 20:54:04 -Generating unique operation named: listUsingGET_3
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_6
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_7
2019-04-02 20:54:04 -Generating unique operation named: saveUsingPOST_3
2019-04-02 20:54:04 -Generating unique operation named: updateUsingGET_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingHEAD_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPOST_3
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPUT_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingPATCH_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingDELETE_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-02 20:54:04 -Generating unique operation named: updateUsingTRACE_2
2019-04-02 20:54:04 -Generating unique operation named: addUsingGET_4
2019-04-02 20:54:04 -Generating unique operation named: editUsingGET_4
2019-04-02 20:54:04 -Generating unique operation named: listUsingGET_4
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_8
2019-04-02 20:54:04 -Generating unique operation named: removeUsingPOST_9
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingGET_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingHEAD_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPUT_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPATCH_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingDELETE_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-02 20:54:05 -Generating unique operation named: updateUsingTRACE_3
2019-04-02 20:54:05 -Generating unique operation named: ElecUsingGET_1
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_5
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_5
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_5
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_10
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_11
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingGET_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingHEAD_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPUT_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPATCH_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingDELETE_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-02 20:54:05 -Generating unique operation named: updateUsingTRACE_4
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_6
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_6
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_6
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_7
2019-04-02 20:54:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_7
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_12
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_13
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingGET_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingHEAD_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPUT_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPATCH_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingDELETE_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-02 20:54:05 -Generating unique operation named: updateUsingTRACE_5
2019-04-02 20:54:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_7
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_8
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_8
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_14
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_15
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingGET_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingHEAD_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_8
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPUT_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPATCH_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingDELETE_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-02 20:54:05 -Generating unique operation named: updateUsingTRACE_6
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_8
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_9
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_9
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_16
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_17
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_8
2019-04-02 20:54:05 -Generating unique operation named: updateUsingGET_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingHEAD_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_9
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPUT_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPATCH_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingDELETE_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-02 20:54:05 -Generating unique operation named: updateUsingTRACE_7
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_9
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_10
2019-04-02 20:54:05 -Generating unique operation named: infoUsingGET_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingHEAD_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingPOST_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingPUT_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingPATCH_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingDELETE_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-02 20:54:05 -Generating unique operation named: infoUsingTRACE_1
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_10
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_18
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_19
2019-04-02 20:54:05 -Generating unique operation named: saveUsingPOST_9
2019-04-02 20:54:05 -Generating unique operation named: updateUsingPOST_10
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_11
2019-04-02 20:54:05 -Generating unique operation named: removeUsingPOST_20
2019-04-02 20:54:05 -Generating unique operation named: welcomeUsingGET_1
2019-04-02 20:54:05 -Generating unique operation named: addUsingGET_10
2019-04-02 20:54:05 -Generating unique operation named: editUsingGET_11
2019-04-02 20:54:05 -Generating unique operation named: listUsingGET_12
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_21
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_10
2019-04-02 20:54:06 -Generating unique operation named: treeUsingGET_1
2019-04-02 20:54:06 -Generating unique operation named: treeUsingGET_2
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_11
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_11
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_12
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_13
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_22
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_23
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingGET_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingHEAD_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_12
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPUT_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPATCH_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingDELETE_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-02 20:54:06 -Generating unique operation named: updateUsingTRACE_8
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_12
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_13
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_14
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_24
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_25
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_12
2019-04-02 20:54:06 -Generating unique operation named: updateUsingGET_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingHEAD_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_13
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPUT_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPATCH_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingDELETE_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-02 20:54:06 -Generating unique operation named: updateUsingTRACE_9
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_13
2019-04-02 20:54:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_14
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_15
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_13
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_14
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_14
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_16
2019-04-02 20:54:06 -Generating unique operation named: listUsingHEAD_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingPOST_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingPUT_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingPATCH_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingDELETE_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingOPTIONS_1
2019-04-02 20:54:06 -Generating unique operation named: listUsingTRACE_1
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_14
2019-04-02 20:54:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_15
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_17
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_26
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_15
2019-04-02 20:54:06 -Generating unique operation named: treeUsingGET_3
2019-04-02 20:54:06 -Generating unique operation named: treeViewUsingGET_1
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_15
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_15
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_16
2019-04-02 20:54:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_18
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_27
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_28
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_16
2019-04-02 20:54:06 -Generating unique operation named: updateUsingGET_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingHEAD_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_16
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPUT_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPATCH_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingDELETE_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-02 20:54:06 -Generating unique operation named: updateUsingTRACE_10
2019-04-02 20:54:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_16
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_17
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_19
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_29
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_30
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_17
2019-04-02 20:54:06 -Generating unique operation named: updateUsingGET_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingHEAD_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPOST_17
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPUT_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingPATCH_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingDELETE_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-02 20:54:06 -Generating unique operation named: updateUsingTRACE_11
2019-04-02 20:54:06 -Generating unique operation named: addUsingGET_17
2019-04-02 20:54:06 -Generating unique operation named: editUsingGET_18
2019-04-02 20:54:06 -Generating unique operation named: listUsingGET_20
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_31
2019-04-02 20:54:06 -Generating unique operation named: removeUsingPOST_32
2019-04-02 20:54:06 -Generating unique operation named: saveUsingPOST_18
2019-04-02 20:54:07 -Generating unique operation named: updateUsingGET_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingHEAD_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingPOST_18
2019-04-02 20:54:07 -Generating unique operation named: updateUsingPUT_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingPATCH_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingDELETE_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-02 20:54:07 -Generating unique operation named: updateUsingTRACE_12
2019-04-02 20:54:07 -Starting Quartz Scheduler now
2019-04-02 20:54:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-02 20:54:07 -Starting...
2019-04-02 20:54:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-02 20:54:07 -Started.
2019-04-02 20:54:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-02 20:54:07 -Using a shared selector for servlet write/read
2019-04-02 20:54:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-02 20:54:07 -Started BootdoApplication in 50.134 seconds (JVM running for 51.33)
2019-04-02 20:54:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-02 20:54:08 -==> Parameters: 
2019-04-02 20:54:08 -<==      Total: 1
2019-04-02 20:54:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-02 20:54:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-02 20:54:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-02 20:54:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 150 ms
2019-04-02 20:54:59 -Enabling session validation scheduler...
2019-04-02 20:54:59 -请求地址 : http://localhost:8081/login;JSESSIONID=23bef369-ea48-4eeb-8600-56ab3ee14986
2019-04-02 20:54:59 -HTTP METHOD : GET
2019-04-02 20:54:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 20:54:59 -参数 : [{}]
2019-04-02 20:54:59 -耗时 : 2
2019-04-02 20:54:59 -返回值 : login
2019-04-02 20:55:02 -请求地址 : http://localhost:8081/getVerify
2019-04-02 20:55:02 -HTTP METHOD : GET
2019-04-02 20:55:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 20:55:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7578f8e0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b73021c]
2019-04-02 20:55:06 -1869
2019-04-02 20:55:07 -耗时 : 4889
2019-04-02 20:55:07 -返回值 : null
2019-04-02 20:55:16 -请求地址 : http://localhost:8081/login
2019-04-02 20:55:16 -HTTP METHOD : POST
2019-04-02 20:55:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 20:55:16 -参数 : [admin, 111111, 1869, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b4d6f58]
2019-04-02 20:55:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 20:55:16 -==> Parameters: admin(String)
2019-04-02 20:55:16 -<==      Total: 1
2019-04-02 20:55:16 -耗时 : 288
2019-04-02 20:55:16 -返回值 : {msg=操作成功, code=0}
2019-04-02 20:55:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-02 20:55:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 20:55:17 -==> Parameters: 1(Long), admin(String), 登录(String), 290(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 20:55:17.12(Timestamp)
2019-04-02 20:55:17 -请求地址 : http://localhost:8081/index
2019-04-02 20:55:17 -HTTP METHOD : GET
2019-04-02 20:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 20:55:17 -参数 : [{}]
2019-04-02 20:55:17 -<==    Updates: 1
2019-04-02 20:55:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 20:55:18 -==> Parameters: 1(Long)
2019-04-02 20:55:18 -<==      Total: 46
2019-04-02 20:55:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 20:55:18 -==> Parameters: 138(Long)
2019-04-02 20:55:18 -<==      Total: 1
2019-04-02 20:55:18 -耗时 : 784
2019-04-02 20:55:18 -返回值 : index_v1
2019-04-02 20:55:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 20:55:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 784(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 20:55:18.473(Timestamp)
2019-04-02 20:55:18 -<==    Updates: 1
2019-04-02 20:55:18 -请求地址 : http://localhost:8081/main
2019-04-02 20:55:18 -HTTP METHOD : GET
2019-04-02 20:55:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 20:55:18 -参数 : []
2019-04-02 20:55:18 -耗时 : 0
2019-04-02 20:55:18 -返回值 : main
2019-04-02 20:55:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 20:55:21 -HTTP METHOD : GET
2019-04-02 20:55:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 20:55:21 -参数 : []
2019-04-02 20:55:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 20:55:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 20:55:21 -<==      Total: 0
2019-04-02 20:55:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 20:55:21 -==> Parameters: 1(Long), 0(String)
2019-04-02 20:55:21 -<==      Total: 1
2019-04-02 20:55:21 -耗时 : 74
2019-04-02 20:55:21 -返回值 : com.bootdo.common.utils.PageUtils@2c6e907e
2019-04-02 20:55:21 -请求地址 : http://localhost:8081/main
2019-04-02 20:55:21 -HTTP METHOD : GET
2019-04-02 20:55:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 20:55:21 -参数 : []
2019-04-02 20:55:21 -耗时 : 1
2019-04-02 20:55:21 -返回值 : main
2019-04-02 20:55:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 20:55:27 -==> Parameters: 1(Long)
2019-04-02 20:55:27 -<==      Total: 90
2019-04-02 20:55:27 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 20:55:27 -HTTP METHOD : GET
2019-04-02 20:55:27 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 20:55:27 -参数 : []
2019-04-02 20:55:27 -耗时 : 13
2019-04-02 20:55:27 -返回值 : charts/countDD
2019-04-02 20:59:34 -请求地址 : http://localhost:8081/index
2019-04-02 20:59:34 -HTTP METHOD : GET
2019-04-02 20:59:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 20:59:34 -参数 : [{}]
2019-04-02 20:59:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 20:59:34 -==> Parameters: 1(Long)
2019-04-02 20:59:34 -<==      Total: 46
2019-04-02 20:59:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 20:59:34 -==> Parameters: 138(Long)
2019-04-02 20:59:34 -<==      Total: 1
2019-04-02 20:59:34 -耗时 : 28
2019-04-02 20:59:34 -返回值 : index_v1
2019-04-02 20:59:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 20:59:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 20:59:34.342(Timestamp)
2019-04-02 20:59:34 -<==    Updates: 1
2019-04-02 20:59:34 -请求地址 : http://localhost:8081/main
2019-04-02 20:59:34 -HTTP METHOD : GET
2019-04-02 20:59:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 20:59:34 -参数 : []
2019-04-02 20:59:34 -耗时 : 0
2019-04-02 20:59:34 -返回值 : main
2019-04-02 20:59:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 20:59:35 -HTTP METHOD : GET
2019-04-02 20:59:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 20:59:35 -参数 : []
2019-04-02 20:59:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 20:59:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 20:59:35 -请求地址 : http://localhost:8081/main
2019-04-02 20:59:35 -HTTP METHOD : GET
2019-04-02 20:59:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 20:59:35 -参数 : []
2019-04-02 20:59:35 -耗时 : 0
2019-04-02 20:59:35 -返回值 : main
2019-04-02 20:59:35 -<==      Total: 0
2019-04-02 20:59:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 20:59:35 -==> Parameters: 1(Long), 0(String)
2019-04-02 20:59:35 -<==      Total: 1
2019-04-02 20:59:35 -耗时 : 83
2019-04-02 20:59:35 -返回值 : com.bootdo.common.utils.PageUtils@1e85cea5
2019-04-02 20:59:45 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 20:59:45 -HTTP METHOD : GET
2019-04-02 20:59:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 20:59:45 -参数 : []
2019-04-02 20:59:45 -耗时 : 0
2019-04-02 20:59:45 -返回值 : charts/countDD
2019-04-02 20:59:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 20:59:45 -HTTP METHOD : GET
2019-04-02 20:59:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 20:59:45 -参数 : [userType]
2019-04-02 20:59:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 20:59:45 -==> Parameters: userType(String)
2019-04-02 20:59:45 -<==      Total: 2
2019-04-02 20:59:45 -耗时 : 63
2019-04-02 20:59:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 20:59:50 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 20:59:50 -HTTP METHOD : POST
2019-04-02 20:59:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 20:59:50 -参数 : []
2019-04-02 20:59:50 -耗时 : 1
2019-04-02 20:59:50 -返回值 : charts/tableDD
2019-04-02 20:59:52 -请求地址 : http://localhost:8081/login
2019-04-02 20:59:52 -HTTP METHOD : GET
2019-04-02 20:59:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 20:59:52 -参数 : [{}]
2019-04-02 20:59:52 -耗时 : 2
2019-04-02 20:59:52 -返回值 : login
2019-04-02 20:59:52 -请求地址 : http://localhost:8081/getVerify
2019-04-02 20:59:52 -HTTP METHOD : GET
2019-04-02 20:59:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 20:59:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@72faf1e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@657a6ad8]
2019-04-02 20:59:52 -0137
2019-04-02 20:59:52 -耗时 : 18
2019-04-02 20:59:52 -返回值 : null
2019-04-02 21:00:01 -请求地址 : http://localhost:8081/login
2019-04-02 21:00:01 -HTTP METHOD : POST
2019-04-02 21:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:00:01 -参数 : [admin, 111111, 0137, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2e875c6]
2019-04-02 21:00:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:00:01 -==> Parameters: admin(String)
2019-04-02 21:00:01 -<==      Total: 1
2019-04-02 21:00:01 -耗时 : 8
2019-04-02 21:00:01 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:00:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:00:01 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:00:01.687(Timestamp)
2019-04-02 21:00:01 -请求地址 : http://localhost:8081/index
2019-04-02 21:00:01 -HTTP METHOD : GET
2019-04-02 21:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:00:01 -参数 : [{}]
2019-04-02 21:00:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:00:01 -==> Parameters: 1(Long)
2019-04-02 21:00:02 -<==    Updates: 1
2019-04-02 21:00:02 -<==      Total: 46
2019-04-02 21:00:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:00:02 -==> Parameters: 138(Long)
2019-04-02 21:00:02 -<==      Total: 1
2019-04-02 21:00:02 -耗时 : 671
2019-04-02 21:00:02 -返回值 : index_v1
2019-04-02 21:00:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:00:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 671(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:00:02.39(Timestamp)
2019-04-02 21:00:02 -请求地址 : http://localhost:8081/main
2019-04-02 21:00:02 -HTTP METHOD : GET
2019-04-02 21:00:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:00:02 -参数 : []
2019-04-02 21:00:02 -耗时 : 0
2019-04-02 21:00:02 -返回值 : main
2019-04-02 21:00:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:00:02 -HTTP METHOD : GET
2019-04-02 21:00:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:00:02 -参数 : []
2019-04-02 21:00:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:00:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:00:02 -请求地址 : http://localhost:8081/main
2019-04-02 21:00:02 -HTTP METHOD : GET
2019-04-02 21:00:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:00:02 -参数 : []
2019-04-02 21:00:02 -耗时 : 0
2019-04-02 21:00:02 -返回值 : main
2019-04-02 21:00:02 -<==      Total: 0
2019-04-02 21:00:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:00:02 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:00:02 -<==      Total: 1
2019-04-02 21:00:02 -耗时 : 80
2019-04-02 21:00:02 -返回值 : com.bootdo.common.utils.PageUtils@57244927
2019-04-02 21:00:02 -<==    Updates: 1
2019-04-02 21:00:18 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-02 21:00:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:00:19 -==> Parameters: 1(Long)
2019-04-02 21:00:19 -<==      Total: 90
2019-04-02 21:00:19 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:00:19 -HTTP METHOD : GET
2019-04-02 21:00:19 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:00:19 -参数 : []
2019-04-02 21:00:19 -耗时 : 0
2019-04-02 21:00:19 -返回值 : charts/countDD
2019-04-02 21:00:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:00:20 -HTTP METHOD : GET
2019-04-02 21:00:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:00:20 -参数 : [userType]
2019-04-02 21:00:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:00:20 -==> Parameters: userType(String)
2019-04-02 21:00:20 -<==      Total: 2
2019-04-02 21:00:20 -耗时 : 162
2019-04-02 21:00:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:00:21 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:00:21 -HTTP METHOD : POST
2019-04-02 21:00:21 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:00:21 -参数 : []
2019-04-02 21:00:21 -耗时 : 0
2019-04-02 21:00:21 -返回值 : charts/tableDD
2019-04-02 21:00:23 -请求地址 : http://localhost:8081/login
2019-04-02 21:00:23 -HTTP METHOD : GET
2019-04-02 21:00:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:00:23 -参数 : [{}]
2019-04-02 21:00:23 -耗时 : 0
2019-04-02 21:00:23 -返回值 : login
2019-04-02 21:00:23 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:00:23 -HTTP METHOD : GET
2019-04-02 21:00:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:00:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@42b9981d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2be8e7c7]
2019-04-02 21:00:23 -7714
2019-04-02 21:00:23 -耗时 : 45
2019-04-02 21:00:23 -返回值 : null
2019-04-02 21:00:29 -请求地址 : http://localhost:8081/login
2019-04-02 21:00:29 -HTTP METHOD : POST
2019-04-02 21:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:00:29 -参数 : [admin, 111111, 7714, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ef15308]
2019-04-02 21:00:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:00:29 -==> Parameters: admin(String)
2019-04-02 21:00:29 -<==      Total: 1
2019-04-02 21:00:29 -耗时 : 53
2019-04-02 21:00:29 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:00:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:00:29 -==> Parameters: 1(Long), admin(String), 登录(String), 53(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:00:29.437(Timestamp)
2019-04-02 21:00:29 -请求地址 : http://localhost:8081/index
2019-04-02 21:00:29 -HTTP METHOD : GET
2019-04-02 21:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:00:29 -参数 : [{}]
2019-04-02 21:00:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:00:29 -==> Parameters: 1(Long)
2019-04-02 21:00:29 -<==      Total: 46
2019-04-02 21:00:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:00:29 -==> Parameters: 138(Long)
2019-04-02 21:00:29 -<==      Total: 1
2019-04-02 21:00:29 -耗时 : 20
2019-04-02 21:00:29 -返回值 : index_v1
2019-04-02 21:00:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:00:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:00:29.478(Timestamp)
2019-04-02 21:00:29 -<==    Updates: 1
2019-04-02 21:00:29 -请求地址 : http://localhost:8081/main
2019-04-02 21:00:29 -HTTP METHOD : GET
2019-04-02 21:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:00:29 -参数 : []
2019-04-02 21:00:29 -耗时 : 1
2019-04-02 21:00:29 -返回值 : main
2019-04-02 21:00:29 -<==    Updates: 1
2019-04-02 21:00:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:00:29 -HTTP METHOD : GET
2019-04-02 21:00:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:00:29 -参数 : []
2019-04-02 21:00:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:00:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:00:29 -<==      Total: 0
2019-04-02 21:00:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:00:29 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:00:29 -<==      Total: 1
2019-04-02 21:00:29 -耗时 : 10
2019-04-02 21:00:29 -返回值 : com.bootdo.common.utils.PageUtils@4b9ef141
2019-04-02 21:00:29 -请求地址 : http://localhost:8081/main
2019-04-02 21:00:29 -HTTP METHOD : GET
2019-04-02 21:00:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:00:29 -参数 : []
2019-04-02 21:00:29 -耗时 : 1
2019-04-02 21:00:29 -返回值 : main
2019-04-02 21:00:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:00:51 -==> Parameters: 1(Long)
2019-04-02 21:00:51 -<==      Total: 90
2019-04-02 21:00:51 -请求地址 : http://localhost:8081/sys/role
2019-04-02 21:00:51 -HTTP METHOD : GET
2019-04-02 21:00:51 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-04-02 21:00:51 -参数 : []
2019-04-02 21:00:51 -耗时 : 1
2019-04-02 21:00:51 -返回值 : system/role/role
2019-04-02 21:00:52 -请求地址 : http://localhost:8081/sys/role/list
2019-04-02 21:00:52 -HTTP METHOD : GET
2019-04-02 21:00:52 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-04-02 21:00:52 -参数 : []
2019-04-02 21:00:52 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-04-02 21:00:52 -==> Parameters: 
2019-04-02 21:00:52 -<==      Total: 10
2019-04-02 21:00:52 -耗时 : 192
2019-04-02 21:00:52 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-04-02 21:00:56 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-04-02 21:00:56 -HTTP METHOD : GET
2019-04-02 21:00:56 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-04-02 21:00:56 -参数 : [1, {}]
2019-04-02 21:00:56 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-04-02 21:00:56 -==> Parameters: 1(Long)
2019-04-02 21:00:56 -<==      Total: 1
2019-04-02 21:00:56 -耗时 : 5
2019-04-02 21:00:56 -返回值 : system/role/edit
2019-04-02 21:00:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:00:56 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 5(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-04-02 21:00:56.591(Timestamp)
2019-04-02 21:00:56 -<==    Updates: 1
2019-04-02 21:00:57 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-04-02 21:00:57 -HTTP METHOD : GET
2019-04-02 21:00:57 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-04-02 21:00:57 -参数 : [1]
2019-04-02 21:00:57 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-04-02 21:00:57 -==> Parameters: 
2019-04-02 21:00:57 -<==      Total: 106
2019-04-02 21:00:57 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-04-02 21:00:57 -==> Parameters: 1(Long)
2019-04-02 21:00:57 -<==      Total: 107
2019-04-02 21:00:57 -耗时 : 43
2019-04-02 21:00:57 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-04-02 21:01:25 -请求地址 : http://localhost:8081/sys/role/update
2019-04-02 21:01:25 -HTTP METHOD : POST
2019-04-02 21:01:25 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-04-02 21:01:25 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 159, 158, 157, 156, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 155, 112, 111, 110, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 149, 108, 107, 106, 120, 117, 105, 116, 113, 104, 124, 121, 103, 27, 91, 85, 84, 77, 73, 7, 6, 2, 3, 78, 1, 109, 97, -1]}]
2019-04-02 21:01:25 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-04-02 21:01:25 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-04-02 21:01:25 -<==    Updates: 1
2019-04-02 21:01:25 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-04-02 21:01:25 -==> Parameters: 1(Long)
2019-04-02 21:01:26 -<==    Updates: 107
2019-04-02 21:01:26 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-04-02 21:01:26 -==> Parameters: 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 159(Long), 1(Long), 158(Long), 1(Long), 157(Long), 1(Long), 156(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 160(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 149(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 106(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 77(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 109(Long), 1(Long), 97(Long), 1(Long), -1(Long)
2019-04-02 21:01:26 -<==    Updates: 107
2019-04-02 21:01:26 -耗时 : 1114
2019-04-02 21:01:26 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:01:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:01:26 -==> Parameters: 1(Long), admin(String), 更新角色(String), 1114(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-04-02 21:01:26.637(Timestamp)
2019-04-02 21:01:26 -请求地址 : http://localhost:8081/sys/role/list
2019-04-02 21:01:26 -HTTP METHOD : GET
2019-04-02 21:01:26 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-04-02 21:01:26 -参数 : []
2019-04-02 21:01:26 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-04-02 21:01:26 -==> Parameters: 
2019-04-02 21:01:26 -<==    Updates: 1
2019-04-02 21:01:26 -<==      Total: 10
2019-04-02 21:01:26 -耗时 : 86
2019-04-02 21:01:26 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-04-02 21:01:54 -请求地址 : http://localhost:8081/login;JSESSIONID=4e30d84c-8d7c-4261-a919-50b1d467998f
2019-04-02 21:01:54 -HTTP METHOD : GET
2019-04-02 21:01:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:01:54 -参数 : [{}]
2019-04-02 21:01:54 -耗时 : 1
2019-04-02 21:01:54 -返回值 : login
2019-04-02 21:01:54 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:01:54 -HTTP METHOD : GET
2019-04-02 21:01:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:01:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4af98805, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4e7a6351]
2019-04-02 21:01:54 -6033
2019-04-02 21:01:54 -耗时 : 15
2019-04-02 21:01:54 -返回值 : null
2019-04-02 21:01:54 -请求地址 : http://localhost:8081/login
2019-04-02 21:01:54 -HTTP METHOD : GET
2019-04-02 21:01:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:01:54 -参数 : [{}]
2019-04-02 21:01:54 -耗时 : 1
2019-04-02 21:01:54 -返回值 : login
2019-04-02 21:01:59 -请求地址 : http://localhost:8081/login
2019-04-02 21:01:59 -HTTP METHOD : POST
2019-04-02 21:01:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:01:59 -参数 : [admin, 111111, 6033, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ada8f3]
2019-04-02 21:01:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:01:59 -==> Parameters: admin(String)
2019-04-02 21:01:59 -<==      Total: 1
2019-04-02 21:01:59 -耗时 : 31
2019-04-02 21:01:59 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:01:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:01:59 -==> Parameters: 1(Long), admin(String), 登录(String), 32(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:01:59.652(Timestamp)
2019-04-02 21:01:59 -请求地址 : http://localhost:8081/index
2019-04-02 21:01:59 -HTTP METHOD : GET
2019-04-02 21:01:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:01:59 -参数 : [{}]
2019-04-02 21:01:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:01:59 -==> Parameters: 1(Long)
2019-04-02 21:01:59 -<==      Total: 46
2019-04-02 21:01:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:01:59 -==> Parameters: 138(Long)
2019-04-02 21:01:59 -<==      Total: 1
2019-04-02 21:01:59 -耗时 : 162
2019-04-02 21:01:59 -返回值 : index_v1
2019-04-02 21:01:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:01:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 163(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:01:59.835(Timestamp)
2019-04-02 21:01:59 -<==    Updates: 1
2019-04-02 21:01:59 -请求地址 : http://localhost:8081/main
2019-04-02 21:01:59 -HTTP METHOD : GET
2019-04-02 21:01:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:01:59 -参数 : []
2019-04-02 21:01:59 -耗时 : 1
2019-04-02 21:01:59 -返回值 : main
2019-04-02 21:02:00 -<==    Updates: 1
2019-04-02 21:02:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:02:00 -HTTP METHOD : GET
2019-04-02 21:02:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:02:00 -参数 : []
2019-04-02 21:02:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:02:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:02:00 -<==      Total: 0
2019-04-02 21:02:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:02:00 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:02:00 -<==      Total: 1
2019-04-02 21:02:00 -耗时 : 7
2019-04-02 21:02:00 -返回值 : com.bootdo.common.utils.PageUtils@6f60804b
2019-04-02 21:02:00 -请求地址 : http://localhost:8081/main
2019-04-02 21:02:00 -HTTP METHOD : GET
2019-04-02 21:02:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:02:00 -参数 : []
2019-04-02 21:02:00 -耗时 : 0
2019-04-02 21:02:00 -返回值 : main
2019-04-02 21:02:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:02:07 -==> Parameters: 1(Long)
2019-04-02 21:02:07 -<==      Total: 90
2019-04-02 21:02:07 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:02:07 -HTTP METHOD : GET
2019-04-02 21:02:07 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:02:07 -参数 : []
2019-04-02 21:02:07 -耗时 : 0
2019-04-02 21:02:07 -返回值 : charts/countDD
2019-04-02 21:02:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:02:08 -HTTP METHOD : GET
2019-04-02 21:02:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:02:08 -参数 : [userType]
2019-04-02 21:02:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:02:08 -==> Parameters: userType(String)
2019-04-02 21:02:08 -<==      Total: 2
2019-04-02 21:02:08 -耗时 : 5
2019-04-02 21:02:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:02:14 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:02:14 -HTTP METHOD : POST
2019-04-02 21:02:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:02:14 -参数 : []
2019-04-02 21:02:14 -耗时 : 1
2019-04-02 21:02:14 -返回值 : charts/tableDD
2019-04-02 21:02:16 -请求地址 : http://localhost:8081/login
2019-04-02 21:02:16 -HTTP METHOD : GET
2019-04-02 21:02:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:02:16 -参数 : [{}]
2019-04-02 21:02:16 -耗时 : 0
2019-04-02 21:02:16 -返回值 : login
2019-04-02 21:02:16 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:02:16 -HTTP METHOD : GET
2019-04-02 21:02:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:02:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@231c8707, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2419f551]
2019-04-02 21:02:16 -4205
2019-04-02 21:02:16 -耗时 : 19
2019-04-02 21:02:16 -返回值 : null
2019-04-02 21:03:39 -请求地址 : http://localhost:8081/login
2019-04-02 21:03:39 -HTTP METHOD : POST
2019-04-02 21:03:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:03:39 -参数 : [admin, 111111, 4205, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62f9f87c]
2019-04-02 21:03:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:03:39 -==> Parameters: admin(String)
2019-04-02 21:03:39 -<==      Total: 1
2019-04-02 21:03:39 -耗时 : 7
2019-04-02 21:03:39 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:03:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:03:39 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:03:39.084(Timestamp)
2019-04-02 21:03:39 -请求地址 : http://localhost:8081/index
2019-04-02 21:03:39 -HTTP METHOD : GET
2019-04-02 21:03:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:03:39 -参数 : [{}]
2019-04-02 21:03:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:03:39 -==> Parameters: 1(Long)
2019-04-02 21:03:39 -<==      Total: 46
2019-04-02 21:03:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:03:39 -==> Parameters: 138(Long)
2019-04-02 21:03:39 -<==      Total: 1
2019-04-02 21:03:39 -耗时 : 26
2019-04-02 21:03:39 -返回值 : index_v1
2019-04-02 21:03:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:03:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:03:39.14(Timestamp)
2019-04-02 21:03:39 -<==    Updates: 1
2019-04-02 21:03:39 -请求地址 : http://localhost:8081/main
2019-04-02 21:03:39 -HTTP METHOD : GET
2019-04-02 21:03:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:03:39 -参数 : []
2019-04-02 21:03:39 -耗时 : 0
2019-04-02 21:03:39 -返回值 : main
2019-04-02 21:03:39 -<==    Updates: 1
2019-04-02 21:03:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:03:39 -HTTP METHOD : GET
2019-04-02 21:03:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:03:39 -参数 : []
2019-04-02 21:03:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:03:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:03:39 -请求地址 : http://localhost:8081/main
2019-04-02 21:03:39 -HTTP METHOD : GET
2019-04-02 21:03:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:03:39 -参数 : []
2019-04-02 21:03:39 -耗时 : 1
2019-04-02 21:03:39 -返回值 : main
2019-04-02 21:03:40 -<==      Total: 0
2019-04-02 21:03:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:03:40 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:03:40 -<==      Total: 1
2019-04-02 21:03:40 -耗时 : 772
2019-04-02 21:03:40 -返回值 : com.bootdo.common.utils.PageUtils@680a6c9
2019-04-02 21:03:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:03:46 -==> Parameters: 1(Long)
2019-04-02 21:03:46 -<==      Total: 90
2019-04-02 21:03:46 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:03:46 -HTTP METHOD : GET
2019-04-02 21:03:46 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:03:46 -参数 : []
2019-04-02 21:03:46 -耗时 : 1
2019-04-02 21:03:46 -返回值 : charts/countDD
2019-04-02 21:03:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:03:46 -HTTP METHOD : GET
2019-04-02 21:03:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:03:46 -参数 : [userType]
2019-04-02 21:03:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:03:46 -==> Parameters: userType(String)
2019-04-02 21:03:46 -<==      Total: 2
2019-04-02 21:03:46 -耗时 : 4
2019-04-02 21:03:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:03:48 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:03:48 -HTTP METHOD : POST
2019-04-02 21:03:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:03:48 -参数 : []
2019-04-02 21:03:48 -耗时 : 0
2019-04-02 21:03:48 -返回值 : charts/tableDD
2019-04-02 21:03:48 -请求地址 : http://localhost:8081/login
2019-04-02 21:03:48 -HTTP METHOD : GET
2019-04-02 21:03:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:03:48 -参数 : [{}]
2019-04-02 21:03:48 -耗时 : 1
2019-04-02 21:03:48 -返回值 : login
2019-04-02 21:03:48 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:03:48 -HTTP METHOD : GET
2019-04-02 21:03:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:03:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f1983e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@755bca6a]
2019-04-02 21:03:48 -1583
2019-04-02 21:03:48 -耗时 : 13
2019-04-02 21:03:48 -返回值 : null
2019-04-02 21:04:34 -请求地址 : http://localhost:8081/login
2019-04-02 21:04:34 -HTTP METHOD : GET
2019-04-02 21:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:04:34 -参数 : [{}]
2019-04-02 21:04:34 -耗时 : 1
2019-04-02 21:04:34 -返回值 : login
2019-04-02 21:04:35 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:04:35 -HTTP METHOD : GET
2019-04-02 21:04:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:04:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@52fdc79c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@19615e71]
2019-04-02 21:04:35 -8615
2019-04-02 21:04:35 -耗时 : 10
2019-04-02 21:04:35 -返回值 : null
2019-04-02 21:04:40 -请求地址 : http://localhost:8081/login
2019-04-02 21:04:40 -HTTP METHOD : POST
2019-04-02 21:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:04:40 -参数 : [admin, 111111, 8615, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e1e10c9]
2019-04-02 21:04:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:04:40 -==> Parameters: admin(String)
2019-04-02 21:04:40 -<==      Total: 1
2019-04-02 21:04:40 -耗时 : 5
2019-04-02 21:04:40 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:04:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:04:40 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:04:40.676(Timestamp)
2019-04-02 21:04:40 -请求地址 : http://localhost:8081/index
2019-04-02 21:04:40 -HTTP METHOD : GET
2019-04-02 21:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:04:40 -参数 : [{}]
2019-04-02 21:04:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:04:40 -==> Parameters: 1(Long)
2019-04-02 21:04:40 -<==      Total: 46
2019-04-02 21:04:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:04:40 -==> Parameters: 138(Long)
2019-04-02 21:04:40 -<==      Total: 1
2019-04-02 21:04:40 -耗时 : 22
2019-04-02 21:04:40 -返回值 : index_v1
2019-04-02 21:04:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:04:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:04:40.726(Timestamp)
2019-04-02 21:04:40 -请求地址 : http://localhost:8081/main
2019-04-02 21:04:40 -HTTP METHOD : GET
2019-04-02 21:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:04:40 -参数 : []
2019-04-02 21:04:40 -耗时 : 0
2019-04-02 21:04:40 -返回值 : main
2019-04-02 21:04:40 -<==    Updates: 1
2019-04-02 21:04:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:04:40 -HTTP METHOD : GET
2019-04-02 21:04:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:04:40 -参数 : []
2019-04-02 21:04:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:04:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:04:40 -<==    Updates: 1
2019-04-02 21:04:40 -<==      Total: 0
2019-04-02 21:04:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:04:40 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:04:40 -<==      Total: 1
2019-04-02 21:04:40 -耗时 : 44
2019-04-02 21:04:40 -返回值 : com.bootdo.common.utils.PageUtils@222a86cb
2019-04-02 21:04:40 -请求地址 : http://localhost:8081/main
2019-04-02 21:04:40 -HTTP METHOD : GET
2019-04-02 21:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:04:40 -参数 : []
2019-04-02 21:04:40 -耗时 : 0
2019-04-02 21:04:40 -返回值 : main
2019-04-02 21:04:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:04:48 -==> Parameters: 1(Long)
2019-04-02 21:04:48 -<==      Total: 90
2019-04-02 21:04:48 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:04:48 -HTTP METHOD : GET
2019-04-02 21:04:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:04:48 -参数 : []
2019-04-02 21:04:48 -耗时 : 1
2019-04-02 21:04:48 -返回值 : charts/countDD
2019-04-02 21:04:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:04:48 -HTTP METHOD : GET
2019-04-02 21:04:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:04:48 -参数 : [userType]
2019-04-02 21:04:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:04:48 -==> Parameters: userType(String)
2019-04-02 21:04:48 -<==      Total: 2
2019-04-02 21:04:48 -耗时 : 5
2019-04-02 21:04:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:04:50 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:04:50 -HTTP METHOD : POST
2019-04-02 21:04:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:04:50 -参数 : []
2019-04-02 21:04:50 -耗时 : 0
2019-04-02 21:04:50 -返回值 : charts/tableDD
2019-04-02 21:04:50 -请求地址 : http://localhost:8081/login
2019-04-02 21:04:50 -HTTP METHOD : GET
2019-04-02 21:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:04:50 -参数 : [{}]
2019-04-02 21:04:50 -耗时 : 0
2019-04-02 21:04:50 -返回值 : login
2019-04-02 21:04:50 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:04:50 -HTTP METHOD : GET
2019-04-02 21:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:04:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a1a697, org.apache.shiro.web.servlet.ShiroHttpServletResponse@696c868b]
2019-04-02 21:04:50 -5701
2019-04-02 21:04:50 -耗时 : 16
2019-04-02 21:04:50 -返回值 : null
2019-04-02 21:05:08 -请求地址 : http://localhost:8081/login
2019-04-02 21:05:08 -HTTP METHOD : POST
2019-04-02 21:05:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:05:08 -参数 : [admin, 111111, 5701, org.apache.shiro.web.servlet.ShiroHttpServletRequest@39ba2ae9]
2019-04-02 21:05:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:05:08 -==> Parameters: admin(String)
2019-04-02 21:05:08 -<==      Total: 1
2019-04-02 21:05:08 -耗时 : 6
2019-04-02 21:05:08 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:05:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:05:08 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:05:08.954(Timestamp)
2019-04-02 21:05:08 -请求地址 : http://localhost:8081/index
2019-04-02 21:05:08 -HTTP METHOD : GET
2019-04-02 21:05:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:05:08 -参数 : [{}]
2019-04-02 21:05:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:05:08 -==> Parameters: 1(Long)
2019-04-02 21:05:08 -<==      Total: 46
2019-04-02 21:05:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:05:09 -==> Parameters: 138(Long)
2019-04-02 21:05:09 -<==      Total: 1
2019-04-02 21:05:09 -耗时 : 23
2019-04-02 21:05:09 -返回值 : index_v1
2019-04-02 21:05:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:05:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:05:09.01(Timestamp)
2019-04-02 21:05:09 -请求地址 : http://localhost:8081/main
2019-04-02 21:05:09 -HTTP METHOD : GET
2019-04-02 21:05:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:05:09 -参数 : []
2019-04-02 21:05:09 -耗时 : 1
2019-04-02 21:05:09 -返回值 : main
2019-04-02 21:05:09 -<==    Updates: 1
2019-04-02 21:05:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:05:09 -HTTP METHOD : GET
2019-04-02 21:05:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:05:09 -参数 : []
2019-04-02 21:05:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:05:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:05:09 -<==    Updates: 1
2019-04-02 21:05:09 -<==      Total: 0
2019-04-02 21:05:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:05:09 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:05:09 -<==      Total: 1
2019-04-02 21:05:09 -请求地址 : http://localhost:8081/main
2019-04-02 21:05:09 -HTTP METHOD : GET
2019-04-02 21:05:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:05:09 -耗时 : 58
2019-04-02 21:05:09 -返回值 : com.bootdo.common.utils.PageUtils@1322ee5c
2019-04-02 21:05:09 -参数 : []
2019-04-02 21:05:09 -耗时 : 1
2019-04-02 21:05:09 -返回值 : main
2019-04-02 21:05:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:05:13 -==> Parameters: 1(Long)
2019-04-02 21:05:13 -<==      Total: 90
2019-04-02 21:05:13 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:05:13 -HTTP METHOD : GET
2019-04-02 21:05:13 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:05:13 -参数 : []
2019-04-02 21:05:13 -耗时 : 0
2019-04-02 21:05:13 -返回值 : charts/countDD
2019-04-02 21:05:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:05:13 -HTTP METHOD : GET
2019-04-02 21:05:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:05:13 -参数 : [userType]
2019-04-02 21:05:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:05:13 -==> Parameters: userType(String)
2019-04-02 21:05:13 -<==      Total: 2
2019-04-02 21:05:13 -耗时 : 4
2019-04-02 21:05:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:05:16 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:05:16 -HTTP METHOD : POST
2019-04-02 21:05:16 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:05:16 -参数 : []
2019-04-02 21:05:16 -耗时 : 1
2019-04-02 21:05:16 -返回值 : charts/tableDD
2019-04-02 21:05:16 -请求地址 : http://localhost:8081/login
2019-04-02 21:05:16 -HTTP METHOD : GET
2019-04-02 21:05:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:05:16 -参数 : [{}]
2019-04-02 21:05:16 -耗时 : 0
2019-04-02 21:05:16 -返回值 : login
2019-04-02 21:05:16 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:05:16 -HTTP METHOD : GET
2019-04-02 21:05:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:05:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@696a44c6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79c997a]
2019-04-02 21:05:16 -1678
2019-04-02 21:05:16 -耗时 : 13
2019-04-02 21:05:16 -返回值 : null
2019-04-02 21:05:51 -请求地址 : http://localhost:8081/login
2019-04-02 21:05:51 -HTTP METHOD : POST
2019-04-02 21:05:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:05:51 -参数 : [admin, 111111, 1678, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2dc0cd7f]
2019-04-02 21:05:51 -验证码校验失败
java.lang.NullPointerException: null
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$8014c6f3.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-02 21:05:51 -耗时 : 5
2019-04-02 21:05:51 -返回值 : {msg=验证码校验失败, code=500}
2019-04-02 21:05:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:05:51 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:05:51.107(Timestamp)
2019-04-02 21:05:51 -<==    Updates: 1
2019-04-02 21:05:55 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:05:55 -HTTP METHOD : GET
2019-04-02 21:05:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:05:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5239e340, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3440b416]
2019-04-02 21:05:55 -1489
2019-04-02 21:05:55 -耗时 : 13
2019-04-02 21:05:55 -返回值 : null
2019-04-02 21:06:01 -请求地址 : http://localhost:8081/login
2019-04-02 21:06:01 -HTTP METHOD : POST
2019-04-02 21:06:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:06:01 -参数 : [admin, 111111, 1489, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e5e7b8b]
2019-04-02 21:06:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:06:01 -==> Parameters: admin(String)
2019-04-02 21:06:01 -<==      Total: 1
2019-04-02 21:06:01 -耗时 : 4
2019-04-02 21:06:01 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:06:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:06:01 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:06:01.142(Timestamp)
2019-04-02 21:06:01 -请求地址 : http://localhost:8081/index
2019-04-02 21:06:01 -HTTP METHOD : GET
2019-04-02 21:06:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:06:01 -参数 : [{}]
2019-04-02 21:06:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:06:01 -==> Parameters: 1(Long)
2019-04-02 21:06:01 -<==      Total: 46
2019-04-02 21:06:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:06:01 -==> Parameters: 138(Long)
2019-04-02 21:06:01 -<==      Total: 1
2019-04-02 21:06:01 -耗时 : 20
2019-04-02 21:06:01 -返回值 : index_v1
2019-04-02 21:06:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:06:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:06:01.19(Timestamp)
2019-04-02 21:06:01 -<==    Updates: 1
2019-04-02 21:06:01 -请求地址 : http://localhost:8081/main
2019-04-02 21:06:01 -HTTP METHOD : GET
2019-04-02 21:06:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:06:01 -参数 : []
2019-04-02 21:06:01 -耗时 : 1
2019-04-02 21:06:01 -返回值 : main
2019-04-02 21:06:01 -<==    Updates: 1
2019-04-02 21:06:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:06:01 -HTTP METHOD : GET
2019-04-02 21:06:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:06:01 -参数 : []
2019-04-02 21:06:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:06:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:06:01 -<==      Total: 0
2019-04-02 21:06:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:06:01 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:06:01 -<==      Total: 1
2019-04-02 21:06:01 -耗时 : 74
2019-04-02 21:06:01 -返回值 : com.bootdo.common.utils.PageUtils@32cd2948
2019-04-02 21:06:01 -请求地址 : http://localhost:8081/main
2019-04-02 21:06:01 -HTTP METHOD : GET
2019-04-02 21:06:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:06:01 -参数 : []
2019-04-02 21:06:01 -耗时 : 0
2019-04-02 21:06:01 -返回值 : main
2019-04-02 21:06:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:06:09 -==> Parameters: 1(Long)
2019-04-02 21:06:09 -<==      Total: 90
2019-04-02 21:06:09 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:06:09 -HTTP METHOD : GET
2019-04-02 21:06:09 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:06:09 -参数 : []
2019-04-02 21:06:09 -耗时 : 1
2019-04-02 21:06:09 -返回值 : charts/countDD
2019-04-02 21:06:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:06:10 -HTTP METHOD : GET
2019-04-02 21:06:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:06:10 -参数 : [userType]
2019-04-02 21:06:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:06:10 -==> Parameters: userType(String)
2019-04-02 21:06:10 -<==      Total: 2
2019-04-02 21:06:10 -耗时 : 5
2019-04-02 21:06:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:06:12 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:06:12 -HTTP METHOD : POST
2019-04-02 21:06:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:06:12 -参数 : []
2019-04-02 21:06:12 -耗时 : 1
2019-04-02 21:06:12 -返回值 : charts/tableDD
2019-04-02 21:06:12 -请求地址 : http://localhost:8081/login
2019-04-02 21:06:12 -HTTP METHOD : GET
2019-04-02 21:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:06:12 -参数 : [{}]
2019-04-02 21:06:12 -耗时 : 1
2019-04-02 21:06:12 -返回值 : login
2019-04-02 21:06:12 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:06:12 -HTTP METHOD : GET
2019-04-02 21:06:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:06:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@44be1639, org.apache.shiro.web.servlet.ShiroHttpServletResponse@20e4d2f3]
2019-04-02 21:06:12 -2146
2019-04-02 21:06:12 -耗时 : 12
2019-04-02 21:06:12 -返回值 : null
2019-04-02 21:06:26 -请求地址 : http://localhost:8081/login
2019-04-02 21:06:26 -HTTP METHOD : POST
2019-04-02 21:06:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:06:26 -参数 : [admin, 111111, 2146, org.apache.shiro.web.servlet.ShiroHttpServletRequest@49fab3cc]
2019-04-02 21:06:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:06:26 -==> Parameters: admin(String)
2019-04-02 21:06:26 -<==      Total: 1
2019-04-02 21:06:26 -耗时 : 7
2019-04-02 21:06:26 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:06:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:06:26 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:06:26.438(Timestamp)
2019-04-02 21:06:26 -请求地址 : http://localhost:8081/index
2019-04-02 21:06:26 -HTTP METHOD : GET
2019-04-02 21:06:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:06:26 -参数 : [{}]
2019-04-02 21:06:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:06:26 -==> Parameters: 1(Long)
2019-04-02 21:06:26 -<==      Total: 46
2019-04-02 21:06:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:06:26 -==> Parameters: 138(Long)
2019-04-02 21:06:26 -<==      Total: 1
2019-04-02 21:06:26 -耗时 : 18
2019-04-02 21:06:26 -返回值 : index_v1
2019-04-02 21:06:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:06:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:06:26.481(Timestamp)
2019-04-02 21:06:26 -请求地址 : http://localhost:8081/main
2019-04-02 21:06:26 -HTTP METHOD : GET
2019-04-02 21:06:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:06:26 -参数 : []
2019-04-02 21:06:26 -耗时 : 0
2019-04-02 21:06:26 -返回值 : main
2019-04-02 21:06:27 -请求地址 : http://localhost:8081/main
2019-04-02 21:06:27 -HTTP METHOD : GET
2019-04-02 21:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:06:27 -参数 : []
2019-04-02 21:06:27 -耗时 : 0
2019-04-02 21:06:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:06:27 -返回值 : main
2019-04-02 21:06:27 -HTTP METHOD : GET
2019-04-02 21:06:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:06:27 -参数 : []
2019-04-02 21:06:27 -<==    Updates: 1
2019-04-02 21:06:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:06:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:06:27 -<==      Total: 0
2019-04-02 21:06:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:06:27 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:06:27 -<==      Total: 1
2019-04-02 21:06:27 -耗时 : 182
2019-04-02 21:06:27 -返回值 : com.bootdo.common.utils.PageUtils@63bde0ac
2019-04-02 21:06:27 -<==    Updates: 1
2019-04-02 21:06:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:06:32 -==> Parameters: 1(Long)
2019-04-02 21:06:32 -<==      Total: 90
2019-04-02 21:06:32 -请求地址 : http://localhost:8081/sys/role
2019-04-02 21:06:32 -HTTP METHOD : GET
2019-04-02 21:06:32 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-04-02 21:06:32 -参数 : []
2019-04-02 21:06:32 -耗时 : 1
2019-04-02 21:06:32 -返回值 : system/role/role
2019-04-02 21:06:33 -请求地址 : http://localhost:8081/sys/role/list
2019-04-02 21:06:33 -HTTP METHOD : GET
2019-04-02 21:06:33 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-04-02 21:06:33 -参数 : []
2019-04-02 21:06:33 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-04-02 21:06:33 -==> Parameters: 
2019-04-02 21:06:33 -<==      Total: 10
2019-04-02 21:06:33 -耗时 : 22
2019-04-02 21:06:33 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-04-02 21:06:35 -请求地址 : http://localhost:8081/sys/menu/
2019-04-02 21:06:35 -HTTP METHOD : GET
2019-04-02 21:06:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-04-02 21:06:35 -参数 : [{}]
2019-04-02 21:06:35 -耗时 : 0
2019-04-02 21:06:35 -返回值 : system/menu/menu
2019-04-02 21:06:35 -请求地址 : http://localhost:8081/sys/menu/list
2019-04-02 21:06:35 -HTTP METHOD : GET
2019-04-02 21:06:35 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-04-02 21:06:35 -参数 : [{sort=order_num}]
2019-04-02 21:06:35 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-04-02 21:06:35 -==> Parameters: 
2019-04-02 21:06:35 -<==      Total: 106
2019-04-02 21:06:35 -耗时 : 117
2019-04-02 21:06:35 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-04-02 21:06:54 -请求地址 : http://localhost:8081/sys/user/
2019-04-02 21:06:54 -HTTP METHOD : GET
2019-04-02 21:06:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-04-02 21:06:54 -参数 : [{}]
2019-04-02 21:06:54 -耗时 : 0
2019-04-02 21:06:54 -返回值 : system/user/user
2019-04-02 21:06:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 21:06:55 -HTTP METHOD : GET
2019-04-02 21:06:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 21:06:55 -参数 : []
2019-04-02 21:06:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 21:06:55 -==> Parameters: 
2019-04-02 21:06:55 -<==      Total: 3
2019-04-02 21:06:55 -耗时 : 21
2019-04-02 21:06:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 21:06:55 -请求地址 : http://localhost:8081/sys/user/list
2019-04-02 21:06:55 -HTTP METHOD : GET
2019-04-02 21:06:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-04-02 21:06:55 -参数 : [{limit=10, offset=0, name=, deptId=}]
2019-04-02 21:06:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-04-02 21:06:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-02 21:06:55 -<==      Total: 10
2019-04-02 21:06:55 -==>  Preparing: select count(*) from sys_user 
2019-04-02 21:06:55 -==> Parameters: 
2019-04-02 21:06:55 -<==      Total: 1
2019-04-02 21:06:55 -耗时 : 101
2019-04-02 21:06:55 -返回值 : com.bootdo.common.utils.PageUtils@545fc037
2019-04-02 21:07:03 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-04-02 21:07:03 -HTTP METHOD : GET
2019-04-02 21:07:03 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-04-02 21:07:03 -参数 : [1, {}]
2019-04-02 21:07:03 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-04-02 21:07:03 -==> Parameters: 1(Long)
2019-04-02 21:07:03 -<==      Total: 1
2019-04-02 21:07:03 -耗时 : 3
2019-04-02 21:07:03 -返回值 : system/role/edit
2019-04-02 21:07:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:07:03 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 4(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-04-02 21:07:03.17(Timestamp)
2019-04-02 21:07:03 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-04-02 21:07:03 -HTTP METHOD : GET
2019-04-02 21:07:03 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-04-02 21:07:03 -参数 : [1]
2019-04-02 21:07:03 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-04-02 21:07:03 -==> Parameters: 
2019-04-02 21:07:03 -<==      Total: 106
2019-04-02 21:07:03 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-04-02 21:07:03 -==> Parameters: 1(Long)
2019-04-02 21:07:03 -<==      Total: 107
2019-04-02 21:07:03 -耗时 : 309
2019-04-02 21:07:03 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-04-02 21:07:03 -<==    Updates: 1
2019-04-02 21:09:51 -请求地址 : http://localhost:8081/login;JSESSIONID=7fb2094a-a631-407a-a6f2-66267531f9f8
2019-04-02 21:09:51 -HTTP METHOD : GET
2019-04-02 21:09:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:09:51 -参数 : [{}]
2019-04-02 21:09:51 -耗时 : 1
2019-04-02 21:09:51 -返回值 : login
2019-04-02 21:09:52 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:09:52 -HTTP METHOD : GET
2019-04-02 21:09:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:09:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6abab552, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1618370d]
2019-04-02 21:09:52 -8904
2019-04-02 21:09:52 -耗时 : 12
2019-04-02 21:09:52 -返回值 : null
2019-04-02 21:09:58 -请求地址 : http://localhost:8081/login
2019-04-02 21:09:58 -HTTP METHOD : POST
2019-04-02 21:09:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:09:58 -参数 : [admin, 111111, 8904, org.apache.shiro.web.servlet.ShiroHttpServletRequest@518c33ea]
2019-04-02 21:09:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:09:58 -==> Parameters: admin(String)
2019-04-02 21:09:58 -<==      Total: 1
2019-04-02 21:09:58 -耗时 : 7
2019-04-02 21:09:58 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:09:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:09:58 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:09:58.118(Timestamp)
2019-04-02 21:09:58 -请求地址 : http://localhost:8081/index
2019-04-02 21:09:58 -HTTP METHOD : GET
2019-04-02 21:09:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:09:58 -参数 : [{}]
2019-04-02 21:09:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:09:58 -==> Parameters: 1(Long)
2019-04-02 21:09:58 -<==      Total: 46
2019-04-02 21:09:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:09:58 -==> Parameters: 138(Long)
2019-04-02 21:09:58 -<==      Total: 1
2019-04-02 21:09:58 -耗时 : 359
2019-04-02 21:09:58 -返回值 : index_v1
2019-04-02 21:09:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:09:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 359(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:09:58.509(Timestamp)
2019-04-02 21:09:58 -请求地址 : http://localhost:8081/main
2019-04-02 21:09:58 -HTTP METHOD : GET
2019-04-02 21:09:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:09:58 -参数 : []
2019-04-02 21:09:58 -耗时 : 0
2019-04-02 21:09:58 -返回值 : main
2019-04-02 21:09:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:09:58 -HTTP METHOD : GET
2019-04-02 21:09:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:09:58 -参数 : []
2019-04-02 21:09:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:09:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:09:58 -<==      Total: 0
2019-04-02 21:09:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:09:58 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:09:58 -<==      Total: 1
2019-04-02 21:09:58 -耗时 : 7
2019-04-02 21:09:58 -返回值 : com.bootdo.common.utils.PageUtils@1a67547
2019-04-02 21:09:58 -<==    Updates: 1
2019-04-02 21:09:58 -请求地址 : http://localhost:8081/main
2019-04-02 21:09:58 -HTTP METHOD : GET
2019-04-02 21:09:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:09:58 -参数 : []
2019-04-02 21:09:58 -耗时 : 0
2019-04-02 21:09:58 -返回值 : main
2019-04-02 21:09:58 -<==    Updates: 1
2019-04-02 21:10:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:10:02 -==> Parameters: 1(Long)
2019-04-02 21:10:02 -<==      Total: 90
2019-04-02 21:10:02 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:10:02 -HTTP METHOD : GET
2019-04-02 21:10:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:10:02 -参数 : []
2019-04-02 21:10:02 -耗时 : 0
2019-04-02 21:10:02 -返回值 : charts/countDD
2019-04-02 21:10:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:10:02 -HTTP METHOD : GET
2019-04-02 21:10:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:10:02 -参数 : [userType]
2019-04-02 21:10:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:10:02 -==> Parameters: userType(String)
2019-04-02 21:10:02 -<==      Total: 2
2019-04-02 21:10:02 -耗时 : 7
2019-04-02 21:10:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:10:03 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-02 21:10:03 -HTTP METHOD : POST
2019-04-02 21:10:03 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-02 21:10:03 -参数 : []
2019-04-02 21:10:03 -耗时 : 0
2019-04-02 21:10:03 -返回值 : charts/tableDD
2019-04-02 21:10:03 -请求地址 : http://localhost:8081/login
2019-04-02 21:10:03 -HTTP METHOD : GET
2019-04-02 21:10:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-02 21:10:03 -参数 : [{}]
2019-04-02 21:10:03 -耗时 : 1
2019-04-02 21:10:03 -返回值 : login
2019-04-02 21:10:04 -请求地址 : http://localhost:8081/getVerify
2019-04-02 21:10:04 -HTTP METHOD : GET
2019-04-02 21:10:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-02 21:10:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@77b68b8b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@57b0b7c0]
2019-04-02 21:10:04 -6147
2019-04-02 21:10:04 -耗时 : 9
2019-04-02 21:10:04 -返回值 : null
2019-04-02 21:10:14 -请求地址 : http://localhost:8081/login
2019-04-02 21:10:14 -HTTP METHOD : POST
2019-04-02 21:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-02 21:10:14 -参数 : [admin, 111111, 6147, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c71d021]
2019-04-02 21:10:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-02 21:10:14 -==> Parameters: admin(String)
2019-04-02 21:10:14 -<==      Total: 1
2019-04-02 21:10:14 -耗时 : 4
2019-04-02 21:10:14 -返回值 : {msg=操作成功, code=0}
2019-04-02 21:10:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:10:14 -==> Parameters: 1(Long), admin(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-02 21:10:14.968(Timestamp)
2019-04-02 21:10:14 -请求地址 : http://localhost:8081/index
2019-04-02 21:10:14 -HTTP METHOD : GET
2019-04-02 21:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:10:14 -参数 : [{}]
2019-04-02 21:10:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:10:14 -==> Parameters: 1(Long)
2019-04-02 21:10:15 -<==      Total: 46
2019-04-02 21:10:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:10:15 -==> Parameters: 138(Long)
2019-04-02 21:10:15 -<==      Total: 1
2019-04-02 21:10:15 -耗时 : 47
2019-04-02 21:10:15 -返回值 : index_v1
2019-04-02 21:10:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:10:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:10:15.042(Timestamp)
2019-04-02 21:10:15 -<==    Updates: 1
2019-04-02 21:10:15 -请求地址 : http://localhost:8081/main
2019-04-02 21:10:15 -HTTP METHOD : GET
2019-04-02 21:10:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:10:15 -参数 : []
2019-04-02 21:10:15 -耗时 : 0
2019-04-02 21:10:15 -返回值 : main
2019-04-02 21:10:15 -<==    Updates: 1
2019-04-02 21:10:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:10:15 -HTTP METHOD : GET
2019-04-02 21:10:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:10:15 -参数 : []
2019-04-02 21:10:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:10:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:10:15 -请求地址 : http://localhost:8081/main
2019-04-02 21:10:15 -HTTP METHOD : GET
2019-04-02 21:10:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:10:15 -参数 : []
2019-04-02 21:10:15 -耗时 : 0
2019-04-02 21:10:15 -返回值 : main
2019-04-02 21:10:16 -<==      Total: 0
2019-04-02 21:10:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:10:16 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:10:16 -<==      Total: 1
2019-04-02 21:10:16 -耗时 : 1140
2019-04-02 21:10:16 -返回值 : com.bootdo.common.utils.PageUtils@69b11f9f
2019-04-02 21:11:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-02 21:11:44 -==> Parameters: 1(Long)
2019-04-02 21:11:44 -<==      Total: 90
2019-04-02 21:11:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-02 21:11:44 -HTTP METHOD : GET
2019-04-02 21:11:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-02 21:11:44 -参数 : []
2019-04-02 21:11:44 -耗时 : 1
2019-04-02 21:11:44 -返回值 : /moneyList/moneyList
2019-04-02 21:12:06 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:12:06 -HTTP METHOD : POST
2019-04-02 21:12:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:12:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@45f99c21]
2019-04-02 21:12:06 -==>  Preparing: select user_name from elec UNION ALL select user_name from heat UNION ALL select user_name from water 
2019-04-02 21:12:06 -==> Parameters: 
2019-04-02 21:12:06 -<==      Total: 45
2019-04-02 21:12:06 -耗时 : 552
2019-04-02 21:12:06 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@12c00634, com.bootdo.moneyList.damain.MoneyListDO@500d2f59, com.bootdo.moneyList.damain.MoneyListDO@172aae6a, com.bootdo.moneyList.damain.MoneyListDO@33269af4, com.bootdo.moneyList.damain.MoneyListDO@21c5cb02, com.bootdo.moneyList.damain.MoneyListDO@188b5f84, com.bootdo.moneyList.damain.MoneyListDO@5a10fb01, com.bootdo.moneyList.damain.MoneyListDO@5de62b8d, com.bootdo.moneyList.damain.MoneyListDO@527476e8, com.bootdo.moneyList.damain.MoneyListDO@1041645d, com.bootdo.moneyList.damain.MoneyListDO@4dd44da7, com.bootdo.moneyList.damain.MoneyListDO@2182add3, com.bootdo.moneyList.damain.MoneyListDO@50305c3d, com.bootdo.moneyList.damain.MoneyListDO@4bc8b9ea, com.bootdo.moneyList.damain.MoneyListDO@241e6c41, com.bootdo.moneyList.damain.MoneyListDO@10c6a124, com.bootdo.moneyList.damain.MoneyListDO@42c5d6b5, com.bootdo.moneyList.damain.MoneyListDO@4c4c30ee, com.bootdo.moneyList.damain.MoneyListDO@1b673142, com.bootdo.moneyList.damain.MoneyListDO@3e0d6c8b, com.bootdo.moneyList.damain.MoneyListDO@52116581, com.bootdo.moneyList.damain.MoneyListDO@7f77e46d, com.bootdo.moneyList.damain.MoneyListDO@5d3837e0, com.bootdo.moneyList.damain.MoneyListDO@80461f8, com.bootdo.moneyList.damain.MoneyListDO@51e03014, com.bootdo.moneyList.damain.MoneyListDO@11f4f2c9, com.bootdo.moneyList.damain.MoneyListDO@def5020, com.bootdo.moneyList.damain.MoneyListDO@26cffbc4, com.bootdo.moneyList.damain.MoneyListDO@767f0f99, com.bootdo.moneyList.damain.MoneyListDO@402bc925, com.bootdo.moneyList.damain.MoneyListDO@3732ef50, com.bootdo.moneyList.damain.MoneyListDO@6e7a33a9, com.bootdo.moneyList.damain.MoneyListDO@6077ea38, com.bootdo.moneyList.damain.MoneyListDO@7e8b75f2, com.bootdo.moneyList.damain.MoneyListDO@5ee35d1c, com.bootdo.moneyList.damain.MoneyListDO@613bca12, com.bootdo.moneyList.damain.MoneyListDO@3e42ca27, com.bootdo.moneyList.damain.MoneyListDO@1b430cf8, com.bootdo.moneyList.damain.MoneyListDO@5f0cb931, com.bootdo.moneyList.damain.MoneyListDO@60d88398, com.bootdo.moneyList.damain.MoneyListDO@48e37e56, com.bootdo.moneyList.damain.MoneyListDO@4bc48f7e, com.bootdo.moneyList.damain.MoneyListDO@713b6206, com.bootdo.moneyList.damain.MoneyListDO@55dbfbfa, com.bootdo.moneyList.damain.MoneyListDO@6193ed9]
2019-04-02 21:12:06 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:12:06 -HTTP METHOD : POST
2019-04-02 21:12:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:12:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2114b809]
2019-04-02 21:12:06 -==>  Preparing: select user_name from elec UNION ALL select user_name from heat UNION ALL select user_name from water 
2019-04-02 21:12:06 -==> Parameters: 
2019-04-02 21:12:06 -<==      Total: 45
2019-04-02 21:12:06 -耗时 : 3
2019-04-02 21:12:06 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@49e02ab5, com.bootdo.moneyList.damain.MoneyListDO@10684866, com.bootdo.moneyList.damain.MoneyListDO@14b87e92, com.bootdo.moneyList.damain.MoneyListDO@7bd12b6, com.bootdo.moneyList.damain.MoneyListDO@4f402576, com.bootdo.moneyList.damain.MoneyListDO@1db97f80, com.bootdo.moneyList.damain.MoneyListDO@4aa2ce4b, com.bootdo.moneyList.damain.MoneyListDO@25655d0b, com.bootdo.moneyList.damain.MoneyListDO@6b40a744, com.bootdo.moneyList.damain.MoneyListDO@3d5390d3, com.bootdo.moneyList.damain.MoneyListDO@615fd1a4, com.bootdo.moneyList.damain.MoneyListDO@6edd4581, com.bootdo.moneyList.damain.MoneyListDO@c9a599, com.bootdo.moneyList.damain.MoneyListDO@21bd685b, com.bootdo.moneyList.damain.MoneyListDO@3e704f39, com.bootdo.moneyList.damain.MoneyListDO@3a85f43b, com.bootdo.moneyList.damain.MoneyListDO@77ad7b9f, com.bootdo.moneyList.damain.MoneyListDO@3d982a81, com.bootdo.moneyList.damain.MoneyListDO@12da38c, com.bootdo.moneyList.damain.MoneyListDO@141cbbbe, com.bootdo.moneyList.damain.MoneyListDO@8f15b21, com.bootdo.moneyList.damain.MoneyListDO@74c1b49c, com.bootdo.moneyList.damain.MoneyListDO@181c584b, com.bootdo.moneyList.damain.MoneyListDO@69acd1bd, com.bootdo.moneyList.damain.MoneyListDO@6b06a7fa, com.bootdo.moneyList.damain.MoneyListDO@129a8b52, com.bootdo.moneyList.damain.MoneyListDO@68be574a, com.bootdo.moneyList.damain.MoneyListDO@679052d9, com.bootdo.moneyList.damain.MoneyListDO@397700a6, com.bootdo.moneyList.damain.MoneyListDO@7f71dcc1, com.bootdo.moneyList.damain.MoneyListDO@656fc062, com.bootdo.moneyList.damain.MoneyListDO@c408c, com.bootdo.moneyList.damain.MoneyListDO@1ff121b, com.bootdo.moneyList.damain.MoneyListDO@70195131, com.bootdo.moneyList.damain.MoneyListDO@6beee380, com.bootdo.moneyList.damain.MoneyListDO@904d651, com.bootdo.moneyList.damain.MoneyListDO@709272a0, com.bootdo.moneyList.damain.MoneyListDO@4ab8255a, com.bootdo.moneyList.damain.MoneyListDO@56d63d6e, com.bootdo.moneyList.damain.MoneyListDO@794fcfbb, com.bootdo.moneyList.damain.MoneyListDO@1a2ba540, com.bootdo.moneyList.damain.MoneyListDO@1132d1aa, com.bootdo.moneyList.damain.MoneyListDO@7668a3af, com.bootdo.moneyList.damain.MoneyListDO@71dd88ce, com.bootdo.moneyList.damain.MoneyListDO@361b3210]
2019-04-02 21:12:07 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-02 21:12:07 -HTTP METHOD : POST
2019-04-02 21:12:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-02 21:12:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@462291f3]
2019-04-02 21:12:07 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_name = ? 
2019-04-02 21:12:07 -==> Parameters: 规划局(String), 规划局(String), 规划局(String)
2019-04-02 21:12:07 -<==      Total: 3
2019-04-02 21:12:07 -耗时 : 38
2019-04-02 21:12:07 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6a730851, com.bootdo.moneyList.damain.MoneyListDO@32402c82, com.bootdo.moneyList.damain.MoneyListDO@60bf8e30]
2019-04-02 21:12:23 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:12:23 -HTTP METHOD : POST
2019-04-02 21:12:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:12:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5445fa32]
2019-04-02 21:12:23 -==>  Preparing: select user_name from elec UNION ALL select user_name from heat UNION ALL select user_name from water 
2019-04-02 21:12:23 -==> Parameters: 
2019-04-02 21:12:23 -<==      Total: 45
2019-04-02 21:12:23 -耗时 : 5
2019-04-02 21:12:23 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7a2805a7, com.bootdo.moneyList.damain.MoneyListDO@7962bd3c, com.bootdo.moneyList.damain.MoneyListDO@28d5c48, com.bootdo.moneyList.damain.MoneyListDO@91414d3, com.bootdo.moneyList.damain.MoneyListDO@332b2d6b, com.bootdo.moneyList.damain.MoneyListDO@5f4cfd6f, com.bootdo.moneyList.damain.MoneyListDO@37cb95d2, com.bootdo.moneyList.damain.MoneyListDO@1ed0ad74, com.bootdo.moneyList.damain.MoneyListDO@74fa8bb0, com.bootdo.moneyList.damain.MoneyListDO@4ce5b7c5, com.bootdo.moneyList.damain.MoneyListDO@27ebde8e, com.bootdo.moneyList.damain.MoneyListDO@3c4b6c0a, com.bootdo.moneyList.damain.MoneyListDO@1cccc738, com.bootdo.moneyList.damain.MoneyListDO@7df600fb, com.bootdo.moneyList.damain.MoneyListDO@490be65, com.bootdo.moneyList.damain.MoneyListDO@63dca9c1, com.bootdo.moneyList.damain.MoneyListDO@19535785, com.bootdo.moneyList.damain.MoneyListDO@546f7d8c, com.bootdo.moneyList.damain.MoneyListDO@558d92f2, com.bootdo.moneyList.damain.MoneyListDO@5399ab23, com.bootdo.moneyList.damain.MoneyListDO@50f521aa, com.bootdo.moneyList.damain.MoneyListDO@7fd9b525, com.bootdo.moneyList.damain.MoneyListDO@46fab22e, com.bootdo.moneyList.damain.MoneyListDO@5824d961, com.bootdo.moneyList.damain.MoneyListDO@21254bbe, com.bootdo.moneyList.damain.MoneyListDO@1367a222, com.bootdo.moneyList.damain.MoneyListDO@1f09a2, com.bootdo.moneyList.damain.MoneyListDO@7e0e3711, com.bootdo.moneyList.damain.MoneyListDO@757debd5, com.bootdo.moneyList.damain.MoneyListDO@5b2531ea, com.bootdo.moneyList.damain.MoneyListDO@238f6135, com.bootdo.moneyList.damain.MoneyListDO@2cb66cea, com.bootdo.moneyList.damain.MoneyListDO@368f19ea, com.bootdo.moneyList.damain.MoneyListDO@44d7c4b0, com.bootdo.moneyList.damain.MoneyListDO@1c0983d6, com.bootdo.moneyList.damain.MoneyListDO@3c76d81, com.bootdo.moneyList.damain.MoneyListDO@4d49645a, com.bootdo.moneyList.damain.MoneyListDO@3741cb07, com.bootdo.moneyList.damain.MoneyListDO@6706e90a, com.bootdo.moneyList.damain.MoneyListDO@5f952b0e, com.bootdo.moneyList.damain.MoneyListDO@5978ff12, com.bootdo.moneyList.damain.MoneyListDO@60580ec9, com.bootdo.moneyList.damain.MoneyListDO@3046e571, com.bootdo.moneyList.damain.MoneyListDO@467d652c, com.bootdo.moneyList.damain.MoneyListDO@58e3829e]
2019-04-02 21:12:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-02 21:12:29 -HTTP METHOD : POST
2019-04-02 21:12:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-02 21:12:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b65bea8]
2019-04-02 21:12:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_name = ? 
2019-04-02 21:12:29 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:12:29 -<==      Total: 3
2019-04-02 21:12:29 -耗时 : 20
2019-04-02 21:12:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4d8c8ba2, com.bootdo.moneyList.damain.MoneyListDO@3c2cafc7, com.bootdo.moneyList.damain.MoneyListDO@3a3ac614]
2019-04-02 21:12:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:12:53 -HTTP METHOD : POST
2019-04-02 21:12:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:12:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@109067ae]
2019-04-02 21:12:53 -==>  Preparing: select user_name from elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) 
2019-04-02 21:12:53 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:12:53 -<==      Total: 5
2019-04-02 21:12:53 -耗时 : 123
2019-04-02 21:12:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5c7719c6, com.bootdo.moneyList.damain.MoneyListDO@d7e775b, com.bootdo.moneyList.damain.MoneyListDO@3686728b, com.bootdo.moneyList.damain.MoneyListDO@3e8f651b, com.bootdo.moneyList.damain.MoneyListDO@5a52f225]
2019-04-02 21:13:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:13:00 -HTTP METHOD : POST
2019-04-02 21:13:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:13:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@31230af8]
2019-04-02 21:13:00 -==>  Preparing: select user_name from elec UNION ALL select user_name from heat UNION ALL select user_name from water 
2019-04-02 21:13:00 -==> Parameters: 
2019-04-02 21:13:00 -<==      Total: 45
2019-04-02 21:13:00 -耗时 : 4
2019-04-02 21:13:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1fe3c1d2, com.bootdo.moneyList.damain.MoneyListDO@7087eb8c, com.bootdo.moneyList.damain.MoneyListDO@595a5bae, com.bootdo.moneyList.damain.MoneyListDO@760542df, com.bootdo.moneyList.damain.MoneyListDO@7769f09c, com.bootdo.moneyList.damain.MoneyListDO@38fdbe76, com.bootdo.moneyList.damain.MoneyListDO@337105ec, com.bootdo.moneyList.damain.MoneyListDO@6f3ebae7, com.bootdo.moneyList.damain.MoneyListDO@576b5a8c, com.bootdo.moneyList.damain.MoneyListDO@2305019, com.bootdo.moneyList.damain.MoneyListDO@39556bd6, com.bootdo.moneyList.damain.MoneyListDO@23a60799, com.bootdo.moneyList.damain.MoneyListDO@2e14865b, com.bootdo.moneyList.damain.MoneyListDO@2e24ab18, com.bootdo.moneyList.damain.MoneyListDO@3cbd6ed1, com.bootdo.moneyList.damain.MoneyListDO@2f343c10, com.bootdo.moneyList.damain.MoneyListDO@259841f3, com.bootdo.moneyList.damain.MoneyListDO@2e6f4233, com.bootdo.moneyList.damain.MoneyListDO@79736ac9, com.bootdo.moneyList.damain.MoneyListDO@77291d4b, com.bootdo.moneyList.damain.MoneyListDO@10d95d84, com.bootdo.moneyList.damain.MoneyListDO@44f3fb76, com.bootdo.moneyList.damain.MoneyListDO@26b4f403, com.bootdo.moneyList.damain.MoneyListDO@194876db, com.bootdo.moneyList.damain.MoneyListDO@43a73d0b, com.bootdo.moneyList.damain.MoneyListDO@18544642, com.bootdo.moneyList.damain.MoneyListDO@19c1bda7, com.bootdo.moneyList.damain.MoneyListDO@4365feea, com.bootdo.moneyList.damain.MoneyListDO@39d0cce8, com.bootdo.moneyList.damain.MoneyListDO@30cfbc6, com.bootdo.moneyList.damain.MoneyListDO@17b44285, com.bootdo.moneyList.damain.MoneyListDO@7bca7c37, com.bootdo.moneyList.damain.MoneyListDO@44c2582a, com.bootdo.moneyList.damain.MoneyListDO@20f449bf, com.bootdo.moneyList.damain.MoneyListDO@15e1974e, com.bootdo.moneyList.damain.MoneyListDO@3d627a01, com.bootdo.moneyList.damain.MoneyListDO@6b37668f, com.bootdo.moneyList.damain.MoneyListDO@698c73e7, com.bootdo.moneyList.damain.MoneyListDO@70ced27f, com.bootdo.moneyList.damain.MoneyListDO@5ed20c15, com.bootdo.moneyList.damain.MoneyListDO@e811a5e, com.bootdo.moneyList.damain.MoneyListDO@4184322, com.bootdo.moneyList.damain.MoneyListDO@2c324f4, com.bootdo.moneyList.damain.MoneyListDO@4cbf321d, com.bootdo.moneyList.damain.MoneyListDO@4aea923e]
2019-04-02 21:13:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-02 21:13:10 -HTTP METHOD : POST
2019-04-02 21:13:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-02 21:13:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@64fcc2c1]
2019-04-02 21:13:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_name = ? 
2019-04-02 21:13:10 -==> Parameters: 姜海龙(String), 姜海龙(String), 姜海龙(String)
2019-04-02 21:13:10 -<==      Total: 3
2019-04-02 21:13:10 -耗时 : 4
2019-04-02 21:13:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5d2fa66, com.bootdo.moneyList.damain.MoneyListDO@442a274b, com.bootdo.moneyList.damain.MoneyListDO@46c20fc5]
2019-04-02 21:13:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-02 21:13:34 -HTTP METHOD : GET
2019-04-02 21:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-02 21:13:34 -参数 : []
2019-04-02 21:13:34 -耗时 : 1
2019-04-02 21:13:34 -返回值 : system/dept/deptTree
2019-04-02 21:13:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-02 21:13:34 -HTTP METHOD : GET
2019-04-02 21:13:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-02 21:13:34 -参数 : []
2019-04-02 21:13:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-02 21:13:34 -==> Parameters: 
2019-04-02 21:13:34 -<==      Total: 3
2019-04-02 21:13:34 -耗时 : 3
2019-04-02 21:13:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-02 21:16:53 -请求地址 : http://localhost:8081/index
2019-04-02 21:16:53 -HTTP METHOD : GET
2019-04-02 21:16:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:16:53 -参数 : [{}]
2019-04-02 21:16:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:16:53 -==> Parameters: 1(Long)
2019-04-02 21:16:54 -<==      Total: 46
2019-04-02 21:16:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:16:54 -==> Parameters: 138(Long)
2019-04-02 21:16:54 -<==      Total: 1
2019-04-02 21:16:54 -耗时 : 98
2019-04-02 21:16:54 -返回值 : index_v1
2019-04-02 21:16:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:16:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 98(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:16:54.088(Timestamp)
2019-04-02 21:16:54 -<==    Updates: 1
2019-04-02 21:16:54 -请求地址 : http://localhost:8081/main
2019-04-02 21:16:54 -HTTP METHOD : GET
2019-04-02 21:16:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:16:54 -参数 : []
2019-04-02 21:16:54 -耗时 : 3
2019-04-02 21:16:54 -返回值 : main
2019-04-02 21:16:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:16:54 -HTTP METHOD : GET
2019-04-02 21:16:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:16:54 -参数 : []
2019-04-02 21:16:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:16:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:16:54 -<==      Total: 0
2019-04-02 21:16:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:16:54 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:16:54 -<==      Total: 1
2019-04-02 21:16:54 -耗时 : 13
2019-04-02 21:16:54 -返回值 : com.bootdo.common.utils.PageUtils@4ef930f
2019-04-02 21:16:54 -请求地址 : http://localhost:8081/main
2019-04-02 21:16:54 -HTTP METHOD : GET
2019-04-02 21:16:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:16:54 -参数 : []
2019-04-02 21:16:54 -耗时 : 0
2019-04-02 21:16:54 -返回值 : main
2019-04-02 21:17:00 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-02 21:17:00 -HTTP METHOD : GET
2019-04-02 21:17:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-02 21:17:00 -参数 : []
2019-04-02 21:17:00 -耗时 : 0
2019-04-02 21:17:00 -返回值 : /moneyList/moneyList
2019-04-02 21:17:41 -请求地址 : http://localhost:8081/index
2019-04-02 21:17:41 -HTTP METHOD : GET
2019-04-02 21:17:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-02 21:17:41 -参数 : [{}]
2019-04-02 21:17:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-02 21:17:41 -==> Parameters: 1(Long)
2019-04-02 21:17:41 -<==      Total: 46
2019-04-02 21:17:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-02 21:17:41 -==> Parameters: 138(Long)
2019-04-02 21:17:41 -<==      Total: 1
2019-04-02 21:17:41 -耗时 : 181
2019-04-02 21:17:41 -返回值 : index_v1
2019-04-02 21:17:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-02 21:17:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 181(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-02 21:17:41.869(Timestamp)
2019-04-02 21:17:42 -<==    Updates: 1
2019-04-02 21:17:42 -请求地址 : http://localhost:8081/main
2019-04-02 21:17:42 -HTTP METHOD : GET
2019-04-02 21:17:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:17:42 -参数 : []
2019-04-02 21:17:42 -耗时 : 1
2019-04-02 21:17:42 -返回值 : main
2019-04-02 21:17:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-02 21:17:42 -HTTP METHOD : GET
2019-04-02 21:17:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-02 21:17:42 -参数 : []
2019-04-02 21:17:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-02 21:17:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-02 21:17:42 -<==      Total: 0
2019-04-02 21:17:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-02 21:17:42 -==> Parameters: 1(Long), 0(String)
2019-04-02 21:17:42 -<==      Total: 1
2019-04-02 21:17:42 -耗时 : 31
2019-04-02 21:17:42 -返回值 : com.bootdo.common.utils.PageUtils@4321dfd
2019-04-02 21:17:42 -请求地址 : http://localhost:8081/main
2019-04-02 21:17:42 -HTTP METHOD : GET
2019-04-02 21:17:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-02 21:17:42 -参数 : []
2019-04-02 21:17:42 -耗时 : 1
2019-04-02 21:17:42 -返回值 : main
2019-04-02 21:17:45 -请求地址 : http://localhost:8081/charts/countDD
2019-04-02 21:17:45 -HTTP METHOD : GET
2019-04-02 21:17:45 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-02 21:17:45 -参数 : []
2019-04-02 21:17:45 -耗时 : 0
2019-04-02 21:17:45 -返回值 : charts/countDD
2019-04-02 21:17:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-02 21:17:46 -HTTP METHOD : GET
2019-04-02 21:17:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-02 21:17:46 -参数 : [userType]
2019-04-02 21:17:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-02 21:17:46 -==> Parameters: userType(String)
2019-04-02 21:17:46 -<==      Total: 2
2019-04-02 21:17:46 -耗时 : 85
2019-04-02 21:17:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-02 21:17:49 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-02 21:17:49 -HTTP METHOD : GET
2019-04-02 21:17:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-02 21:17:49 -参数 : []
2019-04-02 21:17:49 -耗时 : 1
2019-04-02 21:17:49 -返回值 : /moneyList/moneyList
2019-04-02 21:18:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:18:02 -HTTP METHOD : POST
2019-04-02 21:18:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:18:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ee69cac]
2019-04-02 21:18:02 -==>  Preparing: select user_name from elec UNION ALL select user_name from heat UNION ALL select user_name from water 
2019-04-02 21:18:02 -==> Parameters: 
2019-04-02 21:18:02 -<==      Total: 45
2019-04-02 21:18:02 -耗时 : 3
2019-04-02 21:18:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@471b6925, com.bootdo.moneyList.damain.MoneyListDO@105356bf, com.bootdo.moneyList.damain.MoneyListDO@7a3aabe5, com.bootdo.moneyList.damain.MoneyListDO@2ffa8dfd, com.bootdo.moneyList.damain.MoneyListDO@33349b66, com.bootdo.moneyList.damain.MoneyListDO@3958c511, com.bootdo.moneyList.damain.MoneyListDO@1692245c, com.bootdo.moneyList.damain.MoneyListDO@6dfcc616, com.bootdo.moneyList.damain.MoneyListDO@7a048f64, com.bootdo.moneyList.damain.MoneyListDO@58bbd78, com.bootdo.moneyList.damain.MoneyListDO@23cd951, com.bootdo.moneyList.damain.MoneyListDO@97b7376, com.bootdo.moneyList.damain.MoneyListDO@575aa292, com.bootdo.moneyList.damain.MoneyListDO@fe2b57c, com.bootdo.moneyList.damain.MoneyListDO@6b700380, com.bootdo.moneyList.damain.MoneyListDO@39423d5b, com.bootdo.moneyList.damain.MoneyListDO@3b8e46d3, com.bootdo.moneyList.damain.MoneyListDO@215d4d8b, com.bootdo.moneyList.damain.MoneyListDO@4a5a2623, com.bootdo.moneyList.damain.MoneyListDO@62da62d6, com.bootdo.moneyList.damain.MoneyListDO@2bab0880, com.bootdo.moneyList.damain.MoneyListDO@6051396b, com.bootdo.moneyList.damain.MoneyListDO@7ba1607c, com.bootdo.moneyList.damain.MoneyListDO@4adc610c, com.bootdo.moneyList.damain.MoneyListDO@39c08fdf, com.bootdo.moneyList.damain.MoneyListDO@50b363ed, com.bootdo.moneyList.damain.MoneyListDO@20e14b07, com.bootdo.moneyList.damain.MoneyListDO@99c8a16, com.bootdo.moneyList.damain.MoneyListDO@349f428d, com.bootdo.moneyList.damain.MoneyListDO@7ff8f3f8, com.bootdo.moneyList.damain.MoneyListDO@55eb3673, com.bootdo.moneyList.damain.MoneyListDO@38cadae2, com.bootdo.moneyList.damain.MoneyListDO@760f7c5c, com.bootdo.moneyList.damain.MoneyListDO@4ed02656, com.bootdo.moneyList.damain.MoneyListDO@4204c951, com.bootdo.moneyList.damain.MoneyListDO@2c771639, com.bootdo.moneyList.damain.MoneyListDO@21976277, com.bootdo.moneyList.damain.MoneyListDO@6e3a1285, com.bootdo.moneyList.damain.MoneyListDO@a101052, com.bootdo.moneyList.damain.MoneyListDO@1e4209f7, com.bootdo.moneyList.damain.MoneyListDO@45c4492, com.bootdo.moneyList.damain.MoneyListDO@3a4cd0a6, com.bootdo.moneyList.damain.MoneyListDO@3054d53d, com.bootdo.moneyList.damain.MoneyListDO@3ed76f71, com.bootdo.moneyList.damain.MoneyListDO@5849d4ed]
2019-04-02 21:18:18 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-02 21:18:18 -HTTP METHOD : POST
2019-04-02 21:18:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-02 21:18:18 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@18e4923f]
2019-04-02 21:18:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_name = ? 
2019-04-02 21:18:18 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:18:18 -<==      Total: 3
2019-04-02 21:18:18 -耗时 : 4
2019-04-02 21:18:18 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6673b15c, com.bootdo.moneyList.damain.MoneyListDO@73e44ae, com.bootdo.moneyList.damain.MoneyListDO@3b775b1c]
2019-04-02 21:18:43 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:18:43 -HTTP METHOD : POST
2019-04-02 21:18:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:18:43 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@49cd45a0]
2019-04-02 21:18:43 -==>  Preparing: select user_name from elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) 
2019-04-02 21:18:43 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:18:43 -<==      Total: 5
2019-04-02 21:18:43 -耗时 : 4
2019-04-02 21:18:43 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@19d5019d, com.bootdo.moneyList.damain.MoneyListDO@33a8433b, com.bootdo.moneyList.damain.MoneyListDO@106be0ab, com.bootdo.moneyList.damain.MoneyListDO@7a8e72b3, com.bootdo.moneyList.damain.MoneyListDO@4be64d96]
2019-04-02 21:18:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-02 21:18:44 -HTTP METHOD : POST
2019-04-02 21:18:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-02 21:18:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3fd5e900]
2019-04-02 21:18:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, user_org, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE user_name = ? 
2019-04-02 21:18:44 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:18:44 -<==      Total: 3
2019-04-02 21:18:44 -耗时 : 4
2019-04-02 21:18:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@231dc482, com.bootdo.moneyList.damain.MoneyListDO@520b821d, com.bootdo.moneyList.damain.MoneyListDO@4286fcb5]
2019-04-02 21:18:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-02 21:18:45 -HTTP METHOD : POST
2019-04-02 21:18:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-02 21:18:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4cef8393]
2019-04-02 21:18:45 -==>  Preparing: select user_name from elec WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE user_name like CONCAT(CONCAT('%',?,'%')) 
2019-04-02 21:18:45 -==> Parameters: 爱仕达(String), 爱仕达(String), 爱仕达(String)
2019-04-02 21:18:45 -<==      Total: 5
2019-04-02 21:18:45 -耗时 : 3
2019-04-02 21:18:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@762eb88d, com.bootdo.moneyList.damain.MoneyListDO@495cc210, com.bootdo.moneyList.damain.MoneyListDO@791f23b3, com.bootdo.moneyList.damain.MoneyListDO@5984732e, com.bootdo.moneyList.damain.MoneyListDO@5aed4243]

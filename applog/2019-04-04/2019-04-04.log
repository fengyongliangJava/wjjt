2019-04-04 08:39:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 9664 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 08:39:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 08:39:14 -The following profiles are active: dev
2019-04-04 08:39:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 08:39:14 CST 2019]; root of context hierarchy
2019-04-04 08:39:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 08:39:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f37a9df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$190d886] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 08:39:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 08:39:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 08:39:24 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 08:39:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 08:39:24 -Starting service [Tomcat]
2019-04-04 08:39:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 08:39:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 08:39:25 -Initializing Spring embedded WebApplicationContext
2019-04-04 08:39:25 -Root WebApplicationContext: initialization completed in 10684 ms
2019-04-04 08:39:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 08:39:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 08:39:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 08:39:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 08:39:25 -Filter xssFilter was not registered (disabled)
2019-04-04 08:39:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 08:39:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 08:39:25 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 08:39:25 -Servlet dispatcherServlet mapped to [/]
2019-04-04 08:39:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 08:39:14 CST 2019]; root of context hierarchy
2019-04-04 08:39:30 -Using default implementation for ThreadExecutor
2019-04-04 08:39:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 08:39:30 -Quartz Scheduler v.2.2.1 created.
2019-04-04 08:39:30 -RAMJobStore initialized.
2019-04-04 08:39:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 08:39:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 08:39:30 -Quartz scheduler version: 2.2.1
2019-04-04 08:39:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1883871b
2019-04-04 08:39:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 08:39:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 08:39:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 08:39:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 08:39:34 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 08:39:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 08:39:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 08:39:34 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 08:39:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 08:39:34 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 08:39:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 08:39:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 08:39:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 08:39:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 08:39:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 08:39:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 08:39:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 08:39:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 08:39:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 08:39:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 08:39:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 08:39:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 08:39:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 08:39:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 08:39:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 08:39:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 08:39:34 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 08:39:34 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 08:39:34 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 08:39:34 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 08:39:34 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 08:39:34 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 08:39:34 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 08:39:34 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 08:39:34 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 08:39:34 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 08:39:34 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 08:39:34 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 08:39:34 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 08:39:34 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 08:39:34 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 08:39:34 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 08:39:34 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 08:39:34 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 08:39:34 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 08:39:34 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 08:39:34 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 08:39:34 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 08:39:34 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 08:39:34 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 08:39:34 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 08:39:34 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 08:39:34 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 08:39:34 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 08:39:34 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 08:39:34 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 08:39:34 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 08:39:34 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 08:39:34 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 08:39:34 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 08:39:34 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 08:39:34 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 08:39:34 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 08:39:34 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 08:39:34 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 08:39:34 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 08:39:34 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 08:39:34 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 08:39:34 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 08:39:34 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 08:39:34 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 08:39:34 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 08:39:34 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 08:39:34 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 08:39:34 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 08:39:34 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 08:39:34 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 08:39:34 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 08:39:34 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 08:39:34 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 08:39:34 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 08:39:34 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 08:39:34 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 08:39:34 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 08:39:34 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 08:39:34 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 08:39:34 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 08:39:34 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 08:39:34 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 08:39:34 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 08:39:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 08:39:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 08:39:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 08:39:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 08:39:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 08:39:14 CST 2019]; root of context hierarchy
2019-04-04 08:39:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 08:39:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 08:39:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 08:39:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 08:39:36 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 08:39:40 -Registering beans for JMX exposure on startup
2019-04-04 08:39:40 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 08:39:40 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 08:39:40 -Starting beans in phase 2147483647
2019-04-04 08:39:40 -Context refreshed
2019-04-04 08:39:40 -Found 1 custom documentation plugin(s)
2019-04-04 08:39:40 -Scanning for api listing references
2019-04-04 08:39:40 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 08:39:40 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 08:39:40 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 08:39:40 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 08:39:40 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 08:39:40 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 08:39:40 -Generating unique operation named: removeUsingPOST_1
2019-04-04 08:39:40 -Generating unique operation named: addUsingGET_1
2019-04-04 08:39:40 -Generating unique operation named: editUsingGET_1
2019-04-04 08:39:40 -Generating unique operation named: listUsingGET_1
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_2
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_3
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_2
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_2
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_2
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_4
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_5
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_2
2019-04-04 08:39:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_3
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_3
2019-04-04 08:39:41 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_3
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_6
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_7
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_4
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_4
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_4
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_8
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_9
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 08:39:41 -Generating unique operation named: ElecUsingGET_1
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_5
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_5
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_5
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_10
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_11
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_6
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_6
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_6
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_7
2019-04-04 08:39:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_7
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_12
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_13
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 08:39:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_7
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_8
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_8
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_14
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_15
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_8
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_8
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_9
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_9
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_16
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_17
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_8
2019-04-04 08:39:41 -Generating unique operation named: updateUsingGET_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_9
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPUT_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 08:39:41 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 08:39:41 -Generating unique operation named: addUsingGET_9
2019-04-04 08:39:41 -Generating unique operation named: editUsingGET_10
2019-04-04 08:39:41 -Generating unique operation named: infoUsingGET_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingPOST_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingPUT_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 08:39:41 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 08:39:41 -Generating unique operation named: listUsingGET_10
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_18
2019-04-04 08:39:41 -Generating unique operation named: removeUsingPOST_19
2019-04-04 08:39:41 -Generating unique operation named: saveUsingPOST_9
2019-04-04 08:39:41 -Generating unique operation named: updateUsingPOST_10
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_11
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_20
2019-04-04 08:39:42 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_10
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_11
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_12
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_21
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_10
2019-04-04 08:39:42 -Generating unique operation named: treeUsingGET_1
2019-04-04 08:39:42 -Generating unique operation named: treeUsingGET_2
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_11
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_11
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_12
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_13
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_22
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_23
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_11
2019-04-04 08:39:42 -Generating unique operation named: updateUsingGET_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_12
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPUT_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 08:39:42 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_12
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_13
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_14
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_24
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_25
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_12
2019-04-04 08:39:42 -Generating unique operation named: updateUsingGET_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_13
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPUT_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 08:39:42 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_13
2019-04-04 08:39:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_14
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_15
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_13
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_14
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_14
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_16
2019-04-04 08:39:42 -Generating unique operation named: listUsingHEAD_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingPOST_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingPUT_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingPATCH_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingDELETE_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 08:39:42 -Generating unique operation named: listUsingTRACE_1
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_14
2019-04-04 08:39:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_15
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_17
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_26
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_15
2019-04-04 08:39:42 -Generating unique operation named: treeUsingGET_3
2019-04-04 08:39:42 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_15
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_15
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_16
2019-04-04 08:39:42 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_18
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_27
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_28
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_16
2019-04-04 08:39:42 -Generating unique operation named: updateUsingGET_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_16
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPUT_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 08:39:42 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 08:39:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 08:39:42 -Generating unique operation named: addUsingGET_16
2019-04-04 08:39:42 -Generating unique operation named: editUsingGET_17
2019-04-04 08:39:42 -Generating unique operation named: listUsingGET_19
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_29
2019-04-04 08:39:42 -Generating unique operation named: removeUsingPOST_30
2019-04-04 08:39:42 -Generating unique operation named: saveUsingPOST_17
2019-04-04 08:39:42 -Generating unique operation named: updateUsingGET_11
2019-04-04 08:39:42 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPOST_17
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPUT_11
2019-04-04 08:39:42 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 08:39:42 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 08:39:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 08:39:43 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 08:39:43 -Generating unique operation named: addUsingGET_17
2019-04-04 08:39:43 -Generating unique operation named: editUsingGET_18
2019-04-04 08:39:43 -Generating unique operation named: listUsingGET_20
2019-04-04 08:39:43 -Generating unique operation named: removeUsingPOST_31
2019-04-04 08:39:43 -Generating unique operation named: removeUsingPOST_32
2019-04-04 08:39:43 -Generating unique operation named: saveUsingPOST_18
2019-04-04 08:39:43 -Generating unique operation named: updateUsingGET_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingPOST_18
2019-04-04 08:39:43 -Generating unique operation named: updateUsingPUT_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 08:39:43 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 08:39:43 -Starting Quartz Scheduler now
2019-04-04 08:39:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 08:39:43 -Starting...
2019-04-04 08:39:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 08:39:43 -Started.
2019-04-04 08:39:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 08:39:43 -Using a shared selector for servlet write/read
2019-04-04 08:39:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 08:39:43 -Started BootdoApplication in 30.293 seconds (JVM running for 31.101)
2019-04-04 08:39:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 08:39:44 -==> Parameters: 
2019-04-04 08:39:44 -<==      Total: 1
2019-04-04 08:40:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 08:40:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 08:40:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-04-04 08:40:05 -Enabling session validation scheduler...
2019-04-04 08:40:06 -请求地址 : http://localhost:8081/login;JSESSIONID=049100ab-0a31-4a1c-988e-1ea0bb31360e
2019-04-04 08:40:06 -HTTP METHOD : GET
2019-04-04 08:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 08:40:06 -参数 : [{}]
2019-04-04 08:40:06 -耗时 : 4
2019-04-04 08:40:06 -返回值 : login
2019-04-04 08:40:12 -请求地址 : http://localhost:8081/getVerify
2019-04-04 08:40:12 -HTTP METHOD : GET
2019-04-04 08:40:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 08:40:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f70ddad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37bec465]
2019-04-04 08:40:18 -0766
2019-04-04 08:40:19 -耗时 : 6286
2019-04-04 08:40:19 -返回值 : null
2019-04-04 08:40:26 -请求地址 : http://localhost:8081/login
2019-04-04 08:40:26 -HTTP METHOD : POST
2019-04-04 08:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 08:40:26 -参数 : [admin, 111111, 0766, org.apache.shiro.web.servlet.ShiroHttpServletRequest@47930b83]
2019-04-04 08:40:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 08:40:26 -==> Parameters: admin(String)
2019-04-04 08:40:26 -<==      Total: 1
2019-04-04 08:40:26 -耗时 : 221
2019-04-04 08:40:26 -返回值 : {msg=操作成功, code=0}
2019-04-04 08:40:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 08:40:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:40:26 -==> Parameters: 1(Long), admin(String), 登录(String), 221(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 08:40:26.488(Timestamp)
2019-04-04 08:40:26 -<==    Updates: 1
2019-04-04 08:40:27 -请求地址 : http://localhost:8081/index
2019-04-04 08:40:27 -HTTP METHOD : GET
2019-04-04 08:40:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 08:40:27 -参数 : [{}]
2019-04-04 08:40:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 08:40:27 -==> Parameters: 1(Long)
2019-04-04 08:40:27 -<==      Total: 46
2019-04-04 08:40:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 08:40:27 -==> Parameters: 138(Long)
2019-04-04 08:40:27 -<==      Total: 1
2019-04-04 08:40:27 -耗时 : 529
2019-04-04 08:40:27 -返回值 : index_v1
2019-04-04 08:40:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:40:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 529(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 08:40:27.637(Timestamp)
2019-04-04 08:40:27 -<==    Updates: 1
2019-04-04 08:40:28 -请求地址 : http://localhost:8081/main
2019-04-04 08:40:28 -HTTP METHOD : GET
2019-04-04 08:40:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:40:28 -参数 : []
2019-04-04 08:40:28 -耗时 : 0
2019-04-04 08:40:28 -返回值 : main
2019-04-04 08:40:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 08:40:31 -HTTP METHOD : GET
2019-04-04 08:40:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 08:40:31 -参数 : []
2019-04-04 08:40:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 08:40:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 08:40:31 -<==      Total: 0
2019-04-04 08:40:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 08:40:31 -==> Parameters: 1(Long), 0(String)
2019-04-04 08:40:31 -<==      Total: 1
2019-04-04 08:40:31 -耗时 : 90
2019-04-04 08:40:31 -返回值 : com.bootdo.common.utils.PageUtils@1c55b0ae
2019-04-04 08:40:32 -请求地址 : http://localhost:8081/main
2019-04-04 08:40:32 -HTTP METHOD : GET
2019-04-04 08:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:40:32 -参数 : []
2019-04-04 08:40:32 -耗时 : 0
2019-04-04 08:40:32 -返回值 : main
2019-04-04 08:40:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-04-04 08:40:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 08:40:59 -==> Parameters: 1(Long)
2019-04-04 08:40:59 -<==      Total: 90
2019-04-04 08:40:59 -请求地址 : http://localhost:8081/print/print
2019-04-04 08:40:59 -HTTP METHOD : GET
2019-04-04 08:40:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 08:40:59 -参数 : []
2019-04-04 08:40:59 -耗时 : 0
2019-04-04 08:40:59 -返回值 : print/print/print
2019-04-04 08:41:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:41:01 -HTTP METHOD : GET
2019-04-04 08:41:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:41:01 -参数 : [userType]
2019-04-04 08:41:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:41:01 -==> Parameters: userType(String)
2019-04-04 08:41:01 -<==      Total: 2
2019-04-04 08:41:01 -耗时 : 35
2019-04-04 08:41:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:41:01 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:01 -HTTP METHOD : GET
2019-04-04 08:41:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:01 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:41:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:41:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:41:01 -<==      Total: 3
2019-04-04 08:41:01 -==>  Preparing: select count(*) from print 
2019-04-04 08:41:01 -==> Parameters: 
2019-04-04 08:41:01 -<==      Total: 1
2019-04-04 08:41:01 -耗时 : 47
2019-04-04 08:41:01 -返回值 : com.bootdo.common.utils.PageUtils@3bed4876
2019-04-04 08:41:28 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:28 -HTTP METHOD : GET
2019-04-04 08:41:28 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:28 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=, userOrg=, userId=}]
2019-04-04 08:41:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:28 -==> Parameters: 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:28 -<==      Total: 2
2019-04-04 08:41:28 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:28 -==> Parameters: 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-04 08:41:28 -<==      Total: 1
2019-04-04 08:41:28 -耗时 : 35
2019-04-04 08:41:28 -返回值 : com.bootdo.common.utils.PageUtils@1cbfca7f
2019-04-04 08:41:29 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:29 -HTTP METHOD : GET
2019-04-04 08:41:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:29 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=, userOrg=, userId=}]
2019-04-04 08:41:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:29 -==> Parameters: 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:29 -<==      Total: 2
2019-04-04 08:41:29 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:29 -==> Parameters: 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-04 08:41:29 -<==      Total: 1
2019-04-04 08:41:29 -耗时 : 16
2019-04-04 08:41:29 -返回值 : com.bootdo.common.utils.PageUtils@182473bf
2019-04-04 08:41:36 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:36 -HTTP METHOD : GET
2019-04-04 08:41:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:36 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=, userId=, type=A}]
2019-04-04 08:41:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:36 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:36 -<==      Total: 1
2019-04-04 08:41:36 -==>  Preparing: select count(*) from print WHERE user_type = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:36 -==> Parameters: A(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-04 08:41:36 -<==      Total: 1
2019-04-04 08:41:36 -耗时 : 43
2019-04-04 08:41:36 -返回值 : com.bootdo.common.utils.PageUtils@2dfa015e
2019-04-04 08:41:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:41:37 -HTTP METHOD : GET
2019-04-04 08:41:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:41:37 -参数 : []
2019-04-04 08:41:37 -耗时 : 1
2019-04-04 08:41:37 -返回值 : system/dept/deptTree
2019-04-04 08:41:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:41:38 -HTTP METHOD : GET
2019-04-04 08:41:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:41:38 -参数 : []
2019-04-04 08:41:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:41:38 -==> Parameters: 
2019-04-04 08:41:38 -<==      Total: 3
2019-04-04 08:41:38 -耗时 : 17
2019-04-04 08:41:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:41:40 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:40 -HTTP METHOD : GET
2019-04-04 08:41:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:40 -参数 : [{limit=10, offset=0, createTime=2019-03-26, userType=A, userOrg=2, userId=}]
2019-04-04 08:41:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:40 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:40 -<==      Total: 1
2019-04-04 08:41:40 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:40 -==> Parameters: A(String), 2(String), 2019-03-26 00:00:00(String), 2019-03-26 23:59:59(String)
2019-04-04 08:41:40 -<==      Total: 1
2019-04-04 08:41:40 -耗时 : 15
2019-04-04 08:41:40 -返回值 : com.bootdo.common.utils.PageUtils@4bf34a3e
2019-04-04 08:41:48 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:48 -HTTP METHOD : GET
2019-04-04 08:41:48 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:48 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=2, userId=}]
2019-04-04 08:41:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:48 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:48 -<==      Total: 1
2019-04-04 08:41:48 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:48 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-04 08:41:48 -<==      Total: 1
2019-04-04 08:41:48 -耗时 : 19
2019-04-04 08:41:48 -返回值 : com.bootdo.common.utils.PageUtils@1c2af92f
2019-04-04 08:41:49 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:41:49 -HTTP METHOD : GET
2019-04-04 08:41:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:41:49 -参数 : [{limit=10, offset=0, createTime=2019-02-26, userType=A, userOrg=2, userId=}]
2019-04-04 08:41:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-04-04 08:41:49 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 08:41:49 -<==      Total: 1
2019-04-04 08:41:49 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `print_date` >= ? and `print_date` <= ? 
2019-04-04 08:41:49 -==> Parameters: A(String), 2(String), 2019-02-26 00:00:00(String), 2019-02-26 23:59:59(String)
2019-04-04 08:41:49 -<==      Total: 1
2019-04-04 08:41:49 -耗时 : 14
2019-04-04 08:41:49 -返回值 : com.bootdo.common.utils.PageUtils@434b76d1
2019-04-04 08:42:04 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:42:04 -HTTP METHOD : GET
2019-04-04 08:42:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:42:04 -参数 : []
2019-04-04 08:42:04 -耗时 : 0
2019-04-04 08:42:04 -返回值 : print/print/add
2019-04-04 08:42:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:42:04 -HTTP METHOD : GET
2019-04-04 08:42:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:42:04 -参数 : [userType]
2019-04-04 08:42:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:42:04 -==> Parameters: userType(String)
2019-04-04 08:42:04 -<==      Total: 2
2019-04-04 08:42:04 -耗时 : 4
2019-04-04 08:42:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:43:22 -请求地址 : http://localhost:8081/index
2019-04-04 08:43:22 -HTTP METHOD : GET
2019-04-04 08:43:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 08:43:22 -参数 : [{}]
2019-04-04 08:43:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 08:43:22 -==> Parameters: 1(Long)
2019-04-04 08:43:22 -<==      Total: 46
2019-04-04 08:43:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 08:43:22 -==> Parameters: 138(Long)
2019-04-04 08:43:22 -<==      Total: 1
2019-04-04 08:43:22 -耗时 : 31
2019-04-04 08:43:22 -返回值 : index_v1
2019-04-04 08:43:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:43:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 08:43:22.122(Timestamp)
2019-04-04 08:43:22 -请求地址 : http://localhost:8081/main
2019-04-04 08:43:22 -HTTP METHOD : GET
2019-04-04 08:43:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:43:22 -参数 : []
2019-04-04 08:43:22 -耗时 : 1
2019-04-04 08:43:22 -返回值 : main
2019-04-04 08:43:22 -<==    Updates: 1
2019-04-04 08:43:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 08:43:22 -HTTP METHOD : GET
2019-04-04 08:43:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 08:43:22 -参数 : []
2019-04-04 08:43:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 08:43:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 08:43:22 -<==      Total: 0
2019-04-04 08:43:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 08:43:22 -==> Parameters: 1(Long), 0(String)
2019-04-04 08:43:22 -<==      Total: 1
2019-04-04 08:43:22 -耗时 : 8
2019-04-04 08:43:22 -返回值 : com.bootdo.common.utils.PageUtils@c7a9cd7
2019-04-04 08:43:22 -请求地址 : http://localhost:8081/main
2019-04-04 08:43:22 -HTTP METHOD : GET
2019-04-04 08:43:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:43:22 -参数 : []
2019-04-04 08:43:22 -耗时 : 0
2019-04-04 08:43:22 -返回值 : main
2019-04-04 08:43:32 -请求地址 : http://localhost:8081/print/print
2019-04-04 08:43:32 -HTTP METHOD : GET
2019-04-04 08:43:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 08:43:32 -参数 : []
2019-04-04 08:43:32 -耗时 : 1
2019-04-04 08:43:32 -返回值 : print/print/print
2019-04-04 08:43:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:43:32 -HTTP METHOD : GET
2019-04-04 08:43:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:43:32 -参数 : [userType]
2019-04-04 08:43:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:43:32 -==> Parameters: userType(String)
2019-04-04 08:43:32 -<==      Total: 2
2019-04-04 08:43:32 -耗时 : 4
2019-04-04 08:43:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:43:32 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:43:32 -HTTP METHOD : GET
2019-04-04 08:43:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:43:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:43:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:43:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:43:32 -<==      Total: 3
2019-04-04 08:43:32 -==>  Preparing: select count(*) from print 
2019-04-04 08:43:32 -==> Parameters: 
2019-04-04 08:43:32 -<==      Total: 1
2019-04-04 08:43:32 -耗时 : 10
2019-04-04 08:43:32 -返回值 : com.bootdo.common.utils.PageUtils@58bb51a1
2019-04-04 08:43:34 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:43:34 -HTTP METHOD : GET
2019-04-04 08:43:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:43:34 -参数 : []
2019-04-04 08:43:34 -耗时 : 0
2019-04-04 08:43:34 -返回值 : print/print/add
2019-04-04 08:43:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:43:35 -HTTP METHOD : GET
2019-04-04 08:43:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:43:35 -参数 : [userType]
2019-04-04 08:43:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:43:35 -==> Parameters: userType(String)
2019-04-04 08:43:35 -<==      Total: 2
2019-04-04 08:43:35 -耗时 : 5
2019-04-04 08:43:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:43:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:43:39 -HTTP METHOD : GET
2019-04-04 08:43:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:43:39 -参数 : []
2019-04-04 08:43:39 -耗时 : 1
2019-04-04 08:43:39 -返回值 : system/dept/deptTree
2019-04-04 08:43:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:43:39 -HTTP METHOD : GET
2019-04-04 08:43:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:43:39 -参数 : []
2019-04-04 08:43:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:43:39 -==> Parameters: 
2019-04-04 08:43:39 -<==      Total: 3
2019-04-04 08:43:39 -耗时 : 5
2019-04-04 08:43:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:43:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:43:44 -HTTP METHOD : GET
2019-04-04 08:43:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:43:44 -参数 : []
2019-04-04 08:43:44 -耗时 : 1
2019-04-04 08:43:44 -返回值 : system/dept/deptTree
2019-04-04 08:43:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:43:44 -HTTP METHOD : GET
2019-04-04 08:43:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:43:44 -参数 : []
2019-04-04 08:43:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:43:44 -==> Parameters: 
2019-04-04 08:43:44 -<==      Total: 3
2019-04-04 08:43:44 -耗时 : 3
2019-04-04 08:43:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:47:52 -请求地址 : http://localhost:8081/index
2019-04-04 08:47:52 -HTTP METHOD : GET
2019-04-04 08:47:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 08:47:52 -参数 : [{}]
2019-04-04 08:47:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 08:47:52 -==> Parameters: 1(Long)
2019-04-04 08:47:52 -<==      Total: 46
2019-04-04 08:47:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 08:47:52 -==> Parameters: 138(Long)
2019-04-04 08:47:52 -<==      Total: 1
2019-04-04 08:47:52 -耗时 : 24
2019-04-04 08:47:52 -返回值 : index_v1
2019-04-04 08:47:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:47:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 08:47:52.612(Timestamp)
2019-04-04 08:47:52 -请求地址 : http://localhost:8081/main
2019-04-04 08:47:52 -HTTP METHOD : GET
2019-04-04 08:47:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:47:52 -参数 : []
2019-04-04 08:47:52 -耗时 : 0
2019-04-04 08:47:52 -返回值 : main
2019-04-04 08:47:52 -<==    Updates: 1
2019-04-04 08:47:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 08:47:53 -HTTP METHOD : GET
2019-04-04 08:47:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 08:47:53 -参数 : []
2019-04-04 08:47:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 08:47:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 08:47:53 -<==      Total: 0
2019-04-04 08:47:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 08:47:53 -==> Parameters: 1(Long), 0(String)
2019-04-04 08:47:53 -<==      Total: 1
2019-04-04 08:47:53 -耗时 : 31
2019-04-04 08:47:53 -返回值 : com.bootdo.common.utils.PageUtils@248017e6
2019-04-04 08:47:53 -请求地址 : http://localhost:8081/main
2019-04-04 08:47:53 -HTTP METHOD : GET
2019-04-04 08:47:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:47:53 -参数 : []
2019-04-04 08:47:53 -耗时 : 1
2019-04-04 08:47:53 -返回值 : main
2019-04-04 08:48:15 -请求地址 : http://localhost:8081/print/print
2019-04-04 08:48:15 -HTTP METHOD : GET
2019-04-04 08:48:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 08:48:15 -参数 : []
2019-04-04 08:48:15 -耗时 : 1
2019-04-04 08:48:15 -返回值 : print/print/print
2019-04-04 08:48:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:48:16 -HTTP METHOD : GET
2019-04-04 08:48:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:48:16 -参数 : [userType]
2019-04-04 08:48:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:48:16 -==> Parameters: userType(String)
2019-04-04 08:48:16 -<==      Total: 2
2019-04-04 08:48:16 -耗时 : 5
2019-04-04 08:48:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:48:16 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:48:16 -HTTP METHOD : GET
2019-04-04 08:48:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:48:16 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:48:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:48:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:48:16 -<==      Total: 3
2019-04-04 08:48:16 -==>  Preparing: select count(*) from print 
2019-04-04 08:48:16 -==> Parameters: 
2019-04-04 08:48:16 -<==      Total: 1
2019-04-04 08:48:16 -耗时 : 23
2019-04-04 08:48:16 -返回值 : com.bootdo.common.utils.PageUtils@4b4e4be2
2019-04-04 08:48:18 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:48:18 -HTTP METHOD : GET
2019-04-04 08:48:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:48:18 -参数 : []
2019-04-04 08:48:18 -耗时 : 1
2019-04-04 08:48:18 -返回值 : print/print/add
2019-04-04 08:48:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:48:19 -HTTP METHOD : GET
2019-04-04 08:48:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:48:19 -参数 : [userType]
2019-04-04 08:48:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:48:19 -==> Parameters: userType(String)
2019-04-04 08:48:19 -<==      Total: 2
2019-04-04 08:48:19 -耗时 : 7
2019-04-04 08:48:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:49:55 -请求地址 : http://localhost:8081/login;JSESSIONID=5f9ee840-bd3f-46b0-af90-c6fda90f0400
2019-04-04 08:49:55 -HTTP METHOD : GET
2019-04-04 08:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 08:49:55 -参数 : [{}]
2019-04-04 08:49:55 -耗时 : 1
2019-04-04 08:49:55 -返回值 : login
2019-04-04 08:49:56 -请求地址 : http://localhost:8081/getVerify
2019-04-04 08:49:56 -HTTP METHOD : GET
2019-04-04 08:49:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 08:49:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fbe4119, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38997830]
2019-04-04 08:49:56 -6202
2019-04-04 08:49:56 -耗时 : 33
2019-04-04 08:49:56 -返回值 : null
2019-04-04 08:49:56 -请求地址 : http://localhost:8081/login
2019-04-04 08:49:56 -HTTP METHOD : GET
2019-04-04 08:49:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 08:49:56 -参数 : [{}]
2019-04-04 08:49:56 -耗时 : 1
2019-04-04 08:49:56 -返回值 : login
2019-04-04 08:50:02 -请求地址 : http://localhost:8081/login
2019-04-04 08:50:02 -HTTP METHOD : POST
2019-04-04 08:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 08:50:02 -参数 : [admin, 111111, 6202, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f035010]
2019-04-04 08:50:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 08:50:02 -==> Parameters: admin(String)
2019-04-04 08:50:02 -<==      Total: 1
2019-04-04 08:50:02 -耗时 : 7
2019-04-04 08:50:02 -返回值 : {msg=操作成功, code=0}
2019-04-04 08:50:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:50:02 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 08:50:02.529(Timestamp)
2019-04-04 08:50:02 -请求地址 : http://localhost:8081/index
2019-04-04 08:50:02 -HTTP METHOD : GET
2019-04-04 08:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 08:50:02 -参数 : [{}]
2019-04-04 08:50:02 -<==    Updates: 1
2019-04-04 08:50:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 08:50:02 -==> Parameters: 1(Long)
2019-04-04 08:50:02 -<==      Total: 46
2019-04-04 08:50:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 08:50:02 -==> Parameters: 138(Long)
2019-04-04 08:50:02 -<==      Total: 1
2019-04-04 08:50:02 -耗时 : 124
2019-04-04 08:50:02 -返回值 : index_v1
2019-04-04 08:50:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:50:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 124(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 08:50:02.688(Timestamp)
2019-04-04 08:50:02 -请求地址 : http://localhost:8081/main
2019-04-04 08:50:02 -HTTP METHOD : GET
2019-04-04 08:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:50:02 -参数 : []
2019-04-04 08:50:02 -耗时 : 1
2019-04-04 08:50:02 -返回值 : main
2019-04-04 08:50:02 -<==    Updates: 1
2019-04-04 08:50:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 08:50:03 -HTTP METHOD : GET
2019-04-04 08:50:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 08:50:03 -参数 : []
2019-04-04 08:50:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 08:50:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 08:50:03 -<==      Total: 0
2019-04-04 08:50:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 08:50:03 -==> Parameters: 1(Long), 0(String)
2019-04-04 08:50:03 -<==      Total: 1
2019-04-04 08:50:03 -耗时 : 8
2019-04-04 08:50:03 -返回值 : com.bootdo.common.utils.PageUtils@77cc1351
2019-04-04 08:50:03 -请求地址 : http://localhost:8081/main
2019-04-04 08:50:03 -HTTP METHOD : GET
2019-04-04 08:50:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:50:03 -参数 : []
2019-04-04 08:50:03 -耗时 : 1
2019-04-04 08:50:03 -返回值 : main
2019-04-04 08:50:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 08:50:52 -==> Parameters: 1(Long)
2019-04-04 08:50:52 -<==      Total: 90
2019-04-04 08:50:52 -请求地址 : http://localhost:8081/print/print
2019-04-04 08:50:52 -HTTP METHOD : GET
2019-04-04 08:50:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 08:50:52 -参数 : []
2019-04-04 08:50:52 -耗时 : 2
2019-04-04 08:50:52 -返回值 : print/print/print
2019-04-04 08:50:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:50:53 -HTTP METHOD : GET
2019-04-04 08:50:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:50:53 -参数 : [userType]
2019-04-04 08:50:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:50:53 -==> Parameters: userType(String)
2019-04-04 08:50:53 -<==      Total: 2
2019-04-04 08:50:53 -耗时 : 8
2019-04-04 08:50:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:50:53 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:50:53 -HTTP METHOD : GET
2019-04-04 08:50:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:50:53 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:50:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:50:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:50:53 -<==      Total: 3
2019-04-04 08:50:53 -==>  Preparing: select count(*) from print 
2019-04-04 08:50:53 -==> Parameters: 
2019-04-04 08:50:53 -<==      Total: 1
2019-04-04 08:50:53 -耗时 : 11
2019-04-04 08:50:53 -返回值 : com.bootdo.common.utils.PageUtils@4f55bcfb
2019-04-04 08:50:55 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:50:55 -HTTP METHOD : GET
2019-04-04 08:50:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:50:55 -参数 : []
2019-04-04 08:50:55 -耗时 : 1
2019-04-04 08:50:55 -返回值 : print/print/add
2019-04-04 08:50:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:50:55 -HTTP METHOD : GET
2019-04-04 08:50:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:50:55 -参数 : [userType]
2019-04-04 08:50:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:50:55 -==> Parameters: userType(String)
2019-04-04 08:50:55 -<==      Total: 2
2019-04-04 08:50:55 -耗时 : 8
2019-04-04 08:50:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:51:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:51:52 -HTTP METHOD : GET
2019-04-04 08:51:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:51:52 -参数 : []
2019-04-04 08:51:52 -耗时 : 0
2019-04-04 08:51:52 -返回值 : system/dept/deptTree
2019-04-04 08:51:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:51:52 -HTTP METHOD : GET
2019-04-04 08:51:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:51:52 -参数 : []
2019-04-04 08:51:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:51:52 -==> Parameters: 
2019-04-04 08:51:52 -<==      Total: 3
2019-04-04 08:51:52 -耗时 : 7
2019-04-04 08:51:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:51:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:51:55 -HTTP METHOD : GET
2019-04-04 08:51:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:51:55 -参数 : []
2019-04-04 08:51:55 -耗时 : 1
2019-04-04 08:51:55 -返回值 : system/dept/deptTree
2019-04-04 08:51:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:51:55 -HTTP METHOD : GET
2019-04-04 08:51:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:51:55 -参数 : []
2019-04-04 08:51:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:51:55 -==> Parameters: 
2019-04-04 08:51:55 -<==      Total: 3
2019-04-04 08:51:55 -耗时 : 5
2019-04-04 08:51:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:54:01 -请求地址 : http://localhost:8081/index
2019-04-04 08:54:01 -HTTP METHOD : GET
2019-04-04 08:54:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 08:54:01 -参数 : [{}]
2019-04-04 08:54:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 08:54:01 -==> Parameters: 1(Long)
2019-04-04 08:54:01 -<==      Total: 46
2019-04-04 08:54:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 08:54:01 -==> Parameters: 138(Long)
2019-04-04 08:54:01 -<==      Total: 1
2019-04-04 08:54:01 -耗时 : 42
2019-04-04 08:54:01 -返回值 : index_v1
2019-04-04 08:54:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:54:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 08:54:01.918(Timestamp)
2019-04-04 08:54:01 -请求地址 : http://localhost:8081/main
2019-04-04 08:54:01 -HTTP METHOD : GET
2019-04-04 08:54:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:54:01 -参数 : []
2019-04-04 08:54:01 -耗时 : 0
2019-04-04 08:54:01 -返回值 : main
2019-04-04 08:54:02 -<==    Updates: 1
2019-04-04 08:54:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 08:54:02 -HTTP METHOD : GET
2019-04-04 08:54:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 08:54:02 -参数 : []
2019-04-04 08:54:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 08:54:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 08:54:02 -<==      Total: 0
2019-04-04 08:54:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 08:54:02 -==> Parameters: 1(Long), 0(String)
2019-04-04 08:54:02 -<==      Total: 1
2019-04-04 08:54:02 -耗时 : 8
2019-04-04 08:54:02 -返回值 : com.bootdo.common.utils.PageUtils@87c09b8
2019-04-04 08:54:02 -请求地址 : http://localhost:8081/main
2019-04-04 08:54:02 -HTTP METHOD : GET
2019-04-04 08:54:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 08:54:02 -参数 : []
2019-04-04 08:54:02 -耗时 : 1
2019-04-04 08:54:02 -返回值 : main
2019-04-04 08:54:05 -请求地址 : http://localhost:8081/print/print
2019-04-04 08:54:05 -HTTP METHOD : GET
2019-04-04 08:54:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 08:54:05 -参数 : []
2019-04-04 08:54:05 -耗时 : 1
2019-04-04 08:54:05 -返回值 : print/print/print
2019-04-04 08:54:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:54:05 -HTTP METHOD : GET
2019-04-04 08:54:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:54:05 -参数 : [userType]
2019-04-04 08:54:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:54:05 -==> Parameters: userType(String)
2019-04-04 08:54:05 -<==      Total: 2
2019-04-04 08:54:05 -耗时 : 4
2019-04-04 08:54:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:54:05 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:54:05 -HTTP METHOD : GET
2019-04-04 08:54:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:54:05 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:54:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:54:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:54:05 -<==      Total: 3
2019-04-04 08:54:05 -==>  Preparing: select count(*) from print 
2019-04-04 08:54:05 -==> Parameters: 
2019-04-04 08:54:05 -<==      Total: 1
2019-04-04 08:54:05 -耗时 : 8
2019-04-04 08:54:05 -返回值 : com.bootdo.common.utils.PageUtils@10136beb
2019-04-04 08:54:07 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:54:07 -HTTP METHOD : GET
2019-04-04 08:54:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:54:07 -参数 : []
2019-04-04 08:54:07 -耗时 : 0
2019-04-04 08:54:07 -返回值 : print/print/add
2019-04-04 08:54:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:54:07 -HTTP METHOD : GET
2019-04-04 08:54:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:54:07 -参数 : [userType]
2019-04-04 08:54:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:54:07 -==> Parameters: userType(String)
2019-04-04 08:54:07 -<==      Total: 2
2019-04-04 08:54:07 -耗时 : 4
2019-04-04 08:54:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 08:54:38 -HTTP METHOD : GET
2019-04-04 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 08:54:38 -参数 : []
2019-04-04 08:54:38 -耗时 : 0
2019-04-04 08:54:38 -返回值 : system/dept/deptTree
2019-04-04 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 08:54:38 -HTTP METHOD : GET
2019-04-04 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 08:54:38 -参数 : []
2019-04-04 08:54:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 08:54:38 -==> Parameters: 
2019-04-04 08:54:38 -<==      Total: 3
2019-04-04 08:54:38 -耗时 : 6
2019-04-04 08:54:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 08:56:03 -请求地址 : http://localhost:8081/print/print/save
2019-04-04 08:56:03 -HTTP METHOD : POST
2019-04-04 08:56:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-04 08:56:03 -参数 : [2019-04-04 00:00:00, com.bootdo.print.domain.PrintDO@6e2c6c7e]
2019-04-04 08:56:03 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 08:56:03 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 111111(String), 111111(String), 111(Integer), 11111(BigDecimal), 111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 1111111111(String), 2019-04(String), 1(Long), 2019-04-04 08:56:03.58(Timestamp), 1(Long), (String)
2019-04-04 08:56:03 -<==    Updates: 1
2019-04-04 08:56:03 -耗时 : 55
2019-04-04 08:56:03 -返回值 : {msg=操作成功, code=0}
2019-04-04 08:56:03 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 08:56:03 -HTTP METHOD : GET
2019-04-04 08:56:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 08:56:03 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 08:56:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 08:56:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 08:56:03 -<==      Total: 4
2019-04-04 08:56:03 -==>  Preparing: select count(*) from print 
2019-04-04 08:56:03 -==> Parameters: 
2019-04-04 08:56:03 -<==      Total: 1
2019-04-04 08:56:03 -耗时 : 9
2019-04-04 08:56:03 -返回值 : com.bootdo.common.utils.PageUtils@7d5fd000
2019-04-04 08:56:10 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 08:56:10 -HTTP METHOD : GET
2019-04-04 08:56:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 08:56:10 -参数 : []
2019-04-04 08:56:10 -耗时 : 0
2019-04-04 08:56:10 -返回值 : print/print/add
2019-04-04 08:56:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:56:10 -HTTP METHOD : GET
2019-04-04 08:56:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:56:10 -参数 : [userType]
2019-04-04 08:56:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:56:10 -==> Parameters: userType(String)
2019-04-04 08:56:10 -<==      Total: 2
2019-04-04 08:56:10 -耗时 : 6
2019-04-04 08:56:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 08:57:09 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 08:57:09 -HTTP METHOD : GET
2019-04-04 08:57:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 08:57:09 -参数 : [4, {}]
2019-04-04 08:57:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 08:57:09 -==> Parameters: 4(Long)
2019-04-04 08:57:09 -<==      Total: 1
2019-04-04 08:57:09 -耗时 : 30
2019-04-04 08:57:09 -返回值 : print/print/edit
2019-04-04 08:57:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 08:57:09 -HTTP METHOD : GET
2019-04-04 08:57:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 08:57:09 -参数 : [userType]
2019-04-04 08:57:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 08:57:09 -==> Parameters: userType(String)
2019-04-04 08:57:09 -<==      Total: 2
2019-04-04 08:57:09 -耗时 : 3
2019-04-04 08:57:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:10:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-04-04 09:13:17 -请求地址 : http://localhost:8081/index
2019-04-04 09:13:17 -HTTP METHOD : GET
2019-04-04 09:13:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:13:17 -参数 : [{}]
2019-04-04 09:13:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:13:17 -==> Parameters: 1(Long)
2019-04-04 09:13:17 -<==      Total: 46
2019-04-04 09:13:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:13:17 -==> Parameters: 138(Long)
2019-04-04 09:13:17 -<==      Total: 1
2019-04-04 09:13:17 -耗时 : 25
2019-04-04 09:13:17 -返回值 : index_v1
2019-04-04 09:13:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:13:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:13:17.9(Timestamp)
2019-04-04 09:13:18 -<==    Updates: 1
2019-04-04 09:13:18 -请求地址 : http://localhost:8081/main
2019-04-04 09:13:18 -HTTP METHOD : GET
2019-04-04 09:13:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:13:18 -参数 : []
2019-04-04 09:13:18 -耗时 : 1
2019-04-04 09:13:18 -返回值 : main
2019-04-04 09:13:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:13:18 -HTTP METHOD : GET
2019-04-04 09:13:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:13:18 -参数 : []
2019-04-04 09:13:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:13:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:13:18 -<==      Total: 0
2019-04-04 09:13:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:13:18 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:13:18 -<==      Total: 1
2019-04-04 09:13:18 -耗时 : 6
2019-04-04 09:13:18 -返回值 : com.bootdo.common.utils.PageUtils@62f987a0
2019-04-04 09:13:18 -请求地址 : http://localhost:8081/main
2019-04-04 09:13:18 -HTTP METHOD : GET
2019-04-04 09:13:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:13:18 -参数 : []
2019-04-04 09:13:18 -耗时 : 1
2019-04-04 09:13:18 -返回值 : main
2019-04-04 09:13:55 -请求地址 : http://localhost:8081/common/long
2019-04-04 09:13:55 -HTTP METHOD : GET
2019-04-04 09:13:55 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-04-04 09:13:55 -参数 : []
2019-04-04 09:13:55 -耗时 : 0
2019-04-04 09:13:55 -返回值 : common/job/Long
2019-04-04 09:14:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:14:15 -==> Parameters: 1(Long)
2019-04-04 09:14:15 -<==      Total: 90
2019-04-04 09:14:15 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:14:15 -HTTP METHOD : GET
2019-04-04 09:14:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:14:15 -参数 : []
2019-04-04 09:14:15 -耗时 : 0
2019-04-04 09:14:15 -返回值 : print/print/print
2019-04-04 09:14:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:14:15 -HTTP METHOD : GET
2019-04-04 09:14:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:14:15 -参数 : [userType]
2019-04-04 09:14:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:14:15 -==> Parameters: userType(String)
2019-04-04 09:14:15 -<==      Total: 2
2019-04-04 09:14:15 -耗时 : 5
2019-04-04 09:14:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:14:15 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:14:15 -HTTP METHOD : GET
2019-04-04 09:14:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:14:15 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:14:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:14:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:14:15 -<==      Total: 4
2019-04-04 09:14:15 -==>  Preparing: select count(*) from print 
2019-04-04 09:14:15 -==> Parameters: 
2019-04-04 09:14:15 -<==      Total: 1
2019-04-04 09:14:15 -耗时 : 10
2019-04-04 09:14:15 -返回值 : com.bootdo.common.utils.PageUtils@41f22d60
2019-04-04 09:14:16 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:14:16 -HTTP METHOD : GET
2019-04-04 09:14:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:14:16 -参数 : [4, {}]
2019-04-04 09:14:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:14:16 -==> Parameters: 4(Long)
2019-04-04 09:14:16 -<==      Total: 1
2019-04-04 09:14:16 -耗时 : 5
2019-04-04 09:14:16 -返回值 : print/print/edit
2019-04-04 09:14:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:14:16 -HTTP METHOD : GET
2019-04-04 09:14:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:14:16 -参数 : [userType]
2019-04-04 09:14:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:14:16 -==> Parameters: userType(String)
2019-04-04 09:14:16 -<==      Total: 2
2019-04-04 09:14:16 -耗时 : 4
2019-04-04 09:14:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:14:22 -请求地址 : http://localhost:8081/index
2019-04-04 09:14:22 -HTTP METHOD : GET
2019-04-04 09:14:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:14:22 -参数 : [{}]
2019-04-04 09:14:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:14:22 -==> Parameters: 1(Long)
2019-04-04 09:14:22 -<==      Total: 46
2019-04-04 09:14:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:14:22 -==> Parameters: 138(Long)
2019-04-04 09:14:22 -<==      Total: 1
2019-04-04 09:14:22 -耗时 : 21
2019-04-04 09:14:22 -返回值 : index_v1
2019-04-04 09:14:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:14:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:14:22.267(Timestamp)
2019-04-04 09:14:22 -请求地址 : http://localhost:8081/main
2019-04-04 09:14:22 -HTTP METHOD : GET
2019-04-04 09:14:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:14:22 -参数 : []
2019-04-04 09:14:22 -耗时 : 1
2019-04-04 09:14:22 -返回值 : main
2019-04-04 09:14:22 -<==    Updates: 1
2019-04-04 09:14:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:14:22 -HTTP METHOD : GET
2019-04-04 09:14:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:14:22 -参数 : []
2019-04-04 09:14:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:14:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:14:22 -<==      Total: 0
2019-04-04 09:14:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:14:22 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:14:22 -<==      Total: 1
2019-04-04 09:14:22 -耗时 : 10
2019-04-04 09:14:22 -返回值 : com.bootdo.common.utils.PageUtils@38113369
2019-04-04 09:14:22 -请求地址 : http://localhost:8081/main
2019-04-04 09:14:22 -HTTP METHOD : GET
2019-04-04 09:14:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:14:22 -参数 : []
2019-04-04 09:14:22 -耗时 : 1
2019-04-04 09:14:22 -返回值 : main
2019-04-04 09:14:25 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:14:25 -HTTP METHOD : GET
2019-04-04 09:14:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:14:25 -参数 : []
2019-04-04 09:14:25 -耗时 : 1
2019-04-04 09:14:25 -返回值 : print/print/print
2019-04-04 09:14:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:14:26 -HTTP METHOD : GET
2019-04-04 09:14:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:14:26 -参数 : [userType]
2019-04-04 09:14:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:14:26 -==> Parameters: userType(String)
2019-04-04 09:14:26 -<==      Total: 2
2019-04-04 09:14:26 -耗时 : 4
2019-04-04 09:14:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:14:26 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:14:26 -HTTP METHOD : GET
2019-04-04 09:14:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:14:26 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:14:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:14:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:14:26 -<==      Total: 4
2019-04-04 09:14:26 -==>  Preparing: select count(*) from print 
2019-04-04 09:14:26 -==> Parameters: 
2019-04-04 09:14:26 -<==      Total: 1
2019-04-04 09:14:26 -耗时 : 11
2019-04-04 09:14:26 -返回值 : com.bootdo.common.utils.PageUtils@6b9fcb24
2019-04-04 09:14:27 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:14:27 -HTTP METHOD : GET
2019-04-04 09:14:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:14:27 -参数 : [4, {}]
2019-04-04 09:14:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:14:27 -==> Parameters: 4(Long)
2019-04-04 09:14:27 -<==      Total: 1
2019-04-04 09:14:27 -耗时 : 5
2019-04-04 09:14:27 -返回值 : print/print/edit
2019-04-04 09:14:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:14:27 -HTTP METHOD : GET
2019-04-04 09:14:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:14:27 -参数 : [userType]
2019-04-04 09:14:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:14:27 -==> Parameters: userType(String)
2019-04-04 09:14:27 -<==      Total: 2
2019-04-04 09:14:27 -耗时 : 7
2019-04-04 09:14:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:15:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 2484 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 09:15:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 09:15:11 -The following profiles are active: dev
2019-04-04 09:15:12 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 09:15:12 CST 2019]; root of context hierarchy
2019-04-04 09:15:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 09:15:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c84796a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$baa0c549] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 09:15:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 09:15:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:15:19 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 09:15:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 09:15:19 -Starting service [Tomcat]
2019-04-04 09:15:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 09:15:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 09:15:19 -Initializing Spring embedded WebApplicationContext
2019-04-04 09:15:19 -Root WebApplicationContext: initialization completed in 7789 ms
2019-04-04 09:15:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 09:15:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 09:15:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 09:15:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 09:15:20 -Filter xssFilter was not registered (disabled)
2019-04-04 09:15:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 09:15:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 09:15:20 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 09:15:20 -Servlet dispatcherServlet mapped to [/]
2019-04-04 09:15:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 09:15:12 CST 2019]; root of context hierarchy
2019-04-04 09:15:23 -Using default implementation for ThreadExecutor
2019-04-04 09:15:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 09:15:23 -Quartz Scheduler v.2.2.1 created.
2019-04-04 09:15:23 -RAMJobStore initialized.
2019-04-04 09:15:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 09:15:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 09:15:23 -Quartz scheduler version: 2.2.1
2019-04-04 09:15:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d1a859c
2019-04-04 09:15:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 09:15:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 09:15:26 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 09:15:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 09:15:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 09:15:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 09:15:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 09:15:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 09:15:26 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 09:15:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 09:15:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 09:15:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 09:15:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 09:15:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 09:15:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 09:15:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 09:15:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 09:15:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 09:15:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 09:15:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 09:15:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 09:15:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 09:15:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 09:15:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 09:15:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 09:15:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 09:15:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 09:15:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 09:15:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 09:15:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 09:15:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 09:15:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 09:15:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 09:15:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 09:15:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 09:15:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 09:15:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 09:15:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 09:15:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 09:15:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 09:15:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 09:15:27 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 09:15:27 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 09:15:27 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 09:15:27 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 09:15:27 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 09:15:27 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 09:15:27 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 09:15:27 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 09:15:27 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 09:15:27 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 09:15:27 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 09:15:27 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 09:15:27 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:15:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 09:15:27 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:15:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 09:15:27 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 09:15:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 09:15:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 09:15:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 09:15:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 09:15:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 09:15:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 09:15:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 09:15:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 09:15:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 09:15:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 09:15:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 09:15:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 09:15:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 09:15:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 09:15:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 09:15:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 09:15:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 09:15:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 09:15:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 09:15:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 09:15:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 09:15:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 09:15:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 09:15:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 09:15:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 09:15:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 09:15:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 09:15:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 09:15:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 09:15:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 09:15:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 09:15:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 09:15:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 09:15:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 09:15:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 09:15:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 09:15:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:15:27 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:15:27 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 09:15:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 09:15:27 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 09:15:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:15:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 09:15:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 09:15:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 09:15:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 09:15:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 09:15:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 09:15:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:15:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 09:15:12 CST 2019]; root of context hierarchy
2019-04-04 09:15:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:15:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:15:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:15:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 09:15:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 09:15:31 -Registering beans for JMX exposure on startup
2019-04-04 09:15:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 09:15:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 09:15:31 -Starting beans in phase 2147483647
2019-04-04 09:15:31 -Context refreshed
2019-04-04 09:15:31 -Found 1 custom documentation plugin(s)
2019-04-04 09:15:31 -Scanning for api listing references
2019-04-04 09:15:32 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 09:15:32 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 09:15:32 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 09:15:32 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 09:15:32 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 09:15:32 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 09:15:32 -Generating unique operation named: removeUsingPOST_1
2019-04-04 09:15:33 -Generating unique operation named: addUsingGET_1
2019-04-04 09:15:33 -Generating unique operation named: editUsingGET_1
2019-04-04 09:15:33 -Generating unique operation named: listUsingGET_1
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_2
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_3
2019-04-04 09:15:33 -Generating unique operation named: saveUsingPOST_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingGET_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPOST_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPUT_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 09:15:33 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 09:15:33 -Generating unique operation named: addUsingGET_2
2019-04-04 09:15:33 -Generating unique operation named: editUsingGET_2
2019-04-04 09:15:33 -Generating unique operation named: listUsingGET_2
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_4
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_5
2019-04-04 09:15:33 -Generating unique operation named: saveUsingPOST_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPOST_2
2019-04-04 09:15:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 09:15:33 -Generating unique operation named: addUsingGET_3
2019-04-04 09:15:33 -Generating unique operation named: editUsingGET_3
2019-04-04 09:15:33 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 09:15:33 -Generating unique operation named: listUsingGET_3
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_6
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_7
2019-04-04 09:15:33 -Generating unique operation named: saveUsingPOST_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingGET_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPOST_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPUT_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 09:15:33 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 09:15:33 -Generating unique operation named: addUsingGET_4
2019-04-04 09:15:33 -Generating unique operation named: editUsingGET_4
2019-04-04 09:15:33 -Generating unique operation named: listUsingGET_4
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_8
2019-04-04 09:15:33 -Generating unique operation named: removeUsingPOST_9
2019-04-04 09:15:33 -Generating unique operation named: saveUsingPOST_4
2019-04-04 09:15:33 -Generating unique operation named: updateUsingGET_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPOST_4
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPUT_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 09:15:33 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 09:15:33 -Generating unique operation named: ElecUsingGET_1
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_5
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_5
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_5
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_10
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_11
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingGET_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPUT_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 09:15:34 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_6
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_6
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_6
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_7
2019-04-04 09:15:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_7
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_12
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_13
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingGET_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPUT_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 09:15:34 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 09:15:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_7
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_8
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_8
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_14
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_15
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingGET_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_8
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPUT_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 09:15:34 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_8
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_9
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_9
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_16
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_17
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_8
2019-04-04 09:15:34 -Generating unique operation named: updateUsingGET_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_9
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPUT_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 09:15:34 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_9
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_10
2019-04-04 09:15:34 -Generating unique operation named: infoUsingGET_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingPOST_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingPUT_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 09:15:34 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_10
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_18
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_19
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_9
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_10
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_11
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_20
2019-04-04 09:15:34 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_10
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_11
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_12
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_21
2019-04-04 09:15:34 -Generating unique operation named: saveUsingPOST_10
2019-04-04 09:15:34 -Generating unique operation named: treeUsingGET_1
2019-04-04 09:15:34 -Generating unique operation named: treeUsingGET_2
2019-04-04 09:15:34 -Generating unique operation named: updateUsingPOST_11
2019-04-04 09:15:34 -Generating unique operation named: addUsingGET_11
2019-04-04 09:15:34 -Generating unique operation named: editUsingGET_12
2019-04-04 09:15:34 -Generating unique operation named: listUsingGET_13
2019-04-04 09:15:34 -Generating unique operation named: removeUsingPOST_22
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_23
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingGET_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPUT_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 09:15:35 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_12
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_13
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_14
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_24
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_25
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingGET_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_13
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPUT_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 09:15:35 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_13
2019-04-04 09:15:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_14
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_15
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_13
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_14
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_14
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_16
2019-04-04 09:15:35 -Generating unique operation named: listUsingHEAD_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingPOST_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingPUT_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingPATCH_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingDELETE_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 09:15:35 -Generating unique operation named: listUsingTRACE_1
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_14
2019-04-04 09:15:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_15
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_17
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_26
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_15
2019-04-04 09:15:35 -Generating unique operation named: treeUsingGET_3
2019-04-04 09:15:35 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_15
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_15
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_16
2019-04-04 09:15:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_18
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_27
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_28
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_16
2019-04-04 09:15:35 -Generating unique operation named: updateUsingGET_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_16
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPUT_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 09:15:35 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 09:15:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_16
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_17
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_19
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_29
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_30
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_17
2019-04-04 09:15:35 -Generating unique operation named: updateUsingGET_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_17
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPUT_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 09:15:35 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 09:15:35 -Generating unique operation named: addUsingGET_17
2019-04-04 09:15:35 -Generating unique operation named: editUsingGET_18
2019-04-04 09:15:35 -Generating unique operation named: listUsingGET_20
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_31
2019-04-04 09:15:35 -Generating unique operation named: removeUsingPOST_32
2019-04-04 09:15:35 -Generating unique operation named: saveUsingPOST_18
2019-04-04 09:15:35 -Generating unique operation named: updateUsingGET_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPOST_18
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPUT_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 09:15:35 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 09:15:35 -Starting Quartz Scheduler now
2019-04-04 09:15:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 09:15:35 -Starting...
2019-04-04 09:15:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 09:15:35 -Started.
2019-04-04 09:15:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 09:15:35 -Using a shared selector for servlet write/read
2019-04-04 09:15:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 09:15:35 -Started BootdoApplication in 25.541 seconds (JVM running for 26.398)
2019-04-04 09:15:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 09:15:36 -==> Parameters: 
2019-04-04 09:15:36 -<==      Total: 1
2019-04-04 09:16:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 09:16:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 09:16:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-04-04 09:16:00 -Enabling session validation scheduler...
2019-04-04 09:16:00 -请求地址 : http://localhost:8081/login;JSESSIONID=80fa90cc-01af-40f2-859a-8850af8d97ee
2019-04-04 09:16:00 -HTTP METHOD : GET
2019-04-04 09:16:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:16:00 -参数 : [{}]
2019-04-04 09:16:00 -耗时 : 6
2019-04-04 09:16:00 -返回值 : login
2019-04-04 09:16:02 -请求地址 : http://localhost:8081/getVerify
2019-04-04 09:16:02 -HTTP METHOD : GET
2019-04-04 09:16:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 09:16:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@59e820b8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30f17570]
2019-04-04 09:16:02 -6435
2019-04-04 09:16:02 -耗时 : 583
2019-04-04 09:16:02 -返回值 : null
2019-04-04 09:16:11 -请求地址 : http://localhost:8081/login
2019-04-04 09:16:11 -HTTP METHOD : POST
2019-04-04 09:16:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 09:16:11 -参数 : [admin, 111111, 6435, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6667e0ec]
2019-04-04 09:16:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 09:16:11 -==> Parameters: admin(String)
2019-04-04 09:16:11 -<==      Total: 1
2019-04-04 09:16:11 -耗时 : 133
2019-04-04 09:16:11 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:16:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 09:16:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:16:11 -==> Parameters: 1(Long), admin(String), 登录(String), 133(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 09:16:11.563(Timestamp)
2019-04-04 09:16:11 -请求地址 : http://localhost:8081/index
2019-04-04 09:16:11 -HTTP METHOD : GET
2019-04-04 09:16:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:16:11 -参数 : [{}]
2019-04-04 09:16:11 -<==    Updates: 1
2019-04-04 09:16:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:16:11 -==> Parameters: 1(Long)
2019-04-04 09:16:12 -<==      Total: 46
2019-04-04 09:16:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:16:12 -==> Parameters: 138(Long)
2019-04-04 09:16:12 -<==      Total: 1
2019-04-04 09:16:12 -耗时 : 396
2019-04-04 09:16:12 -返回值 : index_v1
2019-04-04 09:16:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:16:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 396(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:16:12.125(Timestamp)
2019-04-04 09:16:12 -<==    Updates: 1
2019-04-04 09:16:12 -请求地址 : http://localhost:8081/main
2019-04-04 09:16:12 -HTTP METHOD : GET
2019-04-04 09:16:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:16:12 -参数 : []
2019-04-04 09:16:12 -耗时 : 1
2019-04-04 09:16:12 -返回值 : main
2019-04-04 09:16:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:16:12 -HTTP METHOD : GET
2019-04-04 09:16:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:16:12 -参数 : []
2019-04-04 09:16:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:16:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:16:12 -<==      Total: 0
2019-04-04 09:16:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:16:12 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:16:12 -<==      Total: 1
2019-04-04 09:16:12 -耗时 : 118
2019-04-04 09:16:12 -返回值 : com.bootdo.common.utils.PageUtils@1aa34528
2019-04-04 09:16:12 -请求地址 : http://localhost:8081/main
2019-04-04 09:16:12 -HTTP METHOD : GET
2019-04-04 09:16:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:16:12 -参数 : []
2019-04-04 09:16:12 -耗时 : 1
2019-04-04 09:16:12 -返回值 : main
2019-04-04 09:16:28 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-04 09:16:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:16:29 -==> Parameters: 1(Long)
2019-04-04 09:16:29 -<==      Total: 90
2019-04-04 09:16:29 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:16:29 -HTTP METHOD : GET
2019-04-04 09:16:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:16:29 -参数 : []
2019-04-04 09:16:29 -耗时 : 0
2019-04-04 09:16:29 -返回值 : print/print/print
2019-04-04 09:16:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:16:30 -HTTP METHOD : GET
2019-04-04 09:16:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:16:30 -参数 : [userType]
2019-04-04 09:16:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:16:30 -==> Parameters: userType(String)
2019-04-04 09:16:30 -<==      Total: 2
2019-04-04 09:16:30 -耗时 : 32
2019-04-04 09:16:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:16:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:16:30 -HTTP METHOD : GET
2019-04-04 09:16:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:16:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:16:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:16:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:16:30 -<==      Total: 4
2019-04-04 09:16:30 -==>  Preparing: select count(*) from print 
2019-04-04 09:16:30 -==> Parameters: 
2019-04-04 09:16:30 -<==      Total: 1
2019-04-04 09:16:30 -耗时 : 58
2019-04-04 09:16:30 -返回值 : com.bootdo.common.utils.PageUtils@3ca555f0
2019-04-04 09:16:31 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:16:31 -HTTP METHOD : GET
2019-04-04 09:16:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:16:31 -参数 : [4, {}]
2019-04-04 09:16:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:16:31 -==> Parameters: 4(Long)
2019-04-04 09:16:31 -<==      Total: 1
2019-04-04 09:16:31 -耗时 : 20
2019-04-04 09:16:31 -返回值 : print/print/edit
2019-04-04 09:16:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:16:32 -HTTP METHOD : GET
2019-04-04 09:16:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:16:32 -参数 : [userType]
2019-04-04 09:16:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:16:32 -==> Parameters: userType(String)
2019-04-04 09:16:32 -<==      Total: 2
2019-04-04 09:16:32 -耗时 : 9
2019-04-04 09:16:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:17:47 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:17:47 -HTTP METHOD : GET
2019-04-04 09:17:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:17:47 -参数 : []
2019-04-04 09:17:47 -耗时 : 0
2019-04-04 09:17:47 -返回值 : print/print/add
2019-04-04 09:17:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:17:47 -HTTP METHOD : GET
2019-04-04 09:17:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:17:47 -参数 : [userType]
2019-04-04 09:17:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:17:47 -==> Parameters: userType(String)
2019-04-04 09:17:47 -<==      Total: 2
2019-04-04 09:17:47 -耗时 : 10
2019-04-04 09:17:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:17:52 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:17:52 -HTTP METHOD : GET
2019-04-04 09:17:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:17:52 -参数 : [1, {}]
2019-04-04 09:17:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:17:52 -==> Parameters: 1(Long)
2019-04-04 09:17:52 -<==      Total: 1
2019-04-04 09:17:52 -耗时 : 11
2019-04-04 09:17:52 -返回值 : print/print/edit
2019-04-04 09:17:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:17:52 -HTTP METHOD : GET
2019-04-04 09:17:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:17:52 -参数 : [userType]
2019-04-04 09:17:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:17:52 -==> Parameters: userType(String)
2019-04-04 09:17:52 -<==      Total: 2
2019-04-04 09:17:52 -耗时 : 9
2019-04-04 09:17:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:18:07 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 09:18:07 -HTTP METHOD : POST
2019-04-04 09:18:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 09:18:07 -参数 : [com.bootdo.print.domain.PrintDO@374ce326]
2019-04-04 09:18:07 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 09:18:07 -==> Parameters: 1-0001(String), 张三(String), A(String), 2(String), 100(String), 200(String), 1(Integer), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1.00(BigDecimal), 1(BigDecimal), 100.00(BigDecimal), 0(String), 收费主管(String), 2019-02(String), 2019-04-04 09:18:07.522(Timestamp), 1(Long), (String), 1(Long)
2019-04-04 09:18:07 -<==    Updates: 1
2019-04-04 09:18:07 -耗时 : 276
2019-04-04 09:18:07 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:18:07 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:18:07 -HTTP METHOD : GET
2019-04-04 09:18:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:18:07 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:18:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:18:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:18:07 -<==      Total: 4
2019-04-04 09:18:07 -==>  Preparing: select count(*) from print 
2019-04-04 09:18:07 -==> Parameters: 
2019-04-04 09:18:07 -<==      Total: 1
2019-04-04 09:18:07 -耗时 : 26
2019-04-04 09:18:07 -返回值 : com.bootdo.common.utils.PageUtils@ad454da
2019-04-04 09:18:38 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:18:38 -HTTP METHOD : GET
2019-04-04 09:18:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:18:38 -参数 : []
2019-04-04 09:18:38 -耗时 : 1
2019-04-04 09:18:38 -返回值 : print/print/add
2019-04-04 09:18:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:18:38 -HTTP METHOD : GET
2019-04-04 09:18:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:18:38 -参数 : [userType]
2019-04-04 09:18:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:18:38 -==> Parameters: userType(String)
2019-04-04 09:18:38 -<==      Total: 2
2019-04-04 09:18:38 -耗时 : 4
2019-04-04 09:18:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:18:54 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:18:54 -HTTP METHOD : GET
2019-04-04 09:18:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:18:54 -参数 : [1, {}]
2019-04-04 09:18:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:18:54 -==> Parameters: 1(Long)
2019-04-04 09:18:54 -<==      Total: 1
2019-04-04 09:18:54 -耗时 : 6
2019-04-04 09:18:54 -返回值 : print/print/edit
2019-04-04 09:18:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:18:55 -HTTP METHOD : GET
2019-04-04 09:18:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:18:55 -参数 : [userType]
2019-04-04 09:18:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:18:55 -==> Parameters: userType(String)
2019-04-04 09:18:55 -<==      Total: 2
2019-04-04 09:18:55 -耗时 : 5
2019-04-04 09:18:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:20:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 1912 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 09:20:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 09:20:49 -The following profiles are active: dev
2019-04-04 09:20:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 09:20:49 CST 2019]; root of context hierarchy
2019-04-04 09:20:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 09:20:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adaffbcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a0092a74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 09:20:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 09:20:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 09:20:56 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 09:20:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 09:20:56 -Starting service [Tomcat]
2019-04-04 09:20:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 09:20:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 09:20:56 -Initializing Spring embedded WebApplicationContext
2019-04-04 09:20:56 -Root WebApplicationContext: initialization completed in 6915 ms
2019-04-04 09:20:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 09:20:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 09:20:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 09:20:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 09:20:56 -Filter xssFilter was not registered (disabled)
2019-04-04 09:20:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 09:20:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 09:20:56 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 09:20:56 -Servlet dispatcherServlet mapped to [/]
2019-04-04 09:20:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 09:20:49 CST 2019]; root of context hierarchy
2019-04-04 09:20:59 -Using default implementation for ThreadExecutor
2019-04-04 09:20:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 09:20:59 -Quartz Scheduler v.2.2.1 created.
2019-04-04 09:20:59 -RAMJobStore initialized.
2019-04-04 09:20:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 09:20:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 09:20:59 -Quartz scheduler version: 2.2.1
2019-04-04 09:20:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a45afd4
2019-04-04 09:21:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 09:21:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 09:21:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 09:21:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 09:21:02 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 09:21:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 09:21:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 09:21:02 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 09:21:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 09:21:02 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 09:21:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 09:21:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 09:21:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 09:21:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 09:21:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 09:21:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 09:21:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 09:21:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 09:21:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 09:21:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 09:21:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 09:21:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 09:21:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 09:21:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 09:21:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 09:21:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 09:21:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 09:21:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 09:21:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 09:21:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 09:21:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 09:21:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 09:21:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 09:21:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 09:21:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 09:21:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 09:21:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 09:21:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 09:21:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 09:21:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 09:21:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 09:21:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 09:21:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 09:21:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:21:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 09:21:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:21:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 09:21:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 09:21:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 09:21:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 09:21:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 09:21:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 09:21:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 09:21:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 09:21:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 09:21:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 09:21:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 09:21:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 09:21:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 09:21:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 09:21:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 09:21:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 09:21:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 09:21:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 09:21:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 09:21:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 09:21:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 09:21:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 09:21:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 09:21:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 09:21:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 09:21:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 09:21:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 09:21:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 09:21:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 09:21:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 09:21:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 09:21:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 09:21:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 09:21:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 09:21:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 09:21:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 09:21:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 09:21:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 09:21:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 09:21:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 09:21:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 09:21:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 09:21:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 09:21:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 09:21:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 09:21:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 09:21:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 09:21:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 09:21:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 09:21:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 09:21:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 09:21:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 09:21:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:21:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 09:20:49 CST 2019]; root of context hierarchy
2019-04-04 09:21:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:21:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:21:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 09:21:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 09:21:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 09:21:05 -Registering beans for JMX exposure on startup
2019-04-04 09:21:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 09:21:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 09:21:05 -Starting beans in phase 2147483647
2019-04-04 09:21:05 -Context refreshed
2019-04-04 09:21:05 -Found 1 custom documentation plugin(s)
2019-04-04 09:21:05 -Scanning for api listing references
2019-04-04 09:21:06 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 09:21:06 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 09:21:06 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 09:21:06 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 09:21:06 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_1
2019-04-04 09:21:06 -Generating unique operation named: addUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_2
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_3
2019-04-04 09:21:06 -Generating unique operation named: saveUsingPOST_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPUT_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 09:21:06 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 09:21:06 -Generating unique operation named: addUsingGET_2
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_2
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_2
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_4
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_5
2019-04-04 09:21:06 -Generating unique operation named: saveUsingPOST_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_2
2019-04-04 09:21:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: addUsingGET_3
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_3
2019-04-04 09:21:06 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_3
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_6
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_7
2019-04-04 09:21:06 -Generating unique operation named: saveUsingPOST_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingGET_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPUT_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 09:21:06 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 09:21:06 -Generating unique operation named: addUsingGET_4
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_4
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_4
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_8
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_9
2019-04-04 09:21:06 -Generating unique operation named: saveUsingPOST_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingGET_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPUT_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 09:21:06 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 09:21:06 -Generating unique operation named: ElecUsingGET_1
2019-04-04 09:21:06 -Generating unique operation named: addUsingGET_5
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_5
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_5
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_10
2019-04-04 09:21:06 -Generating unique operation named: removeUsingPOST_11
2019-04-04 09:21:06 -Generating unique operation named: saveUsingPOST_5
2019-04-04 09:21:06 -Generating unique operation named: updateUsingGET_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_5
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPUT_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 09:21:06 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 09:21:06 -Generating unique operation named: editUsingGET_6
2019-04-04 09:21:06 -Generating unique operation named: listUsingGET_6
2019-04-04 09:21:06 -Generating unique operation named: updateUsingPOST_6
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_6
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_7
2019-04-04 09:21:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_7
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_12
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_13
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 09:21:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_7
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_8
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_8
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_14
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_15
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_8
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_9
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_9
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_16
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_17
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_9
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_10
2019-04-04 09:21:07 -Generating unique operation named: infoUsingGET_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingPOST_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingPUT_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 09:21:07 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_10
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_18
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_19
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_10
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_11
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_20
2019-04-04 09:21:07 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_10
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_11
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_12
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_21
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_10
2019-04-04 09:21:07 -Generating unique operation named: treeUsingGET_1
2019-04-04 09:21:07 -Generating unique operation named: treeUsingGET_2
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_11
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_11
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_12
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_13
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_22
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_23
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_11
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_12
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_12
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_13
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_14
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_24
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_25
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_12
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_13
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_13
2019-04-04 09:21:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_14
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_15
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_13
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_14
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_14
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_16
2019-04-04 09:21:07 -Generating unique operation named: listUsingHEAD_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingPOST_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingPUT_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingPATCH_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingDELETE_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 09:21:07 -Generating unique operation named: listUsingTRACE_1
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_14
2019-04-04 09:21:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_15
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_17
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_26
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_15
2019-04-04 09:21:07 -Generating unique operation named: treeUsingGET_3
2019-04-04 09:21:07 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_15
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_15
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_16
2019-04-04 09:21:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_18
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_27
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_28
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_16
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPOST_16
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPUT_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 09:21:07 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 09:21:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 09:21:07 -Generating unique operation named: addUsingGET_16
2019-04-04 09:21:07 -Generating unique operation named: editUsingGET_17
2019-04-04 09:21:07 -Generating unique operation named: listUsingGET_19
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_29
2019-04-04 09:21:07 -Generating unique operation named: removeUsingPOST_30
2019-04-04 09:21:07 -Generating unique operation named: saveUsingPOST_17
2019-04-04 09:21:07 -Generating unique operation named: updateUsingGET_11
2019-04-04 09:21:07 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPOST_17
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPUT_11
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 09:21:08 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 09:21:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 09:21:08 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 09:21:08 -Generating unique operation named: addUsingGET_17
2019-04-04 09:21:08 -Generating unique operation named: editUsingGET_18
2019-04-04 09:21:08 -Generating unique operation named: listUsingGET_20
2019-04-04 09:21:08 -Generating unique operation named: removeUsingPOST_31
2019-04-04 09:21:08 -Generating unique operation named: removeUsingPOST_32
2019-04-04 09:21:08 -Generating unique operation named: saveUsingPOST_18
2019-04-04 09:21:08 -Generating unique operation named: updateUsingGET_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPOST_18
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPUT_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 09:21:08 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 09:21:08 -Starting Quartz Scheduler now
2019-04-04 09:21:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 09:21:08 -Starting...
2019-04-04 09:21:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 09:21:08 -Started.
2019-04-04 09:21:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 09:21:08 -Using a shared selector for servlet write/read
2019-04-04 09:21:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 09:21:08 -Started BootdoApplication in 19.8 seconds (JVM running for 20.601)
2019-04-04 09:21:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 09:21:08 -==> Parameters: 
2019-04-04 09:21:08 -<==      Total: 1
2019-04-04 09:22:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-04 09:22:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 09:22:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 09:22:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-04-04 09:22:11 -Enabling session validation scheduler...
2019-04-04 09:22:11 -请求地址 : http://localhost:8081/login;JSESSIONID=33a2768a-64ba-4c24-84fa-0b3be63a5d44
2019-04-04 09:22:11 -HTTP METHOD : GET
2019-04-04 09:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:22:11 -参数 : [{}]
2019-04-04 09:22:11 -耗时 : 5
2019-04-04 09:22:11 -返回值 : login
2019-04-04 09:22:12 -请求地址 : http://localhost:8081/login;JSESSIONID=33a2768a-64ba-4c24-84fa-0b3be63a5d44
2019-04-04 09:22:12 -HTTP METHOD : GET
2019-04-04 09:22:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:22:12 -参数 : [{}]
2019-04-04 09:22:12 -耗时 : 1
2019-04-04 09:22:12 -返回值 : login
2019-04-04 09:22:13 -请求地址 : http://localhost:8081/getVerify
2019-04-04 09:22:13 -HTTP METHOD : GET
2019-04-04 09:22:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 09:22:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@376ba7e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2331bcdd]
2019-04-04 09:22:13 -请求地址 : http://localhost:8081/getVerify
2019-04-04 09:22:13 -HTTP METHOD : GET
2019-04-04 09:22:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 09:22:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3271b5d2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27e75fd2]
2019-04-04 09:22:13 -2753
2019-04-04 09:22:13 -9374
2019-04-04 09:22:14 -耗时 : 867
2019-04-04 09:22:14 -耗时 : 555
2019-04-04 09:22:14 -返回值 : null
2019-04-04 09:22:14 -返回值 : null
2019-04-04 09:22:14 -请求地址 : http://localhost:8081/login
2019-04-04 09:22:14 -HTTP METHOD : GET
2019-04-04 09:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:22:14 -参数 : [{}]
2019-04-04 09:22:14 -耗时 : 0
2019-04-04 09:22:14 -返回值 : login
2019-04-04 09:22:28 -请求地址 : http://localhost:8081/login
2019-04-04 09:22:28 -HTTP METHOD : POST
2019-04-04 09:22:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 09:22:28 -参数 : [admin, 111111, 2753, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4827b7c]
2019-04-04 09:22:28 -耗时 : 13
2019-04-04 09:22:28 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-04 09:22:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 09:22:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:22:29 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 09:22:29.083(Timestamp)
2019-04-04 09:22:29 -<==    Updates: 1
2019-04-04 09:22:33 -请求地址 : http://localhost:8081/login;JSESSIONID=33a2768a-64ba-4c24-84fa-0b3be63a5d44
2019-04-04 09:22:33 -HTTP METHOD : GET
2019-04-04 09:22:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:22:33 -参数 : [{}]
2019-04-04 09:22:33 -耗时 : 1
2019-04-04 09:22:33 -返回值 : login
2019-04-04 09:22:34 -请求地址 : http://localhost:8081/getVerify
2019-04-04 09:22:34 -HTTP METHOD : GET
2019-04-04 09:22:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 09:22:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1bfb4ba8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f0447f3]
2019-04-04 09:22:34 -7197
2019-04-04 09:22:34 -耗时 : 50
2019-04-04 09:22:34 -返回值 : null
2019-04-04 09:22:34 -请求地址 : http://localhost:8081/login
2019-04-04 09:22:34 -HTTP METHOD : GET
2019-04-04 09:22:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 09:22:34 -参数 : [{}]
2019-04-04 09:22:34 -耗时 : 1
2019-04-04 09:22:34 -返回值 : login
2019-04-04 09:22:39 -请求地址 : http://localhost:8081/login
2019-04-04 09:22:39 -HTTP METHOD : POST
2019-04-04 09:22:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 09:22:39 -参数 : [admin, 111111, 7197, org.apache.shiro.web.servlet.ShiroHttpServletRequest@12e6f32f]
2019-04-04 09:22:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 09:22:39 -==> Parameters: admin(String)
2019-04-04 09:22:39 -<==      Total: 1
2019-04-04 09:22:39 -耗时 : 68
2019-04-04 09:22:39 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:22:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:22:39 -==> Parameters: 1(Long), admin(String), 登录(String), 68(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 09:22:39.799(Timestamp)
2019-04-04 09:22:39 -请求地址 : http://localhost:8081/index
2019-04-04 09:22:39 -HTTP METHOD : GET
2019-04-04 09:22:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:22:39 -参数 : [{}]
2019-04-04 09:22:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:22:39 -==> Parameters: 1(Long)
2019-04-04 09:22:39 -<==    Updates: 1
2019-04-04 09:22:39 -<==      Total: 46
2019-04-04 09:22:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:22:39 -==> Parameters: 138(Long)
2019-04-04 09:22:39 -<==      Total: 1
2019-04-04 09:22:39 -耗时 : 147
2019-04-04 09:22:39 -返回值 : index_v1
2019-04-04 09:22:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:22:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 147(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:22:40.015(Timestamp)
2019-04-04 09:22:40 -<==    Updates: 1
2019-04-04 09:22:40 -请求地址 : http://localhost:8081/main
2019-04-04 09:22:40 -HTTP METHOD : GET
2019-04-04 09:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:22:40 -参数 : []
2019-04-04 09:22:40 -耗时 : 0
2019-04-04 09:22:40 -返回值 : main
2019-04-04 09:22:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:22:40 -HTTP METHOD : GET
2019-04-04 09:22:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:22:40 -参数 : []
2019-04-04 09:22:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:22:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:22:40 -<==      Total: 0
2019-04-04 09:22:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:22:40 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:22:40 -<==      Total: 1
2019-04-04 09:22:40 -耗时 : 41
2019-04-04 09:22:40 -返回值 : com.bootdo.common.utils.PageUtils@ea34f
2019-04-04 09:22:40 -请求地址 : http://localhost:8081/main
2019-04-04 09:22:40 -HTTP METHOD : GET
2019-04-04 09:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:22:40 -参数 : []
2019-04-04 09:22:40 -耗时 : 1
2019-04-04 09:22:40 -返回值 : main
2019-04-04 09:22:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:22:52 -==> Parameters: 1(Long)
2019-04-04 09:22:52 -<==      Total: 90
2019-04-04 09:22:52 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:22:52 -HTTP METHOD : GET
2019-04-04 09:22:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:22:52 -参数 : []
2019-04-04 09:22:52 -耗时 : 0
2019-04-04 09:22:52 -返回值 : print/print/print
2019-04-04 09:22:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:22:53 -HTTP METHOD : GET
2019-04-04 09:22:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:22:53 -参数 : [userType]
2019-04-04 09:22:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:22:53 -==> Parameters: userType(String)
2019-04-04 09:22:53 -<==      Total: 2
2019-04-04 09:22:53 -耗时 : 24
2019-04-04 09:22:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:22:53 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:22:53 -HTTP METHOD : GET
2019-04-04 09:22:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:22:53 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:22:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:22:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:22:53 -<==      Total: 4
2019-04-04 09:22:53 -==>  Preparing: select count(*) from print 
2019-04-04 09:22:53 -==> Parameters: 
2019-04-04 09:22:53 -<==      Total: 1
2019-04-04 09:22:53 -耗时 : 48
2019-04-04 09:22:53 -返回值 : com.bootdo.common.utils.PageUtils@513edc8e
2019-04-04 09:22:57 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:22:57 -HTTP METHOD : GET
2019-04-04 09:22:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:22:57 -参数 : [4, {}]
2019-04-04 09:22:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:22:57 -==> Parameters: 4(Long)
2019-04-04 09:22:57 -<==      Total: 1
2019-04-04 09:22:57 -耗时 : 19
2019-04-04 09:22:57 -返回值 : print/print/edit
2019-04-04 09:22:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:22:57 -HTTP METHOD : GET
2019-04-04 09:22:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:22:57 -参数 : [userType]
2019-04-04 09:22:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:22:57 -==> Parameters: userType(String)
2019-04-04 09:22:57 -<==      Total: 2
2019-04-04 09:22:57 -耗时 : 9
2019-04-04 09:22:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:23:42 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:23:42 -HTTP METHOD : GET
2019-04-04 09:23:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:23:42 -参数 : []
2019-04-04 09:23:42 -耗时 : 1
2019-04-04 09:23:42 -返回值 : print/print/add
2019-04-04 09:23:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:23:42 -HTTP METHOD : GET
2019-04-04 09:23:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:23:42 -参数 : [userType]
2019-04-04 09:23:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:23:42 -==> Parameters: userType(String)
2019-04-04 09:23:42 -<==      Total: 2
2019-04-04 09:23:42 -耗时 : 17
2019-04-04 09:23:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:33:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:33:16 -==> Parameters: 1(Long)
2019-04-04 09:33:16 -<==      Total: 90
2019-04-04 09:33:16 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:33:16 -HTTP METHOD : GET
2019-04-04 09:33:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:33:16 -参数 : [4, {}]
2019-04-04 09:33:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:33:16 -==> Parameters: 4(Long)
2019-04-04 09:33:16 -<==      Total: 1
2019-04-04 09:33:16 -耗时 : 8
2019-04-04 09:33:16 -返回值 : print/print/edit
2019-04-04 09:33:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:33:17 -HTTP METHOD : GET
2019-04-04 09:33:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:33:17 -参数 : [userType]
2019-04-04 09:33:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:33:17 -==> Parameters: userType(String)
2019-04-04 09:33:17 -<==      Total: 2
2019-04-04 09:33:17 -耗时 : 11
2019-04-04 09:33:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:39:01 -请求地址 : http://localhost:8081/index
2019-04-04 09:39:01 -HTTP METHOD : GET
2019-04-04 09:39:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:39:01 -参数 : [{}]
2019-04-04 09:39:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:39:01 -==> Parameters: 1(Long)
2019-04-04 09:39:01 -<==      Total: 46
2019-04-04 09:39:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:39:01 -==> Parameters: 138(Long)
2019-04-04 09:39:01 -<==      Total: 1
2019-04-04 09:39:01 -耗时 : 31
2019-04-04 09:39:01 -返回值 : index_v1
2019-04-04 09:39:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:39:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:39:01.792(Timestamp)
2019-04-04 09:39:01 -<==    Updates: 1
2019-04-04 09:39:01 -请求地址 : http://localhost:8081/main
2019-04-04 09:39:01 -HTTP METHOD : GET
2019-04-04 09:39:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:39:01 -参数 : []
2019-04-04 09:39:02 -耗时 : 104
2019-04-04 09:39:02 -返回值 : main
2019-04-04 09:39:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:39:02 -HTTP METHOD : GET
2019-04-04 09:39:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:39:02 -参数 : []
2019-04-04 09:39:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:39:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:39:02 -<==      Total: 0
2019-04-04 09:39:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:39:02 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:39:02 -<==      Total: 1
2019-04-04 09:39:02 -耗时 : 10
2019-04-04 09:39:02 -返回值 : com.bootdo.common.utils.PageUtils@42067e5
2019-04-04 09:39:02 -请求地址 : http://localhost:8081/main
2019-04-04 09:39:02 -HTTP METHOD : GET
2019-04-04 09:39:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:39:02 -参数 : []
2019-04-04 09:39:02 -耗时 : 1
2019-04-04 09:39:02 -返回值 : main
2019-04-04 09:39:03 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:39:03 -HTTP METHOD : GET
2019-04-04 09:39:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:39:03 -参数 : []
2019-04-04 09:39:03 -耗时 : 1
2019-04-04 09:39:03 -返回值 : print/print/print
2019-04-04 09:39:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:39:04 -HTTP METHOD : GET
2019-04-04 09:39:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:39:04 -参数 : [userType]
2019-04-04 09:39:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:39:04 -==> Parameters: userType(String)
2019-04-04 09:39:04 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:39:04 -HTTP METHOD : GET
2019-04-04 09:39:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:39:04 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:39:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:39:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:39:04 -<==      Total: 2
2019-04-04 09:39:04 -耗时 : 4
2019-04-04 09:39:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:39:04 -<==      Total: 4
2019-04-04 09:39:04 -==>  Preparing: select count(*) from print 
2019-04-04 09:39:04 -==> Parameters: 
2019-04-04 09:39:04 -<==      Total: 1
2019-04-04 09:39:04 -耗时 : 37
2019-04-04 09:39:04 -返回值 : com.bootdo.common.utils.PageUtils@4b94a120
2019-04-04 09:39:05 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:39:05 -HTTP METHOD : GET
2019-04-04 09:39:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:39:05 -参数 : [1, {}]
2019-04-04 09:39:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:39:05 -==> Parameters: 1(Long)
2019-04-04 09:39:05 -<==      Total: 1
2019-04-04 09:39:05 -耗时 : 8
2019-04-04 09:39:05 -返回值 : print/print/edit
2019-04-04 09:39:05 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "print/print/edit": An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${#dates.format(print.createTime,'yyyy-MM-dd" (template: "print/print/edit" - line 139, col 49)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${#dates.format(print.createTime,'yyyy-MM-dd" (template: "print/print/edit" - line 139, col 49)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
2019-04-04 09:39:05 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/edit.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${#dates.format(print.createTime,'yyyy-MM-dd" (template: "print/print/edit" - line 139, col 49)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-04 09:42:57 -请求地址 : http://localhost:8081/index
2019-04-04 09:42:57 -HTTP METHOD : GET
2019-04-04 09:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:42:57 -参数 : [{}]
2019-04-04 09:42:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:42:57 -==> Parameters: 1(Long)
2019-04-04 09:42:57 -<==      Total: 46
2019-04-04 09:42:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:42:57 -==> Parameters: 138(Long)
2019-04-04 09:42:57 -<==      Total: 1
2019-04-04 09:42:57 -耗时 : 103
2019-04-04 09:42:57 -返回值 : index_v1
2019-04-04 09:42:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:42:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 104(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:42:57.514(Timestamp)
2019-04-04 09:42:57 -<==    Updates: 1
2019-04-04 09:42:57 -请求地址 : http://localhost:8081/main
2019-04-04 09:42:57 -HTTP METHOD : GET
2019-04-04 09:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:42:57 -参数 : []
2019-04-04 09:42:57 -耗时 : 0
2019-04-04 09:42:57 -返回值 : main
2019-04-04 09:42:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:42:58 -HTTP METHOD : GET
2019-04-04 09:42:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:42:58 -参数 : []
2019-04-04 09:42:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:42:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:42:58 -<==      Total: 0
2019-04-04 09:42:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:42:58 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:42:58 -<==      Total: 1
2019-04-04 09:42:58 -耗时 : 52
2019-04-04 09:42:58 -返回值 : com.bootdo.common.utils.PageUtils@72ce96b3
2019-04-04 09:42:58 -请求地址 : http://localhost:8081/main
2019-04-04 09:42:58 -HTTP METHOD : GET
2019-04-04 09:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:42:58 -参数 : []
2019-04-04 09:42:58 -耗时 : 0
2019-04-04 09:42:58 -返回值 : main
2019-04-04 09:43:00 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:43:00 -HTTP METHOD : GET
2019-04-04 09:43:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:43:00 -参数 : []
2019-04-04 09:43:00 -耗时 : 1
2019-04-04 09:43:00 -返回值 : print/print/print
2019-04-04 09:43:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:43:00 -HTTP METHOD : GET
2019-04-04 09:43:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:43:00 -参数 : [userType]
2019-04-04 09:43:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:43:00 -==> Parameters: userType(String)
2019-04-04 09:43:00 -<==      Total: 2
2019-04-04 09:43:00 -耗时 : 13
2019-04-04 09:43:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:43:00 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:43:00 -HTTP METHOD : GET
2019-04-04 09:43:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:43:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:43:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:43:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:43:00 -<==      Total: 4
2019-04-04 09:43:00 -==>  Preparing: select count(*) from print 
2019-04-04 09:43:00 -==> Parameters: 
2019-04-04 09:43:00 -<==      Total: 1
2019-04-04 09:43:00 -耗时 : 11
2019-04-04 09:43:00 -返回值 : com.bootdo.common.utils.PageUtils@71fde50e
2019-04-04 09:43:01 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:43:01 -HTTP METHOD : GET
2019-04-04 09:43:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:43:01 -参数 : [1, {}]
2019-04-04 09:43:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:43:01 -==> Parameters: 1(Long)
2019-04-04 09:43:01 -<==      Total: 1
2019-04-04 09:43:01 -耗时 : 16
2019-04-04 09:43:01 -返回值 : print/print/edit
2019-04-04 09:43:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:43:02 -HTTP METHOD : GET
2019-04-04 09:43:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:43:02 -参数 : [userType]
2019-04-04 09:43:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:43:02 -==> Parameters: userType(String)
2019-04-04 09:43:02 -<==      Total: 2
2019-04-04 09:43:02 -耗时 : 5
2019-04-04 09:43:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:43:41 -请求地址 : http://localhost:8081/index
2019-04-04 09:43:41 -HTTP METHOD : GET
2019-04-04 09:43:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:43:41 -参数 : [{}]
2019-04-04 09:43:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:43:41 -==> Parameters: 1(Long)
2019-04-04 09:43:41 -<==      Total: 46
2019-04-04 09:43:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:43:41 -==> Parameters: 138(Long)
2019-04-04 09:43:41 -<==      Total: 1
2019-04-04 09:43:41 -耗时 : 44
2019-04-04 09:43:41 -返回值 : index_v1
2019-04-04 09:43:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:43:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 44(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:43:41.779(Timestamp)
2019-04-04 09:43:41 -<==    Updates: 1
2019-04-04 09:43:42 -请求地址 : http://localhost:8081/main
2019-04-04 09:43:42 -HTTP METHOD : GET
2019-04-04 09:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:43:42 -参数 : []
2019-04-04 09:43:42 -耗时 : 1
2019-04-04 09:43:42 -返回值 : main
2019-04-04 09:43:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:43:42 -HTTP METHOD : GET
2019-04-04 09:43:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:43:42 -参数 : []
2019-04-04 09:43:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:43:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:43:42 -<==      Total: 0
2019-04-04 09:43:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:43:42 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:43:42 -<==      Total: 1
2019-04-04 09:43:42 -耗时 : 108
2019-04-04 09:43:42 -返回值 : com.bootdo.common.utils.PageUtils@44d68f70
2019-04-04 09:43:42 -请求地址 : http://localhost:8081/main
2019-04-04 09:43:42 -HTTP METHOD : GET
2019-04-04 09:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:43:42 -参数 : []
2019-04-04 09:43:42 -耗时 : 1
2019-04-04 09:43:42 -返回值 : main
2019-04-04 09:43:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:43:49 -==> Parameters: 1(Long)
2019-04-04 09:43:49 -<==      Total: 90
2019-04-04 09:43:49 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:43:49 -HTTP METHOD : GET
2019-04-04 09:43:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:43:49 -参数 : []
2019-04-04 09:43:49 -耗时 : 0
2019-04-04 09:43:49 -返回值 : print/print/print
2019-04-04 09:43:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:43:50 -HTTP METHOD : GET
2019-04-04 09:43:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:43:50 -参数 : [userType]
2019-04-04 09:43:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:43:50 -==> Parameters: userType(String)
2019-04-04 09:43:50 -<==      Total: 2
2019-04-04 09:43:50 -耗时 : 7
2019-04-04 09:43:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:43:50 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:43:50 -HTTP METHOD : GET
2019-04-04 09:43:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:43:50 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:43:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:43:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:43:50 -<==      Total: 4
2019-04-04 09:43:50 -==>  Preparing: select count(*) from print 
2019-04-04 09:43:50 -==> Parameters: 
2019-04-04 09:43:50 -<==      Total: 1
2019-04-04 09:43:50 -耗时 : 11
2019-04-04 09:43:50 -返回值 : com.bootdo.common.utils.PageUtils@c49ac69
2019-04-04 09:43:51 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:43:51 -HTTP METHOD : GET
2019-04-04 09:43:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:43:51 -参数 : [1, {}]
2019-04-04 09:43:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:43:51 -==> Parameters: 1(Long)
2019-04-04 09:43:51 -<==      Total: 1
2019-04-04 09:43:51 -耗时 : 5
2019-04-04 09:43:51 -返回值 : print/print/edit
2019-04-04 09:43:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:43:51 -HTTP METHOD : GET
2019-04-04 09:43:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:43:51 -参数 : [userType]
2019-04-04 09:43:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:43:51 -==> Parameters: userType(String)
2019-04-04 09:43:51 -<==      Total: 2
2019-04-04 09:43:51 -耗时 : 5
2019-04-04 09:43:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:44:52 -请求地址 : http://localhost:8081/index
2019-04-04 09:44:52 -HTTP METHOD : GET
2019-04-04 09:44:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:44:52 -参数 : [{}]
2019-04-04 09:44:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:44:52 -==> Parameters: 1(Long)
2019-04-04 09:44:52 -<==      Total: 46
2019-04-04 09:44:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:44:52 -==> Parameters: 138(Long)
2019-04-04 09:44:52 -<==      Total: 1
2019-04-04 09:44:52 -耗时 : 30
2019-04-04 09:44:52 -返回值 : index_v1
2019-04-04 09:44:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:44:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:44:52.616(Timestamp)
2019-04-04 09:44:52 -<==    Updates: 1
2019-04-04 09:44:52 -请求地址 : http://localhost:8081/main
2019-04-04 09:44:52 -HTTP METHOD : GET
2019-04-04 09:44:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:44:52 -参数 : []
2019-04-04 09:44:52 -耗时 : 0
2019-04-04 09:44:52 -返回值 : main
2019-04-04 09:44:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:44:52 -HTTP METHOD : GET
2019-04-04 09:44:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:44:52 -参数 : []
2019-04-04 09:44:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:44:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:44:52 -<==      Total: 0
2019-04-04 09:44:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:44:52 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:44:53 -<==      Total: 1
2019-04-04 09:44:53 -耗时 : 6
2019-04-04 09:44:53 -返回值 : com.bootdo.common.utils.PageUtils@579de763
2019-04-04 09:44:53 -请求地址 : http://localhost:8081/main
2019-04-04 09:44:53 -HTTP METHOD : GET
2019-04-04 09:44:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:44:53 -参数 : []
2019-04-04 09:44:53 -耗时 : 1
2019-04-04 09:44:53 -返回值 : main
2019-04-04 09:44:56 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:44:56 -HTTP METHOD : GET
2019-04-04 09:44:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:44:56 -参数 : []
2019-04-04 09:44:56 -耗时 : 0
2019-04-04 09:44:56 -返回值 : print/print/print
2019-04-04 09:44:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:44:56 -HTTP METHOD : GET
2019-04-04 09:44:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:44:56 -参数 : [userType]
2019-04-04 09:44:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:44:56 -==> Parameters: userType(String)
2019-04-04 09:44:56 -<==      Total: 2
2019-04-04 09:44:56 -耗时 : 5
2019-04-04 09:44:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:44:56 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:44:56 -HTTP METHOD : GET
2019-04-04 09:44:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:44:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:44:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:44:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:44:56 -<==      Total: 4
2019-04-04 09:44:56 -==>  Preparing: select count(*) from print 
2019-04-04 09:44:56 -==> Parameters: 
2019-04-04 09:44:57 -<==      Total: 1
2019-04-04 09:44:57 -耗时 : 18
2019-04-04 09:44:57 -返回值 : com.bootdo.common.utils.PageUtils@296bec59
2019-04-04 09:44:58 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:44:58 -HTTP METHOD : GET
2019-04-04 09:44:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:44:58 -参数 : [4, {}]
2019-04-04 09:44:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:44:58 -==> Parameters: 4(Long)
2019-04-04 09:44:58 -<==      Total: 1
2019-04-04 09:44:58 -耗时 : 5
2019-04-04 09:44:58 -返回值 : print/print/edit
2019-04-04 09:44:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:44:58 -HTTP METHOD : GET
2019-04-04 09:44:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:44:58 -参数 : [userType]
2019-04-04 09:44:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:44:58 -==> Parameters: userType(String)
2019-04-04 09:44:58 -<==      Total: 2
2019-04-04 09:44:58 -耗时 : 5
2019-04-04 09:44:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:45:07 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 09:45:07 -HTTP METHOD : POST
2019-04-04 09:45:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 09:45:07 -参数 : [com.bootdo.print.domain.PrintDO@73f9df21]
2019-04-04 09:45:07 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `print_date` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 09:45:07 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 111111(String), 111111(String), 111(Integer), 11111.00(BigDecimal), 111111.00(BigDecimal), 1111111.00(BigDecimal), 1111111.00(BigDecimal), 1111111.00(BigDecimal), 111.00(BigDecimal), 1111111.00(BigDecimal), 1111111.00(BigDecimal), 1111111.00(BigDecimal), 1111111.00(BigDecimal), 111.00(BigDecimal), 1111111.00(BigDecimal), 111.00(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 1111111111(String), 2019-04(String), 2019-04-04 09:45:07.755(Timestamp), 1(Long), (String), 4(Long)
2019-04-04 09:45:07 -<==    Updates: 1
2019-04-04 09:45:07 -耗时 : 84
2019-04-04 09:45:07 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:45:07 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:45:07 -HTTP METHOD : GET
2019-04-04 09:45:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:45:07 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:45:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:45:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:45:07 -<==      Total: 4
2019-04-04 09:45:07 -==>  Preparing: select count(*) from print 
2019-04-04 09:45:07 -==> Parameters: 
2019-04-04 09:45:07 -<==      Total: 1
2019-04-04 09:45:07 -耗时 : 10
2019-04-04 09:45:07 -返回值 : com.bootdo.common.utils.PageUtils@2f295ffb
2019-04-04 09:45:22 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:45:22 -HTTP METHOD : GET
2019-04-04 09:45:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:45:22 -参数 : []
2019-04-04 09:45:22 -耗时 : 1
2019-04-04 09:45:22 -返回值 : print/print/add
2019-04-04 09:45:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:45:23 -HTTP METHOD : GET
2019-04-04 09:45:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:45:23 -参数 : [userType]
2019-04-04 09:45:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:45:23 -==> Parameters: userType(String)
2019-04-04 09:45:23 -<==      Total: 2
2019-04-04 09:45:23 -耗时 : 4
2019-04-04 09:45:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:45:33 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:45:33 -HTTP METHOD : GET
2019-04-04 09:45:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:45:33 -参数 : []
2019-04-04 09:45:33 -耗时 : 0
2019-04-04 09:45:33 -返回值 : print/print/add
2019-04-04 09:45:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:45:34 -HTTP METHOD : GET
2019-04-04 09:45:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:45:34 -参数 : [userType]
2019-04-04 09:45:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:45:34 -==> Parameters: userType(String)
2019-04-04 09:45:34 -<==      Total: 2
2019-04-04 09:45:34 -耗时 : 4
2019-04-04 09:45:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:45:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 09:45:40 -HTTP METHOD : GET
2019-04-04 09:45:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 09:45:40 -参数 : []
2019-04-04 09:45:40 -耗时 : 1
2019-04-04 09:45:40 -返回值 : system/dept/deptTree
2019-04-04 09:45:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 09:45:40 -HTTP METHOD : GET
2019-04-04 09:45:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 09:45:40 -参数 : []
2019-04-04 09:45:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 09:45:40 -==> Parameters: 
2019-04-04 09:45:40 -<==      Total: 3
2019-04-04 09:45:40 -耗时 : 28
2019-04-04 09:45:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 09:45:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 09:45:43 -HTTP METHOD : GET
2019-04-04 09:45:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 09:45:43 -参数 : []
2019-04-04 09:45:43 -耗时 : 0
2019-04-04 09:45:43 -返回值 : system/dept/deptTree
2019-04-04 09:45:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 09:45:43 -HTTP METHOD : GET
2019-04-04 09:45:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 09:45:43 -参数 : []
2019-04-04 09:45:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 09:45:43 -==> Parameters: 
2019-04-04 09:45:43 -<==      Total: 3
2019-04-04 09:45:43 -耗时 : 4
2019-04-04 09:45:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 09:45:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 09:45:45 -HTTP METHOD : GET
2019-04-04 09:45:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 09:45:45 -参数 : []
2019-04-04 09:45:45 -耗时 : 1
2019-04-04 09:45:45 -返回值 : system/dept/deptTree
2019-04-04 09:45:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 09:45:45 -HTTP METHOD : GET
2019-04-04 09:45:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 09:45:45 -参数 : []
2019-04-04 09:45:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 09:45:45 -==> Parameters: 
2019-04-04 09:45:45 -<==      Total: 3
2019-04-04 09:45:45 -耗时 : 3
2019-04-04 09:45:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 09:45:49 -请求地址 : http://localhost:8081/index
2019-04-04 09:45:49 -HTTP METHOD : GET
2019-04-04 09:45:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:45:49 -参数 : [{}]
2019-04-04 09:45:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:45:49 -==> Parameters: 1(Long)
2019-04-04 09:45:49 -<==      Total: 46
2019-04-04 09:45:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:45:49 -==> Parameters: 138(Long)
2019-04-04 09:45:49 -<==      Total: 1
2019-04-04 09:45:49 -耗时 : 25
2019-04-04 09:45:49 -返回值 : index_v1
2019-04-04 09:45:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:45:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:45:49.685(Timestamp)
2019-04-04 09:45:49 -请求地址 : http://localhost:8081/main
2019-04-04 09:45:49 -HTTP METHOD : GET
2019-04-04 09:45:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:45:49 -参数 : []
2019-04-04 09:45:49 -耗时 : 0
2019-04-04 09:45:49 -返回值 : main
2019-04-04 09:45:49 -<==    Updates: 1
2019-04-04 09:45:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:45:49 -HTTP METHOD : GET
2019-04-04 09:45:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:45:49 -参数 : []
2019-04-04 09:45:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:45:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:45:49 -<==      Total: 0
2019-04-04 09:45:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:45:49 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:45:49 -<==      Total: 1
2019-04-04 09:45:49 -耗时 : 9
2019-04-04 09:45:49 -返回值 : com.bootdo.common.utils.PageUtils@4a60fef1
2019-04-04 09:45:49 -请求地址 : http://localhost:8081/main
2019-04-04 09:45:49 -HTTP METHOD : GET
2019-04-04 09:45:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:45:49 -参数 : []
2019-04-04 09:45:49 -耗时 : 0
2019-04-04 09:45:49 -返回值 : main
2019-04-04 09:45:51 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:45:51 -HTTP METHOD : GET
2019-04-04 09:45:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:45:51 -参数 : []
2019-04-04 09:45:51 -耗时 : 1
2019-04-04 09:45:51 -返回值 : print/print/print
2019-04-04 09:45:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:45:51 -HTTP METHOD : GET
2019-04-04 09:45:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:45:51 -参数 : [userType]
2019-04-04 09:45:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:45:51 -==> Parameters: userType(String)
2019-04-04 09:45:51 -<==      Total: 2
2019-04-04 09:45:51 -耗时 : 4
2019-04-04 09:45:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:45:51 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:45:51 -HTTP METHOD : GET
2019-04-04 09:45:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:45:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:45:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:45:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:45:51 -<==      Total: 4
2019-04-04 09:45:51 -==>  Preparing: select count(*) from print 
2019-04-04 09:45:51 -==> Parameters: 
2019-04-04 09:45:51 -<==      Total: 1
2019-04-04 09:45:51 -耗时 : 64
2019-04-04 09:45:51 -返回值 : com.bootdo.common.utils.PageUtils@1e86349
2019-04-04 09:45:52 -请求地址 : http://localhost:8081/print/print/add
2019-04-04 09:45:52 -HTTP METHOD : GET
2019-04-04 09:45:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-04-04 09:45:52 -参数 : []
2019-04-04 09:45:52 -耗时 : 1
2019-04-04 09:45:52 -返回值 : print/print/add
2019-04-04 09:45:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:45:52 -HTTP METHOD : GET
2019-04-04 09:45:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:45:52 -参数 : [userType]
2019-04-04 09:45:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:45:52 -==> Parameters: userType(String)
2019-04-04 09:45:52 -<==      Total: 2
2019-04-04 09:45:52 -耗时 : 4
2019-04-04 09:45:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:46:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 09:46:21 -HTTP METHOD : GET
2019-04-04 09:46:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 09:46:21 -参数 : []
2019-04-04 09:46:21 -耗时 : 1
2019-04-04 09:46:21 -返回值 : system/dept/deptTree
2019-04-04 09:46:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 09:46:21 -HTTP METHOD : GET
2019-04-04 09:46:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 09:46:21 -参数 : []
2019-04-04 09:46:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 09:46:21 -==> Parameters: 
2019-04-04 09:46:21 -<==      Total: 3
2019-04-04 09:46:21 -耗时 : 7
2019-04-04 09:46:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 09:46:24 -请求地址 : http://localhost:8081/print/print/save
2019-04-04 09:46:24 -HTTP METHOD : POST
2019-04-04 09:46:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-04-04 09:46:24 -参数 : [2019-04-04 00:00:00, com.bootdo.print.domain.PrintDO@4c3292f3]
2019-04-04 09:46:24 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:46:24 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 1(String), 2019-04(String), 1(Long), 2019-04-04 09:46:24.569(Timestamp), 1(Long), 1(String)
2019-04-04 09:46:24 -<==    Updates: 1
2019-04-04 09:46:24 -耗时 : 82
2019-04-04 09:46:24 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:46:24 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:46:24 -HTTP METHOD : GET
2019-04-04 09:46:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:46:24 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:46:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:46:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:46:24 -<==      Total: 5
2019-04-04 09:46:24 -==>  Preparing: select count(*) from print 
2019-04-04 09:46:24 -==> Parameters: 
2019-04-04 09:46:24 -<==      Total: 1
2019-04-04 09:46:24 -耗时 : 8
2019-04-04 09:46:24 -返回值 : com.bootdo.common.utils.PageUtils@75dd387e
2019-04-04 09:46:44 -请求地址 : http://localhost:8081/print/print/edit/5
2019-04-04 09:46:44 -HTTP METHOD : GET
2019-04-04 09:46:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:46:44 -参数 : [5, {}]
2019-04-04 09:46:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:46:44 -==> Parameters: 5(Long)
2019-04-04 09:46:44 -<==      Total: 1
2019-04-04 09:46:44 -耗时 : 7
2019-04-04 09:46:44 -返回值 : print/print/edit
2019-04-04 09:46:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:46:45 -HTTP METHOD : GET
2019-04-04 09:46:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:46:45 -参数 : [userType]
2019-04-04 09:46:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:46:45 -==> Parameters: userType(String)
2019-04-04 09:46:45 -<==      Total: 2
2019-04-04 09:46:45 -耗时 : 6
2019-04-04 09:46:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:47:02 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 09:47:02 -HTTP METHOD : POST
2019-04-04 09:47:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 09:47:02 -参数 : [com.bootdo.print.domain.PrintDO@72133ec2]
2019-04-04 09:47:02 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `print_date` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 09:47:02 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(String), 5(Integer), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 1(String), 2019-04(String), 2019-04-04 09:47:02.567(Timestamp), 1(Long), (String), 5(Long)
2019-04-04 09:47:02 -<==    Updates: 1
2019-04-04 09:47:02 -耗时 : 245
2019-04-04 09:47:02 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:47:02 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:47:02 -HTTP METHOD : GET
2019-04-04 09:47:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:47:02 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:47:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:47:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:47:02 -<==      Total: 5
2019-04-04 09:47:02 -==>  Preparing: select count(*) from print 
2019-04-04 09:47:02 -==> Parameters: 
2019-04-04 09:47:02 -<==      Total: 1
2019-04-04 09:47:02 -耗时 : 12
2019-04-04 09:47:02 -返回值 : com.bootdo.common.utils.PageUtils@70243c23
2019-04-04 09:47:08 -请求地址 : http://localhost:8081/print/print/remove
2019-04-04 09:47:08 -HTTP METHOD : POST
2019-04-04 09:47:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.remove
2019-04-04 09:47:08 -参数 : [5]
2019-04-04 09:47:08 -==>  Preparing: delete from print where id = ? 
2019-04-04 09:47:08 -==> Parameters: 5(Long)
2019-04-04 09:47:08 -<==    Updates: 1
2019-04-04 09:47:08 -耗时 : 185
2019-04-04 09:47:08 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:47:08 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:47:08 -HTTP METHOD : GET
2019-04-04 09:47:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:47:08 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:47:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:47:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:47:08 -<==      Total: 4
2019-04-04 09:47:08 -==>  Preparing: select count(*) from print 
2019-04-04 09:47:08 -==> Parameters: 
2019-04-04 09:47:08 -<==      Total: 1
2019-04-04 09:47:08 -耗时 : 15
2019-04-04 09:47:08 -返回值 : com.bootdo.common.utils.PageUtils@4de441ea
2019-04-04 09:52:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 69], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 11], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 421]
2019-04-04 09:57:16 -请求地址 : http://localhost:8081/index
2019-04-04 09:57:16 -HTTP METHOD : GET
2019-04-04 09:57:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 09:57:16 -参数 : [{}]
2019-04-04 09:57:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 09:57:16 -==> Parameters: 1(Long)
2019-04-04 09:57:16 -<==      Total: 46
2019-04-04 09:57:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 09:57:16 -==> Parameters: 138(Long)
2019-04-04 09:57:16 -<==      Total: 1
2019-04-04 09:57:16 -耗时 : 33
2019-04-04 09:57:16 -返回值 : index_v1
2019-04-04 09:57:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 09:57:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 09:57:16.69(Timestamp)
2019-04-04 09:57:16 -请求地址 : http://localhost:8081/main
2019-04-04 09:57:16 -HTTP METHOD : GET
2019-04-04 09:57:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:57:16 -参数 : []
2019-04-04 09:57:16 -耗时 : 0
2019-04-04 09:57:16 -返回值 : main
2019-04-04 09:57:16 -<==    Updates: 1
2019-04-04 09:57:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 09:57:17 -HTTP METHOD : GET
2019-04-04 09:57:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 09:57:17 -参数 : []
2019-04-04 09:57:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 09:57:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 09:57:17 -<==      Total: 0
2019-04-04 09:57:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 09:57:17 -==> Parameters: 1(Long), 0(String)
2019-04-04 09:57:17 -<==      Total: 1
2019-04-04 09:57:17 -耗时 : 8
2019-04-04 09:57:17 -返回值 : com.bootdo.common.utils.PageUtils@2034f53d
2019-04-04 09:57:17 -请求地址 : http://localhost:8081/main
2019-04-04 09:57:17 -HTTP METHOD : GET
2019-04-04 09:57:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 09:57:17 -参数 : []
2019-04-04 09:57:17 -耗时 : 1
2019-04-04 09:57:17 -返回值 : main
2019-04-04 09:57:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 09:57:24 -==> Parameters: 1(Long)
2019-04-04 09:57:24 -<==      Total: 90
2019-04-04 09:57:24 -请求地址 : http://localhost:8081/print/print
2019-04-04 09:57:24 -HTTP METHOD : GET
2019-04-04 09:57:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 09:57:24 -参数 : []
2019-04-04 09:57:24 -耗时 : 1
2019-04-04 09:57:24 -返回值 : print/print/print
2019-04-04 09:57:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:57:25 -HTTP METHOD : GET
2019-04-04 09:57:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:57:25 -参数 : [userType]
2019-04-04 09:57:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:57:25 -==> Parameters: userType(String)
2019-04-04 09:57:25 -<==      Total: 2
2019-04-04 09:57:25 -耗时 : 4
2019-04-04 09:57:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:57:25 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:57:25 -HTTP METHOD : GET
2019-04-04 09:57:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:57:25 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:57:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:57:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:57:25 -<==      Total: 4
2019-04-04 09:57:25 -==>  Preparing: select count(*) from print 
2019-04-04 09:57:25 -==> Parameters: 
2019-04-04 09:57:25 -<==      Total: 1
2019-04-04 09:57:25 -耗时 : 9
2019-04-04 09:57:25 -返回值 : com.bootdo.common.utils.PageUtils@70a9f4a1
2019-04-04 09:57:26 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 09:57:26 -HTTP METHOD : GET
2019-04-04 09:57:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:57:26 -参数 : [1, {}]
2019-04-04 09:57:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:57:26 -==> Parameters: 1(Long)
2019-04-04 09:57:26 -<==      Total: 1
2019-04-04 09:57:26 -耗时 : 9
2019-04-04 09:57:26 -返回值 : print/print/edit
2019-04-04 09:57:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:57:26 -HTTP METHOD : GET
2019-04-04 09:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:57:26 -参数 : [userType]
2019-04-04 09:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:57:26 -==> Parameters: userType(String)
2019-04-04 09:57:26 -<==      Total: 2
2019-04-04 09:57:26 -耗时 : 4
2019-04-04 09:57:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 09:58:06 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 09:58:06 -HTTP METHOD : POST
2019-04-04 09:58:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 09:58:06 -参数 : [com.bootdo.print.domain.PrintDO@4a1ad534]
2019-04-04 09:58:06 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `print_date` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 09:58:06 -==> Parameters: 1-0001(String), 张三(String), A(String), 2(String), 100(String), 200(String), 1(Integer), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 0(String), 2019-03-26 10:14:39.0(Timestamp), 收费主管(String), 2019-02(String), 2019-04-04 09:58:06.858(Timestamp), 1(Long), (String), 1(Long)
2019-04-04 09:58:06 -<==    Updates: 1
2019-04-04 09:58:06 -耗时 : 106
2019-04-04 09:58:06 -返回值 : {msg=操作成功, code=0}
2019-04-04 09:58:06 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 09:58:06 -HTTP METHOD : GET
2019-04-04 09:58:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 09:58:06 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 09:58:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 09:58:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 09:58:06 -<==      Total: 4
2019-04-04 09:58:06 -==>  Preparing: select count(*) from print 
2019-04-04 09:58:06 -==> Parameters: 
2019-04-04 09:58:06 -<==      Total: 1
2019-04-04 09:58:06 -耗时 : 8
2019-04-04 09:58:06 -返回值 : com.bootdo.common.utils.PageUtils@1a6ae5fd
2019-04-04 09:58:11 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-04 09:58:11 -HTTP METHOD : GET
2019-04-04 09:58:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-04 09:58:11 -参数 : [1, {}]
2019-04-04 09:58:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:58:11 -==> Parameters: 1(Long)
2019-04-04 09:58:11 -<==      Total: 1
2019-04-04 09:58:11 -耗时 : 5
2019-04-04 09:58:11 -返回值 : print/print/printEdit
2019-04-04 09:59:36 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 09:59:36 -HTTP METHOD : GET
2019-04-04 09:59:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 09:59:36 -参数 : [4, {}]
2019-04-04 09:59:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 09:59:36 -==> Parameters: 4(Long)
2019-04-04 09:59:36 -<==      Total: 1
2019-04-04 09:59:36 -耗时 : 6
2019-04-04 09:59:36 -返回值 : print/print/edit
2019-04-04 09:59:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 09:59:36 -HTTP METHOD : GET
2019-04-04 09:59:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 09:59:36 -参数 : [userType]
2019-04-04 09:59:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 09:59:36 -==> Parameters: userType(String)
2019-04-04 09:59:36 -<==      Total: 2
2019-04-04 09:59:36 -耗时 : 3
2019-04-04 09:59:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:00:15 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 10:00:15 -HTTP METHOD : POST
2019-04-04 10:00:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 10:00:15 -参数 : [com.bootdo.print.domain.PrintDO@2a803b1b]
2019-04-04 10:00:15 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `print_date` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 10:00:15 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 11111(String), 11111(String), 111(Integer), 11111(BigDecimal), 111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 111(BigDecimal), 111(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 1111111111(String), 2019-04(String), 2019-04-04 10:00:15.535(Timestamp), 1(Long), (String), 4(Long)
2019-04-04 10:00:15 -<==    Updates: 1
2019-04-04 10:00:15 -耗时 : 103
2019-04-04 10:00:15 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:00:15 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 10:00:15 -HTTP METHOD : GET
2019-04-04 10:00:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 10:00:15 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 10:00:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 10:00:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:00:15 -<==      Total: 4
2019-04-04 10:00:15 -==>  Preparing: select count(*) from print 
2019-04-04 10:00:15 -==> Parameters: 
2019-04-04 10:00:15 -<==      Total: 1
2019-04-04 10:00:15 -耗时 : 9
2019-04-04 10:00:15 -返回值 : com.bootdo.common.utils.PageUtils@6da044b8
2019-04-04 10:00:43 -请求地址 : http://localhost:8081/print/print/printEdit/4
2019-04-04 10:00:43 -HTTP METHOD : GET
2019-04-04 10:00:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-04 10:00:43 -参数 : [4, {}]
2019-04-04 10:00:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 10:00:43 -==> Parameters: 4(Long)
2019-04-04 10:00:43 -<==      Total: 1
2019-04-04 10:00:43 -耗时 : 6
2019-04-04 10:00:43 -返回值 : print/print/printEdit
2019-04-04 10:01:13 -请求地址 : http://localhost:8081/print/print/edit/2
2019-04-04 10:01:13 -HTTP METHOD : GET
2019-04-04 10:01:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 10:01:13 -参数 : [2, {}]
2019-04-04 10:01:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 10:01:13 -==> Parameters: 2(Long)
2019-04-04 10:01:13 -<==      Total: 1
2019-04-04 10:01:13 -耗时 : 6
2019-04-04 10:01:13 -返回值 : print/print/edit
2019-04-04 10:01:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:01:14 -HTTP METHOD : GET
2019-04-04 10:01:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:01:14 -参数 : [userType]
2019-04-04 10:01:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:01:14 -==> Parameters: userType(String)
2019-04-04 10:01:14 -<==      Total: 2
2019-04-04 10:01:14 -耗时 : 4
2019-04-04 10:01:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:05:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 6628 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 10:05:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 10:05:42 -The following profiles are active: dev
2019-04-04 10:05:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 10:05:42 CST 2019]; root of context hierarchy
2019-04-04 10:05:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 10:05:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$15003363] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$759620a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 10:05:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 10:05:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:05:50 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 10:05:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 10:05:50 -Starting service [Tomcat]
2019-04-04 10:05:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 10:05:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 10:05:51 -Initializing Spring embedded WebApplicationContext
2019-04-04 10:05:51 -Root WebApplicationContext: initialization completed in 8490 ms
2019-04-04 10:05:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 10:05:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 10:05:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 10:05:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 10:05:52 -Filter xssFilter was not registered (disabled)
2019-04-04 10:05:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 10:05:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 10:05:52 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 10:05:52 -Servlet dispatcherServlet mapped to [/]
2019-04-04 10:05:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 10:05:42 CST 2019]; root of context hierarchy
2019-04-04 10:05:55 -Using default implementation for ThreadExecutor
2019-04-04 10:05:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 10:05:55 -Quartz Scheduler v.2.2.1 created.
2019-04-04 10:05:55 -RAMJobStore initialized.
2019-04-04 10:05:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 10:05:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 10:05:55 -Quartz scheduler version: 2.2.1
2019-04-04 10:05:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b409a79
2019-04-04 10:05:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 10:05:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 10:05:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 10:05:59 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 10:05:59 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 10:05:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 10:05:59 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 10:05:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 10:05:59 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 10:05:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 10:05:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 10:05:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 10:05:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 10:05:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 10:05:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 10:05:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 10:05:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 10:05:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 10:05:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 10:05:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 10:05:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 10:05:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 10:05:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 10:05:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 10:05:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 10:05:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 10:05:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 10:05:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 10:05:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 10:05:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 10:05:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 10:05:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 10:05:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 10:05:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 10:05:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 10:05:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 10:05:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 10:05:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 10:05:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 10:05:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 10:05:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 10:05:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 10:05:59 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 10:05:59 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 10:05:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 10:05:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:05:59 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:05:59 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 10:05:59 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 10:05:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 10:05:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 10:05:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 10:05:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 10:05:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 10:05:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 10:05:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 10:05:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 10:05:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 10:05:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 10:05:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 10:05:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 10:05:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 10:05:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 10:05:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 10:05:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 10:05:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 10:05:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 10:05:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 10:05:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 10:05:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 10:05:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 10:05:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 10:05:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 10:05:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 10:05:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 10:05:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 10:05:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 10:05:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 10:05:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 10:05:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 10:05:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 10:05:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 10:05:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 10:05:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:05:59 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 10:05:59 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:05:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 10:05:59 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 10:05:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:05:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 10:05:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 10:05:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 10:05:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 10:06:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 10:06:00 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 10:06:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:06:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 04 10:05:42 CST 2019]; root of context hierarchy
2019-04-04 10:06:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:06:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:06:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:06:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 10:06:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 10:06:02 -Registering beans for JMX exposure on startup
2019-04-04 10:06:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 10:06:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 10:06:03 -Starting beans in phase 2147483647
2019-04-04 10:06:03 -Context refreshed
2019-04-04 10:06:03 -Found 1 custom documentation plugin(s)
2019-04-04 10:06:03 -Scanning for api listing references
2019-04-04 10:06:03 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 10:06:03 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 10:06:03 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 10:06:03 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 10:06:03 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_1
2019-04-04 10:06:03 -Generating unique operation named: addUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: editUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: listUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_2
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_3
2019-04-04 10:06:03 -Generating unique operation named: saveUsingPOST_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingPOST_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingPUT_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 10:06:03 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 10:06:03 -Generating unique operation named: addUsingGET_2
2019-04-04 10:06:03 -Generating unique operation named: editUsingGET_2
2019-04-04 10:06:03 -Generating unique operation named: listUsingGET_2
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_4
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_5
2019-04-04 10:06:03 -Generating unique operation named: saveUsingPOST_2
2019-04-04 10:06:03 -Generating unique operation named: updateUsingPOST_2
2019-04-04 10:06:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 10:06:03 -Generating unique operation named: addUsingGET_3
2019-04-04 10:06:03 -Generating unique operation named: editUsingGET_3
2019-04-04 10:06:03 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 10:06:03 -Generating unique operation named: listUsingGET_3
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_6
2019-04-04 10:06:03 -Generating unique operation named: removeUsingPOST_7
2019-04-04 10:06:03 -Generating unique operation named: saveUsingPOST_3
2019-04-04 10:06:03 -Generating unique operation named: updateUsingGET_2
2019-04-04 10:06:03 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 10:06:03 -Generating unique operation named: updateUsingPOST_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_2
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_4
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_4
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_4
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_8
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_9
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingGET_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 10:06:04 -Generating unique operation named: ElecUsingGET_1
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_5
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_5
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_5
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_10
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_11
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingGET_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_6
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_6
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_6
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_7
2019-04-04 10:06:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_7
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_12
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_13
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingGET_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 10:06:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_7
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_8
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_8
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_14
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_15
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingGET_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_8
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_8
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_9
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_9
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_16
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_17
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_8
2019-04-04 10:06:04 -Generating unique operation named: updateUsingGET_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_9
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPUT_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 10:06:04 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_9
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_10
2019-04-04 10:06:04 -Generating unique operation named: infoUsingGET_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingPOST_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingPUT_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 10:06:04 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_10
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_18
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_19
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_9
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_10
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_11
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_20
2019-04-04 10:06:04 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_10
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_11
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_12
2019-04-04 10:06:04 -Generating unique operation named: removeUsingPOST_21
2019-04-04 10:06:04 -Generating unique operation named: saveUsingPOST_10
2019-04-04 10:06:04 -Generating unique operation named: treeUsingGET_1
2019-04-04 10:06:04 -Generating unique operation named: treeUsingGET_2
2019-04-04 10:06:04 -Generating unique operation named: updateUsingPOST_11
2019-04-04 10:06:04 -Generating unique operation named: addUsingGET_11
2019-04-04 10:06:04 -Generating unique operation named: editUsingGET_12
2019-04-04 10:06:04 -Generating unique operation named: listUsingGET_13
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_22
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_23
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingGET_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPUT_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 10:06:05 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_12
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_13
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_14
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_24
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_25
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingGET_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_13
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPUT_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 10:06:05 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_13
2019-04-04 10:06:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_14
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_15
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_13
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_14
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_14
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_16
2019-04-04 10:06:05 -Generating unique operation named: listUsingHEAD_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingPOST_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingPUT_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingPATCH_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingDELETE_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 10:06:05 -Generating unique operation named: listUsingTRACE_1
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_14
2019-04-04 10:06:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_15
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_17
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_26
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_15
2019-04-04 10:06:05 -Generating unique operation named: treeUsingGET_3
2019-04-04 10:06:05 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_15
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_15
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_16
2019-04-04 10:06:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_18
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_27
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_28
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_16
2019-04-04 10:06:05 -Generating unique operation named: updateUsingGET_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_16
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPUT_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 10:06:05 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 10:06:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_16
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_17
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_19
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_29
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_30
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_17
2019-04-04 10:06:05 -Generating unique operation named: updateUsingGET_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_17
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPUT_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 10:06:05 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 10:06:05 -Generating unique operation named: addUsingGET_17
2019-04-04 10:06:05 -Generating unique operation named: editUsingGET_18
2019-04-04 10:06:05 -Generating unique operation named: listUsingGET_20
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_31
2019-04-04 10:06:05 -Generating unique operation named: removeUsingPOST_32
2019-04-04 10:06:05 -Generating unique operation named: saveUsingPOST_18
2019-04-04 10:06:05 -Generating unique operation named: updateUsingGET_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPOST_18
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPUT_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 10:06:05 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 10:06:05 -Starting Quartz Scheduler now
2019-04-04 10:06:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 10:06:05 -Starting...
2019-04-04 10:06:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 10:06:05 -Started.
2019-04-04 10:06:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 10:06:05 -Using a shared selector for servlet write/read
2019-04-04 10:06:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 10:06:05 -Started BootdoApplication in 24.22 seconds (JVM running for 25.066)
2019-04-04 10:06:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 10:06:05 -==> Parameters: 
2019-04-04 10:06:06 -<==      Total: 1
2019-04-04 10:06:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 10:06:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 10:06:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
2019-04-04 10:06:43 -Enabling session validation scheduler...
2019-04-04 10:06:43 -请求地址 : http://localhost:8081/login;JSESSIONID=69b3fc23-34ad-4915-83a3-e81f163e7c3b
2019-04-04 10:06:43 -HTTP METHOD : GET
2019-04-04 10:06:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 10:06:43 -参数 : [{}]
2019-04-04 10:06:43 -耗时 : 3
2019-04-04 10:06:43 -返回值 : login
2019-04-04 10:06:45 -请求地址 : http://localhost:8081/getVerify
2019-04-04 10:06:45 -HTTP METHOD : GET
2019-04-04 10:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 10:06:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d1cf4ee, org.apache.shiro.web.servlet.ShiroHttpServletResponse@13db193d]
2019-04-04 10:06:45 -0807
2019-04-04 10:06:45 -耗时 : 766
2019-04-04 10:06:45 -返回值 : null
2019-04-04 10:07:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-04 10:08:58 -请求地址 : http://localhost:8081/login
2019-04-04 10:08:58 -HTTP METHOD : POST
2019-04-04 10:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 10:08:58 -参数 : [admin, 111111, 0807, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59e8a1f5]
2019-04-04 10:08:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 10:08:58 -==> Parameters: admin(String)
2019-04-04 10:08:58 -<==      Total: 1
2019-04-04 10:08:58 -耗时 : 70
2019-04-04 10:08:58 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:08:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 10:08:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:08:58 -==> Parameters: 1(Long), admin(String), 登录(String), 70(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 10:08:58.952(Timestamp)
2019-04-04 10:08:59 -请求地址 : http://localhost:8081/index
2019-04-04 10:08:59 -HTTP METHOD : GET
2019-04-04 10:08:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:08:59 -参数 : [{}]
2019-04-04 10:08:59 -<==    Updates: 1
2019-04-04 10:08:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:08:59 -==> Parameters: 1(Long)
2019-04-04 10:08:59 -<==      Total: 46
2019-04-04 10:08:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:08:59 -==> Parameters: 138(Long)
2019-04-04 10:08:59 -<==      Total: 1
2019-04-04 10:08:59 -耗时 : 130
2019-04-04 10:08:59 -返回值 : index_v1
2019-04-04 10:08:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:08:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 130(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:08:59.188(Timestamp)
2019-04-04 10:08:59 -<==    Updates: 1
2019-04-04 10:08:59 -请求地址 : http://localhost:8081/main
2019-04-04 10:08:59 -HTTP METHOD : GET
2019-04-04 10:08:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:08:59 -参数 : []
2019-04-04 10:08:59 -耗时 : 0
2019-04-04 10:08:59 -返回值 : main
2019-04-04 10:08:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:08:59 -HTTP METHOD : GET
2019-04-04 10:08:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:08:59 -参数 : []
2019-04-04 10:08:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:08:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:08:59 -<==      Total: 0
2019-04-04 10:08:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:08:59 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:08:59 -<==      Total: 1
2019-04-04 10:08:59 -耗时 : 79
2019-04-04 10:08:59 -返回值 : com.bootdo.common.utils.PageUtils@854c5e9
2019-04-04 10:08:59 -请求地址 : http://localhost:8081/main
2019-04-04 10:08:59 -HTTP METHOD : GET
2019-04-04 10:08:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:08:59 -参数 : []
2019-04-04 10:08:59 -耗时 : 0
2019-04-04 10:08:59 -返回值 : main
2019-04-04 10:09:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 10:09:18 -==> Parameters: 1(Long)
2019-04-04 10:09:18 -<==      Total: 90
2019-04-04 10:09:18 -请求地址 : http://localhost:8081/print/print
2019-04-04 10:09:18 -HTTP METHOD : GET
2019-04-04 10:09:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 10:09:18 -参数 : []
2019-04-04 10:09:18 -耗时 : 0
2019-04-04 10:09:18 -返回值 : print/print/print
2019-04-04 10:09:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:09:18 -HTTP METHOD : GET
2019-04-04 10:09:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:09:18 -参数 : [userType]
2019-04-04 10:09:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:09:18 -==> Parameters: userType(String)
2019-04-04 10:09:18 -<==      Total: 2
2019-04-04 10:09:18 -耗时 : 38
2019-04-04 10:09:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:09:19 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 10:09:19 -HTTP METHOD : GET
2019-04-04 10:09:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 10:09:19 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 10:09:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 10:09:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:09:19 -<==      Total: 4
2019-04-04 10:09:19 -==>  Preparing: select count(*) from print 
2019-04-04 10:09:19 -==> Parameters: 
2019-04-04 10:09:19 -<==      Total: 1
2019-04-04 10:09:19 -耗时 : 52
2019-04-04 10:09:19 -返回值 : com.bootdo.common.utils.PageUtils@4f22340f
2019-04-04 10:09:20 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 10:09:20 -HTTP METHOD : GET
2019-04-04 10:09:20 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 10:09:20 -参数 : [4, {}]
2019-04-04 10:09:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 10:09:20 -==> Parameters: 4(Long)
2019-04-04 10:09:20 -<==      Total: 1
2019-04-04 10:09:20 -耗时 : 12
2019-04-04 10:09:20 -返回值 : print/print/edit
2019-04-04 10:09:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:09:20 -HTTP METHOD : GET
2019-04-04 10:09:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:09:20 -参数 : [userType]
2019-04-04 10:09:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:09:20 -==> Parameters: userType(String)
2019-04-04 10:09:20 -<==      Total: 2
2019-04-04 10:09:20 -耗时 : 10
2019-04-04 10:09:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:09:30 -请求地址 : http://localhost:8081/print/print/edit/4
2019-04-04 10:09:30 -HTTP METHOD : GET
2019-04-04 10:09:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 10:09:30 -参数 : [4, {}]
2019-04-04 10:09:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 10:09:30 -==> Parameters: 4(Long)
2019-04-04 10:09:30 -<==      Total: 1
2019-04-04 10:09:30 -耗时 : 14
2019-04-04 10:09:30 -返回值 : print/print/edit
2019-04-04 10:09:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:09:30 -HTTP METHOD : GET
2019-04-04 10:09:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:09:30 -参数 : [userType]
2019-04-04 10:09:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:09:30 -==> Parameters: userType(String)
2019-04-04 10:09:30 -<==      Total: 2
2019-04-04 10:09:30 -耗时 : 10
2019-04-04 10:09:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:10:39 -请求地址 : http://localhost:8081/print/print/update
2019-04-04 10:10:39 -HTTP METHOD : POST
2019-04-04 10:10:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-04-04 10:10:39 -参数 : [com.bootdo.print.domain.PrintDO@6a62f480]
2019-04-04 10:10:39 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `print_state` = ?, `print_date` = ?, `cost_poper` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 10:10:39 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 11111(String), 11111(String), 111(Integer), 11111(BigDecimal), 111111(BigDecimal), 1111111(BigDecimal), 111111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 11111(BigDecimal), 1111111(BigDecimal), 11111(BigDecimal), 1111111(BigDecimal), 111(BigDecimal), 111(BigDecimal), 111(BigDecimal), 1(String), 2019-04-04 00:00:00.0(Timestamp), 111111(String), 2019-07(String), 2019-04-04 10:10:39.051(Timestamp), 1(Long), (String), 4(Long)
2019-04-04 10:10:39 -<==    Updates: 1
2019-04-04 10:10:39 -耗时 : 116
2019-04-04 10:10:39 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:10:39 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 10:10:39 -HTTP METHOD : GET
2019-04-04 10:10:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 10:10:39 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 10:10:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 10:10:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:10:39 -<==      Total: 4
2019-04-04 10:10:39 -==>  Preparing: select count(*) from print 
2019-04-04 10:10:39 -==> Parameters: 
2019-04-04 10:10:39 -<==      Total: 1
2019-04-04 10:10:39 -耗时 : 18
2019-04-04 10:10:39 -返回值 : com.bootdo.common.utils.PageUtils@66cbab22
2019-04-04 10:16:43 -请求地址 : http://localhost:8081/index
2019-04-04 10:16:43 -HTTP METHOD : GET
2019-04-04 10:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:16:43 -参数 : [{}]
2019-04-04 10:16:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:16:43 -==> Parameters: 1(Long)
2019-04-04 10:16:43 -<==      Total: 46
2019-04-04 10:16:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:16:43 -==> Parameters: 138(Long)
2019-04-04 10:16:43 -<==      Total: 1
2019-04-04 10:16:43 -耗时 : 31
2019-04-04 10:16:43 -返回值 : index_v1
2019-04-04 10:16:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:16:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:16:43.237(Timestamp)
2019-04-04 10:16:43 -<==    Updates: 1
2019-04-04 10:16:43 -请求地址 : http://localhost:8081/main
2019-04-04 10:16:43 -HTTP METHOD : GET
2019-04-04 10:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:16:43 -参数 : []
2019-04-04 10:16:43 -耗时 : 0
2019-04-04 10:16:43 -返回值 : main
2019-04-04 10:16:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:16:43 -HTTP METHOD : GET
2019-04-04 10:16:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:16:43 -参数 : []
2019-04-04 10:16:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:16:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:16:43 -<==      Total: 0
2019-04-04 10:16:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:16:43 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:16:43 -<==      Total: 1
2019-04-04 10:16:43 -耗时 : 6
2019-04-04 10:16:43 -返回值 : com.bootdo.common.utils.PageUtils@6802110c
2019-04-04 10:16:43 -请求地址 : http://localhost:8081/main
2019-04-04 10:16:43 -HTTP METHOD : GET
2019-04-04 10:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:16:43 -参数 : []
2019-04-04 10:16:43 -耗时 : 1
2019-04-04 10:16:43 -返回值 : main
2019-04-04 10:16:48 -请求地址 : http://localhost:8081/water/water
2019-04-04 10:16:48 -HTTP METHOD : GET
2019-04-04 10:16:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-04-04 10:16:48 -参数 : []
2019-04-04 10:16:48 -耗时 : 1
2019-04-04 10:16:48 -返回值 : water/water/water
2019-04-04 10:16:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:16:49 -HTTP METHOD : GET
2019-04-04 10:16:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:49 -参数 : [userType]
2019-04-04 10:16:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:49 -==> Parameters: userType(String)
2019-04-04 10:16:49 -<==      Total: 2
2019-04-04 10:16:49 -耗时 : 4
2019-04-04 10:16:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:49 -请求地址 : http://localhost:8081/water/water/list
2019-04-04 10:16:49 -HTTP METHOD : GET
2019-04-04 10:16:49 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-04 10:16:49 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-04 10:16:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-04 10:16:49 -==> Parameters: 0(Integer), 3(Integer)
2019-04-04 10:16:49 -<==      Total: 3
2019-04-04 10:16:49 -==>  Preparing: select count(*) from water 
2019-04-04 10:16:49 -==> Parameters: 
2019-04-04 10:16:49 -<==      Total: 1
2019-04-04 10:16:49 -耗时 : 97
2019-04-04 10:16:49 -返回值 : com.bootdo.common.utils.PageUtils@19feefc4
2019-04-04 10:16:52 -请求地址 : http://localhost:8081/water/water/edit/1
2019-04-04 10:16:52 -HTTP METHOD : GET
2019-04-04 10:16:52 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-04-04 10:16:52 -参数 : [1, {}]
2019-04-04 10:16:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-04-04 10:16:52 -==> Parameters: 1(Long)
2019-04-04 10:16:52 -<==      Total: 1
2019-04-04 10:16:52 -耗时 : 11
2019-04-04 10:16:52 -返回值 : water/water/edit
2019-04-04 10:16:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:16:52 -HTTP METHOD : GET
2019-04-04 10:16:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:52 -参数 : [userType]
2019-04-04 10:16:52 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 10:16:52 -HTTP METHOD : GET
2019-04-04 10:16:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:52 -参数 : [waterType]
2019-04-04 10:16:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:52 -==> Parameters: userType(String)
2019-04-04 10:16:52 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-04-04 10:16:52 -HTTP METHOD : GET
2019-04-04 10:16:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:52 -参数 : [userState]
2019-04-04 10:16:52 -<==      Total: 2
2019-04-04 10:16:52 -耗时 : 7
2019-04-04 10:16:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:52 -==> Parameters: waterType(String)
2019-04-04 10:16:52 -<==      Total: 6
2019-04-04 10:16:52 -耗时 : 20
2019-04-04 10:16:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:52 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:52 -==> Parameters: userState(String)
2019-04-04 10:16:52 -<==      Total: 2
2019-04-04 10:16:52 -耗时 : 37
2019-04-04 10:16:52 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:55 -请求地址 : http://localhost:8081/water/water/add
2019-04-04 10:16:55 -HTTP METHOD : GET
2019-04-04 10:16:55 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-04-04 10:16:55 -参数 : []
2019-04-04 10:16:55 -耗时 : 1
2019-04-04 10:16:55 -返回值 : water/water/add
2019-04-04 10:16:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:16:55 -HTTP METHOD : GET
2019-04-04 10:16:55 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 10:16:55 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-04-04 10:16:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:55 -HTTP METHOD : GET
2019-04-04 10:16:55 -HTTP METHOD : GET
2019-04-04 10:16:55 -参数 : [userType]
2019-04-04 10:16:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:55 -参数 : [waterType]
2019-04-04 10:16:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:16:55 -参数 : [userState]
2019-04-04 10:16:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:55 -==> Parameters: userType(String)
2019-04-04 10:16:55 -==> Parameters: waterType(String)
2019-04-04 10:16:55 -<==      Total: 2
2019-04-04 10:16:55 -耗时 : 10
2019-04-04 10:16:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:16:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:55 -==> Parameters: userState(String)
2019-04-04 10:16:55 -<==      Total: 2
2019-04-04 10:16:55 -耗时 : 13
2019-04-04 10:16:55 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:16:55 -<==      Total: 6
2019-04-04 10:16:55 -耗时 : 16
2019-04-04 10:16:55 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:17:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 10:17:11 -HTTP METHOD : GET
2019-04-04 10:17:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 10:17:11 -参数 : []
2019-04-04 10:17:11 -耗时 : 0
2019-04-04 10:17:11 -返回值 : system/dept/deptTree
2019-04-04 10:17:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 10:17:11 -HTTP METHOD : GET
2019-04-04 10:17:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 10:17:11 -参数 : []
2019-04-04 10:17:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 10:17:12 -==> Parameters: 
2019-04-04 10:17:12 -<==      Total: 3
2019-04-04 10:17:12 -耗时 : 29
2019-04-04 10:17:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 10:17:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:17:30 -HTTP METHOD : GET
2019-04-04 10:17:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:17:30 -参数 : []
2019-04-04 10:17:30 -耗时 : 1
2019-04-04 10:17:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:17:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:17:30 -HTTP METHOD : GET
2019-04-04 10:17:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:17:30 -参数 : [userType]
2019-04-04 10:17:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:17:30 -==> Parameters: userType(String)
2019-04-04 10:17:30 -<==      Total: 2
2019-04-04 10:17:30 -耗时 : 8
2019-04-04 10:17:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:17:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:17:30 -HTTP METHOD : GET
2019-04-04 10:17:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:17:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:17:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:17:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:17:30 -<==      Total: 7
2019-04-04 10:17:30 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:17:30 -==> Parameters: 
2019-04-04 10:17:30 -<==      Total: 1
2019-04-04 10:17:30 -耗时 : 140
2019-04-04 10:17:30 -返回值 : com.bootdo.common.utils.PageUtils@5ff422e9
2019-04-04 10:17:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:17:35 -HTTP METHOD : GET
2019-04-04 10:17:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:17:35 -参数 : []
2019-04-04 10:17:35 -耗时 : 1
2019-04-04 10:17:35 -返回值 : moneyLog/elecLog/add
2019-04-04 10:17:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:17:35 -HTTP METHOD : GET
2019-04-04 10:17:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:17:35 -参数 : [userType]
2019-04-04 10:17:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:17:35 -==> Parameters: userType(String)
2019-04-04 10:17:35 -<==      Total: 2
2019-04-04 10:17:35 -耗时 : 4
2019-04-04 10:17:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:17:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:17:51 -HTTP METHOD : GET
2019-04-04 10:17:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:17:51 -参数 : []
2019-04-04 10:17:51 -耗时 : 1
2019-04-04 10:17:51 -返回值 : moneyLog/elecLog/add
2019-04-04 10:17:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:17:51 -HTTP METHOD : GET
2019-04-04 10:17:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:17:51 -参数 : [userType]
2019-04-04 10:17:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:17:51 -==> Parameters: userType(String)
2019-04-04 10:17:51 -<==      Total: 2
2019-04-04 10:17:51 -耗时 : 4
2019-04-04 10:17:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:20:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 10:20:29 -==> Parameters: 1(Long)
2019-04-04 10:20:29 -<==      Total: 90
2019-04-04 10:20:29 -请求地址 : http://localhost:8081/print/print
2019-04-04 10:20:29 -HTTP METHOD : GET
2019-04-04 10:20:29 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-04 10:20:29 -参数 : []
2019-04-04 10:20:29 -耗时 : 0
2019-04-04 10:20:29 -返回值 : print/print/print
2019-04-04 10:20:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:20:30 -HTTP METHOD : GET
2019-04-04 10:20:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:20:30 -参数 : [userType]
2019-04-04 10:20:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:20:30 -==> Parameters: userType(String)
2019-04-04 10:20:30 -<==      Total: 2
2019-04-04 10:20:30 -耗时 : 7
2019-04-04 10:20:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:20:30 -请求地址 : http://localhost:8081/print/print/list
2019-04-04 10:20:30 -HTTP METHOD : GET
2019-04-04 10:20:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-04 10:20:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-04 10:20:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-04 10:20:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:20:30 -<==      Total: 4
2019-04-04 10:20:30 -==>  Preparing: select count(*) from print 
2019-04-04 10:20:30 -==> Parameters: 
2019-04-04 10:20:30 -<==      Total: 1
2019-04-04 10:20:30 -耗时 : 14
2019-04-04 10:20:30 -返回值 : com.bootdo.common.utils.PageUtils@140cfeaa
2019-04-04 10:20:31 -请求地址 : http://localhost:8081/print/print/edit/1
2019-04-04 10:20:31 -HTTP METHOD : GET
2019-04-04 10:20:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-04-04 10:20:31 -参数 : [1, {}]
2019-04-04 10:20:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-04 10:20:31 -==> Parameters: 1(Long)
2019-04-04 10:20:31 -<==      Total: 1
2019-04-04 10:20:31 -耗时 : 13
2019-04-04 10:20:31 -返回值 : print/print/edit
2019-04-04 10:20:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:20:31 -HTTP METHOD : GET
2019-04-04 10:20:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:20:31 -参数 : [userType]
2019-04-04 10:20:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:20:31 -==> Parameters: userType(String)
2019-04-04 10:20:31 -<==      Total: 2
2019-04-04 10:20:31 -耗时 : 4
2019-04-04 10:20:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:28:26 -请求地址 : http://localhost:8081/index
2019-04-04 10:28:26 -HTTP METHOD : GET
2019-04-04 10:28:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:28:26 -参数 : [{}]
2019-04-04 10:28:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:28:26 -==> Parameters: 1(Long)
2019-04-04 10:28:26 -<==      Total: 46
2019-04-04 10:28:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:28:26 -==> Parameters: 138(Long)
2019-04-04 10:28:27 -<==      Total: 1
2019-04-04 10:28:27 -耗时 : 32
2019-04-04 10:28:27 -返回值 : index_v1
2019-04-04 10:28:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:28:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:28:27.003(Timestamp)
2019-04-04 10:28:27 -<==    Updates: 1
2019-04-04 10:28:27 -请求地址 : http://localhost:8081/main
2019-04-04 10:28:27 -HTTP METHOD : GET
2019-04-04 10:28:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:28:27 -参数 : []
2019-04-04 10:28:27 -耗时 : 1
2019-04-04 10:28:27 -返回值 : main
2019-04-04 10:28:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:28:27 -HTTP METHOD : GET
2019-04-04 10:28:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:28:27 -参数 : []
2019-04-04 10:28:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:28:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:28:27 -<==      Total: 0
2019-04-04 10:28:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:28:27 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:28:27 -<==      Total: 1
2019-04-04 10:28:27 -耗时 : 13
2019-04-04 10:28:27 -返回值 : com.bootdo.common.utils.PageUtils@52755330
2019-04-04 10:28:27 -请求地址 : http://localhost:8081/main
2019-04-04 10:28:27 -HTTP METHOD : GET
2019-04-04 10:28:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:28:27 -参数 : []
2019-04-04 10:28:27 -耗时 : 1
2019-04-04 10:28:27 -返回值 : main
2019-04-04 10:28:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:28:29 -HTTP METHOD : GET
2019-04-04 10:28:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:28:29 -参数 : []
2019-04-04 10:28:29 -耗时 : 0
2019-04-04 10:28:29 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:28:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:28:30 -HTTP METHOD : GET
2019-04-04 10:28:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:28:30 -参数 : [userType]
2019-04-04 10:28:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:28:30 -==> Parameters: userType(String)
2019-04-04 10:28:30 -<==      Total: 2
2019-04-04 10:28:30 -耗时 : 4
2019-04-04 10:28:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:28:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:28:30 -HTTP METHOD : GET
2019-04-04 10:28:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:28:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:28:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:28:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:28:30 -<==      Total: 7
2019-04-04 10:28:30 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:28:30 -==> Parameters: 
2019-04-04 10:28:30 -<==      Total: 1
2019-04-04 10:28:30 -耗时 : 10
2019-04-04 10:28:30 -返回值 : com.bootdo.common.utils.PageUtils@1082f747
2019-04-04 10:28:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 10:28:32 -HTTP METHOD : GET
2019-04-04 10:28:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 10:28:32 -参数 : [1, {}]
2019-04-04 10:28:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 10:28:32 -==> Parameters: 1(Long)
2019-04-04 10:28:32 -<==      Total: 1
2019-04-04 10:28:32 -耗时 : 5
2019-04-04 10:28:32 -返回值 : moneyLog/elecLog/edit
2019-04-04 10:28:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:28:32 -HTTP METHOD : GET
2019-04-04 10:28:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:28:32 -参数 : [userType]
2019-04-04 10:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:28:32 -==> Parameters: userType(String)
2019-04-04 10:28:32 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-04-04 10:28:32 -HTTP METHOD : GET
2019-04-04 10:28:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:28:32 -参数 : [userOrg]
2019-04-04 10:28:32 -<==      Total: 2
2019-04-04 10:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:28:32 -耗时 : 4
2019-04-04 10:28:32 -==> Parameters: userOrg(String)
2019-04-04 10:28:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:28:32 -<==      Total: 0
2019-04-04 10:28:32 -耗时 : 4
2019-04-04 10:28:32 -返回值 : []
2019-04-04 10:28:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:28:34 -HTTP METHOD : GET
2019-04-04 10:28:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:28:34 -参数 : []
2019-04-04 10:28:34 -耗时 : 0
2019-04-04 10:28:34 -返回值 : moneyLog/elecLog/add
2019-04-04 10:28:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:28:35 -HTTP METHOD : GET
2019-04-04 10:28:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:28:35 -参数 : [userType]
2019-04-04 10:28:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:28:35 -==> Parameters: userType(String)
2019-04-04 10:28:35 -<==      Total: 2
2019-04-04 10:28:35 -耗时 : 5
2019-04-04 10:28:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:29:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 10:29:40 -HTTP METHOD : GET
2019-04-04 10:29:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 10:29:40 -参数 : []
2019-04-04 10:29:40 -耗时 : 1
2019-04-04 10:29:40 -返回值 : system/dept/deptTree
2019-04-04 10:29:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 10:29:41 -HTTP METHOD : GET
2019-04-04 10:29:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 10:29:41 -参数 : []
2019-04-04 10:29:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 10:29:41 -==> Parameters: 
2019-04-04 10:29:41 -<==      Total: 3
2019-04-04 10:29:41 -耗时 : 8
2019-04-04 10:29:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 10:30:31 -请求地址 : http://localhost:8081/index
2019-04-04 10:30:31 -HTTP METHOD : GET
2019-04-04 10:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:30:31 -参数 : [{}]
2019-04-04 10:30:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:30:31 -==> Parameters: 1(Long)
2019-04-04 10:30:31 -<==      Total: 46
2019-04-04 10:30:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:30:31 -==> Parameters: 138(Long)
2019-04-04 10:30:31 -<==      Total: 1
2019-04-04 10:30:31 -耗时 : 40
2019-04-04 10:30:31 -返回值 : index_v1
2019-04-04 10:30:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:30:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:30:31.238(Timestamp)
2019-04-04 10:30:31 -请求地址 : http://localhost:8081/main
2019-04-04 10:30:31 -HTTP METHOD : GET
2019-04-04 10:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:30:31 -参数 : []
2019-04-04 10:30:31 -耗时 : 0
2019-04-04 10:30:31 -返回值 : main
2019-04-04 10:30:31 -<==    Updates: 1
2019-04-04 10:30:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:30:31 -HTTP METHOD : GET
2019-04-04 10:30:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:30:31 -参数 : []
2019-04-04 10:30:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:30:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:30:31 -<==      Total: 0
2019-04-04 10:30:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:30:31 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:30:31 -<==      Total: 1
2019-04-04 10:30:31 -耗时 : 15
2019-04-04 10:30:31 -返回值 : com.bootdo.common.utils.PageUtils@a8c1908
2019-04-04 10:30:31 -请求地址 : http://localhost:8081/main
2019-04-04 10:30:31 -HTTP METHOD : GET
2019-04-04 10:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:30:31 -参数 : []
2019-04-04 10:30:31 -耗时 : 1
2019-04-04 10:30:31 -返回值 : main
2019-04-04 10:30:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 10:30:33 -==> Parameters: 1(Long)
2019-04-04 10:30:33 -<==      Total: 90
2019-04-04 10:30:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:30:33 -HTTP METHOD : GET
2019-04-04 10:30:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:30:33 -参数 : []
2019-04-04 10:30:33 -耗时 : 0
2019-04-04 10:30:33 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:30:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:30:34 -HTTP METHOD : GET
2019-04-04 10:30:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:30:34 -参数 : [userType]
2019-04-04 10:30:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:30:34 -==> Parameters: userType(String)
2019-04-04 10:30:34 -<==      Total: 2
2019-04-04 10:30:34 -耗时 : 3
2019-04-04 10:30:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:30:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:30:34 -HTTP METHOD : GET
2019-04-04 10:30:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:30:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:30:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:30:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:30:34 -<==      Total: 7
2019-04-04 10:30:34 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:30:34 -==> Parameters: 
2019-04-04 10:30:34 -<==      Total: 1
2019-04-04 10:30:34 -耗时 : 16
2019-04-04 10:30:34 -返回值 : com.bootdo.common.utils.PageUtils@4059d75
2019-04-04 10:30:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:30:36 -HTTP METHOD : GET
2019-04-04 10:30:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:30:36 -参数 : []
2019-04-04 10:30:36 -耗时 : 1
2019-04-04 10:30:36 -返回值 : moneyLog/elecLog/add
2019-04-04 10:30:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:30:36 -HTTP METHOD : GET
2019-04-04 10:30:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:30:36 -参数 : [userType]
2019-04-04 10:30:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:30:36 -==> Parameters: userType(String)
2019-04-04 10:30:36 -<==      Total: 2
2019-04-04 10:30:36 -耗时 : 6
2019-04-04 10:30:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:35:33 -请求地址 : http://localhost:8081/index
2019-04-04 10:35:33 -HTTP METHOD : GET
2019-04-04 10:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:35:33 -参数 : [{}]
2019-04-04 10:35:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:35:33 -==> Parameters: 1(Long)
2019-04-04 10:35:33 -<==      Total: 46
2019-04-04 10:35:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:35:33 -==> Parameters: 138(Long)
2019-04-04 10:35:33 -<==      Total: 1
2019-04-04 10:35:33 -耗时 : 37
2019-04-04 10:35:33 -返回值 : index_v1
2019-04-04 10:35:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:35:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:35:33.473(Timestamp)
2019-04-04 10:35:33 -请求地址 : http://localhost:8081/main
2019-04-04 10:35:33 -HTTP METHOD : GET
2019-04-04 10:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:35:33 -参数 : []
2019-04-04 10:35:33 -耗时 : 0
2019-04-04 10:35:33 -返回值 : main
2019-04-04 10:35:33 -<==    Updates: 1
2019-04-04 10:35:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:35:33 -HTTP METHOD : GET
2019-04-04 10:35:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:35:33 -参数 : []
2019-04-04 10:35:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:35:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:35:33 -<==      Total: 0
2019-04-04 10:35:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:35:33 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:35:33 -<==      Total: 1
2019-04-04 10:35:33 -耗时 : 8
2019-04-04 10:35:33 -返回值 : com.bootdo.common.utils.PageUtils@1d35e097
2019-04-04 10:35:34 -请求地址 : http://localhost:8081/main
2019-04-04 10:35:34 -HTTP METHOD : GET
2019-04-04 10:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:35:34 -参数 : []
2019-04-04 10:35:34 -耗时 : 0
2019-04-04 10:35:34 -返回值 : main
2019-04-04 10:35:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:35:38 -HTTP METHOD : GET
2019-04-04 10:35:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:35:38 -参数 : []
2019-04-04 10:35:38 -耗时 : 1
2019-04-04 10:35:38 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:35:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:35:38 -HTTP METHOD : GET
2019-04-04 10:35:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:35:38 -参数 : [userType]
2019-04-04 10:35:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:35:38 -==> Parameters: userType(String)
2019-04-04 10:35:38 -<==      Total: 2
2019-04-04 10:35:38 -耗时 : 5
2019-04-04 10:35:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:35:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:35:38 -HTTP METHOD : GET
2019-04-04 10:35:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:35:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:35:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:35:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:35:38 -<==      Total: 7
2019-04-04 10:35:38 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:35:38 -==> Parameters: 
2019-04-04 10:35:38 -<==      Total: 1
2019-04-04 10:35:38 -耗时 : 7
2019-04-04 10:35:38 -返回值 : com.bootdo.common.utils.PageUtils@3cfe7325
2019-04-04 10:35:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:35:40 -HTTP METHOD : GET
2019-04-04 10:35:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:35:40 -参数 : []
2019-04-04 10:35:40 -耗时 : 0
2019-04-04 10:35:40 -返回值 : moneyLog/elecLog/add
2019-04-04 10:35:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:35:40 -HTTP METHOD : GET
2019-04-04 10:35:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:35:40 -参数 : [userType]
2019-04-04 10:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:35:40 -==> Parameters: userType(String)
2019-04-04 10:35:40 -<==      Total: 2
2019-04-04 10:35:40 -耗时 : 3
2019-04-04 10:35:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:36:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:36:37 -HTTP METHOD : GET
2019-04-04 10:36:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:36:37 -参数 : []
2019-04-04 10:36:37 -耗时 : 0
2019-04-04 10:36:37 -返回值 : moneyLog/elecLog/add
2019-04-04 10:36:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:36:37 -HTTP METHOD : GET
2019-04-04 10:36:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:36:37 -参数 : [userType]
2019-04-04 10:36:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:36:37 -==> Parameters: userType(String)
2019-04-04 10:36:37 -<==      Total: 2
2019-04-04 10:36:37 -耗时 : 5
2019-04-04 10:36:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:36:56 -请求地址 : http://localhost:8081/login;JSESSIONID=40e72142-e321-426d-9911-efa7838b0ea6
2019-04-04 10:36:56 -HTTP METHOD : GET
2019-04-04 10:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 10:36:56 -参数 : [{}]
2019-04-04 10:36:56 -耗时 : 1
2019-04-04 10:36:56 -返回值 : login
2019-04-04 10:36:56 -请求地址 : http://localhost:8081/getVerify
2019-04-04 10:36:56 -HTTP METHOD : GET
2019-04-04 10:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 10:36:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b3f1805, org.apache.shiro.web.servlet.ShiroHttpServletResponse@16238411]
2019-04-04 10:36:56 -5252
2019-04-04 10:36:56 -耗时 : 32
2019-04-04 10:36:56 -返回值 : null
2019-04-04 10:36:56 -请求地址 : http://localhost:8081/login
2019-04-04 10:36:56 -HTTP METHOD : GET
2019-04-04 10:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 10:36:56 -参数 : [{}]
2019-04-04 10:36:56 -耗时 : 0
2019-04-04 10:36:56 -返回值 : login
2019-04-04 10:37:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 403]
2019-04-04 10:37:01 -请求地址 : http://localhost:8081/login
2019-04-04 10:37:01 -HTTP METHOD : POST
2019-04-04 10:37:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 10:37:01 -参数 : [admin, 111111, 5252, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9ffcba8]
2019-04-04 10:37:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 10:37:01 -==> Parameters: admin(String)
2019-04-04 10:37:01 -<==      Total: 1
2019-04-04 10:37:01 -耗时 : 16
2019-04-04 10:37:01 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:37:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:37:01 -==> Parameters: 1(Long), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 10:37:01.387(Timestamp)
2019-04-04 10:37:01 -请求地址 : http://localhost:8081/index
2019-04-04 10:37:01 -HTTP METHOD : GET
2019-04-04 10:37:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:37:01 -参数 : [{}]
2019-04-04 10:37:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:37:01 -==> Parameters: 1(Long)
2019-04-04 10:37:01 -<==      Total: 46
2019-04-04 10:37:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:37:01 -==> Parameters: 138(Long)
2019-04-04 10:37:01 -<==      Total: 1
2019-04-04 10:37:01 -耗时 : 23
2019-04-04 10:37:01 -返回值 : index_v1
2019-04-04 10:37:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:37:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:37:01.434(Timestamp)
2019-04-04 10:37:01 -<==    Updates: 1
2019-04-04 10:37:01 -<==    Updates: 1
2019-04-04 10:37:01 -请求地址 : http://localhost:8081/main
2019-04-04 10:37:01 -HTTP METHOD : GET
2019-04-04 10:37:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:37:01 -参数 : []
2019-04-04 10:37:01 -耗时 : 0
2019-04-04 10:37:01 -返回值 : main
2019-04-04 10:37:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:37:02 -HTTP METHOD : GET
2019-04-04 10:37:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:37:02 -参数 : []
2019-04-04 10:37:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:37:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:37:02 -<==      Total: 0
2019-04-04 10:37:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:37:02 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:37:02 -<==      Total: 1
2019-04-04 10:37:02 -耗时 : 6
2019-04-04 10:37:02 -返回值 : com.bootdo.common.utils.PageUtils@13590a5c
2019-04-04 10:37:02 -请求地址 : http://localhost:8081/main
2019-04-04 10:37:02 -HTTP METHOD : GET
2019-04-04 10:37:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:37:02 -参数 : []
2019-04-04 10:37:02 -耗时 : 0
2019-04-04 10:37:02 -返回值 : main
2019-04-04 10:37:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 10:37:12 -==> Parameters: 1(Long)
2019-04-04 10:37:12 -<==      Total: 90
2019-04-04 10:37:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:37:12 -HTTP METHOD : GET
2019-04-04 10:37:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:37:12 -参数 : []
2019-04-04 10:37:12 -耗时 : 0
2019-04-04 10:37:12 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:37:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:37:13 -HTTP METHOD : GET
2019-04-04 10:37:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:37:13 -参数 : [userType]
2019-04-04 10:37:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:37:13 -==> Parameters: userType(String)
2019-04-04 10:37:13 -<==      Total: 2
2019-04-04 10:37:13 -耗时 : 3
2019-04-04 10:37:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:37:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:37:13 -HTTP METHOD : GET
2019-04-04 10:37:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:37:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:37:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:37:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:37:13 -<==      Total: 7
2019-04-04 10:37:13 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:37:13 -==> Parameters: 
2019-04-04 10:37:13 -<==      Total: 1
2019-04-04 10:37:13 -耗时 : 8
2019-04-04 10:37:13 -返回值 : com.bootdo.common.utils.PageUtils@7cf9f679
2019-04-04 10:37:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:37:15 -HTTP METHOD : GET
2019-04-04 10:37:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:37:15 -参数 : []
2019-04-04 10:37:15 -耗时 : 0
2019-04-04 10:37:15 -返回值 : moneyLog/elecLog/add
2019-04-04 10:37:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:37:15 -HTTP METHOD : GET
2019-04-04 10:37:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:37:15 -参数 : [userType]
2019-04-04 10:37:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:37:15 -==> Parameters: userType(String)
2019-04-04 10:37:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 10:37:15 -HTTP METHOD : GET
2019-04-04 10:37:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:37:15 -参数 : [elecType]
2019-04-04 10:37:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:37:15 -==> Parameters: elecType(String)
2019-04-04 10:37:15 -<==      Total: 2
2019-04-04 10:37:15 -耗时 : 4
2019-04-04 10:37:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:37:15 -<==      Total: 2
2019-04-04 10:37:15 -耗时 : 6
2019-04-04 10:37:15 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:38:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 10:38:30 -HTTP METHOD : GET
2019-04-04 10:38:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 10:38:30 -参数 : []
2019-04-04 10:38:30 -耗时 : 0
2019-04-04 10:38:30 -返回值 : system/dept/deptTree
2019-04-04 10:38:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 10:38:30 -HTTP METHOD : GET
2019-04-04 10:38:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 10:38:30 -参数 : []
2019-04-04 10:38:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 10:38:30 -==> Parameters: 
2019-04-04 10:38:30 -<==      Total: 3
2019-04-04 10:38:30 -耗时 : 4
2019-04-04 10:38:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 10:38:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-04 10:38:48 -HTTP METHOD : POST
2019-04-04 10:38:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-04 10:38:48 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@a43bd1b]
2019-04-04 10:38:48 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:38:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:38:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'(String), null, 2019-04-04 10:38:48.098(Timestamp)
2019-04-04 10:38:48 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:198)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$1f754987.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 10:38:48 -<==    Updates: 1
2019-04-04 10:39:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-04 10:39:01 -HTTP METHOD : POST
2019-04-04 10:39:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-04 10:39:01 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@7d564172]
2019-04-04 10:39:01 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:39:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:39:01 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:198)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$1f754987.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 10:39:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'(String), null, 2019-04-04 10:39:01.289(Timestamp)
2019-04-04 10:39:01 -<==    Updates: 1
2019-04-04 10:40:44 -请求地址 : http://localhost:8081/index
2019-04-04 10:40:44 -HTTP METHOD : GET
2019-04-04 10:40:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:40:44 -参数 : [{}]
2019-04-04 10:40:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:40:44 -==> Parameters: 1(Long)
2019-04-04 10:40:44 -<==      Total: 46
2019-04-04 10:40:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:40:44 -==> Parameters: 138(Long)
2019-04-04 10:40:44 -<==      Total: 1
2019-04-04 10:40:44 -耗时 : 32
2019-04-04 10:40:44 -返回值 : index_v1
2019-04-04 10:40:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:40:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:40:44.385(Timestamp)
2019-04-04 10:40:44 -<==    Updates: 1
2019-04-04 10:40:44 -请求地址 : http://localhost:8081/main
2019-04-04 10:40:44 -HTTP METHOD : GET
2019-04-04 10:40:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:40:44 -参数 : []
2019-04-04 10:40:44 -耗时 : 0
2019-04-04 10:40:44 -返回值 : main
2019-04-04 10:40:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:40:44 -HTTP METHOD : GET
2019-04-04 10:40:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:40:44 -参数 : []
2019-04-04 10:40:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:40:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:40:44 -<==      Total: 0
2019-04-04 10:40:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:40:44 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:40:44 -<==      Total: 1
2019-04-04 10:40:44 -耗时 : 10
2019-04-04 10:40:44 -返回值 : com.bootdo.common.utils.PageUtils@547aa159
2019-04-04 10:40:44 -请求地址 : http://localhost:8081/main
2019-04-04 10:40:44 -HTTP METHOD : GET
2019-04-04 10:40:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:40:44 -参数 : []
2019-04-04 10:40:44 -耗时 : 0
2019-04-04 10:40:44 -返回值 : main
2019-04-04 10:40:46 -请求地址 : http://localhost:8081/elec/elec
2019-04-04 10:40:46 -HTTP METHOD : GET
2019-04-04 10:40:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-04 10:40:46 -参数 : []
2019-04-04 10:40:46 -耗时 : 1
2019-04-04 10:40:46 -返回值 : elec/elec/elec
2019-04-04 10:40:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:40:47 -HTTP METHOD : GET
2019-04-04 10:40:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:40:47 -参数 : [userType]
2019-04-04 10:40:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:40:47 -==> Parameters: userType(String)
2019-04-04 10:40:47 -<==      Total: 2
2019-04-04 10:40:47 -耗时 : 4
2019-04-04 10:40:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:40:47 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-04 10:40:47 -HTTP METHOD : GET
2019-04-04 10:40:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-04 10:40:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5564505d]
2019-04-04 10:40:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-04-04 10:40:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:40:47 -<==      Total: 10
2019-04-04 10:40:47 -==>  Preparing: select count(*) from elec 
2019-04-04 10:40:47 -==> Parameters: 
2019-04-04 10:40:47 -<==      Total: 1
2019-04-04 10:40:47 -耗时 : 31
2019-04-04 10:40:47 -返回值 : com.bootdo.common.utils.PageUtils@910f4d2
2019-04-04 10:40:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:40:50 -HTTP METHOD : GET
2019-04-04 10:40:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:40:50 -参数 : []
2019-04-04 10:40:50 -耗时 : 0
2019-04-04 10:40:50 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:40:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:40:50 -HTTP METHOD : GET
2019-04-04 10:40:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:40:50 -参数 : [userType]
2019-04-04 10:40:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:40:50 -==> Parameters: userType(String)
2019-04-04 10:40:50 -<==      Total: 2
2019-04-04 10:40:50 -耗时 : 4
2019-04-04 10:40:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:40:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:40:50 -HTTP METHOD : GET
2019-04-04 10:40:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:40:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:40:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:40:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:40:50 -<==      Total: 7
2019-04-04 10:40:50 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:40:50 -==> Parameters: 
2019-04-04 10:40:50 -<==      Total: 1
2019-04-04 10:40:50 -耗时 : 7
2019-04-04 10:40:50 -返回值 : com.bootdo.common.utils.PageUtils@7d85539
2019-04-04 10:40:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:40:52 -HTTP METHOD : GET
2019-04-04 10:40:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:40:52 -参数 : []
2019-04-04 10:40:52 -耗时 : 1
2019-04-04 10:40:52 -返回值 : moneyLog/elecLog/add
2019-04-04 10:40:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:40:52 -HTTP METHOD : GET
2019-04-04 10:40:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:40:52 -参数 : [userType]
2019-04-04 10:40:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:40:52 -==> Parameters: userType(String)
2019-04-04 10:40:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 10:40:52 -HTTP METHOD : GET
2019-04-04 10:40:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:40:52 -<==      Total: 2
2019-04-04 10:40:52 -耗时 : 4
2019-04-04 10:40:52 -参数 : [elecType]
2019-04-04 10:40:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:40:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:40:52 -==> Parameters: elecType(String)
2019-04-04 10:40:52 -<==      Total: 2
2019-04-04 10:40:52 -耗时 : 12
2019-04-04 10:40:52 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:41:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 10:41:01 -HTTP METHOD : GET
2019-04-04 10:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 10:41:01 -参数 : []
2019-04-04 10:41:01 -耗时 : 1
2019-04-04 10:41:01 -返回值 : system/dept/deptTree
2019-04-04 10:41:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 10:41:01 -HTTP METHOD : GET
2019-04-04 10:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 10:41:01 -参数 : []
2019-04-04 10:41:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 10:41:01 -==> Parameters: 
2019-04-04 10:41:01 -<==      Total: 3
2019-04-04 10:41:01 -耗时 : 4
2019-04-04 10:41:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 10:41:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-04 10:41:09 -HTTP METHOD : POST
2019-04-04 10:41:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-04 10:41:09 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@71c844a4]
2019-04-04 10:41:09 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:41:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:41:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'(String), null, 2019-04-04 10:41:09.196(Timestamp)
2019-04-04 10:41:09 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:198)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$1f754987.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'elecType' in 'class com.bootdo.moneyLog.domain.ElecLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 10:41:09 -<==    Updates: 1
2019-04-04 10:42:37 -Starting BootdoApplication on ZJZL-20180906VX with PID 9612 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 10:42:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 10:42:37 -The following profiles are active: dev
2019-04-04 10:42:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 10:42:37 CST 2019]; root of context hierarchy
2019-04-04 10:42:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 10:42:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6c6ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ffc59d8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 10:42:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 10:42:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 10:42:45 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 10:42:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 10:42:45 -Starting service [Tomcat]
2019-04-04 10:42:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 10:42:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 10:42:45 -Initializing Spring embedded WebApplicationContext
2019-04-04 10:42:45 -Root WebApplicationContext: initialization completed in 7997 ms
2019-04-04 10:42:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 10:42:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 10:42:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 10:42:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 10:42:46 -Filter xssFilter was not registered (disabled)
2019-04-04 10:42:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 10:42:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 10:42:46 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 10:42:46 -Servlet dispatcherServlet mapped to [/]
2019-04-04 10:42:49 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 10:42:37 CST 2019]; root of context hierarchy
2019-04-04 10:42:49 -Using default implementation for ThreadExecutor
2019-04-04 10:42:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 10:42:49 -Quartz Scheduler v.2.2.1 created.
2019-04-04 10:42:49 -RAMJobStore initialized.
2019-04-04 10:42:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 10:42:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 10:42:49 -Quartz scheduler version: 2.2.1
2019-04-04 10:42:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5940b14e
2019-04-04 10:42:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 10:42:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 10:42:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 10:42:53 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 10:42:53 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 10:42:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 10:42:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 10:42:53 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 10:42:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 10:42:53 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 10:42:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 10:42:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 10:42:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 10:42:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 10:42:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 10:42:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 10:42:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 10:42:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 10:42:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 10:42:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 10:42:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 10:42:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 10:42:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 10:42:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 10:42:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 10:42:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 10:42:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 10:42:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 10:42:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 10:42:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 10:42:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 10:42:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 10:42:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 10:42:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 10:42:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 10:42:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 10:42:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 10:42:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 10:42:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 10:42:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 10:42:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 10:42:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 10:42:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:42:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:42:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 10:42:53 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 10:42:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 10:42:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 10:42:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 10:42:53 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 10:42:53 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 10:42:53 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 10:42:53 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 10:42:53 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 10:42:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 10:42:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 10:42:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 10:42:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 10:42:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 10:42:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 10:42:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 10:42:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 10:42:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 10:42:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 10:42:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 10:42:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 10:42:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 10:42:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 10:42:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 10:42:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 10:42:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 10:42:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 10:42:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 10:42:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 10:42:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 10:42:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 10:42:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 10:42:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 10:42:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 10:42:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 10:42:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 10:42:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 10:42:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 10:42:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 10:42:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 10:42:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 10:42:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 10:42:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 10:42:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 10:42:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 10:42:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 10:42:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:42:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 10:42:37 CST 2019]; root of context hierarchy
2019-04-04 10:42:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:42:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:42:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 10:42:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 10:42:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 10:42:57 -Registering beans for JMX exposure on startup
2019-04-04 10:42:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 10:42:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 10:42:57 -Starting beans in phase 2147483647
2019-04-04 10:42:57 -Context refreshed
2019-04-04 10:42:57 -Found 1 custom documentation plugin(s)
2019-04-04 10:42:57 -Scanning for api listing references
2019-04-04 10:42:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 10:42:58 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 10:42:58 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 10:42:58 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 10:42:58 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_1
2019-04-04 10:42:58 -Generating unique operation named: addUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: editUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: listUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_2
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_3
2019-04-04 10:42:58 -Generating unique operation named: saveUsingPOST_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPOST_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPUT_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 10:42:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 10:42:58 -Generating unique operation named: addUsingGET_2
2019-04-04 10:42:58 -Generating unique operation named: editUsingGET_2
2019-04-04 10:42:58 -Generating unique operation named: listUsingGET_2
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_4
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_5
2019-04-04 10:42:58 -Generating unique operation named: saveUsingPOST_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPOST_2
2019-04-04 10:42:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: addUsingGET_3
2019-04-04 10:42:58 -Generating unique operation named: editUsingGET_3
2019-04-04 10:42:58 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 10:42:58 -Generating unique operation named: listUsingGET_3
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_6
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_7
2019-04-04 10:42:58 -Generating unique operation named: saveUsingPOST_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingGET_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPOST_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPUT_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 10:42:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 10:42:58 -Generating unique operation named: addUsingGET_4
2019-04-04 10:42:58 -Generating unique operation named: editUsingGET_4
2019-04-04 10:42:58 -Generating unique operation named: listUsingGET_4
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_8
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_9
2019-04-04 10:42:58 -Generating unique operation named: saveUsingPOST_4
2019-04-04 10:42:58 -Generating unique operation named: updateUsingGET_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPOST_4
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPUT_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 10:42:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 10:42:58 -Generating unique operation named: ElecUsingGET_1
2019-04-04 10:42:58 -Generating unique operation named: addUsingGET_5
2019-04-04 10:42:58 -Generating unique operation named: editUsingGET_5
2019-04-04 10:42:58 -Generating unique operation named: listUsingGET_5
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_10
2019-04-04 10:42:58 -Generating unique operation named: removeUsingPOST_11
2019-04-04 10:42:58 -Generating unique operation named: saveUsingPOST_5
2019-04-04 10:42:58 -Generating unique operation named: updateUsingGET_4
2019-04-04 10:42:58 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_4
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_6
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_6
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_6
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_7
2019-04-04 10:42:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_7
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_12
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_13
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingGET_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 10:42:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_7
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_8
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_8
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_14
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_15
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingGET_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_8
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_9
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_9
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_16
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_17
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingGET_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_9
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_10
2019-04-04 10:42:59 -Generating unique operation named: infoUsingGET_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingPOST_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingPUT_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 10:42:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_10
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_18
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_19
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_10
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_11
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_20
2019-04-04 10:42:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_10
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_11
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_12
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_21
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_10
2019-04-04 10:42:59 -Generating unique operation named: treeUsingGET_1
2019-04-04 10:42:59 -Generating unique operation named: treeUsingGET_2
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_11
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_11
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_12
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_13
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_22
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_23
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_11
2019-04-04 10:42:59 -Generating unique operation named: updateUsingGET_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_12
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_12
2019-04-04 10:42:59 -Generating unique operation named: editUsingGET_13
2019-04-04 10:42:59 -Generating unique operation named: listUsingGET_14
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_24
2019-04-04 10:42:59 -Generating unique operation named: removeUsingPOST_25
2019-04-04 10:42:59 -Generating unique operation named: saveUsingPOST_12
2019-04-04 10:42:59 -Generating unique operation named: updateUsingGET_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPOST_13
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPUT_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 10:42:59 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 10:42:59 -Generating unique operation named: addUsingGET_13
2019-04-04 10:42:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 10:43:00 -Generating unique operation named: editUsingGET_14
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_15
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_13
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_14
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPOST_14
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_16
2019-04-04 10:43:00 -Generating unique operation named: listUsingHEAD_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingPOST_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingPUT_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingPATCH_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingDELETE_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 10:43:00 -Generating unique operation named: listUsingTRACE_1
2019-04-04 10:43:00 -Generating unique operation named: addUsingGET_14
2019-04-04 10:43:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 10:43:00 -Generating unique operation named: editUsingGET_15
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_17
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_26
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_15
2019-04-04 10:43:00 -Generating unique operation named: treeUsingGET_3
2019-04-04 10:43:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPOST_15
2019-04-04 10:43:00 -Generating unique operation named: addUsingGET_15
2019-04-04 10:43:00 -Generating unique operation named: editUsingGET_16
2019-04-04 10:43:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_18
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_27
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_28
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_16
2019-04-04 10:43:00 -Generating unique operation named: updateUsingGET_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPOST_16
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPUT_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 10:43:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 10:43:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 10:43:00 -Generating unique operation named: addUsingGET_16
2019-04-04 10:43:00 -Generating unique operation named: editUsingGET_17
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_19
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_29
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_30
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_17
2019-04-04 10:43:00 -Generating unique operation named: updateUsingGET_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPOST_17
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPUT_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 10:43:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 10:43:00 -Generating unique operation named: addUsingGET_17
2019-04-04 10:43:00 -Generating unique operation named: editUsingGET_18
2019-04-04 10:43:00 -Generating unique operation named: listUsingGET_20
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_31
2019-04-04 10:43:00 -Generating unique operation named: removeUsingPOST_32
2019-04-04 10:43:00 -Generating unique operation named: saveUsingPOST_18
2019-04-04 10:43:00 -Generating unique operation named: updateUsingGET_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPOST_18
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPUT_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 10:43:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 10:43:00 -Starting Quartz Scheduler now
2019-04-04 10:43:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 10:43:00 -Starting...
2019-04-04 10:43:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 10:43:00 -Started.
2019-04-04 10:43:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 10:43:00 -Using a shared selector for servlet write/read
2019-04-04 10:43:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 10:43:00 -Started BootdoApplication in 24.15 seconds (JVM running for 25.228)
2019-04-04 10:43:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 10:43:00 -==> Parameters: 
2019-04-04 10:43:01 -<==      Total: 1
2019-04-04 10:43:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 10:43:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 10:43:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-04-04 10:43:05 -Enabling session validation scheduler...
2019-04-04 10:43:05 -请求地址 : http://localhost:8081/login;JSESSIONID=662137f7-0bbd-4d10-8f7d-6e9189d44ae6
2019-04-04 10:43:05 -HTTP METHOD : GET
2019-04-04 10:43:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 10:43:05 -参数 : [{}]
2019-04-04 10:43:05 -耗时 : 5
2019-04-04 10:43:05 -返回值 : login
2019-04-04 10:43:07 -请求地址 : http://localhost:8081/getVerify
2019-04-04 10:43:07 -HTTP METHOD : GET
2019-04-04 10:43:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 10:43:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73aa8d9f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77951732]
2019-04-04 10:43:07 -7838
2019-04-04 10:43:07 -耗时 : 574
2019-04-04 10:43:07 -返回值 : null
2019-04-04 10:43:14 -请求地址 : http://localhost:8081/login
2019-04-04 10:43:14 -HTTP METHOD : POST
2019-04-04 10:43:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 10:43:14 -参数 : [admin, 111111, 7838, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5918999]
2019-04-04 10:43:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 10:43:14 -==> Parameters: admin(String)
2019-04-04 10:43:14 -<==      Total: 1
2019-04-04 10:43:14 -耗时 : 86
2019-04-04 10:43:14 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:43:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 10:43:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:43:14 -==> Parameters: 1(Long), admin(String), 登录(String), 87(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 10:43:14.45(Timestamp)
2019-04-04 10:43:14 -请求地址 : http://localhost:8081/index
2019-04-04 10:43:14 -HTTP METHOD : GET
2019-04-04 10:43:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:43:14 -参数 : [{}]
2019-04-04 10:43:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:43:14 -==> Parameters: 1(Long)
2019-04-04 10:43:14 -<==    Updates: 1
2019-04-04 10:43:14 -<==      Total: 46
2019-04-04 10:43:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:43:14 -==> Parameters: 138(Long)
2019-04-04 10:43:14 -<==      Total: 1
2019-04-04 10:43:14 -耗时 : 166
2019-04-04 10:43:14 -返回值 : index_v1
2019-04-04 10:43:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:43:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 166(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:43:14.729(Timestamp)
2019-04-04 10:43:14 -<==    Updates: 1
2019-04-04 10:43:14 -请求地址 : http://localhost:8081/main
2019-04-04 10:43:14 -HTTP METHOD : GET
2019-04-04 10:43:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:43:14 -参数 : []
2019-04-04 10:43:14 -耗时 : 1
2019-04-04 10:43:14 -返回值 : main
2019-04-04 10:43:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:43:15 -HTTP METHOD : GET
2019-04-04 10:43:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:43:15 -参数 : []
2019-04-04 10:43:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:43:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:43:15 -<==      Total: 0
2019-04-04 10:43:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:43:15 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:43:15 -请求地址 : http://localhost:8081/main
2019-04-04 10:43:15 -HTTP METHOD : GET
2019-04-04 10:43:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:43:15 -参数 : []
2019-04-04 10:43:15 -耗时 : 0
2019-04-04 10:43:15 -返回值 : main
2019-04-04 10:43:15 -<==      Total: 1
2019-04-04 10:43:15 -耗时 : 149
2019-04-04 10:43:15 -返回值 : com.bootdo.common.utils.PageUtils@1ab649b3
2019-04-04 10:43:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 10:43:18 -==> Parameters: 1(Long)
2019-04-04 10:43:18 -<==      Total: 90
2019-04-04 10:43:18 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:43:18 -HTTP METHOD : GET
2019-04-04 10:43:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:43:18 -参数 : []
2019-04-04 10:43:18 -耗时 : 0
2019-04-04 10:43:18 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:43:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:43:19 -HTTP METHOD : GET
2019-04-04 10:43:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:43:19 -参数 : [userType]
2019-04-04 10:43:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:43:19 -==> Parameters: userType(String)
2019-04-04 10:43:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:43:19 -HTTP METHOD : GET
2019-04-04 10:43:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:43:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:43:19 -<==      Total: 2
2019-04-04 10:43:19 -耗时 : 122
2019-04-04 10:43:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:43:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:43:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:43:19 -<==      Total: 7
2019-04-04 10:43:19 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:43:19 -==> Parameters: 
2019-04-04 10:43:19 -<==      Total: 1
2019-04-04 10:43:19 -耗时 : 56
2019-04-04 10:43:19 -返回值 : com.bootdo.common.utils.PageUtils@71b0463e
2019-04-04 10:43:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 10:43:21 -HTTP METHOD : GET
2019-04-04 10:43:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 10:43:21 -参数 : []
2019-04-04 10:43:21 -耗时 : 3
2019-04-04 10:43:21 -返回值 : moneyLog/elecLog/add
2019-04-04 10:43:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:43:21 -HTTP METHOD : GET
2019-04-04 10:43:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:43:21 -参数 : [userType]
2019-04-04 10:43:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:43:21 -==> Parameters: userType(String)
2019-04-04 10:43:21 -<==      Total: 2
2019-04-04 10:43:21 -耗时 : 10
2019-04-04 10:43:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:43:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 10:43:21 -HTTP METHOD : GET
2019-04-04 10:43:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:43:21 -参数 : [elecType]
2019-04-04 10:43:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:43:21 -==> Parameters: elecType(String)
2019-04-04 10:43:21 -<==      Total: 2
2019-04-04 10:43:21 -耗时 : 7
2019-04-04 10:43:21 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:43:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 10:43:29 -HTTP METHOD : GET
2019-04-04 10:43:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 10:43:29 -参数 : []
2019-04-04 10:43:29 -耗时 : 1
2019-04-04 10:43:29 -返回值 : system/dept/deptTree
2019-04-04 10:43:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 10:43:29 -HTTP METHOD : GET
2019-04-04 10:43:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 10:43:29 -参数 : []
2019-04-04 10:43:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 10:43:29 -==> Parameters: 
2019-04-04 10:43:29 -<==      Total: 3
2019-04-04 10:43:29 -耗时 : 21
2019-04-04 10:43:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 10:43:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-04 10:43:39 -HTTP METHOD : POST
2019-04-04 10:43:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-04 10:43:39 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@ebc1d81]
2019-04-04 10:43:39 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:43:39 -==> Parameters: 1(String), 1(String), A(String), 2(String), 0(String), 1(BigDecimal), 2019-04-04 10:43:39.699(Timestamp), 2019-04(String), 1(Long), 2019-04-04 10:43:39.699(Timestamp), 1(Long), 1(String)
2019-04-04 10:43:39 -<==    Updates: 1
2019-04-04 10:43:39 -耗时 : 189
2019-04-04 10:43:39 -返回值 : {msg=操作成功, code=0}
2019-04-04 10:43:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:43:39 -HTTP METHOD : GET
2019-04-04 10:43:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:43:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:43:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:43:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:43:39 -<==      Total: 8
2019-04-04 10:43:39 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:43:39 -==> Parameters: 
2019-04-04 10:43:39 -<==      Total: 1
2019-04-04 10:43:39 -耗时 : 17
2019-04-04 10:43:39 -返回值 : com.bootdo.common.utils.PageUtils@5b34cbcb
2019-04-04 10:43:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-04 10:44:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-04 10:44:02 -HTTP METHOD : GET
2019-04-04 10:44:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 10:44:02 -参数 : [8, {}]
2019-04-04 10:44:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 10:44:02 -==> Parameters: 8(Long)
2019-04-04 10:44:02 -<==      Total: 1
2019-04-04 10:44:02 -耗时 : 16
2019-04-04 10:44:02 -返回值 : moneyLog/elecLog/edit
2019-04-04 10:44:03 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-04-04 10:44:03 -HTTP METHOD : GET
2019-04-04 10:44:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:44:03 -参数 : [userOrg]
2019-04-04 10:44:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:44:03 -==> Parameters: userOrg(String)
2019-04-04 10:44:03 -<==      Total: 0
2019-04-04 10:44:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:44:03 -HTTP METHOD : GET
2019-04-04 10:44:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:44:03 -参数 : [userType]
2019-04-04 10:44:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:44:03 -耗时 : 10
2019-04-04 10:44:03 -返回值 : []
2019-04-04 10:44:03 -==> Parameters: userType(String)
2019-04-04 10:44:03 -<==      Total: 2
2019-04-04 10:44:03 -耗时 : 17
2019-04-04 10:44:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:46:48 -请求地址 : http://localhost:8081/index
2019-04-04 10:46:48 -HTTP METHOD : GET
2019-04-04 10:46:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 10:46:48 -参数 : [{}]
2019-04-04 10:46:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 10:46:48 -==> Parameters: 1(Long)
2019-04-04 10:46:48 -<==      Total: 46
2019-04-04 10:46:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 10:46:48 -==> Parameters: 138(Long)
2019-04-04 10:46:48 -<==      Total: 1
2019-04-04 10:46:48 -耗时 : 33
2019-04-04 10:46:48 -返回值 : index_v1
2019-04-04 10:46:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 10:46:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 10:46:49.0(Timestamp)
2019-04-04 10:46:49 -<==    Updates: 1
2019-04-04 10:46:49 -请求地址 : http://localhost:8081/main
2019-04-04 10:46:49 -HTTP METHOD : GET
2019-04-04 10:46:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:46:49 -参数 : []
2019-04-04 10:46:49 -耗时 : 0
2019-04-04 10:46:49 -返回值 : main
2019-04-04 10:46:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 10:46:49 -HTTP METHOD : GET
2019-04-04 10:46:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 10:46:49 -参数 : []
2019-04-04 10:46:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 10:46:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 10:46:49 -<==      Total: 0
2019-04-04 10:46:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 10:46:49 -==> Parameters: 1(Long), 0(String)
2019-04-04 10:46:49 -<==      Total: 1
2019-04-04 10:46:49 -耗时 : 17
2019-04-04 10:46:49 -返回值 : com.bootdo.common.utils.PageUtils@578e7586
2019-04-04 10:46:49 -请求地址 : http://localhost:8081/main
2019-04-04 10:46:49 -HTTP METHOD : GET
2019-04-04 10:46:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 10:46:49 -参数 : []
2019-04-04 10:46:49 -耗时 : 0
2019-04-04 10:46:49 -返回值 : main
2019-04-04 10:46:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 10:46:54 -HTTP METHOD : GET
2019-04-04 10:46:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 10:46:54 -参数 : []
2019-04-04 10:46:54 -耗时 : 0
2019-04-04 10:46:54 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 10:46:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:46:54 -HTTP METHOD : GET
2019-04-04 10:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:46:54 -参数 : [userType]
2019-04-04 10:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:46:54 -==> Parameters: userType(String)
2019-04-04 10:46:54 -<==      Total: 2
2019-04-04 10:46:54 -耗时 : 4
2019-04-04 10:46:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:46:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 10:46:54 -HTTP METHOD : GET
2019-04-04 10:46:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 10:46:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 10:46:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 10:46:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 10:46:54 -<==      Total: 8
2019-04-04 10:46:54 -==>  Preparing: select count(*) from elec_log 
2019-04-04 10:46:54 -==> Parameters: 
2019-04-04 10:46:54 -<==      Total: 1
2019-04-04 10:46:54 -耗时 : 15
2019-04-04 10:46:54 -返回值 : com.bootdo.common.utils.PageUtils@4d0ad204
2019-04-04 10:46:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 10:46:56 -HTTP METHOD : GET
2019-04-04 10:46:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 10:46:56 -参数 : [1, {}]
2019-04-04 10:46:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 10:46:56 -==> Parameters: 1(Long)
2019-04-04 10:46:56 -<==      Total: 1
2019-04-04 10:46:56 -耗时 : 5
2019-04-04 10:46:56 -返回值 : moneyLog/elecLog/edit
2019-04-04 10:46:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 10:46:56 -HTTP METHOD : GET
2019-04-04 10:46:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:46:56 -参数 : [userType]
2019-04-04 10:46:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:46:56 -==> Parameters: userType(String)
2019-04-04 10:46:56 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-04-04 10:46:56 -HTTP METHOD : GET
2019-04-04 10:46:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 10:46:56 -参数 : [userOrg]
2019-04-04 10:46:56 -<==      Total: 2
2019-04-04 10:46:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 10:46:56 -耗时 : 5
2019-04-04 10:46:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 10:46:56 -==> Parameters: userOrg(String)
2019-04-04 10:46:56 -<==      Total: 0
2019-04-04 10:46:56 -耗时 : 10
2019-04-04 10:46:56 -返回值 : []
2019-04-04 11:00:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 11:00:34 -==> Parameters: 1(Long)
2019-04-04 11:00:34 -<==      Total: 90
2019-04-04 11:00:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:00:34 -HTTP METHOD : GET
2019-04-04 11:00:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:00:34 -参数 : [1, {}]
2019-04-04 11:00:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:00:34 -==> Parameters: 1(Long)
2019-04-04 11:00:34 -<==      Total: 1
2019-04-04 11:00:34 -耗时 : 5
2019-04-04 11:00:34 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:00:34 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-04-04 11:00:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:00:34 -HTTP METHOD : GET
2019-04-04 11:00:34 -HTTP METHOD : GET
2019-04-04 11:00:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:00:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:00:34 -参数 : [userOrg]
2019-04-04 11:00:34 -参数 : [userType]
2019-04-04 11:00:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:00:34 -==> Parameters: userOrg(String)
2019-04-04 11:00:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:00:34 -<==      Total: 0
2019-04-04 11:00:34 -耗时 : 6
2019-04-04 11:00:34 -返回值 : []
2019-04-04 11:00:34 -==> Parameters: userType(String)
2019-04-04 11:00:34 -<==      Total: 2
2019-04-04 11:00:34 -耗时 : 10
2019-04-04 11:00:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:01:49 -请求地址 : http://localhost:8081/index
2019-04-04 11:01:49 -HTTP METHOD : GET
2019-04-04 11:01:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:01:49 -参数 : [{}]
2019-04-04 11:01:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:01:49 -==> Parameters: 1(Long)
2019-04-04 11:01:49 -<==      Total: 46
2019-04-04 11:01:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:01:49 -==> Parameters: 138(Long)
2019-04-04 11:01:49 -<==      Total: 1
2019-04-04 11:01:49 -耗时 : 30
2019-04-04 11:01:49 -返回值 : index_v1
2019-04-04 11:01:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:01:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:01:49.866(Timestamp)
2019-04-04 11:01:49 -请求地址 : http://localhost:8081/main
2019-04-04 11:01:49 -HTTP METHOD : GET
2019-04-04 11:01:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:01:49 -参数 : []
2019-04-04 11:01:49 -耗时 : 1
2019-04-04 11:01:49 -返回值 : main
2019-04-04 11:01:50 -<==    Updates: 1
2019-04-04 11:01:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:01:50 -HTTP METHOD : GET
2019-04-04 11:01:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:01:50 -参数 : []
2019-04-04 11:01:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:01:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:01:50 -<==      Total: 0
2019-04-04 11:01:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:01:50 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:01:50 -<==      Total: 1
2019-04-04 11:01:50 -耗时 : 8
2019-04-04 11:01:50 -返回值 : com.bootdo.common.utils.PageUtils@29e15d37
2019-04-04 11:01:50 -请求地址 : http://localhost:8081/main
2019-04-04 11:01:50 -HTTP METHOD : GET
2019-04-04 11:01:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:01:50 -参数 : []
2019-04-04 11:01:50 -耗时 : 0
2019-04-04 11:01:50 -返回值 : main
2019-04-04 11:02:25 -请求地址 : http://localhost:8081/login;JSESSIONID=97530ebb-2743-4a71-8ff8-6f107c23e51c
2019-04-04 11:02:25 -HTTP METHOD : GET
2019-04-04 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:02:25 -参数 : [{}]
2019-04-04 11:02:25 -耗时 : 1
2019-04-04 11:02:25 -返回值 : login
2019-04-04 11:02:25 -请求地址 : http://localhost:8081/login;JSESSIONID=97530ebb-2743-4a71-8ff8-6f107c23e51c
2019-04-04 11:02:25 -HTTP METHOD : GET
2019-04-04 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:02:25 -参数 : [{}]
2019-04-04 11:02:25 -耗时 : 0
2019-04-04 11:02:25 -返回值 : login
2019-04-04 11:02:25 -请求地址 : http://localhost:8081/getVerify
2019-04-04 11:02:25 -HTTP METHOD : GET
2019-04-04 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 11:02:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7015e71f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@665c9718]
2019-04-04 11:02:25 -0784
2019-04-04 11:02:25 -耗时 : 26
2019-04-04 11:02:25 -返回值 : null
2019-04-04 11:02:26 -请求地址 : http://localhost:8081/getVerify
2019-04-04 11:02:26 -HTTP METHOD : GET
2019-04-04 11:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 11:02:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4dd3aa8d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d234fcd]
2019-04-04 11:02:26 -2341
2019-04-04 11:02:26 -耗时 : 13
2019-04-04 11:02:26 -返回值 : null
2019-04-04 11:02:26 -请求地址 : http://localhost:8081/login
2019-04-04 11:02:26 -HTTP METHOD : GET
2019-04-04 11:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:02:26 -参数 : [{}]
2019-04-04 11:02:26 -耗时 : 0
2019-04-04 11:02:26 -返回值 : login
2019-04-04 11:02:33 -请求地址 : http://localhost:8081/login
2019-04-04 11:02:33 -HTTP METHOD : POST
2019-04-04 11:02:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 11:02:33 -参数 : [admin, 111111, 2341, org.apache.shiro.web.servlet.ShiroHttpServletRequest@46fa4039]
2019-04-04 11:02:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 11:02:33 -==> Parameters: admin(String)
2019-04-04 11:02:33 -<==      Total: 1
2019-04-04 11:02:33 -耗时 : 7
2019-04-04 11:02:33 -返回值 : {msg=操作成功, code=0}
2019-04-04 11:02:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:02:33 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 11:02:33.607(Timestamp)
2019-04-04 11:02:33 -请求地址 : http://localhost:8081/index
2019-04-04 11:02:33 -HTTP METHOD : GET
2019-04-04 11:02:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:02:33 -参数 : [{}]
2019-04-04 11:02:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:02:33 -==> Parameters: 1(Long)
2019-04-04 11:02:33 -<==      Total: 46
2019-04-04 11:02:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:02:33 -==> Parameters: 138(Long)
2019-04-04 11:02:33 -<==      Total: 1
2019-04-04 11:02:33 -耗时 : 22
2019-04-04 11:02:33 -返回值 : index_v1
2019-04-04 11:02:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:02:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:02:33.673(Timestamp)
2019-04-04 11:02:33 -请求地址 : http://localhost:8081/main
2019-04-04 11:02:33 -HTTP METHOD : GET
2019-04-04 11:02:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:02:33 -参数 : []
2019-04-04 11:02:33 -耗时 : 1
2019-04-04 11:02:33 -返回值 : main
2019-04-04 11:02:33 -<==    Updates: 1
2019-04-04 11:02:33 -<==    Updates: 1
2019-04-04 11:02:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:02:34 -HTTP METHOD : GET
2019-04-04 11:02:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:02:34 -参数 : []
2019-04-04 11:02:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:02:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:02:34 -<==      Total: 0
2019-04-04 11:02:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:02:34 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:02:34 -<==      Total: 1
2019-04-04 11:02:34 -耗时 : 6
2019-04-04 11:02:34 -返回值 : com.bootdo.common.utils.PageUtils@728cdedd
2019-04-04 11:02:34 -请求地址 : http://localhost:8081/main
2019-04-04 11:02:34 -HTTP METHOD : GET
2019-04-04 11:02:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:02:34 -参数 : []
2019-04-04 11:02:34 -耗时 : 1
2019-04-04 11:02:34 -返回值 : main
2019-04-04 11:02:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 11:02:36 -==> Parameters: 1(Long)
2019-04-04 11:02:36 -<==      Total: 90
2019-04-04 11:02:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:02:36 -HTTP METHOD : GET
2019-04-04 11:02:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:02:36 -参数 : []
2019-04-04 11:02:36 -耗时 : 0
2019-04-04 11:02:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:02:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:02:37 -HTTP METHOD : GET
2019-04-04 11:02:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:02:37 -参数 : [userType]
2019-04-04 11:02:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:02:37 -==> Parameters: userType(String)
2019-04-04 11:02:37 -<==      Total: 2
2019-04-04 11:02:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:02:37 -HTTP METHOD : GET
2019-04-04 11:02:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:02:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:02:37 -耗时 : 14
2019-04-04 11:02:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:02:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:02:37 -<==      Total: 8
2019-04-04 11:02:37 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:02:37 -==> Parameters: 
2019-04-04 11:02:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:02:37 -<==      Total: 1
2019-04-04 11:02:37 -耗时 : 14
2019-04-04 11:02:37 -返回值 : com.bootdo.common.utils.PageUtils@76426f50
2019-04-04 11:02:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:02:40 -HTTP METHOD : GET
2019-04-04 11:02:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:02:40 -参数 : [1, {}]
2019-04-04 11:02:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:02:40 -==> Parameters: 1(Long)
2019-04-04 11:02:40 -<==      Total: 1
2019-04-04 11:02:40 -耗时 : 10
2019-04-04 11:02:40 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:02:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:02:41 -HTTP METHOD : GET
2019-04-04 11:02:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:02:41 -参数 : [userType]
2019-04-04 11:02:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:02:41 -==> Parameters: userType(String)
2019-04-04 11:02:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:02:41 -HTTP METHOD : GET
2019-04-04 11:02:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:02:41 -参数 : [elecType]
2019-04-04 11:02:41 -<==      Total: 2
2019-04-04 11:02:41 -耗时 : 7
2019-04-04 11:02:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:02:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:02:41 -==> Parameters: elecType(String)
2019-04-04 11:02:41 -<==      Total: 2
2019-04-04 11:02:41 -耗时 : 9
2019-04-04 11:02:41 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:09:24 -请求地址 : http://localhost:8081/index
2019-04-04 11:09:24 -HTTP METHOD : GET
2019-04-04 11:09:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:09:24 -参数 : [{}]
2019-04-04 11:09:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:09:24 -==> Parameters: 1(Long)
2019-04-04 11:09:24 -<==      Total: 46
2019-04-04 11:09:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:09:24 -==> Parameters: 138(Long)
2019-04-04 11:09:24 -<==      Total: 1
2019-04-04 11:09:24 -耗时 : 40
2019-04-04 11:09:24 -返回值 : index_v1
2019-04-04 11:09:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:09:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:09:24.632(Timestamp)
2019-04-04 11:09:24 -请求地址 : http://localhost:8081/main
2019-04-04 11:09:24 -HTTP METHOD : GET
2019-04-04 11:09:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:09:24 -参数 : []
2019-04-04 11:09:24 -耗时 : 0
2019-04-04 11:09:24 -返回值 : main
2019-04-04 11:09:24 -<==    Updates: 1
2019-04-04 11:09:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:09:25 -HTTP METHOD : GET
2019-04-04 11:09:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:09:25 -参数 : []
2019-04-04 11:09:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:09:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:09:25 -<==      Total: 0
2019-04-04 11:09:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:09:25 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:09:25 -<==      Total: 1
2019-04-04 11:09:25 -耗时 : 6
2019-04-04 11:09:25 -返回值 : com.bootdo.common.utils.PageUtils@659c3fb9
2019-04-04 11:09:25 -请求地址 : http://localhost:8081/main
2019-04-04 11:09:25 -HTTP METHOD : GET
2019-04-04 11:09:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:09:25 -参数 : []
2019-04-04 11:09:25 -耗时 : 2
2019-04-04 11:09:25 -返回值 : main
2019-04-04 11:09:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:09:26 -HTTP METHOD : GET
2019-04-04 11:09:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:09:26 -参数 : []
2019-04-04 11:09:26 -耗时 : 0
2019-04-04 11:09:26 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:09:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:09:27 -HTTP METHOD : GET
2019-04-04 11:09:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:09:27 -参数 : [userType]
2019-04-04 11:09:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:09:27 -==> Parameters: userType(String)
2019-04-04 11:09:27 -<==      Total: 2
2019-04-04 11:09:27 -耗时 : 6
2019-04-04 11:09:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:09:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:09:27 -HTTP METHOD : GET
2019-04-04 11:09:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:09:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:09:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:09:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:09:27 -<==      Total: 8
2019-04-04 11:09:27 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:09:27 -==> Parameters: 
2019-04-04 11:09:27 -<==      Total: 1
2019-04-04 11:09:27 -耗时 : 7
2019-04-04 11:09:27 -返回值 : com.bootdo.common.utils.PageUtils@56bac81e
2019-04-04 11:09:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:09:28 -HTTP METHOD : GET
2019-04-04 11:09:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:09:28 -参数 : [1, {}]
2019-04-04 11:09:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:09:28 -==> Parameters: 1(Long)
2019-04-04 11:09:28 -<==      Total: 1
2019-04-04 11:09:28 -耗时 : 4
2019-04-04 11:09:28 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:09:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:09:28 -HTTP METHOD : GET
2019-04-04 11:09:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:09:28 -参数 : [userType]
2019-04-04 11:09:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:09:28 -==> Parameters: userType(String)
2019-04-04 11:09:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:09:28 -HTTP METHOD : GET
2019-04-04 11:09:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:09:28 -参数 : [elecType]
2019-04-04 11:09:28 -<==      Total: 2
2019-04-04 11:09:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:09:28 -==> Parameters: elecType(String)
2019-04-04 11:09:28 -耗时 : 3
2019-04-04 11:09:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:09:28 -<==      Total: 2
2019-04-04 11:09:28 -耗时 : 7
2019-04-04 11:09:28 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:11:34 -请求地址 : http://localhost:8081/index
2019-04-04 11:11:34 -HTTP METHOD : GET
2019-04-04 11:11:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:11:34 -参数 : [{}]
2019-04-04 11:11:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:11:34 -==> Parameters: 1(Long)
2019-04-04 11:11:34 -<==      Total: 46
2019-04-04 11:11:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:11:34 -==> Parameters: 138(Long)
2019-04-04 11:11:34 -<==      Total: 1
2019-04-04 11:11:34 -耗时 : 24
2019-04-04 11:11:34 -返回值 : index_v1
2019-04-04 11:11:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:11:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:11:34.596(Timestamp)
2019-04-04 11:11:34 -<==    Updates: 1
2019-04-04 11:11:34 -请求地址 : http://localhost:8081/main
2019-04-04 11:11:34 -HTTP METHOD : GET
2019-04-04 11:11:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:11:34 -参数 : []
2019-04-04 11:11:34 -耗时 : 0
2019-04-04 11:11:34 -返回值 : main
2019-04-04 11:11:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:11:35 -HTTP METHOD : GET
2019-04-04 11:11:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:11:35 -参数 : []
2019-04-04 11:11:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:11:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:11:35 -<==      Total: 0
2019-04-04 11:11:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:11:35 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:11:35 -<==      Total: 1
2019-04-04 11:11:35 -耗时 : 9
2019-04-04 11:11:35 -返回值 : com.bootdo.common.utils.PageUtils@5fdfb64e
2019-04-04 11:11:35 -请求地址 : http://localhost:8081/main
2019-04-04 11:11:35 -HTTP METHOD : GET
2019-04-04 11:11:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:11:35 -参数 : []
2019-04-04 11:11:35 -耗时 : 0
2019-04-04 11:11:35 -返回值 : main
2019-04-04 11:11:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:11:47 -HTTP METHOD : GET
2019-04-04 11:11:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:11:47 -参数 : []
2019-04-04 11:11:47 -耗时 : 0
2019-04-04 11:11:47 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:11:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:11:48 -HTTP METHOD : GET
2019-04-04 11:11:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:11:48 -参数 : [userType]
2019-04-04 11:11:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:11:48 -==> Parameters: userType(String)
2019-04-04 11:11:48 -<==      Total: 2
2019-04-04 11:11:48 -耗时 : 4
2019-04-04 11:11:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:11:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:11:48 -HTTP METHOD : GET
2019-04-04 11:11:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:11:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:11:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:11:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:11:48 -<==      Total: 8
2019-04-04 11:11:48 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:11:48 -==> Parameters: 
2019-04-04 11:11:48 -<==      Total: 1
2019-04-04 11:11:48 -耗时 : 10
2019-04-04 11:11:48 -返回值 : com.bootdo.common.utils.PageUtils@57803cd9
2019-04-04 11:11:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:11:49 -HTTP METHOD : GET
2019-04-04 11:11:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:11:49 -参数 : [1, {}]
2019-04-04 11:11:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:11:49 -==> Parameters: 1(Long)
2019-04-04 11:11:49 -<==      Total: 1
2019-04-04 11:11:49 -耗时 : 4
2019-04-04 11:11:49 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:11:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:11:49 -HTTP METHOD : GET
2019-04-04 11:11:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:11:49 -参数 : [userType]
2019-04-04 11:11:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:11:49 -==> Parameters: userType(String)
2019-04-04 11:11:49 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:11:49 -HTTP METHOD : GET
2019-04-04 11:11:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:11:49 -参数 : [elecType]
2019-04-04 11:11:49 -<==      Total: 2
2019-04-04 11:11:49 -耗时 : 4
2019-04-04 11:11:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:11:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:11:49 -==> Parameters: elecType(String)
2019-04-04 11:11:49 -<==      Total: 2
2019-04-04 11:11:49 -耗时 : 8
2019-04-04 11:11:49 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:12:19 -请求地址 : http://localhost:8081/index
2019-04-04 11:12:19 -HTTP METHOD : GET
2019-04-04 11:12:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:12:19 -参数 : [{}]
2019-04-04 11:12:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:12:19 -==> Parameters: 1(Long)
2019-04-04 11:12:19 -<==      Total: 46
2019-04-04 11:12:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:12:19 -==> Parameters: 138(Long)
2019-04-04 11:12:19 -<==      Total: 1
2019-04-04 11:12:19 -耗时 : 15
2019-04-04 11:12:19 -返回值 : index_v1
2019-04-04 11:12:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:12:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:12:20.001(Timestamp)
2019-04-04 11:12:20 -请求地址 : http://localhost:8081/main
2019-04-04 11:12:20 -HTTP METHOD : GET
2019-04-04 11:12:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:12:20 -参数 : []
2019-04-04 11:12:20 -耗时 : 1
2019-04-04 11:12:20 -返回值 : main
2019-04-04 11:12:20 -<==    Updates: 1
2019-04-04 11:12:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:12:20 -HTTP METHOD : GET
2019-04-04 11:12:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:12:20 -参数 : []
2019-04-04 11:12:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:12:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:12:20 -<==      Total: 0
2019-04-04 11:12:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:12:20 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:12:20 -<==      Total: 1
2019-04-04 11:12:20 -耗时 : 6
2019-04-04 11:12:20 -返回值 : com.bootdo.common.utils.PageUtils@465a2ac
2019-04-04 11:12:20 -请求地址 : http://localhost:8081/main
2019-04-04 11:12:20 -HTTP METHOD : GET
2019-04-04 11:12:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:12:20 -参数 : []
2019-04-04 11:12:20 -耗时 : 0
2019-04-04 11:12:20 -返回值 : main
2019-04-04 11:12:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:12:23 -HTTP METHOD : GET
2019-04-04 11:12:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:12:23 -参数 : []
2019-04-04 11:12:23 -耗时 : 0
2019-04-04 11:12:23 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:12:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:12:24 -HTTP METHOD : GET
2019-04-04 11:12:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:12:24 -参数 : [userType]
2019-04-04 11:12:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:12:24 -==> Parameters: userType(String)
2019-04-04 11:12:24 -<==      Total: 2
2019-04-04 11:12:24 -耗时 : 4
2019-04-04 11:12:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:12:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:12:24 -HTTP METHOD : GET
2019-04-04 11:12:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:12:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:12:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:12:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:12:24 -<==      Total: 8
2019-04-04 11:12:24 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:12:24 -==> Parameters: 
2019-04-04 11:12:24 -<==      Total: 1
2019-04-04 11:12:24 -耗时 : 8
2019-04-04 11:12:24 -返回值 : com.bootdo.common.utils.PageUtils@53fa4f09
2019-04-04 11:12:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:12:25 -HTTP METHOD : GET
2019-04-04 11:12:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:12:25 -参数 : [1, {}]
2019-04-04 11:12:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:12:25 -==> Parameters: 1(Long)
2019-04-04 11:12:25 -<==      Total: 1
2019-04-04 11:12:25 -耗时 : 4
2019-04-04 11:12:25 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:12:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:12:26 -HTTP METHOD : GET
2019-04-04 11:12:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:12:26 -参数 : [userType]
2019-04-04 11:12:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:12:26 -==> Parameters: userType(String)
2019-04-04 11:12:26 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:12:26 -HTTP METHOD : GET
2019-04-04 11:12:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:12:26 -<==      Total: 2
2019-04-04 11:12:26 -参数 : [elecType]
2019-04-04 11:12:26 -耗时 : 4
2019-04-04 11:12:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:12:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:12:26 -==> Parameters: elecType(String)
2019-04-04 11:12:26 -<==      Total: 2
2019-04-04 11:12:26 -耗时 : 9
2019-04-04 11:12:26 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:13:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-04-04 11:15:07 -请求地址 : http://localhost:8081/login;JSESSIONID=536ce3b9-0744-4057-8a7b-7752b5dbf4e9
2019-04-04 11:15:07 -HTTP METHOD : GET
2019-04-04 11:15:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:15:07 -参数 : [{}]
2019-04-04 11:15:07 -耗时 : 1
2019-04-04 11:15:07 -返回值 : login
2019-04-04 11:15:08 -请求地址 : http://localhost:8081/getVerify
2019-04-04 11:15:08 -HTTP METHOD : GET
2019-04-04 11:15:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 11:15:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@264635f0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1d274821]
2019-04-04 11:15:08 -4229
2019-04-04 11:15:08 -耗时 : 14
2019-04-04 11:15:08 -返回值 : null
2019-04-04 11:15:08 -请求地址 : http://localhost:8081/login
2019-04-04 11:15:08 -HTTP METHOD : GET
2019-04-04 11:15:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:15:08 -参数 : [{}]
2019-04-04 11:15:08 -耗时 : 1
2019-04-04 11:15:08 -返回值 : login
2019-04-04 11:15:15 -请求地址 : http://localhost:8081/login
2019-04-04 11:15:15 -HTTP METHOD : POST
2019-04-04 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 11:15:15 -参数 : [admin, 111111, 4229, org.apache.shiro.web.servlet.ShiroHttpServletRequest@16fffbb0]
2019-04-04 11:15:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 11:15:15 -==> Parameters: admin(String)
2019-04-04 11:15:15 -<==      Total: 1
2019-04-04 11:15:15 -耗时 : 27
2019-04-04 11:15:15 -返回值 : {msg=操作成功, code=0}
2019-04-04 11:15:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:15:15 -==> Parameters: 1(Long), admin(String), 登录(String), 27(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 11:15:15.058(Timestamp)
2019-04-04 11:15:15 -请求地址 : http://localhost:8081/index
2019-04-04 11:15:15 -HTTP METHOD : GET
2019-04-04 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:15:15 -参数 : [{}]
2019-04-04 11:15:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:15:15 -==> Parameters: 1(Long)
2019-04-04 11:15:15 -<==      Total: 46
2019-04-04 11:15:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:15:15 -==> Parameters: 138(Long)
2019-04-04 11:15:15 -<==      Total: 1
2019-04-04 11:15:15 -耗时 : 48
2019-04-04 11:15:15 -返回值 : index_v1
2019-04-04 11:15:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:15:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 49(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:15:15.133(Timestamp)
2019-04-04 11:15:15 -<==    Updates: 1
2019-04-04 11:15:15 -<==    Updates: 1
2019-04-04 11:15:15 -请求地址 : http://localhost:8081/main
2019-04-04 11:15:15 -HTTP METHOD : GET
2019-04-04 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:15:15 -参数 : []
2019-04-04 11:15:15 -耗时 : 1
2019-04-04 11:15:15 -返回值 : main
2019-04-04 11:15:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:15:15 -HTTP METHOD : GET
2019-04-04 11:15:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:15:15 -参数 : []
2019-04-04 11:15:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:15:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:15:15 -<==      Total: 0
2019-04-04 11:15:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:15:15 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:15:15 -<==      Total: 1
2019-04-04 11:15:15 -耗时 : 8
2019-04-04 11:15:15 -返回值 : com.bootdo.common.utils.PageUtils@121532d3
2019-04-04 11:15:15 -请求地址 : http://localhost:8081/main
2019-04-04 11:15:15 -HTTP METHOD : GET
2019-04-04 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:15:15 -参数 : []
2019-04-04 11:15:15 -耗时 : 3
2019-04-04 11:15:15 -返回值 : main
2019-04-04 11:15:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 11:15:24 -==> Parameters: 1(Long)
2019-04-04 11:15:24 -<==      Total: 90
2019-04-04 11:15:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:15:24 -HTTP METHOD : GET
2019-04-04 11:15:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:15:24 -参数 : []
2019-04-04 11:15:24 -耗时 : 0
2019-04-04 11:15:24 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:15:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:15:24 -HTTP METHOD : GET
2019-04-04 11:15:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:15:24 -参数 : [userType]
2019-04-04 11:15:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:15:24 -==> Parameters: userType(String)
2019-04-04 11:15:24 -<==      Total: 2
2019-04-04 11:15:24 -耗时 : 5
2019-04-04 11:15:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:15:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:15:24 -HTTP METHOD : GET
2019-04-04 11:15:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:15:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:15:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:15:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:15:24 -<==      Total: 8
2019-04-04 11:15:24 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:15:24 -==> Parameters: 
2019-04-04 11:15:24 -<==      Total: 1
2019-04-04 11:15:24 -耗时 : 8
2019-04-04 11:15:24 -返回值 : com.bootdo.common.utils.PageUtils@659c9061
2019-04-04 11:15:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:15:27 -HTTP METHOD : GET
2019-04-04 11:15:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:15:27 -参数 : [1, {}]
2019-04-04 11:15:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:15:27 -==> Parameters: 1(Long)
2019-04-04 11:15:27 -<==      Total: 1
2019-04-04 11:15:27 -耗时 : 6
2019-04-04 11:15:27 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:15:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:15:27 -HTTP METHOD : GET
2019-04-04 11:15:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:15:27 -参数 : [userType]
2019-04-04 11:15:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:15:27 -HTTP METHOD : GET
2019-04-04 11:15:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:15:27 -参数 : [elecType]
2019-04-04 11:15:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:15:27 -==> Parameters: elecType(String)
2019-04-04 11:15:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:15:27 -==> Parameters: userType(String)
2019-04-04 11:15:27 -<==      Total: 2
2019-04-04 11:15:27 -耗时 : 6
2019-04-04 11:15:27 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:15:27 -<==      Total: 2
2019-04-04 11:15:27 -耗时 : 11
2019-04-04 11:15:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:17:42 -请求地址 : http://localhost:8081/index
2019-04-04 11:17:42 -HTTP METHOD : GET
2019-04-04 11:17:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:17:42 -参数 : [{}]
2019-04-04 11:17:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:17:42 -==> Parameters: 1(Long)
2019-04-04 11:17:42 -<==      Total: 46
2019-04-04 11:17:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:17:42 -==> Parameters: 138(Long)
2019-04-04 11:17:42 -<==      Total: 1
2019-04-04 11:17:42 -耗时 : 29
2019-04-04 11:17:42 -返回值 : index_v1
2019-04-04 11:17:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:17:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:17:43.0(Timestamp)
2019-04-04 11:17:43 -请求地址 : http://localhost:8081/main
2019-04-04 11:17:43 -HTTP METHOD : GET
2019-04-04 11:17:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:17:43 -参数 : []
2019-04-04 11:17:43 -耗时 : 5
2019-04-04 11:17:43 -返回值 : main
2019-04-04 11:17:43 -<==    Updates: 1
2019-04-04 11:17:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:17:43 -HTTP METHOD : GET
2019-04-04 11:17:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:17:43 -参数 : []
2019-04-04 11:17:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:17:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:17:43 -<==      Total: 0
2019-04-04 11:17:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:17:43 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:17:43 -<==      Total: 1
2019-04-04 11:17:43 -耗时 : 10
2019-04-04 11:17:43 -返回值 : com.bootdo.common.utils.PageUtils@52acc310
2019-04-04 11:17:43 -请求地址 : http://localhost:8081/main
2019-04-04 11:17:43 -HTTP METHOD : GET
2019-04-04 11:17:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:17:43 -参数 : []
2019-04-04 11:17:43 -耗时 : 1
2019-04-04 11:17:43 -返回值 : main
2019-04-04 11:17:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:17:46 -HTTP METHOD : GET
2019-04-04 11:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:17:46 -参数 : []
2019-04-04 11:17:46 -耗时 : 1
2019-04-04 11:17:46 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:17:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:17:46 -HTTP METHOD : GET
2019-04-04 11:17:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:17:46 -参数 : [userType]
2019-04-04 11:17:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:17:46 -==> Parameters: userType(String)
2019-04-04 11:17:46 -<==      Total: 2
2019-04-04 11:17:46 -耗时 : 5
2019-04-04 11:17:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:17:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:17:46 -HTTP METHOD : GET
2019-04-04 11:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:17:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:17:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:17:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:17:46 -<==      Total: 8
2019-04-04 11:17:46 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:17:46 -==> Parameters: 
2019-04-04 11:17:46 -<==      Total: 1
2019-04-04 11:17:46 -耗时 : 8
2019-04-04 11:17:46 -返回值 : com.bootdo.common.utils.PageUtils@329d0974
2019-04-04 11:17:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:17:47 -HTTP METHOD : GET
2019-04-04 11:17:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:17:47 -参数 : [1, {}]
2019-04-04 11:17:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:17:47 -==> Parameters: 1(Long)
2019-04-04 11:17:47 -<==      Total: 1
2019-04-04 11:17:47 -耗时 : 4
2019-04-04 11:17:47 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:17:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:17:48 -HTTP METHOD : GET
2019-04-04 11:17:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:17:48 -参数 : [userType]
2019-04-04 11:17:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:17:48 -==> Parameters: userType(String)
2019-04-04 11:17:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:17:48 -HTTP METHOD : GET
2019-04-04 11:17:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:17:48 -参数 : [elecType]
2019-04-04 11:17:48 -<==      Total: 2
2019-04-04 11:17:48 -耗时 : 6
2019-04-04 11:17:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:17:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:17:48 -==> Parameters: elecType(String)
2019-04-04 11:17:48 -<==      Total: 2
2019-04-04 11:17:48 -耗时 : 5
2019-04-04 11:17:48 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:19:46 -请求地址 : http://localhost:8081/index
2019-04-04 11:19:46 -HTTP METHOD : GET
2019-04-04 11:19:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:19:46 -参数 : [{}]
2019-04-04 11:19:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:19:46 -==> Parameters: 1(Long)
2019-04-04 11:19:46 -<==      Total: 46
2019-04-04 11:19:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:19:46 -==> Parameters: 138(Long)
2019-04-04 11:19:46 -<==      Total: 1
2019-04-04 11:19:46 -耗时 : 40
2019-04-04 11:19:46 -返回值 : index_v1
2019-04-04 11:19:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:19:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:19:46.183(Timestamp)
2019-04-04 11:19:46 -<==    Updates: 1
2019-04-04 11:19:46 -请求地址 : http://localhost:8081/main
2019-04-04 11:19:46 -HTTP METHOD : GET
2019-04-04 11:19:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:19:46 -参数 : []
2019-04-04 11:19:46 -耗时 : 0
2019-04-04 11:19:46 -返回值 : main
2019-04-04 11:19:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:19:46 -HTTP METHOD : GET
2019-04-04 11:19:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:19:46 -参数 : []
2019-04-04 11:19:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:19:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:19:46 -<==      Total: 0
2019-04-04 11:19:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:19:46 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:19:46 -<==      Total: 1
2019-04-04 11:19:46 -耗时 : 7
2019-04-04 11:19:46 -返回值 : com.bootdo.common.utils.PageUtils@6b64505b
2019-04-04 11:19:46 -请求地址 : http://localhost:8081/main
2019-04-04 11:19:46 -HTTP METHOD : GET
2019-04-04 11:19:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:19:46 -参数 : []
2019-04-04 11:19:46 -耗时 : 1
2019-04-04 11:19:46 -返回值 : main
2019-04-04 11:19:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:19:48 -HTTP METHOD : GET
2019-04-04 11:19:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:19:48 -参数 : []
2019-04-04 11:19:48 -耗时 : 1
2019-04-04 11:19:48 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:19:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:19:48 -HTTP METHOD : GET
2019-04-04 11:19:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:19:48 -参数 : [userType]
2019-04-04 11:19:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:19:48 -==> Parameters: userType(String)
2019-04-04 11:19:48 -<==      Total: 2
2019-04-04 11:19:48 -耗时 : 4
2019-04-04 11:19:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:19:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:19:48 -HTTP METHOD : GET
2019-04-04 11:19:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:19:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:19:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:19:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:19:48 -<==      Total: 8
2019-04-04 11:19:48 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:19:48 -==> Parameters: 
2019-04-04 11:19:48 -<==      Total: 1
2019-04-04 11:19:48 -耗时 : 7
2019-04-04 11:19:48 -返回值 : com.bootdo.common.utils.PageUtils@1908dde7
2019-04-04 11:19:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:19:49 -HTTP METHOD : GET
2019-04-04 11:19:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:19:49 -参数 : [1, {}]
2019-04-04 11:19:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:19:49 -==> Parameters: 1(Long)
2019-04-04 11:19:49 -<==      Total: 1
2019-04-04 11:19:49 -耗时 : 3
2019-04-04 11:19:49 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:19:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:19:49 -HTTP METHOD : GET
2019-04-04 11:19:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:19:49 -参数 : [userType]
2019-04-04 11:19:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:19:49 -==> Parameters: userType(String)
2019-04-04 11:19:49 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:19:49 -HTTP METHOD : GET
2019-04-04 11:19:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:19:49 -参数 : [elecType]
2019-04-04 11:19:49 -<==      Total: 2
2019-04-04 11:19:49 -耗时 : 4
2019-04-04 11:19:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:19:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:19:49 -==> Parameters: elecType(String)
2019-04-04 11:19:49 -<==      Total: 2
2019-04-04 11:19:49 -耗时 : 5
2019-04-04 11:19:49 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:20:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-04 11:20:23 -HTTP METHOD : GET
2019-04-04 11:20:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-04 11:20:23 -参数 : []
2019-04-04 11:20:23 -耗时 : 0
2019-04-04 11:20:23 -返回值 : moneyLog/elecLog/add
2019-04-04 11:20:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:20:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:20:23 -HTTP METHOD : GET
2019-04-04 11:20:23 -HTTP METHOD : GET
2019-04-04 11:20:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:20:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:20:23 -参数 : [elecType]
2019-04-04 11:20:23 -参数 : [userType]
2019-04-04 11:20:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:20:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:20:23 -==> Parameters: userType(String)
2019-04-04 11:20:23 -==> Parameters: elecType(String)
2019-04-04 11:20:23 -<==      Total: 2
2019-04-04 11:20:23 -耗时 : 4
2019-04-04 11:20:23 -<==      Total: 2
2019-04-04 11:20:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:20:23 -耗时 : 4
2019-04-04 11:20:23 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:21:30 -请求地址 : http://localhost:8081/water/water
2019-04-04 11:21:30 -HTTP METHOD : GET
2019-04-04 11:21:30 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-04-04 11:21:30 -参数 : []
2019-04-04 11:21:30 -耗时 : 2
2019-04-04 11:21:30 -返回值 : water/water/water
2019-04-04 11:21:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:21:30 -HTTP METHOD : GET
2019-04-04 11:21:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:21:30 -参数 : [userType]
2019-04-04 11:21:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:21:30 -==> Parameters: userType(String)
2019-04-04 11:21:30 -<==      Total: 2
2019-04-04 11:21:30 -耗时 : 5
2019-04-04 11:21:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:21:30 -请求地址 : http://localhost:8081/water/water/list
2019-04-04 11:21:30 -HTTP METHOD : GET
2019-04-04 11:21:30 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-04-04 11:21:30 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-04 11:21:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-04-04 11:21:30 -==> Parameters: 0(Integer), 3(Integer)
2019-04-04 11:21:30 -<==      Total: 3
2019-04-04 11:21:30 -==>  Preparing: select count(*) from water 
2019-04-04 11:21:30 -==> Parameters: 
2019-04-04 11:21:30 -<==      Total: 1
2019-04-04 11:21:30 -耗时 : 88
2019-04-04 11:21:30 -返回值 : com.bootdo.common.utils.PageUtils@336b7ccb
2019-04-04 11:21:33 -请求地址 : http://localhost:8081/water/water/edit/1
2019-04-04 11:21:33 -HTTP METHOD : GET
2019-04-04 11:21:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-04-04 11:21:33 -参数 : [1, {}]
2019-04-04 11:21:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-04-04 11:21:33 -==> Parameters: 1(Long)
2019-04-04 11:21:33 -<==      Total: 1
2019-04-04 11:21:33 -耗时 : 5
2019-04-04 11:21:33 -返回值 : water/water/edit
2019-04-04 11:21:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:21:33 -HTTP METHOD : GET
2019-04-04 11:21:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:21:33 -参数 : [userType]
2019-04-04 11:21:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:21:33 -==> Parameters: userType(String)
2019-04-04 11:21:33 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-04-04 11:21:33 -HTTP METHOD : GET
2019-04-04 11:21:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:21:33 -参数 : [userState]
2019-04-04 11:21:33 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 11:21:33 -HTTP METHOD : GET
2019-04-04 11:21:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:21:33 -<==      Total: 2
2019-04-04 11:21:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:21:33 -耗时 : 3
2019-04-04 11:21:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:21:33 -==> Parameters: userState(String)
2019-04-04 11:21:33 -参数 : [waterType]
2019-04-04 11:21:33 -<==      Total: 2
2019-04-04 11:21:33 -耗时 : 15
2019-04-04 11:21:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:21:33 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:21:33 -==> Parameters: waterType(String)
2019-04-04 11:21:33 -<==      Total: 6
2019-04-04 11:21:33 -耗时 : 18
2019-04-04 11:21:33 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:22:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:22:31 -HTTP METHOD : GET
2019-04-04 11:22:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:22:31 -参数 : [1, {}]
2019-04-04 11:22:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:22:31 -==> Parameters: 1(Long)
2019-04-04 11:22:31 -<==      Total: 1
2019-04-04 11:22:31 -耗时 : 5
2019-04-04 11:22:31 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:22:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:22:31 -HTTP METHOD : GET
2019-04-04 11:22:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:22:31 -参数 : [userType]
2019-04-04 11:22:31 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:22:31 -HTTP METHOD : GET
2019-04-04 11:22:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:22:31 -参数 : [elecType]
2019-04-04 11:22:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:22:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:22:31 -==> Parameters: elecType(String)
2019-04-04 11:22:31 -==> Parameters: userType(String)
2019-04-04 11:22:31 -<==      Total: 2
2019-04-04 11:22:31 -<==      Total: 2
2019-04-04 11:22:31 -耗时 : 4
2019-04-04 11:22:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:22:31 -耗时 : 4
2019-04-04 11:22:31 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:24:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/2
2019-04-04 11:24:07 -HTTP METHOD : GET
2019-04-04 11:24:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:24:07 -参数 : [2, {}]
2019-04-04 11:24:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:24:07 -==> Parameters: 2(Long)
2019-04-04 11:24:07 -<==      Total: 1
2019-04-04 11:24:07 -耗时 : 5
2019-04-04 11:24:07 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:24:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:24:07 -HTTP METHOD : GET
2019-04-04 11:24:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:24:07 -参数 : [userType]
2019-04-04 11:24:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:24:07 -==> Parameters: userType(String)
2019-04-04 11:24:07 -<==      Total: 2
2019-04-04 11:24:07 -耗时 : 4
2019-04-04 11:24:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:24:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:24:07 -HTTP METHOD : GET
2019-04-04 11:24:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:24:07 -参数 : [elecType]
2019-04-04 11:24:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:24:07 -==> Parameters: elecType(String)
2019-04-04 11:24:07 -<==      Total: 2
2019-04-04 11:24:07 -耗时 : 5
2019-04-04 11:24:07 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:30:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 11:30:16 -==> Parameters: 1(Long)
2019-04-04 11:30:16 -<==      Total: 90
2019-04-04 11:30:16 -请求地址 : http://localhost:8081/sys/menu/
2019-04-04 11:30:16 -HTTP METHOD : GET
2019-04-04 11:30:16 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-04-04 11:30:16 -参数 : [{}]
2019-04-04 11:30:16 -耗时 : 0
2019-04-04 11:30:16 -返回值 : system/menu/menu
2019-04-04 11:30:17 -请求地址 : http://localhost:8081/sys/menu/list
2019-04-04 11:30:17 -HTTP METHOD : GET
2019-04-04 11:30:17 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-04-04 11:30:17 -参数 : [{sort=order_num}]
2019-04-04 11:30:17 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-04-04 11:30:17 -==> Parameters: 
2019-04-04 11:30:17 -<==      Total: 106
2019-04-04 11:30:17 -耗时 : 40
2019-04-04 11:30:17 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-04-04 11:30:26 -请求地址 : http://localhost:8081/common/dict
2019-04-04 11:30:26 -HTTP METHOD : GET
2019-04-04 11:30:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.dict
2019-04-04 11:30:26 -参数 : []
2019-04-04 11:30:26 -耗时 : 0
2019-04-04 11:30:26 -返回值 : common/dict/dict
2019-04-04 11:30:27 -请求地址 : http://localhost:8081/common/dict/type
2019-04-04 11:30:27 -HTTP METHOD : GET
2019-04-04 11:30:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listType
2019-04-04 11:30:27 -参数 : []
2019-04-04 11:30:27 -==>  Preparing: select distinct `type` , description from sys_dict 
2019-04-04 11:30:27 -==> Parameters: 
2019-04-04 11:30:27 -<==      Total: 38
2019-04-04 11:30:27 -耗时 : 6
2019-04-04 11:30:27 -返回值 : [DictDO{id=null, name='null', value='null', type='del_flag', description='删除标记', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='show_hide', description='显示/隐藏', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='yes_no', description='是/否', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='color', description='颜色值', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='theme', description='主题方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_area_type', description='区域类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_type', description='机构类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_common', description='快捷通用部门', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_office_grade', description='机构等级', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_data_scope', description='数据范围', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_user_type', description='用户类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_theme', description='站点主题', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_module', description='栏目模型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_show_modes', description='展现方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_del_flag', description='内容状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_posid', description='推荐位', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='cms_guestbook', description='留言板分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_leave_type', description='请假类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sys_log_type', description='日志类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_type', description='流程类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='act_category', description='流程分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_category', description='代码生成分类', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_query_type', description='查询方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_show_type', description='字段生成方案', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='gen_java_type', description='Java类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='sex', description='性别', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_type', description='通知通告类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_status', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='oa_notify_read', description='通知通告状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='blog_type', description='博客类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='hobby', description='爱好', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}, DictDO{id=null, name='null', value='null', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='null'}]
2019-04-04 11:30:27 -请求地址 : http://localhost:8081/common/dict/list
2019-04-04 11:30:27 -HTTP METHOD : GET
2019-04-04 11:30:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.list
2019-04-04 11:30:27 -参数 : [{limit=10, offset=0}]
2019-04-04 11:30:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict order by id desc limit ?, ? 
2019-04-04 11:30:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:30:27 -<==      Total: 10
2019-04-04 11:30:27 -==>  Preparing: select count(*) from sys_dict 
2019-04-04 11:30:27 -==> Parameters: 
2019-04-04 11:30:27 -<==      Total: 1
2019-04-04 11:30:27 -耗时 : 41
2019-04-04 11:30:27 -返回值 : com.bootdo.common.utils.PageUtils@7e0349b6
2019-04-04 11:31:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 10484 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 11:31:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 11:31:54 -The following profiles are active: dev
2019-04-04 11:31:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 11:31:55 CST 2019]; root of context hierarchy
2019-04-04 11:31:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 11:32:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f37a9df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$190d886] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 11:32:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 11:32:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 11:32:05 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 11:32:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 11:32:05 -Starting service [Tomcat]
2019-04-04 11:32:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 11:32:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 11:32:06 -Initializing Spring embedded WebApplicationContext
2019-04-04 11:32:06 -Root WebApplicationContext: initialization completed in 11048 ms
2019-04-04 11:32:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 11:32:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 11:32:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 11:32:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 11:32:06 -Filter xssFilter was not registered (disabled)
2019-04-04 11:32:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 11:32:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 11:32:06 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 11:32:06 -Servlet dispatcherServlet mapped to [/]
2019-04-04 11:32:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 11:31:55 CST 2019]; root of context hierarchy
2019-04-04 11:32:11 -Using default implementation for ThreadExecutor
2019-04-04 11:32:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 11:32:11 -Quartz Scheduler v.2.2.1 created.
2019-04-04 11:32:11 -RAMJobStore initialized.
2019-04-04 11:32:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 11:32:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 11:32:11 -Quartz scheduler version: 2.2.1
2019-04-04 11:32:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@74431b9c
2019-04-04 11:32:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 11:32:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 11:32:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 11:32:17 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 11:32:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 11:32:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 11:32:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 11:32:17 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 11:32:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 11:32:17 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 11:32:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 11:32:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 11:32:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 11:32:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 11:32:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 11:32:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 11:32:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 11:32:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 11:32:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 11:32:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 11:32:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 11:32:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 11:32:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 11:32:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 11:32:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 11:32:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 11:32:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 11:32:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 11:32:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 11:32:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 11:32:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 11:32:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 11:32:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 11:32:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 11:32:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 11:32:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 11:32:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 11:32:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 11:32:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 11:32:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 11:32:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 11:32:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 11:32:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 11:32:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 11:32:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 11:32:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 11:32:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 11:32:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 11:32:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 11:32:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 11:32:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 11:32:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 11:32:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 11:32:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 11:32:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 11:32:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 11:32:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 11:32:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 11:32:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 11:32:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 11:32:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 11:32:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 11:32:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 11:32:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 11:32:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 11:32:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 11:32:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 11:32:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 11:32:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 11:32:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 11:32:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 11:32:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 11:32:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 11:32:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 11:32:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 11:32:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 11:32:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 11:32:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 11:32:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 11:32:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 11:32:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 11:32:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 11:32:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 11:32:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 11:32:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 11:32:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 11:32:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 11:32:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 11:32:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 11:32:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 11:32:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 11:32:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 11:32:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 11:31:55 CST 2019]; root of context hierarchy
2019-04-04 11:32:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 11:32:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 11:32:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 11:32:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 11:32:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 11:32:22 -Registering beans for JMX exposure on startup
2019-04-04 11:32:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 11:32:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 11:32:22 -Starting beans in phase 2147483647
2019-04-04 11:32:22 -Context refreshed
2019-04-04 11:32:22 -Found 1 custom documentation plugin(s)
2019-04-04 11:32:22 -Scanning for api listing references
2019-04-04 11:32:23 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 11:32:23 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 11:32:23 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 11:32:23 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 11:32:23 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 11:32:23 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 11:32:23 -Generating unique operation named: removeUsingPOST_1
2019-04-04 11:32:23 -Generating unique operation named: addUsingGET_1
2019-04-04 11:32:23 -Generating unique operation named: editUsingGET_1
2019-04-04 11:32:23 -Generating unique operation named: listUsingGET_1
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_2
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_3
2019-04-04 11:32:24 -Generating unique operation named: saveUsingPOST_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingGET_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPOST_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPUT_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 11:32:24 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 11:32:24 -Generating unique operation named: addUsingGET_2
2019-04-04 11:32:24 -Generating unique operation named: editUsingGET_2
2019-04-04 11:32:24 -Generating unique operation named: listUsingGET_2
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_4
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_5
2019-04-04 11:32:24 -Generating unique operation named: saveUsingPOST_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPOST_2
2019-04-04 11:32:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 11:32:24 -Generating unique operation named: addUsingGET_3
2019-04-04 11:32:24 -Generating unique operation named: editUsingGET_3
2019-04-04 11:32:24 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 11:32:24 -Generating unique operation named: listUsingGET_3
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_6
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_7
2019-04-04 11:32:24 -Generating unique operation named: saveUsingPOST_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingGET_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPOST_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPUT_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 11:32:24 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 11:32:24 -Generating unique operation named: addUsingGET_4
2019-04-04 11:32:24 -Generating unique operation named: editUsingGET_4
2019-04-04 11:32:24 -Generating unique operation named: listUsingGET_4
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_8
2019-04-04 11:32:24 -Generating unique operation named: removeUsingPOST_9
2019-04-04 11:32:24 -Generating unique operation named: saveUsingPOST_4
2019-04-04 11:32:24 -Generating unique operation named: updateUsingGET_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPOST_4
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPUT_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 11:32:24 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 11:32:24 -Generating unique operation named: ElecUsingGET_1
2019-04-04 11:32:24 -Generating unique operation named: addUsingGET_5
2019-04-04 11:32:24 -Generating unique operation named: editUsingGET_5
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_5
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_10
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_11
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingGET_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPUT_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 11:32:25 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_6
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_6
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_6
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_7
2019-04-04 11:32:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_7
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_12
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_13
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingGET_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPUT_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 11:32:25 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 11:32:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_7
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_8
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_8
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_14
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_15
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingGET_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_8
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPUT_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 11:32:25 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_8
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_9
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_9
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_16
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_17
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_8
2019-04-04 11:32:25 -Generating unique operation named: updateUsingGET_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_9
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPUT_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 11:32:25 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_9
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_10
2019-04-04 11:32:25 -Generating unique operation named: infoUsingGET_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingPOST_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingPUT_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 11:32:25 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_10
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_18
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_19
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_9
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_10
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_11
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_20
2019-04-04 11:32:25 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_10
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_11
2019-04-04 11:32:25 -Generating unique operation named: listUsingGET_12
2019-04-04 11:32:25 -Generating unique operation named: removeUsingPOST_21
2019-04-04 11:32:25 -Generating unique operation named: saveUsingPOST_10
2019-04-04 11:32:25 -Generating unique operation named: treeUsingGET_1
2019-04-04 11:32:25 -Generating unique operation named: treeUsingGET_2
2019-04-04 11:32:25 -Generating unique operation named: updateUsingPOST_11
2019-04-04 11:32:25 -Generating unique operation named: addUsingGET_11
2019-04-04 11:32:25 -Generating unique operation named: editUsingGET_12
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_13
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_22
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_23
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingGET_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPUT_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 11:32:26 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_12
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_13
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_14
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_24
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_25
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingGET_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_13
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPUT_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 11:32:26 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_13
2019-04-04 11:32:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_14
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_15
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_13
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_14
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_14
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_16
2019-04-04 11:32:26 -Generating unique operation named: listUsingHEAD_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingPOST_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingPUT_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingPATCH_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingDELETE_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 11:32:26 -Generating unique operation named: listUsingTRACE_1
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_14
2019-04-04 11:32:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_15
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_17
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_26
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_15
2019-04-04 11:32:26 -Generating unique operation named: treeUsingGET_3
2019-04-04 11:32:26 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_15
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_15
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_16
2019-04-04 11:32:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_18
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_27
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_28
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_16
2019-04-04 11:32:26 -Generating unique operation named: updateUsingGET_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_16
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPUT_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 11:32:26 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 11:32:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_16
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_17
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_19
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_29
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_30
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_17
2019-04-04 11:32:26 -Generating unique operation named: updateUsingGET_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_17
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPUT_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 11:32:26 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 11:32:26 -Generating unique operation named: addUsingGET_17
2019-04-04 11:32:26 -Generating unique operation named: editUsingGET_18
2019-04-04 11:32:26 -Generating unique operation named: listUsingGET_20
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_31
2019-04-04 11:32:26 -Generating unique operation named: removeUsingPOST_32
2019-04-04 11:32:26 -Generating unique operation named: saveUsingPOST_18
2019-04-04 11:32:26 -Generating unique operation named: updateUsingGET_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPOST_18
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPUT_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 11:32:26 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 11:32:26 -Starting Quartz Scheduler now
2019-04-04 11:32:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 11:32:26 -Starting...
2019-04-04 11:32:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 11:32:26 -Started.
2019-04-04 11:32:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 11:32:26 -Using a shared selector for servlet write/read
2019-04-04 11:32:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 11:32:26 -Started BootdoApplication in 33.194 seconds (JVM running for 34.166)
2019-04-04 11:32:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 11:32:26 -==> Parameters: 
2019-04-04 11:32:26 -<==      Total: 1
2019-04-04 11:32:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 11:32:28 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 11:32:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-04-04 11:32:28 -Enabling session validation scheduler...
2019-04-04 11:32:28 -请求地址 : http://localhost:8081/login;JSESSIONID=07c8309f-5e1c-49e4-8a4d-93da05e4f14a
2019-04-04 11:32:28 -HTTP METHOD : GET
2019-04-04 11:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:32:28 -参数 : [{}]
2019-04-04 11:32:28 -耗时 : 3
2019-04-04 11:32:28 -返回值 : login
2019-04-04 11:32:30 -请求地址 : http://localhost:8081/getVerify
2019-04-04 11:32:30 -HTTP METHOD : GET
2019-04-04 11:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 11:32:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@20ecf578, org.apache.shiro.web.servlet.ShiroHttpServletResponse@692ecd9b]
2019-04-04 11:32:31 -8576
2019-04-04 11:32:31 -耗时 : 599
2019-04-04 11:32:31 -返回值 : null
2019-04-04 11:32:31 -请求地址 : http://localhost:8081/login
2019-04-04 11:32:31 -HTTP METHOD : GET
2019-04-04 11:32:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 11:32:31 -参数 : [{}]
2019-04-04 11:32:31 -耗时 : 0
2019-04-04 11:32:31 -返回值 : login
2019-04-04 11:32:57 -请求地址 : http://localhost:8081/login
2019-04-04 11:32:57 -HTTP METHOD : POST
2019-04-04 11:32:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 11:32:57 -参数 : [admin, 111111, 8576, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ac81bb7]
2019-04-04 11:32:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 11:32:57 -==> Parameters: admin(String)
2019-04-04 11:32:57 -<==      Total: 1
2019-04-04 11:32:57 -耗时 : 94
2019-04-04 11:32:57 -返回值 : {msg=操作成功, code=0}
2019-04-04 11:32:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 11:32:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:32:57 -==> Parameters: 1(Long), admin(String), 登录(String), 94(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 11:32:57.883(Timestamp)
2019-04-04 11:32:57 -请求地址 : http://localhost:8081/index
2019-04-04 11:32:57 -HTTP METHOD : GET
2019-04-04 11:32:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:32:57 -参数 : [{}]
2019-04-04 11:32:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:32:58 -<==    Updates: 1
2019-04-04 11:32:58 -==> Parameters: 1(Long)
2019-04-04 11:32:58 -<==      Total: 46
2019-04-04 11:32:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:32:58 -==> Parameters: 138(Long)
2019-04-04 11:32:58 -<==      Total: 1
2019-04-04 11:32:58 -耗时 : 281
2019-04-04 11:32:58 -返回值 : index_v1
2019-04-04 11:32:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:32:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 281(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:32:58.242(Timestamp)
2019-04-04 11:32:58 -<==    Updates: 1
2019-04-04 11:32:58 -请求地址 : http://localhost:8081/main
2019-04-04 11:32:58 -HTTP METHOD : GET
2019-04-04 11:32:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:32:58 -参数 : []
2019-04-04 11:32:58 -耗时 : 0
2019-04-04 11:32:58 -返回值 : main
2019-04-04 11:32:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:32:59 -HTTP METHOD : GET
2019-04-04 11:32:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:32:59 -参数 : []
2019-04-04 11:32:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:32:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:32:59 -<==      Total: 0
2019-04-04 11:32:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:32:59 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:32:59 -<==      Total: 1
2019-04-04 11:32:59 -耗时 : 43
2019-04-04 11:32:59 -返回值 : com.bootdo.common.utils.PageUtils@49c7be44
2019-04-04 11:32:59 -请求地址 : http://localhost:8081/main
2019-04-04 11:32:59 -HTTP METHOD : GET
2019-04-04 11:32:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:32:59 -参数 : []
2019-04-04 11:32:59 -耗时 : 0
2019-04-04 11:32:59 -返回值 : main
2019-04-04 11:33:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 11:33:10 -==> Parameters: 1(Long)
2019-04-04 11:33:10 -<==      Total: 90
2019-04-04 11:33:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:33:10 -HTTP METHOD : GET
2019-04-04 11:33:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:33:10 -参数 : []
2019-04-04 11:33:10 -耗时 : 1
2019-04-04 11:33:10 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:33:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:33:11 -HTTP METHOD : GET
2019-04-04 11:33:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:11 -参数 : [userType]
2019-04-04 11:33:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:11 -==> Parameters: userType(String)
2019-04-04 11:33:11 -<==      Total: 2
2019-04-04 11:33:11 -耗时 : 22
2019-04-04 11:33:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:33:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:33:11 -HTTP METHOD : GET
2019-04-04 11:33:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:33:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:33:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:33:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:33:11 -<==      Total: 8
2019-04-04 11:33:11 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:33:11 -==> Parameters: 
2019-04-04 11:33:11 -<==      Total: 1
2019-04-04 11:33:11 -耗时 : 50
2019-04-04 11:33:11 -返回值 : com.bootdo.common.utils.PageUtils@16ef6611
2019-04-04 11:33:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:33:13 -HTTP METHOD : GET
2019-04-04 11:33:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:33:13 -参数 : [1, {}]
2019-04-04 11:33:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:33:13 -==> Parameters: 1(Long)
2019-04-04 11:33:13 -<==      Total: 1
2019-04-04 11:33:13 -耗时 : 7
2019-04-04 11:33:13 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:33:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:33:13 -HTTP METHOD : GET
2019-04-04 11:33:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:13 -参数 : [userType]
2019-04-04 11:33:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:13 -==> Parameters: userType(String)
2019-04-04 11:33:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:33:13 -HTTP METHOD : GET
2019-04-04 11:33:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:13 -参数 : [elecType]
2019-04-04 11:33:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:13 -==> Parameters: elecType(String)
2019-04-04 11:33:13 -<==      Total: 2
2019-04-04 11:33:13 -耗时 : 5
2019-04-04 11:33:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:33:13 -<==      Total: 4
2019-04-04 11:33:13 -耗时 : 12
2019-04-04 11:33:13 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:33:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-04 11:33:46 -请求地址 : http://localhost:8081/index
2019-04-04 11:33:46 -HTTP METHOD : GET
2019-04-04 11:33:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:33:46 -参数 : [{}]
2019-04-04 11:33:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:33:46 -==> Parameters: 1(Long)
2019-04-04 11:33:46 -<==      Total: 46
2019-04-04 11:33:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:33:46 -==> Parameters: 138(Long)
2019-04-04 11:33:46 -<==      Total: 1
2019-04-04 11:33:46 -耗时 : 31
2019-04-04 11:33:46 -返回值 : index_v1
2019-04-04 11:33:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:33:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:33:46.822(Timestamp)
2019-04-04 11:33:47 -请求地址 : http://localhost:8081/main
2019-04-04 11:33:47 -HTTP METHOD : GET
2019-04-04 11:33:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:33:47 -参数 : []
2019-04-04 11:33:47 -耗时 : 1
2019-04-04 11:33:47 -返回值 : main
2019-04-04 11:33:47 -<==    Updates: 1
2019-04-04 11:33:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:33:47 -HTTP METHOD : GET
2019-04-04 11:33:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:33:47 -参数 : []
2019-04-04 11:33:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:33:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:33:47 -<==      Total: 0
2019-04-04 11:33:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:33:47 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:33:47 -<==      Total: 1
2019-04-04 11:33:47 -耗时 : 33
2019-04-04 11:33:47 -返回值 : com.bootdo.common.utils.PageUtils@7da3743c
2019-04-04 11:33:47 -请求地址 : http://localhost:8081/main
2019-04-04 11:33:47 -HTTP METHOD : GET
2019-04-04 11:33:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:33:47 -参数 : []
2019-04-04 11:33:47 -耗时 : 1
2019-04-04 11:33:47 -返回值 : main
2019-04-04 11:33:49 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:33:49 -HTTP METHOD : GET
2019-04-04 11:33:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:33:49 -参数 : []
2019-04-04 11:33:49 -耗时 : 0
2019-04-04 11:33:49 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:33:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:33:50 -HTTP METHOD : GET
2019-04-04 11:33:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:50 -参数 : [userType]
2019-04-04 11:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:50 -==> Parameters: userType(String)
2019-04-04 11:33:50 -<==      Total: 2
2019-04-04 11:33:50 -耗时 : 5
2019-04-04 11:33:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:33:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:33:50 -HTTP METHOD : GET
2019-04-04 11:33:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:33:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:33:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:33:50 -<==      Total: 8
2019-04-04 11:33:50 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:33:50 -==> Parameters: 
2019-04-04 11:33:50 -<==      Total: 1
2019-04-04 11:33:50 -耗时 : 24
2019-04-04 11:33:50 -返回值 : com.bootdo.common.utils.PageUtils@1c75e11b
2019-04-04 11:33:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:33:50 -HTTP METHOD : GET
2019-04-04 11:33:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:33:50 -参数 : [1, {}]
2019-04-04 11:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:33:50 -==> Parameters: 1(Long)
2019-04-04 11:33:50 -<==      Total: 1
2019-04-04 11:33:50 -耗时 : 5
2019-04-04 11:33:50 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:33:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:33:51 -HTTP METHOD : GET
2019-04-04 11:33:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:51 -参数 : [userType]
2019-04-04 11:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:51 -==> Parameters: userType(String)
2019-04-04 11:33:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:33:51 -<==      Total: 2
2019-04-04 11:33:51 -耗时 : 6
2019-04-04 11:33:51 -HTTP METHOD : GET
2019-04-04 11:33:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:33:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:33:51 -参数 : [elecType]
2019-04-04 11:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:33:51 -==> Parameters: elecType(String)
2019-04-04 11:33:51 -<==      Total: 4
2019-04-04 11:33:51 -耗时 : 11
2019-04-04 11:33:51 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:34:23 -请求地址 : http://localhost:8081/index
2019-04-04 11:34:23 -HTTP METHOD : GET
2019-04-04 11:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:34:23 -参数 : [{}]
2019-04-04 11:34:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:34:23 -==> Parameters: 1(Long)
2019-04-04 11:34:23 -<==      Total: 46
2019-04-04 11:34:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:34:23 -==> Parameters: 138(Long)
2019-04-04 11:34:23 -<==      Total: 1
2019-04-04 11:34:23 -耗时 : 40
2019-04-04 11:34:23 -返回值 : index_v1
2019-04-04 11:34:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:34:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:34:23.299(Timestamp)
2019-04-04 11:34:23 -<==    Updates: 1
2019-04-04 11:34:23 -请求地址 : http://localhost:8081/main
2019-04-04 11:34:23 -HTTP METHOD : GET
2019-04-04 11:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:34:23 -参数 : []
2019-04-04 11:34:23 -耗时 : 0
2019-04-04 11:34:23 -返回值 : main
2019-04-04 11:34:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:34:23 -HTTP METHOD : GET
2019-04-04 11:34:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:34:23 -参数 : []
2019-04-04 11:34:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:34:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:34:23 -<==      Total: 0
2019-04-04 11:34:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:34:23 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:34:23 -<==      Total: 1
2019-04-04 11:34:23 -耗时 : 7
2019-04-04 11:34:23 -返回值 : com.bootdo.common.utils.PageUtils@216db13d
2019-04-04 11:34:23 -请求地址 : http://localhost:8081/main
2019-04-04 11:34:23 -HTTP METHOD : GET
2019-04-04 11:34:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:34:23 -参数 : []
2019-04-04 11:34:23 -耗时 : 1
2019-04-04 11:34:23 -返回值 : main
2019-04-04 11:34:25 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:34:25 -HTTP METHOD : GET
2019-04-04 11:34:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:34:25 -参数 : []
2019-04-04 11:34:25 -耗时 : 2
2019-04-04 11:34:25 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:34:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:34:26 -HTTP METHOD : GET
2019-04-04 11:34:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:34:26 -参数 : [userType]
2019-04-04 11:34:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:34:26 -==> Parameters: userType(String)
2019-04-04 11:34:26 -<==      Total: 2
2019-04-04 11:34:26 -耗时 : 5
2019-04-04 11:34:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:34:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:34:26 -HTTP METHOD : GET
2019-04-04 11:34:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:34:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:34:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:34:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:34:26 -<==      Total: 8
2019-04-04 11:34:26 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:34:26 -==> Parameters: 
2019-04-04 11:34:26 -<==      Total: 1
2019-04-04 11:34:26 -耗时 : 13
2019-04-04 11:34:26 -返回值 : com.bootdo.common.utils.PageUtils@525ebc00
2019-04-04 11:34:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:34:27 -HTTP METHOD : GET
2019-04-04 11:34:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:34:27 -参数 : [1, {}]
2019-04-04 11:34:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:34:27 -==> Parameters: 1(Long)
2019-04-04 11:34:27 -<==      Total: 1
2019-04-04 11:34:27 -耗时 : 3
2019-04-04 11:34:27 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:34:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:34:27 -HTTP METHOD : GET
2019-04-04 11:34:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:34:27 -参数 : [userType]
2019-04-04 11:34:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:34:27 -==> Parameters: userType(String)
2019-04-04 11:34:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:34:27 -HTTP METHOD : GET
2019-04-04 11:34:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:34:27 -参数 : [elecType]
2019-04-04 11:34:27 -<==      Total: 2
2019-04-04 11:34:27 -耗时 : 4
2019-04-04 11:34:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:34:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:34:27 -==> Parameters: elecType(String)
2019-04-04 11:34:27 -<==      Total: 4
2019-04-04 11:34:27 -耗时 : 6
2019-04-04 11:34:27 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:37:09 -请求地址 : http://localhost:8081/index
2019-04-04 11:37:09 -HTTP METHOD : GET
2019-04-04 11:37:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 11:37:09 -参数 : [{}]
2019-04-04 11:37:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 11:37:09 -==> Parameters: 1(Long)
2019-04-04 11:37:09 -<==      Total: 46
2019-04-04 11:37:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 11:37:09 -==> Parameters: 138(Long)
2019-04-04 11:37:09 -<==      Total: 1
2019-04-04 11:37:09 -耗时 : 24
2019-04-04 11:37:09 -返回值 : index_v1
2019-04-04 11:37:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 11:37:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 11:37:09.93(Timestamp)
2019-04-04 11:37:10 -请求地址 : http://localhost:8081/main
2019-04-04 11:37:10 -HTTP METHOD : GET
2019-04-04 11:37:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:37:10 -参数 : []
2019-04-04 11:37:10 -耗时 : 1
2019-04-04 11:37:10 -返回值 : main
2019-04-04 11:37:10 -<==    Updates: 1
2019-04-04 11:37:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 11:37:10 -HTTP METHOD : GET
2019-04-04 11:37:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 11:37:10 -参数 : []
2019-04-04 11:37:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 11:37:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 11:37:10 -<==      Total: 0
2019-04-04 11:37:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 11:37:10 -==> Parameters: 1(Long), 0(String)
2019-04-04 11:37:10 -<==      Total: 1
2019-04-04 11:37:10 -耗时 : 8
2019-04-04 11:37:10 -返回值 : com.bootdo.common.utils.PageUtils@1434b75b
2019-04-04 11:37:10 -请求地址 : http://localhost:8081/main
2019-04-04 11:37:10 -HTTP METHOD : GET
2019-04-04 11:37:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 11:37:10 -参数 : []
2019-04-04 11:37:10 -耗时 : 2
2019-04-04 11:37:10 -返回值 : main
2019-04-04 11:37:12 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-04 11:37:12 -HTTP METHOD : GET
2019-04-04 11:37:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-04 11:37:12 -参数 : []
2019-04-04 11:37:12 -耗时 : 1
2019-04-04 11:37:12 -返回值 : /moneyList/moneyList
2019-04-04 11:37:14 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 11:37:14 -HTTP METHOD : GET
2019-04-04 11:37:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 11:37:14 -参数 : []
2019-04-04 11:37:14 -耗时 : 1
2019-04-04 11:37:14 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 11:37:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:37:14 -HTTP METHOD : GET
2019-04-04 11:37:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:37:14 -参数 : [userType]
2019-04-04 11:37:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:37:14 -==> Parameters: userType(String)
2019-04-04 11:37:14 -<==      Total: 2
2019-04-04 11:37:14 -耗时 : 4
2019-04-04 11:37:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:37:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 11:37:14 -HTTP METHOD : GET
2019-04-04 11:37:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 11:37:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 11:37:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 11:37:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 11:37:14 -<==      Total: 8
2019-04-04 11:37:14 -==>  Preparing: select count(*) from elec_log 
2019-04-04 11:37:14 -==> Parameters: 
2019-04-04 11:37:14 -<==      Total: 1
2019-04-04 11:37:14 -耗时 : 9
2019-04-04 11:37:14 -返回值 : com.bootdo.common.utils.PageUtils@5813a6da
2019-04-04 11:37:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 11:37:15 -HTTP METHOD : GET
2019-04-04 11:37:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 11:37:15 -参数 : [1, {}]
2019-04-04 11:37:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 11:37:15 -==> Parameters: 1(Long)
2019-04-04 11:37:15 -<==      Total: 1
2019-04-04 11:37:15 -耗时 : 5
2019-04-04 11:37:15 -返回值 : moneyLog/elecLog/edit
2019-04-04 11:37:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 11:37:16 -HTTP METHOD : GET
2019-04-04 11:37:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:37:16 -参数 : [userType]
2019-04-04 11:37:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:37:16 -==> Parameters: userType(String)
2019-04-04 11:37:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 11:37:16 -HTTP METHOD : GET
2019-04-04 11:37:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 11:37:16 -<==      Total: 2
2019-04-04 11:37:16 -参数 : [elecType]
2019-04-04 11:37:16 -耗时 : 4
2019-04-04 11:37:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 11:37:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 11:37:16 -==> Parameters: elecType(String)
2019-04-04 11:37:16 -<==      Total: 4
2019-04-04 11:37:16 -耗时 : 7
2019-04-04 11:37:16 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 12:03:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-04-04 13:34:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 563]
2019-04-04 13:34:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 690]
2019-04-04 13:34:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 2, completed tasks = 705]
2019-04-04 13:36:29 -请求地址 : http://localhost:8081/login;JSESSIONID=75c83613-e8ee-4287-abc8-5d14ddeeb8da
2019-04-04 13:36:29 -HTTP METHOD : GET
2019-04-04 13:36:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 13:36:29 -参数 : [{}]
2019-04-04 13:36:29 -耗时 : 1
2019-04-04 13:36:29 -返回值 : login
2019-04-04 13:36:29 -请求地址 : http://localhost:8081/login;JSESSIONID=75c83613-e8ee-4287-abc8-5d14ddeeb8da
2019-04-04 13:36:29 -HTTP METHOD : GET
2019-04-04 13:36:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 13:36:29 -参数 : [{}]
2019-04-04 13:36:29 -耗时 : 1
2019-04-04 13:36:29 -返回值 : login
2019-04-04 13:36:30 -请求地址 : http://localhost:8081/getVerify
2019-04-04 13:36:30 -HTTP METHOD : GET
2019-04-04 13:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 13:36:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@31a0d949, org.apache.shiro.web.servlet.ShiroHttpServletResponse@15addcaa]
2019-04-04 13:36:30 -5158
2019-04-04 13:36:30 -耗时 : 13
2019-04-04 13:36:30 -返回值 : null
2019-04-04 13:36:30 -请求地址 : http://localhost:8081/getVerify
2019-04-04 13:36:30 -HTTP METHOD : GET
2019-04-04 13:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 13:36:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ae2f33, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7dd92aa3]
2019-04-04 13:36:30 -1168
2019-04-04 13:36:30 -耗时 : 13
2019-04-04 13:36:30 -返回值 : null
2019-04-04 13:36:34 -请求地址 : http://localhost:8081/login
2019-04-04 13:36:34 -HTTP METHOD : POST
2019-04-04 13:36:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 13:36:34 -参数 : [admin, 111111, 1168, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1cd9deab]
2019-04-04 13:36:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 13:36:34 -==> Parameters: admin(String)
2019-04-04 13:36:34 -<==      Total: 1
2019-04-04 13:36:34 -耗时 : 14
2019-04-04 13:36:34 -返回值 : {msg=操作成功, code=0}
2019-04-04 13:36:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:36:34 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 13:36:34.915(Timestamp)
2019-04-04 13:36:34 -请求地址 : http://localhost:8081/index
2019-04-04 13:36:34 -HTTP METHOD : GET
2019-04-04 13:36:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 13:36:34 -参数 : [{}]
2019-04-04 13:36:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 13:36:34 -==> Parameters: 1(Long)
2019-04-04 13:36:35 -<==      Total: 46
2019-04-04 13:36:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 13:36:35 -==> Parameters: 138(Long)
2019-04-04 13:36:35 -<==      Total: 1
2019-04-04 13:36:35 -耗时 : 412
2019-04-04 13:36:35 -返回值 : index_v1
2019-04-04 13:36:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:36:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 413(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 13:36:35.36(Timestamp)
2019-04-04 13:36:35 -<==    Updates: 1
2019-04-04 13:36:35 -请求地址 : http://localhost:8081/main
2019-04-04 13:36:35 -HTTP METHOD : GET
2019-04-04 13:36:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:36:35 -参数 : []
2019-04-04 13:36:35 -耗时 : 0
2019-04-04 13:36:35 -返回值 : main
2019-04-04 13:36:35 -<==    Updates: 1
2019-04-04 13:36:36 -请求地址 : http://localhost:8081/main
2019-04-04 13:36:36 -HTTP METHOD : GET
2019-04-04 13:36:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:36:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 13:36:36 -HTTP METHOD : GET
2019-04-04 13:36:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 13:36:36 -参数 : []
2019-04-04 13:36:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 13:36:36 -参数 : []
2019-04-04 13:36:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 13:36:36 -耗时 : 6
2019-04-04 13:36:36 -返回值 : main
2019-04-04 13:36:36 -<==      Total: 0
2019-04-04 13:36:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 13:36:36 -==> Parameters: 1(Long), 0(String)
2019-04-04 13:36:36 -<==      Total: 1
2019-04-04 13:36:36 -耗时 : 321
2019-04-04 13:36:36 -返回值 : com.bootdo.common.utils.PageUtils@3995bb98
2019-04-04 13:37:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 13:37:11 -==> Parameters: 1(Long)
2019-04-04 13:37:11 -<==      Total: 90
2019-04-04 13:37:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 13:37:11 -HTTP METHOD : GET
2019-04-04 13:37:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 13:37:11 -参数 : []
2019-04-04 13:37:11 -耗时 : 1
2019-04-04 13:37:11 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 13:37:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:37:11 -HTTP METHOD : GET
2019-04-04 13:37:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:37:11 -参数 : [userType]
2019-04-04 13:37:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:37:11 -==> Parameters: userType(String)
2019-04-04 13:37:11 -<==      Total: 2
2019-04-04 13:37:11 -耗时 : 6
2019-04-04 13:37:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:37:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:37:11 -HTTP METHOD : GET
2019-04-04 13:37:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:37:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:37:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:37:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:37:11 -<==      Total: 8
2019-04-04 13:37:11 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:37:11 -==> Parameters: 
2019-04-04 13:37:11 -<==      Total: 1
2019-04-04 13:37:11 -耗时 : 9
2019-04-04 13:37:11 -返回值 : com.bootdo.common.utils.PageUtils@33a1b6ef
2019-04-04 13:37:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-04 13:37:19 -HTTP METHOD : GET
2019-04-04 13:37:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 13:37:19 -参数 : [8, {}]
2019-04-04 13:37:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 13:37:19 -==> Parameters: 8(Long)
2019-04-04 13:37:19 -<==      Total: 1
2019-04-04 13:37:19 -耗时 : 4
2019-04-04 13:37:19 -返回值 : moneyLog/elecLog/edit
2019-04-04 13:37:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:37:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 13:37:19 -HTTP METHOD : GET
2019-04-04 13:37:19 -HTTP METHOD : GET
2019-04-04 13:37:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:37:19 -参数 : [elecType]
2019-04-04 13:37:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:37:19 -参数 : [userType]
2019-04-04 13:37:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:37:19 -==> Parameters: elecType(String)
2019-04-04 13:37:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:37:19 -==> Parameters: userType(String)
2019-04-04 13:37:19 -<==      Total: 4
2019-04-04 13:37:19 -耗时 : 7
2019-04-04 13:37:19 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:37:19 -<==      Total: 2
2019-04-04 13:37:19 -耗时 : 16
2019-04-04 13:37:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:37:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-04 13:37:24 -HTTP METHOD : POST
2019-04-04 13:37:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-04 13:37:24 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@5356599]
2019-04-04 13:37:24 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 13:37:25 -==> Parameters: 1(String), 12(String), A(String), 2(String), 0(String), 1.00(BigDecimal), 2019-04-04 10:43:40.0(Timestamp), 2019-04(String), 1(Long), 2019-04-04 13:37:24.957(Timestamp), 1(Long), (String), 8(Long)
2019-04-04 13:37:25 -<==    Updates: 1
2019-04-04 13:37:25 -耗时 : 284
2019-04-04 13:37:25 -返回值 : {msg=操作成功, code=0}
2019-04-04 13:37:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:37:25 -HTTP METHOD : GET
2019-04-04 13:37:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:37:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:37:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:37:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:37:25 -<==      Total: 8
2019-04-04 13:37:25 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:37:25 -==> Parameters: 
2019-04-04 13:37:25 -<==      Total: 1
2019-04-04 13:37:25 -耗时 : 8
2019-04-04 13:37:25 -返回值 : com.bootdo.common.utils.PageUtils@59806dfb
2019-04-04 13:37:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-04 13:37:35 -HTTP METHOD : GET
2019-04-04 13:37:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 13:37:35 -参数 : [8, {}]
2019-04-04 13:37:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 13:37:35 -==> Parameters: 8(Long)
2019-04-04 13:37:35 -<==      Total: 1
2019-04-04 13:37:35 -耗时 : 6
2019-04-04 13:37:35 -返回值 : moneyLog/elecLog/edit
2019-04-04 13:37:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:37:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 13:37:35 -HTTP METHOD : GET
2019-04-04 13:37:35 -HTTP METHOD : GET
2019-04-04 13:37:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:37:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:37:35 -参数 : [userType]
2019-04-04 13:37:35 -参数 : [elecType]
2019-04-04 13:37:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:37:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:37:35 -==> Parameters: elecType(String)
2019-04-04 13:37:35 -==> Parameters: userType(String)
2019-04-04 13:37:35 -<==      Total: 2
2019-04-04 13:37:35 -<==      Total: 4
2019-04-04 13:37:35 -耗时 : 4
2019-04-04 13:37:35 -耗时 : 4
2019-04-04 13:37:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:37:35 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:37:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-04 13:37:41 -HTTP METHOD : POST
2019-04-04 13:37:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-04 13:37:41 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@5afa6e3d]
2019-04-04 13:37:41 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 13:37:41 -==> Parameters: 111111111111111111111111111111111111(String), 12(String), A(String), 2(String), 0(String), 1.00(BigDecimal), 2019-04-04 10:43:40.0(Timestamp), 2019-04(String), 1(Long), 2019-04-04 13:37:41.657(Timestamp), 1(Long), (String), 8(Long)
2019-04-04 13:37:41 -{conn-10001, pstmt-20024} execute error. update elec_log
		 SET `user_id` = ?, 
			`user_name` = ?, 
			`user_type` = ?, 
			`user_org` = ?, 
			 `elec_type` = ?, 
			`elec_money` = ?, 
			`elec_date` = ?, 
			`create_time` = ?, 
			`create_by` = ?, 
			`update_time` = ?, 
			`update_by` = ?, 
			`remark` = ? 
		where id = ?
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.update(ElecLogServiceImpl.java:43)
	at com.bootdo.moneyLog.controller.ElecLogController.update(ElecLogController.java:213)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$fb4a25a.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-04 13:37:41 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-04-04 13:37:42 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-04-04 13:37:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:37:42 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.update-Inline
### The error occurred while setting parameters
### SQL: update elec_log    SET `user_id` = ?,     `user_name` = ?,     `user_type` = ?,     `user_org` = ?,      `elec_type` = ?,     `elec_money` = ?,     `elec_date` = ?,     `create_time` = ?,     `create_by` = ?,     `update_time` = ?,     `update_by` = ?,     `remark` = ?    where id = ?
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
; ]; Data truncation: Data too long for column 'user_id' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.update-Inline
### The error occurred while setting parameters
### SQL: update elec_log    SET `user_id` = ?,     `user_name` = ?,     `user_type` = ?,     `user_org` = ?,      `elec_type` = ?,     `elec_money` = ?,     `elec_date` = ?,     `create_time` = ?,     `create_by` = ?,     `update_time` = ?,     `update_by` = ?,     `remark` = ?    where id = ?
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
; ]; Data truncation: Data too long for column 'user_id' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.update(ElecLogServiceImpl.java:43)
	at com.bootdo.moneyLog.controller.ElecLogController.update(ElecLogController.java:213)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$fb4a25a.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 13:37:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/update(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.update-Inline
### The error occurred while setting parameters
### SQL: update elec_log    SET `user_id` = ?,     `user_name` = ?,     `user_type` = ?,     `user_org` = ?,      `elec_type` = ?,     `elec_money` = ?,     `elec_date` = ?,     `create_time` = ?,     `create_by` = ?,     `update_time` = ?,     `update_by` = ?,     `remark` = ?    where id = ?
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
; ]; Data truncation: Data too long for column 'user_id' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1(String), null, 2019-04-04 13:37:42.08(Timestamp)
2019-04-04 13:37:42 -<==    Updates: 1
2019-04-04 13:37:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-04 13:37:49 -HTTP METHOD : POST
2019-04-04 13:37:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-04 13:37:49 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@d84a76]
2019-04-04 13:37:49 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 13:37:49 -==> Parameters: 111111111(String), 12(String), A(String), 2(String), 0(String), 1.00(BigDecimal), 2019-04-04 10:43:40.0(Timestamp), 2019-04(String), 1(Long), 2019-04-04 13:37:49.242(Timestamp), 1(Long), (String), 8(Long)
2019-04-04 13:37:49 -<==    Updates: 1
2019-04-04 13:37:49 -耗时 : 203
2019-04-04 13:37:49 -返回值 : {msg=操作成功, code=0}
2019-04-04 13:37:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:37:49 -HTTP METHOD : GET
2019-04-04 13:37:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:37:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:37:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:37:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:37:49 -<==      Total: 8
2019-04-04 13:37:49 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:37:49 -==> Parameters: 
2019-04-04 13:37:49 -<==      Total: 1
2019-04-04 13:37:49 -耗时 : 9
2019-04-04 13:37:49 -返回值 : com.bootdo.common.utils.PageUtils@524751c9
2019-04-04 13:47:19 -请求地址 : http://localhost:8081/index
2019-04-04 13:47:19 -HTTP METHOD : GET
2019-04-04 13:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 13:47:19 -参数 : [{}]
2019-04-04 13:47:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 13:47:19 -==> Parameters: 1(Long)
2019-04-04 13:47:19 -<==      Total: 46
2019-04-04 13:47:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 13:47:19 -==> Parameters: 138(Long)
2019-04-04 13:47:19 -<==      Total: 1
2019-04-04 13:47:19 -耗时 : 78
2019-04-04 13:47:19 -返回值 : index_v1
2019-04-04 13:47:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:47:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 79(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 13:47:19.532(Timestamp)
2019-04-04 13:47:19 -请求地址 : http://localhost:8081/main
2019-04-04 13:47:19 -HTTP METHOD : GET
2019-04-04 13:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:47:19 -参数 : []
2019-04-04 13:47:19 -耗时 : 1
2019-04-04 13:47:19 -返回值 : main
2019-04-04 13:47:19 -<==    Updates: 1
2019-04-04 13:47:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 13:47:20 -HTTP METHOD : GET
2019-04-04 13:47:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 13:47:20 -参数 : []
2019-04-04 13:47:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 13:47:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 13:47:20 -<==      Total: 0
2019-04-04 13:47:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 13:47:20 -==> Parameters: 1(Long), 0(String)
2019-04-04 13:47:20 -<==      Total: 1
2019-04-04 13:47:20 -耗时 : 7
2019-04-04 13:47:20 -返回值 : com.bootdo.common.utils.PageUtils@1e110f70
2019-04-04 13:47:20 -请求地址 : http://localhost:8081/main
2019-04-04 13:47:20 -HTTP METHOD : GET
2019-04-04 13:47:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:47:20 -参数 : []
2019-04-04 13:47:20 -耗时 : 1
2019-04-04 13:47:20 -返回值 : main
2019-04-04 13:47:27 -请求地址 : http://localhost:8081/index
2019-04-04 13:47:27 -HTTP METHOD : GET
2019-04-04 13:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 13:47:27 -参数 : [{}]
2019-04-04 13:47:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 13:47:27 -==> Parameters: 1(Long)
2019-04-04 13:47:27 -<==      Total: 46
2019-04-04 13:47:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 13:47:27 -==> Parameters: 138(Long)
2019-04-04 13:47:27 -<==      Total: 1
2019-04-04 13:47:27 -耗时 : 22
2019-04-04 13:47:27 -返回值 : index_v1
2019-04-04 13:47:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:47:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 13:47:27.372(Timestamp)
2019-04-04 13:47:27 -请求地址 : http://localhost:8081/main
2019-04-04 13:47:27 -HTTP METHOD : GET
2019-04-04 13:47:27 -<==    Updates: 1
2019-04-04 13:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:47:27 -参数 : []
2019-04-04 13:47:27 -耗时 : 108
2019-04-04 13:47:27 -返回值 : main
2019-04-04 13:47:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 13:47:27 -HTTP METHOD : GET
2019-04-04 13:47:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 13:47:27 -参数 : []
2019-04-04 13:47:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 13:47:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 13:47:27 -<==      Total: 0
2019-04-04 13:47:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 13:47:27 -==> Parameters: 1(Long), 0(String)
2019-04-04 13:47:27 -<==      Total: 1
2019-04-04 13:47:27 -耗时 : 5
2019-04-04 13:47:27 -返回值 : com.bootdo.common.utils.PageUtils@63e21cb7
2019-04-04 13:47:27 -请求地址 : http://localhost:8081/main
2019-04-04 13:47:27 -HTTP METHOD : GET
2019-04-04 13:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 13:47:27 -参数 : []
2019-04-04 13:47:27 -耗时 : 1
2019-04-04 13:47:27 -返回值 : main
2019-04-04 13:47:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 13:47:29 -==> Parameters: 1(Long)
2019-04-04 13:47:29 -<==      Total: 90
2019-04-04 13:47:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 13:47:29 -HTTP METHOD : GET
2019-04-04 13:47:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 13:47:29 -参数 : []
2019-04-04 13:47:29 -耗时 : 1
2019-04-04 13:47:29 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 13:47:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:47:29 -HTTP METHOD : GET
2019-04-04 13:47:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:47:29 -参数 : [userType]
2019-04-04 13:47:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:47:29 -==> Parameters: userType(String)
2019-04-04 13:47:29 -<==      Total: 2
2019-04-04 13:47:29 -耗时 : 3
2019-04-04 13:47:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:47:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:47:29 -HTTP METHOD : GET
2019-04-04 13:47:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:47:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:47:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:47:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:47:29 -<==      Total: 8
2019-04-04 13:47:29 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:47:29 -==> Parameters: 
2019-04-04 13:47:29 -<==      Total: 1
2019-04-04 13:47:29 -耗时 : 8
2019-04-04 13:47:29 -返回值 : com.bootdo.common.utils.PageUtils@1516bc77
2019-04-04 13:47:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-04 13:47:32 -HTTP METHOD : GET
2019-04-04 13:47:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 13:47:32 -参数 : [8, {}]
2019-04-04 13:47:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 13:47:32 -==> Parameters: 8(Long)
2019-04-04 13:47:32 -<==      Total: 1
2019-04-04 13:47:32 -耗时 : 4
2019-04-04 13:47:32 -返回值 : moneyLog/elecLog/edit
2019-04-04 13:47:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:47:32 -HTTP METHOD : GET
2019-04-04 13:47:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:47:32 -参数 : [userType]
2019-04-04 13:47:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:47:32 -==> Parameters: userType(String)
2019-04-04 13:47:32 -<==      Total: 2
2019-04-04 13:47:32 -耗时 : 4
2019-04-04 13:47:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:47:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 13:47:32 -HTTP METHOD : GET
2019-04-04 13:47:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:47:32 -参数 : [elecType]
2019-04-04 13:47:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:47:32 -==> Parameters: elecType(String)
2019-04-04 13:47:32 -<==      Total: 4
2019-04-04 13:47:32 -耗时 : 5
2019-04-04 13:47:32 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:47:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-04 13:47:41 -HTTP METHOD : POST
2019-04-04 13:47:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-04 13:47:41 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@7cbdb0f9]
2019-04-04 13:47:41 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 13:47:41 -==> Parameters: 1111(String), 12(String), A(String), 2(String), 0(String), 1.00(BigDecimal), 2019-04-04 10:43:40.0(Timestamp), 2019-04(String), 1(Long), 2019-04-04 13:47:41.532(Timestamp), 1(Long), (String), 8(Long)
2019-04-04 13:47:41 -<==    Updates: 1
2019-04-04 13:47:41 -耗时 : 53
2019-04-04 13:47:41 -返回值 : {msg=操作成功, code=0}
2019-04-04 13:47:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:47:41 -HTTP METHOD : GET
2019-04-04 13:47:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:47:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:47:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:47:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:47:41 -<==      Total: 8
2019-04-04 13:47:41 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:47:41 -==> Parameters: 
2019-04-04 13:47:41 -<==      Total: 1
2019-04-04 13:47:41 -耗时 : 9
2019-04-04 13:47:41 -返回值 : com.bootdo.common.utils.PageUtils@2d89e276
2019-04-04 13:47:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/remove
2019-04-04 13:47:58 -HTTP METHOD : POST
2019-04-04 13:47:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.remove
2019-04-04 13:47:58 -参数 : [8]
2019-04-04 13:47:58 -==>  Preparing: delete from elec_log where id = ? 
2019-04-04 13:47:58 -==> Parameters: 8(Long)
2019-04-04 13:47:58 -<==    Updates: 1
2019-04-04 13:47:58 -耗时 : 139
2019-04-04 13:47:58 -返回值 : {msg=操作成功, code=0}
2019-04-04 13:47:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:47:58 -HTTP METHOD : GET
2019-04-04 13:47:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:47:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:47:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:47:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:47:58 -<==      Total: 7
2019-04-04 13:47:58 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:47:58 -==> Parameters: 
2019-04-04 13:47:58 -<==      Total: 1
2019-04-04 13:47:58 -耗时 : 6
2019-04-04 13:47:58 -返回值 : com.bootdo.common.utils.PageUtils@5ec831dd
2019-04-04 13:48:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:16 -HTTP METHOD : GET
2019-04-04 13:48:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:16 -<==      Total: 3
2019-04-04 13:48:16 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:16 -<==      Total: 1
2019-04-04 13:48:16 -耗时 : 11
2019-04-04 13:48:16 -返回值 : com.bootdo.common.utils.PageUtils@246a399b
2019-04-04 13:48:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:22 -HTTP METHOD : GET
2019-04-04 13:48:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:22 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-04-04 13:48:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:22 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:22 -<==      Total: 3
2019-04-04 13:48:22 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:22 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:22 -<==      Total: 1
2019-04-04 13:48:22 -耗时 : 50
2019-04-04 13:48:22 -返回值 : com.bootdo.common.utils.PageUtils@2303068a
2019-04-04 13:48:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:24 -HTTP METHOD : GET
2019-04-04 13:48:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:24 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, elecDate=2019-03-19, type=B}]
2019-04-04 13:48:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:24 -==> Parameters: B(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:24 -<==      Total: 0
2019-04-04 13:48:24 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:24 -==> Parameters: B(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:24 -<==      Total: 1
2019-04-04 13:48:24 -耗时 : 19
2019-04-04 13:48:24 -返回值 : com.bootdo.common.utils.PageUtils@47e52f66
2019-04-04 13:48:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 13:48:25 -HTTP METHOD : GET
2019-04-04 13:48:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 13:48:25 -参数 : []
2019-04-04 13:48:25 -耗时 : 1
2019-04-04 13:48:25 -返回值 : system/dept/deptTree
2019-04-04 13:48:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 13:48:25 -HTTP METHOD : GET
2019-04-04 13:48:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 13:48:25 -参数 : []
2019-04-04 13:48:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 13:48:25 -==> Parameters: 
2019-04-04 13:48:25 -<==      Total: 3
2019-04-04 13:48:25 -耗时 : 19
2019-04-04 13:48:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 13:48:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 13:48:27 -HTTP METHOD : GET
2019-04-04 13:48:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 13:48:27 -参数 : []
2019-04-04 13:48:27 -耗时 : 0
2019-04-04 13:48:27 -返回值 : system/dept/deptTree
2019-04-04 13:48:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 13:48:27 -HTTP METHOD : GET
2019-04-04 13:48:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 13:48:27 -参数 : []
2019-04-04 13:48:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 13:48:27 -==> Parameters: 
2019-04-04 13:48:27 -<==      Total: 3
2019-04-04 13:48:27 -耗时 : 3
2019-04-04 13:48:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 13:48:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:29 -HTTP METHOD : GET
2019-04-04 13:48:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:29 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:29 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:29 -<==      Total: 0
2019-04-04 13:48:29 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:29 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:29 -<==      Total: 1
2019-04-04 13:48:29 -耗时 : 9
2019-04-04 13:48:29 -返回值 : com.bootdo.common.utils.PageUtils@7df3d7
2019-04-04 13:48:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:30 -HTTP METHOD : GET
2019-04-04 13:48:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:30 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:30 -<==      Total: 0
2019-04-04 13:48:30 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:30 -<==      Total: 1
2019-04-04 13:48:30 -耗时 : 11
2019-04-04 13:48:30 -返回值 : com.bootdo.common.utils.PageUtils@4f6ea6e1
2019-04-04 13:48:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:30 -HTTP METHOD : GET
2019-04-04 13:48:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:30 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:30 -<==      Total: 0
2019-04-04 13:48:30 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:30 -<==      Total: 1
2019-04-04 13:48:30 -耗时 : 6
2019-04-04 13:48:30 -返回值 : com.bootdo.common.utils.PageUtils@79db8838
2019-04-04 13:48:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:30 -HTTP METHOD : GET
2019-04-04 13:48:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:30 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:30 -<==      Total: 0
2019-04-04 13:48:30 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:30 -<==      Total: 1
2019-04-04 13:48:30 -耗时 : 8
2019-04-04 13:48:30 -返回值 : com.bootdo.common.utils.PageUtils@3f56c4b0
2019-04-04 13:48:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:30 -HTTP METHOD : GET
2019-04-04 13:48:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:30 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-19}]
2019-04-04 13:48:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-04 13:48:30 -<==      Total: 0
2019-04-04 13:48:30 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-04 13:48:30 -==> Parameters: B(String), 3(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-04 13:48:30 -<==      Total: 1
2019-04-04 13:48:30 -耗时 : 6
2019-04-04 13:48:30 -返回值 : com.bootdo.common.utils.PageUtils@5bdcf194
2019-04-04 13:48:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 13:48:34 -HTTP METHOD : GET
2019-04-04 13:48:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 13:48:34 -参数 : []
2019-04-04 13:48:34 -耗时 : 1
2019-04-04 13:48:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 13:48:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:34 -HTTP METHOD : GET
2019-04-04 13:48:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:34 -参数 : [userType]
2019-04-04 13:48:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:34 -==> Parameters: userType(String)
2019-04-04 13:48:34 -<==      Total: 2
2019-04-04 13:48:34 -耗时 : 4
2019-04-04 13:48:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 13:48:34 -HTTP METHOD : GET
2019-04-04 13:48:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 13:48:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 13:48:34 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$5093bdd9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 13:48:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:48:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 13:48:34.586(Timestamp)
2019-04-04 13:48:34 -<==    Updates: 1
2019-04-04 13:48:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 13:48:36 -HTTP METHOD : GET
2019-04-04 13:48:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 13:48:36 -参数 : []
2019-04-04 13:48:36 -耗时 : 1
2019-04-04 13:48:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 13:48:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:36 -HTTP METHOD : GET
2019-04-04 13:48:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:36 -参数 : [userType]
2019-04-04 13:48:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:36 -==> Parameters: userType(String)
2019-04-04 13:48:36 -<==      Total: 2
2019-04-04 13:48:36 -耗时 : 5
2019-04-04 13:48:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:36 -HTTP METHOD : GET
2019-04-04 13:48:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:48:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:48:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:48:36 -<==      Total: 7
2019-04-04 13:48:36 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:48:36 -==> Parameters: 
2019-04-04 13:48:36 -<==      Total: 1
2019-04-04 13:48:36 -耗时 : 7
2019-04-04 13:48:36 -返回值 : com.bootdo.common.utils.PageUtils@6e7b10b0
2019-04-04 13:48:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 13:48:36 -HTTP METHOD : GET
2019-04-04 13:48:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 13:48:36 -参数 : []
2019-04-04 13:48:36 -耗时 : 1
2019-04-04 13:48:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 13:48:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:37 -HTTP METHOD : GET
2019-04-04 13:48:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:37 -参数 : [userType]
2019-04-04 13:48:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:37 -==> Parameters: userType(String)
2019-04-04 13:48:37 -<==      Total: 2
2019-04-04 13:48:37 -耗时 : 5
2019-04-04 13:48:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 13:48:37 -HTTP METHOD : GET
2019-04-04 13:48:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 13:48:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 13:48:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 13:48:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:48:37 -<==      Total: 7
2019-04-04 13:48:37 -==>  Preparing: select count(*) from elec_log 
2019-04-04 13:48:37 -==> Parameters: 
2019-04-04 13:48:37 -<==      Total: 1
2019-04-04 13:48:37 -耗时 : 7
2019-04-04 13:48:37 -返回值 : com.bootdo.common.utils.PageUtils@6bf07933
2019-04-04 13:48:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 13:48:37 -HTTP METHOD : GET
2019-04-04 13:48:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 13:48:37 -参数 : []
2019-04-04 13:48:37 -耗时 : 1
2019-04-04 13:48:37 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 13:48:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:37 -HTTP METHOD : GET
2019-04-04 13:48:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:37 -参数 : [userType]
2019-04-04 13:48:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:37 -==> Parameters: userType(String)
2019-04-04 13:48:37 -<==      Total: 2
2019-04-04 13:48:37 -耗时 : 4
2019-04-04 13:48:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 13:48:37 -HTTP METHOD : GET
2019-04-04 13:48:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 13:48:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 13:48:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 13:48:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 13:48:37.808(Timestamp)
2019-04-04 13:48:37 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$5093bdd9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor189.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 13:48:37 -<==    Updates: 1
2019-04-04 13:48:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 13:48:38 -HTTP METHOD : GET
2019-04-04 13:48:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 13:48:38 -参数 : []
2019-04-04 13:48:38 -耗时 : 1
2019-04-04 13:48:38 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 13:48:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:38 -HTTP METHOD : GET
2019-04-04 13:48:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:38 -参数 : [userType]
2019-04-04 13:48:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:38 -==> Parameters: userType(String)
2019-04-04 13:48:38 -<==      Total: 2
2019-04-04 13:48:38 -耗时 : 4
2019-04-04 13:48:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 13:48:38 -HTTP METHOD : GET
2019-04-04 13:48:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 13:48:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 13:48:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 13:48:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 13:48:38 -<==      Total: 4
2019-04-04 13:48:38 -==>  Preparing: select count(*) from water_log 
2019-04-04 13:48:38 -==> Parameters: 
2019-04-04 13:48:38 -<==      Total: 1
2019-04-04 13:48:38 -耗时 : 65
2019-04-04 13:48:38 -返回值 : com.bootdo.common.utils.PageUtils@33ea4865
2019-04-04 13:48:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-04-04 13:48:40 -HTTP METHOD : GET
2019-04-04 13:48:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 13:48:40 -参数 : [1, {}]
2019-04-04 13:48:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 13:48:40 -==> Parameters: 1(Long)
2019-04-04 13:48:40 -<==      Total: 1
2019-04-04 13:48:40 -耗时 : 6
2019-04-04 13:48:40 -返回值 : moneyLog/waterLog/edit
2019-04-04 13:48:40 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "moneyLog/waterLog/edit": An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-04 13:48:40 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-04 13:48:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 13:48:44 -HTTP METHOD : GET
2019-04-04 13:48:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 13:48:44 -参数 : []
2019-04-04 13:48:44 -耗时 : 0
2019-04-04 13:48:44 -返回值 : moneyLog/waterLog/add
2019-04-04 13:48:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:44 -HTTP METHOD : GET
2019-04-04 13:48:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:44 -参数 : [userType]
2019-04-04 13:48:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:44 -==> Parameters: userType(String)
2019-04-04 13:48:44 -<==      Total: 2
2019-04-04 13:48:44 -耗时 : 4
2019-04-04 13:48:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:48:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 13:48:49 -HTTP METHOD : GET
2019-04-04 13:48:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 13:48:49 -参数 : []
2019-04-04 13:48:49 -耗时 : 0
2019-04-04 13:48:49 -返回值 : moneyLog/waterLog/add
2019-04-04 13:48:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:48:49 -HTTP METHOD : GET
2019-04-04 13:48:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:48:49 -参数 : [userType]
2019-04-04 13:48:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:48:49 -==> Parameters: userType(String)
2019-04-04 13:48:49 -<==      Total: 2
2019-04-04 13:48:49 -耗时 : 4
2019-04-04 13:48:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 13:55:06 -Validating all active sessions...
2019-04-04 13:55:06 -Finished session validation.  No sessions were stopped.
2019-04-04 13:55:06 -Validating all active sessions...
2019-04-04 13:55:06 -Finished session validation.  No sessions were stopped.
2019-04-04 13:58:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 13:58:19 -==> Parameters: 1(Long)
2019-04-04 13:58:19 -<==      Total: 90
2019-04-04 13:58:19 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 13:58:19 -HTTP METHOD : GET
2019-04-04 13:58:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 13:58:19 -参数 : []
2019-04-04 13:58:19 -耗时 : 1
2019-04-04 13:58:19 -返回值 : moneyLog/waterLog/add
2019-04-04 13:58:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 13:58:20 -HTTP METHOD : GET
2019-04-04 13:58:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 13:58:20 -参数 : [userType]
2019-04-04 13:58:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 13:58:20 -==> Parameters: userType(String)
2019-04-04 13:58:20 -<==      Total: 2
2019-04-04 13:58:20 -耗时 : 4
2019-04-04 13:58:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:03:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1968]
2019-04-04 14:05:04 -请求地址 : http://localhost:8081/index
2019-04-04 14:05:04 -HTTP METHOD : GET
2019-04-04 14:05:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:05:04 -参数 : [{}]
2019-04-04 14:05:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:05:04 -==> Parameters: 1(Long)
2019-04-04 14:05:04 -<==      Total: 46
2019-04-04 14:05:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:05:04 -==> Parameters: 138(Long)
2019-04-04 14:05:04 -<==      Total: 1
2019-04-04 14:05:04 -耗时 : 32
2019-04-04 14:05:04 -返回值 : index_v1
2019-04-04 14:05:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:05:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:05:04.437(Timestamp)
2019-04-04 14:05:04 -<==    Updates: 1
2019-04-04 14:05:04 -请求地址 : http://localhost:8081/main
2019-04-04 14:05:04 -HTTP METHOD : GET
2019-04-04 14:05:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:05:04 -参数 : []
2019-04-04 14:05:04 -耗时 : 1
2019-04-04 14:05:04 -返回值 : main
2019-04-04 14:05:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:05:04 -HTTP METHOD : GET
2019-04-04 14:05:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:05:04 -参数 : []
2019-04-04 14:05:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:05:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:05:04 -<==      Total: 0
2019-04-04 14:05:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:05:04 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:05:04 -<==      Total: 1
2019-04-04 14:05:04 -耗时 : 6
2019-04-04 14:05:04 -返回值 : com.bootdo.common.utils.PageUtils@28b27a74
2019-04-04 14:05:04 -请求地址 : http://localhost:8081/main
2019-04-04 14:05:04 -HTTP METHOD : GET
2019-04-04 14:05:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:05:04 -参数 : []
2019-04-04 14:05:04 -耗时 : 0
2019-04-04 14:05:04 -返回值 : main
2019-04-04 14:05:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:05:06 -HTTP METHOD : GET
2019-04-04 14:05:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:05:06 -参数 : []
2019-04-04 14:05:06 -耗时 : 2
2019-04-04 14:05:06 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:05:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:05:07 -HTTP METHOD : GET
2019-04-04 14:05:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:05:07 -参数 : [userType]
2019-04-04 14:05:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:05:07 -==> Parameters: userType(String)
2019-04-04 14:05:07 -<==      Total: 2
2019-04-04 14:05:07 -耗时 : 4
2019-04-04 14:05:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:05:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:05:07 -HTTP METHOD : GET
2019-04-04 14:05:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:05:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:05:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:05:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:05:07 -<==      Total: 7
2019-04-04 14:05:07 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:05:07 -==> Parameters: 
2019-04-04 14:05:07 -<==      Total: 1
2019-04-04 14:05:07 -耗时 : 7
2019-04-04 14:05:07 -返回值 : com.bootdo.common.utils.PageUtils@6a769a4a
2019-04-04 14:05:08 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:05:08 -HTTP METHOD : GET
2019-04-04 14:05:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:05:08 -参数 : []
2019-04-04 14:05:08 -耗时 : 0
2019-04-04 14:05:08 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:05:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:05:08 -HTTP METHOD : GET
2019-04-04 14:05:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:05:08 -参数 : [userType]
2019-04-04 14:05:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:05:08 -==> Parameters: userType(String)
2019-04-04 14:05:08 -<==      Total: 2
2019-04-04 14:05:08 -耗时 : 3
2019-04-04 14:05:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:05:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:05:08 -HTTP METHOD : GET
2019-04-04 14:05:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:05:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:05:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:05:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:05:08 -<==      Total: 4
2019-04-04 14:05:08 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:05:08 -==> Parameters: 
2019-04-04 14:05:08 -<==      Total: 1
2019-04-04 14:05:08 -耗时 : 6
2019-04-04 14:05:08 -返回值 : com.bootdo.common.utils.PageUtils@7f16356e
2019-04-04 14:05:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:05:09 -HTTP METHOD : GET
2019-04-04 14:05:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:05:09 -参数 : []
2019-04-04 14:05:09 -耗时 : 0
2019-04-04 14:05:09 -返回值 : moneyLog/waterLog/add
2019-04-04 14:05:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:05:09 -HTTP METHOD : GET
2019-04-04 14:05:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:05:09 -参数 : [userType]
2019-04-04 14:05:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:05:09 -==> Parameters: userType(String)
2019-04-04 14:05:09 -<==      Total: 2
2019-04-04 14:05:09 -耗时 : 5
2019-04-04 14:05:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:06:17 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:06:17 -HTTP METHOD : GET
2019-04-04 14:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:06:17 -参数 : []
2019-04-04 14:06:17 -耗时 : 1
2019-04-04 14:06:17 -返回值 : moneyLog/waterLog/add
2019-04-04 14:06:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:06:17 -HTTP METHOD : GET
2019-04-04 14:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:06:17 -参数 : [userType]
2019-04-04 14:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:06:17 -==> Parameters: userType(String)
2019-04-04 14:06:17 -<==      Total: 2
2019-04-04 14:06:17 -耗时 : 6
2019-04-04 14:06:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:08:19 -请求地址 : http://localhost:8081/login;JSESSIONID=f9bd7dbe-e74d-446e-9624-a432d1943dc5
2019-04-04 14:08:19 -HTTP METHOD : GET
2019-04-04 14:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:08:19 -参数 : [{}]
2019-04-04 14:08:19 -耗时 : 1
2019-04-04 14:08:19 -返回值 : login
2019-04-04 14:08:19 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:08:19 -HTTP METHOD : GET
2019-04-04 14:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:08:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5cb66638, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34754dc8]
2019-04-04 14:08:19 -5757
2019-04-04 14:08:19 -耗时 : 15
2019-04-04 14:08:19 -返回值 : null
2019-04-04 14:08:19 -请求地址 : http://localhost:8081/login
2019-04-04 14:08:19 -HTTP METHOD : GET
2019-04-04 14:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:08:19 -参数 : [{}]
2019-04-04 14:08:19 -耗时 : 0
2019-04-04 14:08:19 -返回值 : login
2019-04-04 14:08:23 -请求地址 : http://localhost:8081/login
2019-04-04 14:08:23 -HTTP METHOD : POST
2019-04-04 14:08:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:08:23 -参数 : [admin, 111111, 5757, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c054066]
2019-04-04 14:08:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:08:23 -==> Parameters: admin(String)
2019-04-04 14:08:23 -<==      Total: 1
2019-04-04 14:08:23 -耗时 : 6
2019-04-04 14:08:23 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:08:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:08:23 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:08:23.956(Timestamp)
2019-04-04 14:08:23 -请求地址 : http://localhost:8081/index
2019-04-04 14:08:23 -HTTP METHOD : GET
2019-04-04 14:08:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:08:23 -参数 : [{}]
2019-04-04 14:08:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:08:23 -==> Parameters: 1(Long)
2019-04-04 14:08:23 -<==      Total: 46
2019-04-04 14:08:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:08:24 -==> Parameters: 138(Long)
2019-04-04 14:08:24 -<==      Total: 1
2019-04-04 14:08:24 -耗时 : 29
2019-04-04 14:08:24 -返回值 : index_v1
2019-04-04 14:08:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:08:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:08:24.006(Timestamp)
2019-04-04 14:08:24 -<==    Updates: 1
2019-04-04 14:08:24 -请求地址 : http://localhost:8081/main
2019-04-04 14:08:24 -HTTP METHOD : GET
2019-04-04 14:08:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:08:24 -参数 : []
2019-04-04 14:08:24 -耗时 : 1
2019-04-04 14:08:24 -返回值 : main
2019-04-04 14:08:24 -<==    Updates: 1
2019-04-04 14:08:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:08:24 -HTTP METHOD : GET
2019-04-04 14:08:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:08:24 -参数 : []
2019-04-04 14:08:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:08:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:08:24 -<==      Total: 0
2019-04-04 14:08:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:08:24 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:08:24 -<==      Total: 1
2019-04-04 14:08:24 -耗时 : 12
2019-04-04 14:08:24 -返回值 : com.bootdo.common.utils.PageUtils@57a42be4
2019-04-04 14:08:24 -请求地址 : http://localhost:8081/main
2019-04-04 14:08:24 -HTTP METHOD : GET
2019-04-04 14:08:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:08:24 -参数 : []
2019-04-04 14:08:24 -耗时 : 3
2019-04-04 14:08:24 -返回值 : main
2019-04-04 14:08:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:08:32 -==> Parameters: 1(Long)
2019-04-04 14:08:32 -<==      Total: 90
2019-04-04 14:08:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:08:32 -HTTP METHOD : GET
2019-04-04 14:08:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:08:32 -参数 : []
2019-04-04 14:08:32 -耗时 : 1
2019-04-04 14:08:32 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:08:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:08:33 -HTTP METHOD : GET
2019-04-04 14:08:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:08:33 -参数 : [userType]
2019-04-04 14:08:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:08:33 -==> Parameters: userType(String)
2019-04-04 14:08:33 -<==      Total: 2
2019-04-04 14:08:33 -耗时 : 3
2019-04-04 14:08:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:08:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:08:33 -HTTP METHOD : GET
2019-04-04 14:08:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:08:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:08:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:08:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:08:33 -<==      Total: 7
2019-04-04 14:08:33 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:08:33 -==> Parameters: 
2019-04-04 14:08:33 -<==      Total: 1
2019-04-04 14:08:33 -耗时 : 7
2019-04-04 14:08:33 -返回值 : com.bootdo.common.utils.PageUtils@7c15e3fa
2019-04-04 14:09:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-04-04 14:09:25 -HTTP METHOD : GET
2019-04-04 14:09:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 14:09:25 -参数 : [1, {}]
2019-04-04 14:09:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 14:09:25 -==> Parameters: 1(Long)
2019-04-04 14:09:25 -<==      Total: 1
2019-04-04 14:09:25 -耗时 : 5
2019-04-04 14:09:25 -返回值 : moneyLog/elecLog/edit
2019-04-04 14:09:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:09:25 -HTTP METHOD : GET
2019-04-04 14:09:25 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 14:09:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:09:25 -HTTP METHOD : GET
2019-04-04 14:09:25 -参数 : [userType]
2019-04-04 14:09:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:09:25 -参数 : [elecType]
2019-04-04 14:09:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:09:25 -==> Parameters: userType(String)
2019-04-04 14:09:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:09:25 -==> Parameters: elecType(String)
2019-04-04 14:09:25 -<==      Total: 2
2019-04-04 14:09:25 -<==      Total: 4
2019-04-04 14:09:25 -耗时 : 3
2019-04-04 14:09:25 -耗时 : 3
2019-04-04 14:09:25 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:09:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:09:53 -请求地址 : http://localhost:8081/index
2019-04-04 14:09:53 -HTTP METHOD : GET
2019-04-04 14:09:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:09:53 -参数 : [{}]
2019-04-04 14:09:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:09:53 -==> Parameters: 1(Long)
2019-04-04 14:09:53 -<==      Total: 46
2019-04-04 14:09:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:09:53 -==> Parameters: 138(Long)
2019-04-04 14:09:53 -<==      Total: 1
2019-04-04 14:09:53 -耗时 : 16
2019-04-04 14:09:53 -返回值 : index_v1
2019-04-04 14:09:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:09:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:09:53.749(Timestamp)
2019-04-04 14:09:53 -<==    Updates: 1
2019-04-04 14:09:53 -请求地址 : http://localhost:8081/main
2019-04-04 14:09:53 -HTTP METHOD : GET
2019-04-04 14:09:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:09:53 -参数 : []
2019-04-04 14:09:53 -耗时 : 1
2019-04-04 14:09:53 -返回值 : main
2019-04-04 14:09:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:09:54 -HTTP METHOD : GET
2019-04-04 14:09:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:09:54 -参数 : []
2019-04-04 14:09:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:09:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:09:54 -<==      Total: 0
2019-04-04 14:09:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:09:54 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:09:54 -<==      Total: 1
2019-04-04 14:09:54 -耗时 : 5
2019-04-04 14:09:54 -返回值 : com.bootdo.common.utils.PageUtils@2fc1aa11
2019-04-04 14:09:54 -请求地址 : http://localhost:8081/main
2019-04-04 14:09:54 -HTTP METHOD : GET
2019-04-04 14:09:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:09:54 -参数 : []
2019-04-04 14:09:54 -耗时 : 1
2019-04-04 14:09:54 -返回值 : main
2019-04-04 14:10:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:10:00 -HTTP METHOD : GET
2019-04-04 14:10:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:10:00 -参数 : []
2019-04-04 14:10:00 -耗时 : 0
2019-04-04 14:10:00 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:10:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:10:00 -HTTP METHOD : GET
2019-04-04 14:10:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:10:00 -参数 : [userType]
2019-04-04 14:10:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:10:00 -==> Parameters: userType(String)
2019-04-04 14:10:00 -<==      Total: 2
2019-04-04 14:10:00 -耗时 : 4
2019-04-04 14:10:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:10:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:10:00 -HTTP METHOD : GET
2019-04-04 14:10:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:10:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:10:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:10:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:10:00 -<==      Total: 7
2019-04-04 14:10:00 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:10:00 -==> Parameters: 
2019-04-04 14:10:00 -<==      Total: 1
2019-04-04 14:10:00 -耗时 : 6
2019-04-04 14:10:00 -返回值 : com.bootdo.common.utils.PageUtils@3d1ed165
2019-04-04 14:10:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:10:01 -HTTP METHOD : GET
2019-04-04 14:10:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:10:01 -参数 : []
2019-04-04 14:10:01 -耗时 : 1
2019-04-04 14:10:01 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:10:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:10:01 -HTTP METHOD : GET
2019-04-04 14:10:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:10:01 -参数 : [userType]
2019-04-04 14:10:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:10:01 -==> Parameters: userType(String)
2019-04-04 14:10:01 -<==      Total: 2
2019-04-04 14:10:01 -耗时 : 4
2019-04-04 14:10:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:10:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:10:01 -HTTP METHOD : GET
2019-04-04 14:10:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:10:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:10:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:10:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:10:01 -<==      Total: 4
2019-04-04 14:10:01 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:10:01 -==> Parameters: 
2019-04-04 14:10:01 -<==      Total: 1
2019-04-04 14:10:01 -耗时 : 9
2019-04-04 14:10:01 -返回值 : com.bootdo.common.utils.PageUtils@4ac84f63
2019-04-04 14:10:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:10:03 -HTTP METHOD : GET
2019-04-04 14:10:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:10:03 -参数 : []
2019-04-04 14:10:03 -耗时 : 0
2019-04-04 14:10:03 -返回值 : moneyLog/waterLog/add
2019-04-04 14:10:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:10:03 -HTTP METHOD : GET
2019-04-04 14:10:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:10:03 -参数 : [userType]
2019-04-04 14:10:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:10:03 -==> Parameters: userType(String)
2019-04-04 14:10:03 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:10:03 -HTTP METHOD : GET
2019-04-04 14:10:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:10:03 -参数 : [waterType]
2019-04-04 14:10:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:10:03 -<==      Total: 2
2019-04-04 14:10:03 -耗时 : 7
2019-04-04 14:10:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:10:03 -==> Parameters: waterType(String)
2019-04-04 14:10:03 -<==      Total: 6
2019-04-04 14:10:03 -耗时 : 12
2019-04-04 14:10:03 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:11:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 14:11:23 -HTTP METHOD : GET
2019-04-04 14:11:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 14:11:23 -参数 : []
2019-04-04 14:11:23 -耗时 : 2
2019-04-04 14:11:23 -返回值 : system/dept/deptTree
2019-04-04 14:11:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 14:11:23 -HTTP METHOD : GET
2019-04-04 14:11:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 14:11:23 -参数 : []
2019-04-04 14:11:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 14:11:23 -==> Parameters: 
2019-04-04 14:11:23 -<==      Total: 3
2019-04-04 14:11:23 -耗时 : 6
2019-04-04 14:11:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 14:11:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:11:53 -HTTP METHOD : POST
2019-04-04 14:11:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:11:53 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@52c4cff]
2019-04-04 14:11:53 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:11:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:11:53 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.save(WaterLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.WaterLogController.save(WaterLogController.java:193)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 14:11:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'(String), null, 2019-04-04 14:11:53.166(Timestamp)
2019-04-04 14:11:53 -<==    Updates: 1
2019-04-04 14:11:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:11:58 -HTTP METHOD : POST
2019-04-04 14:11:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:11:58 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@65311a52]
2019-04-04 14:11:58 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:11:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:11:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'(String), null, 2019-04-04 14:11:58.272(Timestamp)
2019-04-04 14:11:58 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.save(WaterLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.WaterLogController.save(WaterLogController.java:193)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 14:11:58 -<==    Updates: 1
2019-04-04 14:18:14 -请求地址 : http://localhost:8081/index
2019-04-04 14:18:14 -HTTP METHOD : GET
2019-04-04 14:18:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:18:14 -参数 : [{}]
2019-04-04 14:18:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:18:14 -==> Parameters: 1(Long)
2019-04-04 14:18:14 -<==      Total: 46
2019-04-04 14:18:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:18:14 -==> Parameters: 138(Long)
2019-04-04 14:18:14 -<==      Total: 1
2019-04-04 14:18:14 -耗时 : 29
2019-04-04 14:18:14 -返回值 : index_v1
2019-04-04 14:18:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:18:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:18:14.405(Timestamp)
2019-04-04 14:18:14 -请求地址 : http://localhost:8081/main
2019-04-04 14:18:14 -HTTP METHOD : GET
2019-04-04 14:18:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:18:14 -参数 : []
2019-04-04 14:18:14 -耗时 : 1
2019-04-04 14:18:14 -返回值 : main
2019-04-04 14:18:14 -<==    Updates: 1
2019-04-04 14:18:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:18:14 -HTTP METHOD : GET
2019-04-04 14:18:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:18:14 -参数 : []
2019-04-04 14:18:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:18:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:18:14 -<==      Total: 0
2019-04-04 14:18:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:18:14 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:18:14 -<==      Total: 1
2019-04-04 14:18:14 -耗时 : 4
2019-04-04 14:18:14 -返回值 : com.bootdo.common.utils.PageUtils@55dc7dfc
2019-04-04 14:18:14 -请求地址 : http://localhost:8081/main
2019-04-04 14:18:14 -HTTP METHOD : GET
2019-04-04 14:18:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:18:14 -参数 : []
2019-04-04 14:18:14 -耗时 : 0
2019-04-04 14:18:14 -返回值 : main
2019-04-04 14:18:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:18:22 -HTTP METHOD : GET
2019-04-04 14:18:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:18:22 -参数 : []
2019-04-04 14:18:22 -耗时 : 1
2019-04-04 14:18:22 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:18:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:18:23 -HTTP METHOD : GET
2019-04-04 14:18:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:23 -参数 : [userType]
2019-04-04 14:18:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:23 -==> Parameters: userType(String)
2019-04-04 14:18:23 -<==      Total: 2
2019-04-04 14:18:23 -耗时 : 3
2019-04-04 14:18:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:18:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:18:23 -HTTP METHOD : GET
2019-04-04 14:18:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:18:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:18:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:18:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:18:23 -<==      Total: 7
2019-04-04 14:18:23 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:18:23 -==> Parameters: 
2019-04-04 14:18:23 -<==      Total: 1
2019-04-04 14:18:23 -耗时 : 7
2019-04-04 14:18:23 -返回值 : com.bootdo.common.utils.PageUtils@78d26334
2019-04-04 14:18:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:18:25 -HTTP METHOD : GET
2019-04-04 14:18:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:18:25 -参数 : []
2019-04-04 14:18:25 -耗时 : 1
2019-04-04 14:18:25 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:18:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:18:25 -HTTP METHOD : GET
2019-04-04 14:18:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:25 -参数 : [userType]
2019-04-04 14:18:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:25 -==> Parameters: userType(String)
2019-04-04 14:18:25 -<==      Total: 2
2019-04-04 14:18:25 -耗时 : 3
2019-04-04 14:18:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:18:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:18:25 -HTTP METHOD : GET
2019-04-04 14:18:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:18:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:18:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:18:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:18:25 -<==      Total: 4
2019-04-04 14:18:25 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:18:25 -==> Parameters: 
2019-04-04 14:18:25 -<==      Total: 1
2019-04-04 14:18:25 -耗时 : 12
2019-04-04 14:18:25 -返回值 : com.bootdo.common.utils.PageUtils@337a6544
2019-04-04 14:18:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:18:27 -HTTP METHOD : GET
2019-04-04 14:18:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:18:27 -参数 : []
2019-04-04 14:18:27 -耗时 : 0
2019-04-04 14:18:27 -返回值 : moneyLog/waterLog/add
2019-04-04 14:18:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:18:27 -HTTP METHOD : GET
2019-04-04 14:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:27 -参数 : [userType]
2019-04-04 14:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:18:27 -HTTP METHOD : GET
2019-04-04 14:18:27 -==> Parameters: userType(String)
2019-04-04 14:18:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:27 -参数 : [waterType]
2019-04-04 14:18:27 -<==      Total: 2
2019-04-04 14:18:27 -耗时 : 6
2019-04-04 14:18:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:18:27 -==> Parameters: waterType(String)
2019-04-04 14:18:27 -<==      Total: 6
2019-04-04 14:18:27 -耗时 : 8
2019-04-04 14:18:27 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:18:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:18:38 -==> Parameters: 1(Long)
2019-04-04 14:18:38 -<==      Total: 90
2019-04-04 14:18:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:18:38 -HTTP METHOD : GET
2019-04-04 14:18:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:18:38 -参数 : []
2019-04-04 14:18:38 -耗时 : 1
2019-04-04 14:18:38 -返回值 : moneyLog/waterLog/add
2019-04-04 14:18:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:18:38 -HTTP METHOD : GET
2019-04-04 14:18:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:38 -参数 : [userType]
2019-04-04 14:18:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:38 -==> Parameters: userType(String)
2019-04-04 14:18:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:18:38 -HTTP METHOD : GET
2019-04-04 14:18:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:18:38 -参数 : [waterType]
2019-04-04 14:18:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:18:38 -==> Parameters: waterType(String)
2019-04-04 14:18:38 -<==      Total: 6
2019-04-04 14:18:38 -<==      Total: 2
2019-04-04 14:18:38 -耗时 : 5
2019-04-04 14:18:38 -耗时 : 6
2019-04-04 14:18:38 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:18:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:19:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 14:19:00 -HTTP METHOD : GET
2019-04-04 14:19:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 14:19:00 -参数 : []
2019-04-04 14:19:00 -耗时 : 1
2019-04-04 14:19:00 -返回值 : system/dept/deptTree
2019-04-04 14:19:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 14:19:00 -HTTP METHOD : GET
2019-04-04 14:19:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 14:19:00 -参数 : []
2019-04-04 14:19:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 14:19:00 -==> Parameters: 
2019-04-04 14:19:00 -<==      Total: 3
2019-04-04 14:19:00 -耗时 : 3
2019-04-04 14:19:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 14:19:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:19:02 -HTTP METHOD : POST
2019-04-04 14:19:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:19:02 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@541d10e3]
2019-04-04 14:19:02 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'(String), null, 2019-04-04 14:19:02.513(Timestamp)
2019-04-04 14:19:02 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.save(WaterLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.WaterLogController.save(WaterLogController.java:193)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 14:19:02 -<==    Updates: 1
2019-04-04 14:19:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:19:04 -HTTP METHOD : POST
2019-04-04 14:19:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:19:04 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@5db54d6f]
2019-04-04 14:19:04 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'(String), null, 2019-04-04 14:19:04.886(Timestamp)
2019-04-04 14:19:04 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.save(WaterLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.WaterLogController.save(WaterLogController.java:193)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 14:19:04 -<==    Updates: 1
2019-04-04 14:19:42 -请求地址 : http://localhost:8081/login;JSESSIONID=dfb1d750-1433-4028-a514-a83cea84e1fd
2019-04-04 14:19:42 -HTTP METHOD : GET
2019-04-04 14:19:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:19:42 -参数 : [{}]
2019-04-04 14:19:42 -耗时 : 0
2019-04-04 14:19:42 -返回值 : login
2019-04-04 14:19:42 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:19:42 -HTTP METHOD : GET
2019-04-04 14:19:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:19:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@78a06278, org.apache.shiro.web.servlet.ShiroHttpServletResponse@a7462ed]
2019-04-04 14:19:42 -7476
2019-04-04 14:19:42 -耗时 : 19
2019-04-04 14:19:42 -返回值 : null
2019-04-04 14:19:42 -请求地址 : http://localhost:8081/login
2019-04-04 14:19:42 -HTTP METHOD : GET
2019-04-04 14:19:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:19:42 -参数 : [{}]
2019-04-04 14:19:42 -耗时 : 1
2019-04-04 14:19:42 -返回值 : login
2019-04-04 14:19:47 -请求地址 : http://localhost:8081/login
2019-04-04 14:19:47 -HTTP METHOD : POST
2019-04-04 14:19:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:19:47 -参数 : [admin, 111111, 7476, org.apache.shiro.web.servlet.ShiroHttpServletRequest@20c66064]
2019-04-04 14:19:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:19:47 -==> Parameters: admin(String)
2019-04-04 14:19:47 -<==      Total: 1
2019-04-04 14:19:47 -耗时 : 5
2019-04-04 14:19:47 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:19:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:47 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:19:47.906(Timestamp)
2019-04-04 14:19:47 -请求地址 : http://localhost:8081/index
2019-04-04 14:19:47 -HTTP METHOD : GET
2019-04-04 14:19:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:19:47 -参数 : [{}]
2019-04-04 14:19:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:19:47 -==> Parameters: 1(Long)
2019-04-04 14:19:47 -<==      Total: 46
2019-04-04 14:19:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:19:48 -==> Parameters: 138(Long)
2019-04-04 14:19:48 -<==      Total: 1
2019-04-04 14:19:48 -耗时 : 70
2019-04-04 14:19:48 -返回值 : index_v1
2019-04-04 14:19:48 -<==    Updates: 1
2019-04-04 14:19:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:19:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:19:48.043(Timestamp)
2019-04-04 14:19:48 -<==    Updates: 1
2019-04-04 14:19:48 -请求地址 : http://localhost:8081/main
2019-04-04 14:19:48 -HTTP METHOD : GET
2019-04-04 14:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:19:48 -参数 : []
2019-04-04 14:19:48 -耗时 : 32
2019-04-04 14:19:48 -返回值 : main
2019-04-04 14:19:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:19:48 -HTTP METHOD : GET
2019-04-04 14:19:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:19:48 -参数 : []
2019-04-04 14:19:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:19:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:19:48 -<==      Total: 0
2019-04-04 14:19:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:19:48 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:19:48 -<==      Total: 1
2019-04-04 14:19:48 -耗时 : 5
2019-04-04 14:19:48 -返回值 : com.bootdo.common.utils.PageUtils@5f4b3e2e
2019-04-04 14:19:48 -请求地址 : http://localhost:8081/main
2019-04-04 14:19:48 -HTTP METHOD : GET
2019-04-04 14:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:19:48 -参数 : []
2019-04-04 14:19:48 -耗时 : 1
2019-04-04 14:19:48 -返回值 : main
2019-04-04 14:20:27 -请求地址 : http://localhost:8081/index
2019-04-04 14:20:27 -HTTP METHOD : GET
2019-04-04 14:20:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:20:27 -参数 : [{}]
2019-04-04 14:20:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:20:27 -==> Parameters: 1(Long)
2019-04-04 14:20:27 -<==      Total: 46
2019-04-04 14:20:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:20:27 -==> Parameters: 138(Long)
2019-04-04 14:20:27 -<==      Total: 1
2019-04-04 14:20:27 -耗时 : 15
2019-04-04 14:20:27 -返回值 : index_v1
2019-04-04 14:20:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:20:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:20:27.652(Timestamp)
2019-04-04 14:20:27 -请求地址 : http://localhost:8081/main
2019-04-04 14:20:27 -HTTP METHOD : GET
2019-04-04 14:20:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:20:27 -参数 : []
2019-04-04 14:20:27 -耗时 : 0
2019-04-04 14:20:27 -返回值 : main
2019-04-04 14:20:27 -<==    Updates: 1
2019-04-04 14:20:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:20:28 -HTTP METHOD : GET
2019-04-04 14:20:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:20:28 -参数 : []
2019-04-04 14:20:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:20:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:20:28 -<==      Total: 0
2019-04-04 14:20:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:20:28 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:20:28 -<==      Total: 1
2019-04-04 14:20:28 -耗时 : 8
2019-04-04 14:20:28 -返回值 : com.bootdo.common.utils.PageUtils@29eb8992
2019-04-04 14:20:28 -请求地址 : http://localhost:8081/main
2019-04-04 14:20:28 -HTTP METHOD : GET
2019-04-04 14:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:20:28 -参数 : []
2019-04-04 14:20:28 -耗时 : 1
2019-04-04 14:20:28 -返回值 : main
2019-04-04 14:20:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:20:31 -==> Parameters: 1(Long)
2019-04-04 14:20:31 -<==      Total: 90
2019-04-04 14:20:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:20:31 -HTTP METHOD : GET
2019-04-04 14:20:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:20:31 -参数 : []
2019-04-04 14:20:31 -耗时 : 0
2019-04-04 14:20:31 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:20:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:20:32 -HTTP METHOD : GET
2019-04-04 14:20:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:20:32 -参数 : [userType]
2019-04-04 14:20:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:20:32 -==> Parameters: userType(String)
2019-04-04 14:20:32 -<==      Total: 2
2019-04-04 14:20:32 -耗时 : 4
2019-04-04 14:20:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:20:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:20:32 -HTTP METHOD : GET
2019-04-04 14:20:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:20:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:20:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:20:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:20:32 -<==      Total: 7
2019-04-04 14:20:32 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:20:32 -==> Parameters: 
2019-04-04 14:20:32 -<==      Total: 1
2019-04-04 14:20:32 -耗时 : 6
2019-04-04 14:20:32 -返回值 : com.bootdo.common.utils.PageUtils@4ccd19ad
2019-04-04 14:20:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:20:32 -HTTP METHOD : GET
2019-04-04 14:20:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:20:32 -参数 : []
2019-04-04 14:20:32 -耗时 : 1
2019-04-04 14:20:32 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:20:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:20:33 -HTTP METHOD : GET
2019-04-04 14:20:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:20:33 -参数 : [userType]
2019-04-04 14:20:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:20:33 -==> Parameters: userType(String)
2019-04-04 14:20:33 -<==      Total: 2
2019-04-04 14:20:33 -耗时 : 3
2019-04-04 14:20:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:20:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:20:33 -HTTP METHOD : GET
2019-04-04 14:20:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:20:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:20:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:20:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:20:33 -<==      Total: 4
2019-04-04 14:20:33 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:20:33 -==> Parameters: 
2019-04-04 14:20:33 -<==      Total: 1
2019-04-04 14:20:33 -耗时 : 6
2019-04-04 14:20:33 -返回值 : com.bootdo.common.utils.PageUtils@fa82db6
2019-04-04 14:20:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:20:34 -HTTP METHOD : GET
2019-04-04 14:20:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:20:34 -参数 : []
2019-04-04 14:20:34 -耗时 : 0
2019-04-04 14:20:34 -返回值 : moneyLog/waterLog/add
2019-04-04 14:20:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:20:34 -HTTP METHOD : GET
2019-04-04 14:20:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:20:34 -参数 : [userType]
2019-04-04 14:20:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:20:34 -==> Parameters: userType(String)
2019-04-04 14:20:34 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:20:34 -HTTP METHOD : GET
2019-04-04 14:20:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:20:34 -参数 : [waterType]
2019-04-04 14:20:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:20:34 -==> Parameters: waterType(String)
2019-04-04 14:20:34 -<==      Total: 2
2019-04-04 14:20:34 -耗时 : 3
2019-04-04 14:20:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:20:34 -<==      Total: 6
2019-04-04 14:20:34 -耗时 : 4
2019-04-04 14:20:34 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:20:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 14:20:41 -HTTP METHOD : GET
2019-04-04 14:20:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 14:20:41 -参数 : []
2019-04-04 14:20:41 -耗时 : 0
2019-04-04 14:20:41 -返回值 : system/dept/deptTree
2019-04-04 14:20:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 14:20:41 -HTTP METHOD : GET
2019-04-04 14:20:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 14:20:41 -参数 : []
2019-04-04 14:20:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 14:20:41 -==> Parameters: 
2019-04-04 14:20:41 -<==      Total: 3
2019-04-04 14:20:41 -耗时 : 3
2019-04-04 14:20:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 14:20:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:20:56 -HTTP METHOD : POST
2019-04-04 14:20:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:20:56 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@281f4b29]
2019-04-04 14:20:56 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:20:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:20:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'(String), null, 2019-04-04 14:20:56.168(Timestamp)
2019-04-04 14:20:56 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.save(WaterLogServiceImpl.java:35)
	at com.bootdo.moneyLog.controller.WaterLogController.save(WaterLogController.java:193)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'waterType' in 'class com.bootdo.moneyLog.domain.WaterLogDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor208.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-04-04 14:20:56 -<==    Updates: 1
2019-04-04 14:23:14 -Starting BootdoApplication on ZJZL-20180906VX with PID 11672 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 14:23:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 14:23:14 -The following profiles are active: dev
2019-04-04 14:23:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:23:15 CST 2019]; root of context hierarchy
2019-04-04 14:23:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 14:23:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f37a9df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$190d886] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 14:23:24 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 14:23:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:23:25 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 14:23:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 14:23:25 -Starting service [Tomcat]
2019-04-04 14:23:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 14:23:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 14:23:25 -Initializing Spring embedded WebApplicationContext
2019-04-04 14:23:25 -Root WebApplicationContext: initialization completed in 10842 ms
2019-04-04 14:23:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 14:23:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 14:23:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 14:23:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 14:23:26 -Filter xssFilter was not registered (disabled)
2019-04-04 14:23:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 14:23:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 14:23:26 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 14:23:26 -Servlet dispatcherServlet mapped to [/]
2019-04-04 14:23:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:23:15 CST 2019]; root of context hierarchy
2019-04-04 14:23:31 -Using default implementation for ThreadExecutor
2019-04-04 14:23:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 14:23:31 -Quartz Scheduler v.2.2.1 created.
2019-04-04 14:23:31 -RAMJobStore initialized.
2019-04-04 14:23:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 14:23:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 14:23:31 -Quartz scheduler version: 2.2.1
2019-04-04 14:23:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@74431b9c
2019-04-04 14:23:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 14:23:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 14:23:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 14:23:34 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 14:23:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 14:23:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 14:23:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:23:34 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 14:23:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:23:34 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 14:23:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 14:23:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 14:23:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 14:23:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 14:23:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 14:23:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 14:23:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 14:23:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 14:23:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 14:23:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 14:23:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:23:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 14:23:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 14:23:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:23:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 14:23:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 14:23:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 14:23:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 14:23:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 14:23:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 14:23:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 14:23:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 14:23:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 14:23:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 14:23:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 14:23:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 14:23:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:23:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:23:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:23:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 14:23:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 14:23:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 14:23:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 14:23:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 14:23:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 14:23:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 14:23:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 14:23:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:23:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:23:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 14:23:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 14:23:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:23:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 14:23:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 14:23:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 14:23:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:23:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:23:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 14:23:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 14:23:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 14:23:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 14:23:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 14:23:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 14:23:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 14:23:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 14:23:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 14:23:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 14:23:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 14:23:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 14:23:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 14:23:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 14:23:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 14:23:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 14:23:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 14:23:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 14:23:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 14:23:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 14:23:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 14:23:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 14:23:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 14:23:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 14:23:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 14:23:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 14:23:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 14:23:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:23:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 14:23:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:23:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 14:23:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 14:23:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 14:23:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 14:23:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 14:23:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:23:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 14:23:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:23:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:23:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 14:23:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 14:23:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:23:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 14:23:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 14:23:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 14:23:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 14:23:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 14:23:36 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 14:23:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:23:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:23:15 CST 2019]; root of context hierarchy
2019-04-04 14:23:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:23:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:23:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:23:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 14:23:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 14:23:39 -Registering beans for JMX exposure on startup
2019-04-04 14:23:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 14:23:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 14:23:39 -Starting beans in phase 2147483647
2019-04-04 14:23:39 -Context refreshed
2019-04-04 14:23:40 -Found 1 custom documentation plugin(s)
2019-04-04 14:23:40 -Scanning for api listing references
2019-04-04 14:23:40 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 14:23:40 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 14:23:40 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 14:23:40 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 14:23:40 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 14:23:40 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 14:23:40 -Generating unique operation named: removeUsingPOST_1
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_2
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_3
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_2
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_2
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_2
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_4
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_5
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_2
2019-04-04 14:23:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_3
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_3
2019-04-04 14:23:41 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_3
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_6
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_7
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_4
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_4
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_4
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_8
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_9
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 14:23:41 -Generating unique operation named: ElecUsingGET_1
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_5
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_5
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_5
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_10
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_11
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_6
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_6
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_6
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_7
2019-04-04 14:23:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_7
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_12
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_13
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_7
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 14:23:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_7
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_8
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_8
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_14
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_15
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_7
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPOST_8
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPUT_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 14:23:41 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 14:23:41 -Generating unique operation named: addUsingGET_8
2019-04-04 14:23:41 -Generating unique operation named: editUsingGET_9
2019-04-04 14:23:41 -Generating unique operation named: listUsingGET_9
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_16
2019-04-04 14:23:41 -Generating unique operation named: removeUsingPOST_17
2019-04-04 14:23:41 -Generating unique operation named: saveUsingPOST_8
2019-04-04 14:23:41 -Generating unique operation named: updateUsingGET_7
2019-04-04 14:23:41 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPUT_7
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 14:23:42 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 14:23:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 14:23:42 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_9
2019-04-04 14:23:42 -Generating unique operation named: editUsingGET_10
2019-04-04 14:23:42 -Generating unique operation named: infoUsingGET_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingPOST_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingPUT_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 14:23:42 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_10
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_18
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_19
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_10
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_11
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_20
2019-04-04 14:23:42 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_10
2019-04-04 14:23:42 -Generating unique operation named: editUsingGET_11
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_12
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_21
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_10
2019-04-04 14:23:42 -Generating unique operation named: treeUsingGET_1
2019-04-04 14:23:42 -Generating unique operation named: treeUsingGET_2
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_11
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_11
2019-04-04 14:23:42 -Generating unique operation named: editUsingGET_12
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_13
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_22
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_23
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_11
2019-04-04 14:23:42 -Generating unique operation named: updateUsingGET_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_12
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPUT_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 14:23:42 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_12
2019-04-04 14:23:42 -Generating unique operation named: editUsingGET_13
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_14
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_24
2019-04-04 14:23:42 -Generating unique operation named: removeUsingPOST_25
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_12
2019-04-04 14:23:42 -Generating unique operation named: updateUsingGET_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_13
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPUT_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 14:23:42 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_13
2019-04-04 14:23:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 14:23:42 -Generating unique operation named: editUsingGET_14
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_15
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_13
2019-04-04 14:23:42 -Generating unique operation named: saveUsingPOST_14
2019-04-04 14:23:42 -Generating unique operation named: updateUsingPOST_14
2019-04-04 14:23:42 -Generating unique operation named: listUsingGET_16
2019-04-04 14:23:42 -Generating unique operation named: listUsingHEAD_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingPOST_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingPUT_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingPATCH_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingDELETE_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 14:23:42 -Generating unique operation named: listUsingTRACE_1
2019-04-04 14:23:42 -Generating unique operation named: addUsingGET_14
2019-04-04 14:23:43 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 14:23:43 -Generating unique operation named: editUsingGET_15
2019-04-04 14:23:43 -Generating unique operation named: listUsingGET_17
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_26
2019-04-04 14:23:43 -Generating unique operation named: saveUsingPOST_15
2019-04-04 14:23:43 -Generating unique operation named: treeUsingGET_3
2019-04-04 14:23:43 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPOST_15
2019-04-04 14:23:43 -Generating unique operation named: addUsingGET_15
2019-04-04 14:23:43 -Generating unique operation named: editUsingGET_16
2019-04-04 14:23:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 14:23:43 -Generating unique operation named: listUsingGET_18
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_27
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_28
2019-04-04 14:23:43 -Generating unique operation named: saveUsingPOST_16
2019-04-04 14:23:43 -Generating unique operation named: updateUsingGET_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPOST_16
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPUT_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 14:23:43 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 14:23:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 14:23:43 -Generating unique operation named: addUsingGET_16
2019-04-04 14:23:43 -Generating unique operation named: editUsingGET_17
2019-04-04 14:23:43 -Generating unique operation named: listUsingGET_19
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_29
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_30
2019-04-04 14:23:43 -Generating unique operation named: saveUsingPOST_17
2019-04-04 14:23:43 -Generating unique operation named: updateUsingGET_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPOST_17
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPUT_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 14:23:43 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 14:23:43 -Generating unique operation named: addUsingGET_17
2019-04-04 14:23:43 -Generating unique operation named: editUsingGET_18
2019-04-04 14:23:43 -Generating unique operation named: listUsingGET_20
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_31
2019-04-04 14:23:43 -Generating unique operation named: removeUsingPOST_32
2019-04-04 14:23:43 -Generating unique operation named: saveUsingPOST_18
2019-04-04 14:23:43 -Generating unique operation named: updateUsingGET_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPOST_18
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPUT_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 14:23:43 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 14:23:43 -Starting Quartz Scheduler now
2019-04-04 14:23:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 14:23:43 -Starting...
2019-04-04 14:23:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 14:23:43 -Started.
2019-04-04 14:23:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 14:23:43 -Using a shared selector for servlet write/read
2019-04-04 14:23:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 14:23:43 -Started BootdoApplication in 30.199 seconds (JVM running for 31.187)
2019-04-04 14:23:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 14:23:44 -==> Parameters: 
2019-04-04 14:23:44 -<==      Total: 1
2019-04-04 14:23:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 14:23:54 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 14:23:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2019-04-04 14:23:54 -Enabling session validation scheduler...
2019-04-04 14:23:54 -请求地址 : http://localhost:8081/login;JSESSIONID=8b8b8d43-2388-400c-8f36-d4533f0f8d2c
2019-04-04 14:23:54 -HTTP METHOD : GET
2019-04-04 14:23:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:23:54 -参数 : [{}]
2019-04-04 14:23:54 -耗时 : 3
2019-04-04 14:23:54 -返回值 : login
2019-04-04 14:23:56 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:23:56 -HTTP METHOD : GET
2019-04-04 14:23:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:23:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c8b6ba, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5cc55b26]
2019-04-04 14:23:59 -3005
2019-04-04 14:23:59 -耗时 : 3301
2019-04-04 14:23:59 -返回值 : null
2019-04-04 14:24:04 -请求地址 : http://localhost:8081/login
2019-04-04 14:24:04 -HTTP METHOD : POST
2019-04-04 14:24:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:24:04 -参数 : [admin, 111111, 3005, org.apache.shiro.web.servlet.ShiroHttpServletRequest@67218ad7]
2019-04-04 14:24:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:24:04 -==> Parameters: admin(String)
2019-04-04 14:24:04 -<==      Total: 1
2019-04-04 14:24:04 -耗时 : 133
2019-04-04 14:24:04 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:24:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 14:24:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:24:04 -==> Parameters: 1(Long), admin(String), 登录(String), 133(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:24:04.614(Timestamp)
2019-04-04 14:24:04 -请求地址 : http://localhost:8081/index
2019-04-04 14:24:04 -HTTP METHOD : GET
2019-04-04 14:24:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:24:04 -参数 : [{}]
2019-04-04 14:24:04 -<==    Updates: 1
2019-04-04 14:24:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:24:04 -==> Parameters: 1(Long)
2019-04-04 14:24:04 -<==      Total: 46
2019-04-04 14:24:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:24:04 -==> Parameters: 138(Long)
2019-04-04 14:24:04 -<==      Total: 1
2019-04-04 14:24:04 -耗时 : 224
2019-04-04 14:24:04 -返回值 : index_v1
2019-04-04 14:24:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:24:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 224(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:24:05.008(Timestamp)
2019-04-04 14:24:05 -<==    Updates: 1
2019-04-04 14:24:05 -请求地址 : http://localhost:8081/main
2019-04-04 14:24:05 -HTTP METHOD : GET
2019-04-04 14:24:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:24:05 -参数 : []
2019-04-04 14:24:05 -耗时 : 0
2019-04-04 14:24:05 -返回值 : main
2019-04-04 14:24:05 -请求地址 : http://localhost:8081/main
2019-04-04 14:24:05 -HTTP METHOD : GET
2019-04-04 14:24:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:24:05 -参数 : []
2019-04-04 14:24:05 -耗时 : 0
2019-04-04 14:24:05 -返回值 : main
2019-04-04 14:24:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:24:05 -HTTP METHOD : GET
2019-04-04 14:24:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:24:05 -参数 : []
2019-04-04 14:24:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:24:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:24:05 -<==      Total: 0
2019-04-04 14:24:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:24:05 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:24:05 -<==      Total: 1
2019-04-04 14:24:05 -耗时 : 183
2019-04-04 14:24:05 -返回值 : com.bootdo.common.utils.PageUtils@20871b59
2019-04-04 14:24:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:24:10 -==> Parameters: 1(Long)
2019-04-04 14:24:10 -<==      Total: 90
2019-04-04 14:24:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:24:10 -HTTP METHOD : GET
2019-04-04 14:24:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:24:10 -参数 : []
2019-04-04 14:24:10 -耗时 : 0
2019-04-04 14:24:10 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:24:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:24:11 -HTTP METHOD : GET
2019-04-04 14:24:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:24:11 -参数 : [userType]
2019-04-04 14:24:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:24:11 -==> Parameters: userType(String)
2019-04-04 14:24:11 -<==      Total: 2
2019-04-04 14:24:11 -耗时 : 50
2019-04-04 14:24:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:24:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:24:11 -HTTP METHOD : GET
2019-04-04 14:24:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:24:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:24:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:24:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:24:11 -<==      Total: 7
2019-04-04 14:24:11 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:24:11 -==> Parameters: 
2019-04-04 14:24:11 -<==      Total: 1
2019-04-04 14:24:11 -耗时 : 51
2019-04-04 14:24:11 -返回值 : com.bootdo.common.utils.PageUtils@6a99c057
2019-04-04 14:24:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:24:11 -HTTP METHOD : GET
2019-04-04 14:24:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:24:11 -参数 : []
2019-04-04 14:24:11 -耗时 : 1
2019-04-04 14:24:11 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:24:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:24:12 -HTTP METHOD : GET
2019-04-04 14:24:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:24:12 -参数 : [userType]
2019-04-04 14:24:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:24:12 -==> Parameters: userType(String)
2019-04-04 14:24:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:24:12 -HTTP METHOD : GET
2019-04-04 14:24:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:24:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:24:12 -<==      Total: 2
2019-04-04 14:24:12 -耗时 : 7
2019-04-04 14:24:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:24:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:24:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:24:12 -<==      Total: 4
2019-04-04 14:24:12 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:24:12 -==> Parameters: 
2019-04-04 14:24:12 -<==      Total: 1
2019-04-04 14:24:12 -耗时 : 45
2019-04-04 14:24:12 -返回值 : com.bootdo.common.utils.PageUtils@5f378fa4
2019-04-04 14:24:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-04 14:24:14 -HTTP METHOD : GET
2019-04-04 14:24:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-04 14:24:14 -参数 : []
2019-04-04 14:24:14 -耗时 : 1
2019-04-04 14:24:14 -返回值 : moneyLog/waterLog/add
2019-04-04 14:24:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:24:14 -HTTP METHOD : GET
2019-04-04 14:24:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:24:14 -参数 : [userType]
2019-04-04 14:24:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:24:14 -==> Parameters: userType(String)
2019-04-04 14:24:14 -<==      Total: 2
2019-04-04 14:24:14 -耗时 : 9
2019-04-04 14:24:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:24:14 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:24:14 -HTTP METHOD : GET
2019-04-04 14:24:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:24:14 -参数 : [waterType]
2019-04-04 14:24:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:24:14 -==> Parameters: waterType(String)
2019-04-04 14:24:14 -<==      Total: 6
2019-04-04 14:24:14 -耗时 : 6
2019-04-04 14:24:14 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:24:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-04 14:24:27 -HTTP METHOD : GET
2019-04-04 14:24:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-04 14:24:27 -参数 : []
2019-04-04 14:24:27 -耗时 : 1
2019-04-04 14:24:27 -返回值 : system/dept/deptTree
2019-04-04 14:24:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-04 14:24:27 -HTTP METHOD : GET
2019-04-04 14:24:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-04 14:24:27 -参数 : []
2019-04-04 14:24:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-04 14:24:27 -==> Parameters: 
2019-04-04 14:24:27 -<==      Total: 3
2019-04-04 14:24:27 -耗时 : 22
2019-04-04 14:24:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-04 14:24:36 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-04 14:24:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-04 14:24:40 -HTTP METHOD : POST
2019-04-04 14:24:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-04 14:24:40 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@287e25ec]
2019-04-04 14:24:40 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:24:40 -==> Parameters: 1(String), 1(String), A(String), 2(String), 1(String), 1(BigDecimal), 2019-04-04 14:24:40.255(Timestamp), 2019-04(String), 1(Long), 2019-04-04 14:24:40.255(Timestamp), 1(Long), (String)
2019-04-04 14:24:40 -<==    Updates: 1
2019-04-04 14:24:40 -耗时 : 43
2019-04-04 14:24:40 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:24:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:24:40 -HTTP METHOD : GET
2019-04-04 14:24:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:24:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:24:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:24:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:24:40 -<==      Total: 5
2019-04-04 14:24:40 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:24:40 -==> Parameters: 
2019-04-04 14:24:40 -<==      Total: 1
2019-04-04 14:24:40 -耗时 : 11
2019-04-04 14:24:40 -返回值 : com.bootdo.common.utils.PageUtils@56657505
2019-04-04 14:24:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:24:57 -HTTP METHOD : GET
2019-04-04 14:24:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:24:57 -参数 : [5, {}]
2019-04-04 14:24:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:24:57 -==> Parameters: 5(Long)
2019-04-04 14:24:57 -<==      Total: 1
2019-04-04 14:24:57 -耗时 : 9
2019-04-04 14:24:57 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:24:57 -[THYMELEAF][http-nio-8081-exec-5] Exception processing template "moneyLog/waterLog/edit": An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-04 14:24:57 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-04 14:24:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:24:59 -HTTP METHOD : GET
2019-04-04 14:24:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:24:59 -参数 : [5, {}]
2019-04-04 14:24:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:24:59 -==> Parameters: 5(Long)
2019-04-04 14:24:59 -<==      Total: 1
2019-04-04 14:24:59 -耗时 : 4
2019-04-04 14:24:59 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:24:59 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "moneyLog/waterLog/edit": An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "waterLog.waterId" (template: "moneyLog/waterLog/edit" - line 16, col 45)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-04 14:24:59 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/moneyLog/waterLog/edit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'waterId' cannot be found on object of type 'com.bootdo.moneyLog.vo.WaterLogVo' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlVoidElement.handleOpenElementEnd(HtmlVoidElement.java:92)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-04 14:30:20 -请求地址 : http://localhost:8081/index
2019-04-04 14:30:20 -HTTP METHOD : GET
2019-04-04 14:30:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:30:20 -参数 : [{}]
2019-04-04 14:30:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:30:20 -==> Parameters: 1(Long)
2019-04-04 14:30:20 -<==      Total: 46
2019-04-04 14:30:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:30:20 -==> Parameters: 138(Long)
2019-04-04 14:30:20 -<==      Total: 1
2019-04-04 14:30:20 -耗时 : 208
2019-04-04 14:30:20 -返回值 : index_v1
2019-04-04 14:30:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:30:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 209(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:30:20.53(Timestamp)
2019-04-04 14:30:20 -<==    Updates: 1
2019-04-04 14:30:20 -请求地址 : http://localhost:8081/main
2019-04-04 14:30:20 -HTTP METHOD : GET
2019-04-04 14:30:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:30:20 -参数 : []
2019-04-04 14:30:20 -耗时 : 7
2019-04-04 14:30:20 -返回值 : main
2019-04-04 14:30:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:30:21 -HTTP METHOD : GET
2019-04-04 14:30:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:30:21 -参数 : []
2019-04-04 14:30:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:30:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:30:21 -<==      Total: 0
2019-04-04 14:30:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:30:21 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:30:21 -<==      Total: 1
2019-04-04 14:30:21 -耗时 : 14
2019-04-04 14:30:21 -返回值 : com.bootdo.common.utils.PageUtils@7951b3f7
2019-04-04 14:30:21 -请求地址 : http://localhost:8081/main
2019-04-04 14:30:21 -HTTP METHOD : GET
2019-04-04 14:30:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:30:21 -参数 : []
2019-04-04 14:30:21 -耗时 : 1
2019-04-04 14:30:21 -返回值 : main
2019-04-04 14:30:25 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:30:25 -HTTP METHOD : GET
2019-04-04 14:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:30:25 -参数 : []
2019-04-04 14:30:25 -耗时 : 1
2019-04-04 14:30:25 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:30:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:30:25 -HTTP METHOD : GET
2019-04-04 14:30:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:25 -参数 : [userType]
2019-04-04 14:30:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:25 -==> Parameters: userType(String)
2019-04-04 14:30:25 -<==      Total: 2
2019-04-04 14:30:25 -耗时 : 5
2019-04-04 14:30:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:30:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:30:25 -HTTP METHOD : GET
2019-04-04 14:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:30:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:30:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:30:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:30:25 -<==      Total: 7
2019-04-04 14:30:25 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:30:25 -==> Parameters: 
2019-04-04 14:30:25 -<==      Total: 1
2019-04-04 14:30:25 -耗时 : 11
2019-04-04 14:30:25 -返回值 : com.bootdo.common.utils.PageUtils@5f866db6
2019-04-04 14:30:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:30:26 -HTTP METHOD : GET
2019-04-04 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:30:26 -参数 : []
2019-04-04 14:30:26 -耗时 : 1
2019-04-04 14:30:26 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:30:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:30:26 -HTTP METHOD : GET
2019-04-04 14:30:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:26 -参数 : [userType]
2019-04-04 14:30:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:26 -==> Parameters: userType(String)
2019-04-04 14:30:26 -<==      Total: 2
2019-04-04 14:30:26 -耗时 : 6
2019-04-04 14:30:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:30:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:30:26 -HTTP METHOD : GET
2019-04-04 14:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:30:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:30:26 -<==      Total: 5
2019-04-04 14:30:26 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:30:26 -==> Parameters: 
2019-04-04 14:30:26 -<==      Total: 1
2019-04-04 14:30:26 -耗时 : 14
2019-04-04 14:30:26 -返回值 : com.bootdo.common.utils.PageUtils@3d06c45e
2019-04-04 14:30:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-04-04 14:30:27 -HTTP METHOD : GET
2019-04-04 14:30:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:30:27 -参数 : [1, {}]
2019-04-04 14:30:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:30:27 -==> Parameters: 1(Long)
2019-04-04 14:30:27 -<==      Total: 1
2019-04-04 14:30:27 -耗时 : 5
2019-04-04 14:30:27 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:30:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:30:27 -HTTP METHOD : GET
2019-04-04 14:30:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:27 -参数 : [userType]
2019-04-04 14:30:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:27 -==> Parameters: userType(String)
2019-04-04 14:30:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:30:27 -HTTP METHOD : GET
2019-04-04 14:30:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:27 -参数 : [waterType]
2019-04-04 14:30:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:27 -<==      Total: 2
2019-04-04 14:30:27 -==> Parameters: waterType(String)
2019-04-04 14:30:27 -耗时 : 6
2019-04-04 14:30:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:30:27 -<==      Total: 6
2019-04-04 14:30:27 -耗时 : 17
2019-04-04 14:30:27 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:30:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:30:39 -HTTP METHOD : GET
2019-04-04 14:30:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:30:39 -参数 : [5, {}]
2019-04-04 14:30:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:30:39 -==> Parameters: 5(Long)
2019-04-04 14:30:39 -<==      Total: 1
2019-04-04 14:30:39 -耗时 : 11
2019-04-04 14:30:39 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:30:39 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:30:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:30:39 -HTTP METHOD : GET
2019-04-04 14:30:39 -HTTP METHOD : GET
2019-04-04 14:30:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:30:39 -参数 : [waterType]
2019-04-04 14:30:39 -参数 : [userType]
2019-04-04 14:30:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:30:39 -==> Parameters: userType(String)
2019-04-04 14:30:39 -==> Parameters: waterType(String)
2019-04-04 14:30:39 -<==      Total: 6
2019-04-04 14:30:39 -耗时 : 7
2019-04-04 14:30:39 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:30:39 -<==      Total: 2
2019-04-04 14:30:39 -耗时 : 10
2019-04-04 14:30:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:31:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:31:06 -HTTP METHOD : POST
2019-04-04 14:31:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:31:06 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@692b2b73]
2019-04-04 14:31:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:31:06 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:31:06.831(Timestamp)
2019-04-04 14:31:06 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:31:06 -<==    Updates: 1
2019-04-04 14:33:07 -请求地址 : http://localhost:8081/index
2019-04-04 14:33:07 -HTTP METHOD : GET
2019-04-04 14:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:33:07 -参数 : [{}]
2019-04-04 14:33:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:33:07 -==> Parameters: 1(Long)
2019-04-04 14:33:07 -<==      Total: 46
2019-04-04 14:33:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:33:07 -==> Parameters: 138(Long)
2019-04-04 14:33:07 -<==      Total: 1
2019-04-04 14:33:07 -耗时 : 29
2019-04-04 14:33:07 -返回值 : index_v1
2019-04-04 14:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:33:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:33:07.781(Timestamp)
2019-04-04 14:33:07 -<==    Updates: 1
2019-04-04 14:33:08 -请求地址 : http://localhost:8081/main
2019-04-04 14:33:08 -HTTP METHOD : GET
2019-04-04 14:33:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:33:08 -参数 : []
2019-04-04 14:33:08 -耗时 : 1
2019-04-04 14:33:08 -返回值 : main
2019-04-04 14:33:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:33:08 -HTTP METHOD : GET
2019-04-04 14:33:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:33:08 -参数 : []
2019-04-04 14:33:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:33:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:33:08 -<==      Total: 0
2019-04-04 14:33:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:33:08 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:33:08 -<==      Total: 1
2019-04-04 14:33:08 -耗时 : 5
2019-04-04 14:33:08 -返回值 : com.bootdo.common.utils.PageUtils@63f84998
2019-04-04 14:33:08 -请求地址 : http://localhost:8081/main
2019-04-04 14:33:08 -HTTP METHOD : GET
2019-04-04 14:33:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:33:08 -参数 : []
2019-04-04 14:33:08 -耗时 : 1
2019-04-04 14:33:08 -返回值 : main
2019-04-04 14:33:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-04 14:33:11 -HTTP METHOD : GET
2019-04-04 14:33:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-04 14:33:11 -参数 : []
2019-04-04 14:33:11 -耗时 : 1
2019-04-04 14:33:11 -返回值 : /moneyList/moneyList
2019-04-04 14:33:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:33:12 -HTTP METHOD : GET
2019-04-04 14:33:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:33:12 -参数 : []
2019-04-04 14:33:12 -耗时 : 1
2019-04-04 14:33:12 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:33:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:12 -HTTP METHOD : GET
2019-04-04 14:33:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:12 -参数 : [userType]
2019-04-04 14:33:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:12 -==> Parameters: userType(String)
2019-04-04 14:33:12 -<==      Total: 2
2019-04-04 14:33:12 -耗时 : 4
2019-04-04 14:33:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:33:12 -HTTP METHOD : GET
2019-04-04 14:33:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:33:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:33:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:33:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:33:12 -<==      Total: 7
2019-04-04 14:33:12 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:33:12 -==> Parameters: 
2019-04-04 14:33:12 -<==      Total: 1
2019-04-04 14:33:12 -耗时 : 15
2019-04-04 14:33:12 -返回值 : com.bootdo.common.utils.PageUtils@443bc682
2019-04-04 14:33:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:33:13 -HTTP METHOD : GET
2019-04-04 14:33:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:33:13 -参数 : []
2019-04-04 14:33:13 -耗时 : 0
2019-04-04 14:33:13 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:33:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:13 -HTTP METHOD : GET
2019-04-04 14:33:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:13 -参数 : [userType]
2019-04-04 14:33:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:13 -==> Parameters: userType(String)
2019-04-04 14:33:13 -<==      Total: 2
2019-04-04 14:33:13 -耗时 : 3
2019-04-04 14:33:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:33:13 -HTTP METHOD : GET
2019-04-04 14:33:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:33:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:33:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:33:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:33:13 -<==      Total: 5
2019-04-04 14:33:13 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:33:13 -==> Parameters: 
2019-04-04 14:33:13 -<==      Total: 1
2019-04-04 14:33:13 -耗时 : 15
2019-04-04 14:33:13 -返回值 : com.bootdo.common.utils.PageUtils@610a4886
2019-04-04 14:33:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:33:15 -HTTP METHOD : GET
2019-04-04 14:33:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:33:15 -参数 : [5, {}]
2019-04-04 14:33:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:33:15 -==> Parameters: 5(Long)
2019-04-04 14:33:15 -<==      Total: 1
2019-04-04 14:33:15 -耗时 : 4
2019-04-04 14:33:15 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:33:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:15 -HTTP METHOD : GET
2019-04-04 14:33:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:15 -参数 : [userType]
2019-04-04 14:33:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:15 -==> Parameters: userType(String)
2019-04-04 14:33:15 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:33:15 -<==      Total: 2
2019-04-04 14:33:15 -耗时 : 7
2019-04-04 14:33:15 -HTTP METHOD : GET
2019-04-04 14:33:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:15 -参数 : [waterType]
2019-04-04 14:33:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:15 -==> Parameters: waterType(String)
2019-04-04 14:33:15 -<==      Total: 6
2019-04-04 14:33:15 -耗时 : 7
2019-04-04 14:33:15 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:17 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:33:17 -HTTP METHOD : POST
2019-04-04 14:33:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:33:17 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@5ff7f515]
2019-04-04 14:33:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:33:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:33:17.954(Timestamp)
2019-04-04 14:33:17 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:33:17 -<==    Updates: 1
2019-04-04 14:33:35 -请求地址 : http://localhost:8081/login;JSESSIONID=9f431002-9dc1-48dc-a119-e5d8ff0976fc
2019-04-04 14:33:35 -HTTP METHOD : GET
2019-04-04 14:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:33:35 -参数 : [{}]
2019-04-04 14:33:35 -耗时 : 1
2019-04-04 14:33:35 -返回值 : login
2019-04-04 14:33:36 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:33:36 -HTTP METHOD : GET
2019-04-04 14:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:33:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6fac2a04, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64f251ca]
2019-04-04 14:33:36 -3464
2019-04-04 14:33:36 -耗时 : 14
2019-04-04 14:33:36 -返回值 : null
2019-04-04 14:33:36 -请求地址 : http://localhost:8081/login
2019-04-04 14:33:36 -HTTP METHOD : GET
2019-04-04 14:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:33:36 -参数 : [{}]
2019-04-04 14:33:36 -耗时 : 1
2019-04-04 14:33:36 -返回值 : login
2019-04-04 14:33:41 -请求地址 : http://localhost:8081/login
2019-04-04 14:33:41 -HTTP METHOD : POST
2019-04-04 14:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:33:41 -参数 : [admin, 111111, 3464, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1abeee1d]
2019-04-04 14:33:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:33:41 -==> Parameters: admin(String)
2019-04-04 14:33:41 -<==      Total: 1
2019-04-04 14:33:41 -耗时 : 6
2019-04-04 14:33:41 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:33:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:33:41 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:33:41.809(Timestamp)
2019-04-04 14:33:41 -请求地址 : http://localhost:8081/index
2019-04-04 14:33:41 -HTTP METHOD : GET
2019-04-04 14:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:33:41 -参数 : [{}]
2019-04-04 14:33:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:33:41 -==> Parameters: 1(Long)
2019-04-04 14:33:41 -<==    Updates: 1
2019-04-04 14:33:42 -<==      Total: 46
2019-04-04 14:33:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:33:42 -==> Parameters: 138(Long)
2019-04-04 14:33:42 -<==      Total: 1
2019-04-04 14:33:42 -耗时 : 341
2019-04-04 14:33:42 -返回值 : index_v1
2019-04-04 14:33:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:33:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 341(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:33:42.198(Timestamp)
2019-04-04 14:33:42 -<==    Updates: 1
2019-04-04 14:33:42 -请求地址 : http://localhost:8081/main
2019-04-04 14:33:42 -HTTP METHOD : GET
2019-04-04 14:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:33:42 -参数 : []
2019-04-04 14:33:42 -耗时 : 0
2019-04-04 14:33:42 -返回值 : main
2019-04-04 14:33:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:33:42 -HTTP METHOD : GET
2019-04-04 14:33:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:33:42 -参数 : []
2019-04-04 14:33:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:33:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:33:42 -<==      Total: 0
2019-04-04 14:33:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:33:42 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:33:42 -<==      Total: 1
2019-04-04 14:33:42 -耗时 : 49
2019-04-04 14:33:42 -返回值 : com.bootdo.common.utils.PageUtils@69e5f6d9
2019-04-04 14:33:42 -请求地址 : http://localhost:8081/main
2019-04-04 14:33:42 -HTTP METHOD : GET
2019-04-04 14:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:33:42 -参数 : []
2019-04-04 14:33:42 -耗时 : 1
2019-04-04 14:33:42 -返回值 : main
2019-04-04 14:33:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:33:48 -==> Parameters: 1(Long)
2019-04-04 14:33:48 -<==      Total: 90
2019-04-04 14:33:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:33:48 -HTTP METHOD : GET
2019-04-04 14:33:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:33:48 -参数 : []
2019-04-04 14:33:48 -耗时 : 1
2019-04-04 14:33:48 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:33:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:49 -HTTP METHOD : GET
2019-04-04 14:33:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:49 -参数 : [userType]
2019-04-04 14:33:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:49 -==> Parameters: userType(String)
2019-04-04 14:33:49 -<==      Total: 2
2019-04-04 14:33:49 -耗时 : 5
2019-04-04 14:33:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:33:49 -HTTP METHOD : GET
2019-04-04 14:33:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:33:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:33:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:33:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:33:49 -<==      Total: 7
2019-04-04 14:33:49 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:33:49 -==> Parameters: 
2019-04-04 14:33:49 -<==      Total: 1
2019-04-04 14:33:49 -耗时 : 13
2019-04-04 14:33:49 -返回值 : com.bootdo.common.utils.PageUtils@e8776a9
2019-04-04 14:33:49 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:33:49 -HTTP METHOD : GET
2019-04-04 14:33:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:33:49 -参数 : []
2019-04-04 14:33:49 -耗时 : 1
2019-04-04 14:33:49 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:33:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:50 -HTTP METHOD : GET
2019-04-04 14:33:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:50 -参数 : [userType]
2019-04-04 14:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:50 -==> Parameters: userType(String)
2019-04-04 14:33:50 -<==      Total: 2
2019-04-04 14:33:50 -耗时 : 4
2019-04-04 14:33:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:33:50 -HTTP METHOD : GET
2019-04-04 14:33:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:33:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:33:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:33:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:33:50 -<==      Total: 5
2019-04-04 14:33:50 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:33:50 -==> Parameters: 
2019-04-04 14:33:50 -<==      Total: 1
2019-04-04 14:33:50 -耗时 : 9
2019-04-04 14:33:50 -返回值 : com.bootdo.common.utils.PageUtils@61c45d68
2019-04-04 14:33:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:33:52 -HTTP METHOD : GET
2019-04-04 14:33:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:33:52 -参数 : [5, {}]
2019-04-04 14:33:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:33:52 -==> Parameters: 5(Long)
2019-04-04 14:33:52 -<==      Total: 1
2019-04-04 14:33:52 -耗时 : 6
2019-04-04 14:33:52 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:33:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:33:52 -HTTP METHOD : GET
2019-04-04 14:33:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:52 -参数 : [userType]
2019-04-04 14:33:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:52 -==> Parameters: userType(String)
2019-04-04 14:33:52 -<==      Total: 2
2019-04-04 14:33:52 -耗时 : 5
2019-04-04 14:33:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:52 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:33:52 -HTTP METHOD : GET
2019-04-04 14:33:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:33:52 -参数 : [waterType]
2019-04-04 14:33:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:33:52 -==> Parameters: waterType(String)
2019-04-04 14:33:52 -<==      Total: 6
2019-04-04 14:33:52 -耗时 : 16
2019-04-04 14:33:52 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:33:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:33:57 -HTTP METHOD : POST
2019-04-04 14:33:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:33:57 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@62b4d8b5]
2019-04-04 14:33:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:33:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:33:57.16(Timestamp)
2019-04-04 14:33:57 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$b98e7dec.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:33:57 -<==    Updates: 1
2019-04-04 14:34:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 9140 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 14:34:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 14:34:49 -The following profiles are active: dev
2019-04-04 14:34:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:34:49 CST 2019]; root of context hierarchy
2019-04-04 14:34:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 14:34:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fba0e363] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$edfa120a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 14:34:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 14:34:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:34:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 14:34:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 14:34:57 -Starting service [Tomcat]
2019-04-04 14:34:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 14:34:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 14:34:58 -Initializing Spring embedded WebApplicationContext
2019-04-04 14:34:58 -Root WebApplicationContext: initialization completed in 8155 ms
2019-04-04 14:34:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 14:34:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 14:34:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 14:34:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 14:34:58 -Filter xssFilter was not registered (disabled)
2019-04-04 14:34:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 14:34:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 14:34:58 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 14:34:58 -Servlet dispatcherServlet mapped to [/]
2019-04-04 14:35:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:34:49 CST 2019]; root of context hierarchy
2019-04-04 14:35:02 -Using default implementation for ThreadExecutor
2019-04-04 14:35:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 14:35:02 -Quartz Scheduler v.2.2.1 created.
2019-04-04 14:35:02 -RAMJobStore initialized.
2019-04-04 14:35:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 14:35:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 14:35:02 -Quartz scheduler version: 2.2.1
2019-04-04 14:35:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1883871b
2019-04-04 14:35:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 14:35:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 14:35:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 14:35:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 14:35:06 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 14:35:06 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 14:35:06 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:35:06 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 14:35:06 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:35:06 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 14:35:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 14:35:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 14:35:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 14:35:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 14:35:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 14:35:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:35:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 14:35:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:35:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 14:35:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 14:35:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 14:35:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 14:35:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 14:35:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 14:35:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 14:35:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 14:35:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:35:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:35:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:35:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 14:35:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 14:35:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 14:35:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 14:35:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 14:35:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 14:35:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 14:35:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 14:35:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:35:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:35:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 14:35:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 14:35:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 14:35:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 14:35:06 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 14:35:06 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:35:06 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:35:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 14:35:06 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 14:35:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 14:35:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 14:35:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 14:35:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 14:35:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 14:35:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 14:35:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 14:35:06 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 14:35:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 14:35:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 14:35:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 14:35:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 14:35:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 14:35:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 14:35:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 14:35:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 14:35:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 14:35:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 14:35:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 14:35:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 14:35:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 14:35:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 14:35:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 14:35:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 14:35:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 14:35:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:35:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 14:35:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:35:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 14:35:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 14:35:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 14:35:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 14:35:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:35:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 14:35:06 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:35:06 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 14:35:06 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:35:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 14:35:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:35:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 14:35:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 14:35:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 14:35:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 14:35:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 14:35:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 14:35:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:35:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:34:49 CST 2019]; root of context hierarchy
2019-04-04 14:35:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:35:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:35:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:35:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 14:35:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 14:35:09 -Registering beans for JMX exposure on startup
2019-04-04 14:35:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 14:35:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 14:35:10 -Starting beans in phase 2147483647
2019-04-04 14:35:10 -Context refreshed
2019-04-04 14:35:10 -Found 1 custom documentation plugin(s)
2019-04-04 14:35:10 -Scanning for api listing references
2019-04-04 14:35:10 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 14:35:10 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 14:35:10 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 14:35:10 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 14:35:10 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 14:35:10 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 14:35:10 -Generating unique operation named: removeUsingPOST_1
2019-04-04 14:35:10 -Generating unique operation named: addUsingGET_1
2019-04-04 14:35:10 -Generating unique operation named: editUsingGET_1
2019-04-04 14:35:10 -Generating unique operation named: listUsingGET_1
2019-04-04 14:35:10 -Generating unique operation named: removeUsingPOST_2
2019-04-04 14:35:10 -Generating unique operation named: removeUsingPOST_3
2019-04-04 14:35:10 -Generating unique operation named: saveUsingPOST_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingGET_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingPOST_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingPUT_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 14:35:10 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 14:35:10 -Generating unique operation named: addUsingGET_2
2019-04-04 14:35:10 -Generating unique operation named: editUsingGET_2
2019-04-04 14:35:10 -Generating unique operation named: listUsingGET_2
2019-04-04 14:35:10 -Generating unique operation named: removeUsingPOST_4
2019-04-04 14:35:10 -Generating unique operation named: removeUsingPOST_5
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_2
2019-04-04 14:35:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_3
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_3
2019-04-04 14:35:11 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_3
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_6
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_7
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_4
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_4
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_4
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_8
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_9
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 14:35:11 -Generating unique operation named: ElecUsingGET_1
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_5
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_5
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_5
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_10
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_11
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_6
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_6
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_6
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_7
2019-04-04 14:35:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_7
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_12
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_13
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 14:35:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_7
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_8
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_8
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_14
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_15
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_8
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_8
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_9
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_9
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_16
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_17
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_8
2019-04-04 14:35:11 -Generating unique operation named: updateUsingGET_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_9
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPUT_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 14:35:11 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 14:35:11 -Generating unique operation named: addUsingGET_9
2019-04-04 14:35:11 -Generating unique operation named: editUsingGET_10
2019-04-04 14:35:11 -Generating unique operation named: infoUsingGET_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingPOST_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingPUT_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 14:35:11 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_10
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_18
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_19
2019-04-04 14:35:11 -Generating unique operation named: saveUsingPOST_9
2019-04-04 14:35:11 -Generating unique operation named: updateUsingPOST_10
2019-04-04 14:35:11 -Generating unique operation named: listUsingGET_11
2019-04-04 14:35:11 -Generating unique operation named: removeUsingPOST_20
2019-04-04 14:35:11 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_10
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_11
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_12
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_21
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_10
2019-04-04 14:35:12 -Generating unique operation named: treeUsingGET_1
2019-04-04 14:35:12 -Generating unique operation named: treeUsingGET_2
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_11
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_11
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_12
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_13
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_22
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_23
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingGET_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPUT_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 14:35:12 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_12
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_13
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_14
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_24
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_25
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingGET_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_13
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPUT_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 14:35:12 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_13
2019-04-04 14:35:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_14
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_15
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_13
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_14
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_14
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_16
2019-04-04 14:35:12 -Generating unique operation named: listUsingHEAD_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingPOST_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingPUT_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingPATCH_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingDELETE_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 14:35:12 -Generating unique operation named: listUsingTRACE_1
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_14
2019-04-04 14:35:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_15
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_17
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_26
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_15
2019-04-04 14:35:12 -Generating unique operation named: treeUsingGET_3
2019-04-04 14:35:12 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_15
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_15
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_16
2019-04-04 14:35:12 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_18
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_27
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_28
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_16
2019-04-04 14:35:12 -Generating unique operation named: updateUsingGET_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_16
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPUT_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 14:35:12 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 14:35:12 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_16
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_17
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_19
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_29
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_30
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_17
2019-04-04 14:35:12 -Generating unique operation named: updateUsingGET_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_17
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPUT_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 14:35:12 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 14:35:12 -Generating unique operation named: addUsingGET_17
2019-04-04 14:35:12 -Generating unique operation named: editUsingGET_18
2019-04-04 14:35:12 -Generating unique operation named: listUsingGET_20
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_31
2019-04-04 14:35:12 -Generating unique operation named: removeUsingPOST_32
2019-04-04 14:35:12 -Generating unique operation named: saveUsingPOST_18
2019-04-04 14:35:12 -Generating unique operation named: updateUsingGET_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPOST_18
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPUT_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 14:35:12 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 14:35:12 -Starting Quartz Scheduler now
2019-04-04 14:35:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 14:35:12 -Starting...
2019-04-04 14:35:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 14:35:12 -Started.
2019-04-04 14:35:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 14:35:12 -Using a shared selector for servlet write/read
2019-04-04 14:35:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 14:35:12 -Started BootdoApplication in 24.305 seconds (JVM running for 25.192)
2019-04-04 14:35:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 14:35:13 -==> Parameters: 
2019-04-04 14:35:13 -<==      Total: 1
2019-04-04 14:35:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 14:35:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 14:35:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2019-04-04 14:35:18 -Enabling session validation scheduler...
2019-04-04 14:35:19 -请求地址 : http://localhost:8081/login;JSESSIONID=69821270-1d31-4a97-8a6b-d109fb09cb68
2019-04-04 14:35:19 -HTTP METHOD : GET
2019-04-04 14:35:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:35:19 -参数 : [{}]
2019-04-04 14:35:19 -耗时 : 5
2019-04-04 14:35:19 -返回值 : login
2019-04-04 14:35:20 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:35:20 -HTTP METHOD : GET
2019-04-04 14:35:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:35:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@419abc0f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63f771e]
2019-04-04 14:35:21 -0073
2019-04-04 14:35:21 -耗时 : 701
2019-04-04 14:35:21 -返回值 : null
2019-04-04 14:35:25 -请求地址 : http://localhost:8081/login
2019-04-04 14:35:25 -HTTP METHOD : POST
2019-04-04 14:35:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:35:25 -参数 : [admin, 111111, 0073, org.apache.shiro.web.servlet.ShiroHttpServletRequest@e3f17cc]
2019-04-04 14:35:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:35:25 -==> Parameters: admin(String)
2019-04-04 14:35:25 -<==      Total: 1
2019-04-04 14:35:25 -耗时 : 165
2019-04-04 14:35:25 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:35:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 14:35:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:35:25 -==> Parameters: 1(Long), admin(String), 登录(String), 166(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:35:25.3(Timestamp)
2019-04-04 14:35:25 -<==    Updates: 1
2019-04-04 14:35:25 -请求地址 : http://localhost:8081/index
2019-04-04 14:35:25 -HTTP METHOD : GET
2019-04-04 14:35:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:35:25 -参数 : [{}]
2019-04-04 14:35:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:35:25 -==> Parameters: 1(Long)
2019-04-04 14:35:25 -<==      Total: 46
2019-04-04 14:35:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:35:25 -==> Parameters: 138(Long)
2019-04-04 14:35:25 -<==      Total: 1
2019-04-04 14:35:25 -耗时 : 133
2019-04-04 14:35:25 -返回值 : index_v1
2019-04-04 14:35:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:35:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 134(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:35:25.535(Timestamp)
2019-04-04 14:35:25 -<==    Updates: 1
2019-04-04 14:35:25 -请求地址 : http://localhost:8081/main
2019-04-04 14:35:25 -HTTP METHOD : GET
2019-04-04 14:35:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:35:25 -参数 : []
2019-04-04 14:35:25 -耗时 : 0
2019-04-04 14:35:25 -返回值 : main
2019-04-04 14:35:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:35:25 -HTTP METHOD : GET
2019-04-04 14:35:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:35:25 -参数 : []
2019-04-04 14:35:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:35:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:35:25 -<==      Total: 0
2019-04-04 14:35:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:35:26 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:35:26 -<==      Total: 1
2019-04-04 14:35:26 -耗时 : 65
2019-04-04 14:35:26 -返回值 : com.bootdo.common.utils.PageUtils@40a81376
2019-04-04 14:35:26 -请求地址 : http://localhost:8081/main
2019-04-04 14:35:26 -HTTP METHOD : GET
2019-04-04 14:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:35:26 -参数 : []
2019-04-04 14:35:26 -耗时 : 2
2019-04-04 14:35:26 -返回值 : main
2019-04-04 14:35:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:35:28 -==> Parameters: 1(Long)
2019-04-04 14:35:28 -<==      Total: 90
2019-04-04 14:35:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:35:28 -HTTP METHOD : GET
2019-04-04 14:35:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:35:28 -参数 : []
2019-04-04 14:35:28 -耗时 : 0
2019-04-04 14:35:28 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:35:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:35:28 -HTTP METHOD : GET
2019-04-04 14:35:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:35:28 -参数 : [userType]
2019-04-04 14:35:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:35:28 -==> Parameters: userType(String)
2019-04-04 14:35:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:35:28 -HTTP METHOD : GET
2019-04-04 14:35:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:35:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:35:28 -<==      Total: 2
2019-04-04 14:35:28 -耗时 : 51
2019-04-04 14:35:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:35:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:35:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:35:28 -<==      Total: 7
2019-04-04 14:35:28 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:35:28 -==> Parameters: 
2019-04-04 14:35:28 -<==      Total: 1
2019-04-04 14:35:28 -耗时 : 52
2019-04-04 14:35:28 -返回值 : com.bootdo.common.utils.PageUtils@65dc1c31
2019-04-04 14:35:29 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:35:29 -HTTP METHOD : GET
2019-04-04 14:35:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:35:29 -参数 : []
2019-04-04 14:35:29 -耗时 : 3
2019-04-04 14:35:29 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:35:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:35:30 -HTTP METHOD : GET
2019-04-04 14:35:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:35:30 -参数 : [userType]
2019-04-04 14:35:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:35:30 -==> Parameters: userType(String)
2019-04-04 14:35:30 -<==      Total: 2
2019-04-04 14:35:30 -耗时 : 5
2019-04-04 14:35:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:35:30 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:35:30 -HTTP METHOD : GET
2019-04-04 14:35:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:35:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:35:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:35:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:35:30 -<==      Total: 5
2019-04-04 14:35:30 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:35:30 -==> Parameters: 
2019-04-04 14:35:30 -<==      Total: 1
2019-04-04 14:35:30 -耗时 : 32
2019-04-04 14:35:30 -返回值 : com.bootdo.common.utils.PageUtils@2dca8e70
2019-04-04 14:35:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:35:31 -HTTP METHOD : GET
2019-04-04 14:35:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:35:31 -参数 : [5, {}]
2019-04-04 14:35:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:35:31 -==> Parameters: 5(Long)
2019-04-04 14:35:31 -<==      Total: 1
2019-04-04 14:35:31 -耗时 : 24
2019-04-04 14:35:31 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:35:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:35:32 -HTTP METHOD : GET
2019-04-04 14:35:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:35:32 -参数 : [userType]
2019-04-04 14:35:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:35:32 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:35:32 -==> Parameters: userType(String)
2019-04-04 14:35:32 -HTTP METHOD : GET
2019-04-04 14:35:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:35:32 -参数 : [waterType]
2019-04-04 14:35:32 -<==      Total: 2
2019-04-04 14:35:32 -耗时 : 5
2019-04-04 14:35:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:35:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:35:32 -==> Parameters: waterType(String)
2019-04-04 14:35:32 -<==      Total: 6
2019-04-04 14:35:32 -耗时 : 17
2019-04-04 14:35:32 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:35:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:35:35 -HTTP METHOD : POST
2019-04-04 14:35:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:35:35 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@53190c25]
2019-04-04 14:35:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:35:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:35:35.279(Timestamp)
2019-04-04 14:35:35 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$87d6ccdc.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:35:35 -<==    Updates: 1
2019-04-04 14:36:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:36:04 -HTTP METHOD : GET
2019-04-04 14:36:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:36:04 -参数 : []
2019-04-04 14:36:04 -耗时 : 1
2019-04-04 14:36:04 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:36:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:36:04 -HTTP METHOD : GET
2019-04-04 14:36:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:36:04 -参数 : [userType]
2019-04-04 14:36:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:36:04 -==> Parameters: userType(String)
2019-04-04 14:36:04 -<==      Total: 2
2019-04-04 14:36:04 -耗时 : 6
2019-04-04 14:36:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:36:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:36:04 -HTTP METHOD : GET
2019-04-04 14:36:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:36:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:36:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:36:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:36:04 -<==      Total: 7
2019-04-04 14:36:04 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:36:04 -==> Parameters: 
2019-04-04 14:36:04 -<==      Total: 1
2019-04-04 14:36:04 -耗时 : 18
2019-04-04 14:36:04 -返回值 : com.bootdo.common.utils.PageUtils@44069b52
2019-04-04 14:36:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]
2019-04-04 14:36:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/7
2019-04-04 14:36:07 -HTTP METHOD : GET
2019-04-04 14:36:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-04 14:36:07 -参数 : [7, {}]
2019-04-04 14:36:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-04 14:36:07 -==> Parameters: 7(Long)
2019-04-04 14:36:07 -<==      Total: 1
2019-04-04 14:36:07 -耗时 : 8
2019-04-04 14:36:07 -返回值 : moneyLog/elecLog/edit
2019-04-04 14:36:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:36:08 -HTTP METHOD : GET
2019-04-04 14:36:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:36:08 -参数 : [userType]
2019-04-04 14:36:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:36:08 -==> Parameters: userType(String)
2019-04-04 14:36:08 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-04 14:36:08 -HTTP METHOD : GET
2019-04-04 14:36:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:36:08 -参数 : [elecType]
2019-04-04 14:36:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:36:08 -==> Parameters: elecType(String)
2019-04-04 14:36:08 -<==      Total: 2
2019-04-04 14:36:08 -耗时 : 8
2019-04-04 14:36:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:36:08 -<==      Total: 4
2019-04-04 14:36:08 -耗时 : 5
2019-04-04 14:36:08 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:36:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-04 14:36:11 -HTTP METHOD : POST
2019-04-04 14:36:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-04 14:36:11 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@51ac9afe]
2019-04-04 14:36:11 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-04 14:36:11 -==> Parameters: 5-8888(String), asda(String), A(String), 2(String), 0(String), 80.00(BigDecimal), 2019-03-27 18:15:03.0(Timestamp), 2019-03(String), 1(Long), 2019-04-04 14:36:11.921(Timestamp), 1(Long), (String), 7(Long)
2019-04-04 14:36:12 -<==    Updates: 1
2019-04-04 14:36:12 -耗时 : 276
2019-04-04 14:36:12 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:36:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:36:12 -HTTP METHOD : GET
2019-04-04 14:36:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:36:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:36:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:36:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:36:12 -<==      Total: 7
2019-04-04 14:36:12 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:36:12 -==> Parameters: 
2019-04-04 14:36:12 -<==      Total: 1
2019-04-04 14:36:12 -耗时 : 18
2019-04-04 14:36:12 -返回值 : com.bootdo.common.utils.PageUtils@492962d5
2019-04-04 14:39:17 -请求地址 : http://localhost:8081/index
2019-04-04 14:39:17 -HTTP METHOD : GET
2019-04-04 14:39:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:39:17 -参数 : [{}]
2019-04-04 14:39:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:39:17 -==> Parameters: 1(Long)
2019-04-04 14:39:17 -<==      Total: 46
2019-04-04 14:39:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:39:17 -==> Parameters: 138(Long)
2019-04-04 14:39:17 -<==      Total: 1
2019-04-04 14:39:17 -耗时 : 26
2019-04-04 14:39:17 -返回值 : index_v1
2019-04-04 14:39:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:39:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:39:17.427(Timestamp)
2019-04-04 14:39:17 -<==    Updates: 1
2019-04-04 14:39:17 -请求地址 : http://localhost:8081/main
2019-04-04 14:39:17 -HTTP METHOD : GET
2019-04-04 14:39:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:39:17 -参数 : []
2019-04-04 14:39:17 -耗时 : 1
2019-04-04 14:39:17 -返回值 : main
2019-04-04 14:39:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:39:17 -HTTP METHOD : GET
2019-04-04 14:39:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:39:17 -参数 : []
2019-04-04 14:39:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:39:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:39:17 -<==      Total: 0
2019-04-04 14:39:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:39:17 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:39:17 -<==      Total: 1
2019-04-04 14:39:17 -耗时 : 11
2019-04-04 14:39:17 -返回值 : com.bootdo.common.utils.PageUtils@e667da8
2019-04-04 14:39:18 -请求地址 : http://localhost:8081/main
2019-04-04 14:39:18 -HTTP METHOD : GET
2019-04-04 14:39:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:39:18 -参数 : []
2019-04-04 14:39:18 -耗时 : 0
2019-04-04 14:39:18 -返回值 : main
2019-04-04 14:39:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:39:20 -HTTP METHOD : GET
2019-04-04 14:39:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:39:20 -参数 : []
2019-04-04 14:39:20 -耗时 : 0
2019-04-04 14:39:20 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:39:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:39:21 -HTTP METHOD : GET
2019-04-04 14:39:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:21 -参数 : [userType]
2019-04-04 14:39:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:21 -==> Parameters: userType(String)
2019-04-04 14:39:21 -<==      Total: 2
2019-04-04 14:39:21 -耗时 : 4
2019-04-04 14:39:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:39:21 -HTTP METHOD : GET
2019-04-04 14:39:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:39:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:39:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:39:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:39:21 -<==      Total: 7
2019-04-04 14:39:21 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:39:21 -==> Parameters: 
2019-04-04 14:39:21 -<==      Total: 1
2019-04-04 14:39:21 -耗时 : 13
2019-04-04 14:39:21 -返回值 : com.bootdo.common.utils.PageUtils@204dcccd
2019-04-04 14:39:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:39:21 -HTTP METHOD : GET
2019-04-04 14:39:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:39:21 -参数 : []
2019-04-04 14:39:21 -耗时 : 0
2019-04-04 14:39:21 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:39:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:39:22 -HTTP METHOD : GET
2019-04-04 14:39:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:22 -参数 : [userType]
2019-04-04 14:39:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:22 -==> Parameters: userType(String)
2019-04-04 14:39:22 -<==      Total: 2
2019-04-04 14:39:22 -耗时 : 6
2019-04-04 14:39:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:39:22 -HTTP METHOD : GET
2019-04-04 14:39:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:39:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:39:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:39:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:39:22 -<==      Total: 5
2019-04-04 14:39:22 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:39:22 -==> Parameters: 
2019-04-04 14:39:22 -<==      Total: 1
2019-04-04 14:39:22 -耗时 : 9
2019-04-04 14:39:22 -返回值 : com.bootdo.common.utils.PageUtils@4120bd3
2019-04-04 14:39:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:39:23 -HTTP METHOD : GET
2019-04-04 14:39:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:39:23 -参数 : [5, {}]
2019-04-04 14:39:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:39:23 -==> Parameters: 5(Long)
2019-04-04 14:39:23 -<==      Total: 1
2019-04-04 14:39:23 -耗时 : 4
2019-04-04 14:39:23 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:39:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:39:23 -HTTP METHOD : GET
2019-04-04 14:39:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:23 -参数 : [userType]
2019-04-04 14:39:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:23 -==> Parameters: userType(String)
2019-04-04 14:39:23 -<==      Total: 2
2019-04-04 14:39:23 -耗时 : 6
2019-04-04 14:39:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:23 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:39:23 -HTTP METHOD : GET
2019-04-04 14:39:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:23 -参数 : [waterType]
2019-04-04 14:39:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:23 -==> Parameters: waterType(String)
2019-04-04 14:39:23 -<==      Total: 6
2019-04-04 14:39:23 -耗时 : 13
2019-04-04 14:39:23 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:39:27 -HTTP METHOD : POST
2019-04-04 14:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:39:27 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@2fc66a40]
2019-04-04 14:39:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:39:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:39:27.414(Timestamp)
2019-04-04 14:39:27 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$87d6ccdc.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:39:27 -<==    Updates: 1
2019-04-04 14:39:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:39:39 -HTTP METHOD : GET
2019-04-04 14:39:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:39:39 -参数 : [5, {}]
2019-04-04 14:39:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:39:39 -==> Parameters: 5(Long)
2019-04-04 14:39:40 -<==      Total: 1
2019-04-04 14:39:40 -耗时 : 4
2019-04-04 14:39:40 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:39:40 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:39:40 -HTTP METHOD : GET
2019-04-04 14:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:40 -参数 : [waterType]
2019-04-04 14:39:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:39:40 -HTTP METHOD : GET
2019-04-04 14:39:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:39:40 -参数 : [userType]
2019-04-04 14:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:40 -==> Parameters: waterType(String)
2019-04-04 14:39:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:39:40 -==> Parameters: userType(String)
2019-04-04 14:39:40 -<==      Total: 2
2019-04-04 14:39:40 -耗时 : 4
2019-04-04 14:39:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:40 -<==      Total: 6
2019-04-04 14:39:40 -耗时 : 9
2019-04-04 14:39:40 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:39:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:39:45 -HTTP METHOD : POST
2019-04-04 14:39:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:39:45 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@6612f3]
2019-04-04 14:39:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:39:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:39:45.727(Timestamp)
2019-04-04 14:39:45 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$87d6ccdc.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:39:45 -<==    Updates: 1
2019-04-04 14:39:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:39:48 -HTTP METHOD : POST
2019-04-04 14:39:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:39:48 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@a3f2049]
2019-04-04 14:39:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:39:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:39:48.198(Timestamp)
2019-04-04 14:39:48 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$87d6ccdc.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:39:48 -<==    Updates: 1
2019-04-04 14:40:03 -请求地址 : http://localhost:8081/login;JSESSIONID=c3f2cdd0-ad17-4f27-b6cf-08ef132d310c
2019-04-04 14:40:03 -HTTP METHOD : GET
2019-04-04 14:40:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:40:03 -参数 : [{}]
2019-04-04 14:40:03 -耗时 : 1
2019-04-04 14:40:03 -返回值 : login
2019-04-04 14:40:03 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:40:03 -HTTP METHOD : GET
2019-04-04 14:40:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:40:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2200ee48, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36d82548]
2019-04-04 14:40:03 -3999
2019-04-04 14:40:04 -耗时 : 182
2019-04-04 14:40:04 -返回值 : null
2019-04-04 14:40:04 -请求地址 : http://localhost:8081/login
2019-04-04 14:40:04 -HTTP METHOD : GET
2019-04-04 14:40:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:40:04 -参数 : [{}]
2019-04-04 14:40:04 -耗时 : 1
2019-04-04 14:40:04 -返回值 : login
2019-04-04 14:40:08 -请求地址 : http://localhost:8081/login
2019-04-04 14:40:08 -HTTP METHOD : POST
2019-04-04 14:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:40:08 -参数 : [admin, 111111, 3999, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58e76c51]
2019-04-04 14:40:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:40:08 -==> Parameters: admin(String)
2019-04-04 14:40:08 -<==      Total: 1
2019-04-04 14:40:08 -耗时 : 7
2019-04-04 14:40:08 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:40:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:40:08 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:40:08.722(Timestamp)
2019-04-04 14:40:08 -请求地址 : http://localhost:8081/index
2019-04-04 14:40:08 -HTTP METHOD : GET
2019-04-04 14:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:40:08 -参数 : [{}]
2019-04-04 14:40:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:40:08 -==> Parameters: 1(Long)
2019-04-04 14:40:08 -<==      Total: 46
2019-04-04 14:40:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:40:08 -==> Parameters: 138(Long)
2019-04-04 14:40:08 -<==      Total: 1
2019-04-04 14:40:08 -耗时 : 26
2019-04-04 14:40:08 -返回值 : index_v1
2019-04-04 14:40:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:40:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:40:08.777(Timestamp)
2019-04-04 14:40:08 -请求地址 : http://localhost:8081/main
2019-04-04 14:40:08 -HTTP METHOD : GET
2019-04-04 14:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:40:08 -参数 : []
2019-04-04 14:40:08 -耗时 : 1
2019-04-04 14:40:08 -返回值 : main
2019-04-04 14:40:09 -<==    Updates: 1
2019-04-04 14:40:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:40:09 -HTTP METHOD : GET
2019-04-04 14:40:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:40:09 -参数 : []
2019-04-04 14:40:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:40:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:40:09 -请求地址 : http://localhost:8081/main
2019-04-04 14:40:09 -HTTP METHOD : GET
2019-04-04 14:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:40:09 -参数 : []
2019-04-04 14:40:09 -耗时 : 2
2019-04-04 14:40:09 -<==      Total: 0
2019-04-04 14:40:09 -返回值 : main
2019-04-04 14:40:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:40:09 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:40:09 -<==      Total: 1
2019-04-04 14:40:09 -耗时 : 12
2019-04-04 14:40:09 -返回值 : com.bootdo.common.utils.PageUtils@f2b18cb
2019-04-04 14:40:09 -<==    Updates: 1
2019-04-04 14:40:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:40:19 -==> Parameters: 1(Long)
2019-04-04 14:40:19 -<==      Total: 90
2019-04-04 14:40:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:40:19 -HTTP METHOD : GET
2019-04-04 14:40:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:40:19 -参数 : []
2019-04-04 14:40:19 -耗时 : 1
2019-04-04 14:40:19 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:40:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:40:20 -HTTP METHOD : GET
2019-04-04 14:40:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:40:20 -参数 : [userType]
2019-04-04 14:40:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:40:20 -==> Parameters: userType(String)
2019-04-04 14:40:20 -<==      Total: 2
2019-04-04 14:40:20 -耗时 : 4
2019-04-04 14:40:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:40:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:40:20 -HTTP METHOD : GET
2019-04-04 14:40:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:40:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:40:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:40:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:40:20 -<==      Total: 7
2019-04-04 14:40:20 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:40:20 -==> Parameters: 
2019-04-04 14:40:20 -<==      Total: 1
2019-04-04 14:40:20 -耗时 : 10
2019-04-04 14:40:20 -返回值 : com.bootdo.common.utils.PageUtils@5df41aa
2019-04-04 14:40:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:40:20 -HTTP METHOD : GET
2019-04-04 14:40:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:40:20 -参数 : []
2019-04-04 14:40:20 -耗时 : 1
2019-04-04 14:40:20 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:40:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:40:21 -HTTP METHOD : GET
2019-04-04 14:40:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:40:21 -参数 : [userType]
2019-04-04 14:40:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:40:21 -==> Parameters: userType(String)
2019-04-04 14:40:21 -<==      Total: 2
2019-04-04 14:40:21 -耗时 : 3
2019-04-04 14:40:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:40:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:40:21 -HTTP METHOD : GET
2019-04-04 14:40:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:40:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:40:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:40:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:40:21 -<==      Total: 5
2019-04-04 14:40:21 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:40:21 -==> Parameters: 
2019-04-04 14:40:21 -<==      Total: 1
2019-04-04 14:40:21 -耗时 : 18
2019-04-04 14:40:21 -返回值 : com.bootdo.common.utils.PageUtils@7db730aa
2019-04-04 14:40:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-04 14:40:22 -HTTP METHOD : GET
2019-04-04 14:40:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-04 14:40:22 -参数 : [5, {}]
2019-04-04 14:40:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-04 14:40:22 -==> Parameters: 5(Long)
2019-04-04 14:40:22 -<==      Total: 1
2019-04-04 14:40:22 -耗时 : 5
2019-04-04 14:40:22 -返回值 : moneyLog/waterLog/edit
2019-04-04 14:40:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:40:22 -HTTP METHOD : GET
2019-04-04 14:40:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:40:22 -参数 : [userType]
2019-04-04 14:40:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:40:22 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-04 14:40:22 -==> Parameters: userType(String)
2019-04-04 14:40:22 -HTTP METHOD : GET
2019-04-04 14:40:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:40:22 -参数 : [waterType]
2019-04-04 14:40:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:40:22 -==> Parameters: waterType(String)
2019-04-04 14:40:22 -<==      Total: 2
2019-04-04 14:40:22 -耗时 : 6
2019-04-04 14:40:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:40:22 -<==      Total: 6
2019-04-04 14:40:22 -耗时 : 5
2019-04-04 14:40:22 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:40:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-04 14:40:26 -HTTP METHOD : POST
2019-04-04 14:40:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-04 14:40:26 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@61cfa4c1]
2019-04-04 14:40:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:40:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-04 14:40:26.957(Timestamp)
2019-04-04 14:40:26 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.update(WaterLogServiceImpl.java:39)
	at com.bootdo.moneyLog.controller.WaterLogController.update(WaterLogController.java:207)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$87d6ccdc.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-04 14:40:27 -<==    Updates: 1
2019-04-04 14:43:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:43:43 -HTTP METHOD : GET
2019-04-04 14:43:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:43:43 -参数 : []
2019-04-04 14:43:43 -耗时 : 1
2019-04-04 14:43:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:43:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:43:43 -HTTP METHOD : GET
2019-04-04 14:43:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:43:43 -参数 : [userType]
2019-04-04 14:43:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:43:43 -==> Parameters: userType(String)
2019-04-04 14:43:43 -<==      Total: 2
2019-04-04 14:43:43 -耗时 : 33
2019-04-04 14:43:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:43:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:43:43 -HTTP METHOD : GET
2019-04-04 14:43:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:43:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:43:44 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:43:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:43:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:43:44.009(Timestamp)
2019-04-04 14:43:44 -<==    Updates: 1
2019-04-04 14:43:45 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:43:45 -HTTP METHOD : GET
2019-04-04 14:43:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:43:45 -参数 : []
2019-04-04 14:43:45 -耗时 : 1
2019-04-04 14:43:45 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:43:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:43:45 -HTTP METHOD : GET
2019-04-04 14:43:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:43:45 -参数 : [userType]
2019-04-04 14:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:43:45 -==> Parameters: userType(String)
2019-04-04 14:43:45 -<==      Total: 2
2019-04-04 14:43:45 -耗时 : 3
2019-04-04 14:43:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:43:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:43:45 -HTTP METHOD : GET
2019-04-04 14:43:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:43:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:43:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:43:45 -<==      Total: 5
2019-04-04 14:43:45 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:43:45 -==> Parameters: 
2019-04-04 14:43:45 -<==      Total: 1
2019-04-04 14:43:45 -耗时 : 8
2019-04-04 14:43:45 -返回值 : com.bootdo.common.utils.PageUtils@20b38f00
2019-04-04 14:43:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:43:46 -HTTP METHOD : GET
2019-04-04 14:43:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:43:46 -参数 : []
2019-04-04 14:43:46 -耗时 : 0
2019-04-04 14:43:46 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:43:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:43:46 -HTTP METHOD : GET
2019-04-04 14:43:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:43:46 -参数 : [userType]
2019-04-04 14:43:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:43:46 -==> Parameters: userType(String)
2019-04-04 14:43:46 -<==      Total: 2
2019-04-04 14:43:46 -耗时 : 5
2019-04-04 14:43:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:43:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:43:46 -HTTP METHOD : GET
2019-04-04 14:43:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:43:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:43:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:43:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:43:46.718(Timestamp)
2019-04-04 14:43:46 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:43:46 -<==    Updates: 1
2019-04-04 14:47:27 -请求地址 : http://localhost:8081/index
2019-04-04 14:47:27 -HTTP METHOD : GET
2019-04-04 14:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:47:27 -参数 : [{}]
2019-04-04 14:47:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:47:27 -==> Parameters: 1(Long)
2019-04-04 14:47:27 -<==      Total: 46
2019-04-04 14:47:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:47:27 -==> Parameters: 138(Long)
2019-04-04 14:47:27 -<==      Total: 1
2019-04-04 14:47:27 -耗时 : 23
2019-04-04 14:47:27 -返回值 : index_v1
2019-04-04 14:47:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:47:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:47:27.649(Timestamp)
2019-04-04 14:47:27 -<==    Updates: 1
2019-04-04 14:47:27 -请求地址 : http://localhost:8081/main
2019-04-04 14:47:27 -HTTP METHOD : GET
2019-04-04 14:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:47:27 -参数 : []
2019-04-04 14:47:27 -耗时 : 0
2019-04-04 14:47:27 -返回值 : main
2019-04-04 14:47:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:47:28 -HTTP METHOD : GET
2019-04-04 14:47:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:47:28 -参数 : []
2019-04-04 14:47:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:47:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:47:28 -<==      Total: 0
2019-04-04 14:47:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:47:28 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:47:28 -<==      Total: 1
2019-04-04 14:47:28 -耗时 : 8
2019-04-04 14:47:28 -返回值 : com.bootdo.common.utils.PageUtils@84c0327
2019-04-04 14:47:28 -请求地址 : http://localhost:8081/main
2019-04-04 14:47:28 -HTTP METHOD : GET
2019-04-04 14:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:47:28 -参数 : []
2019-04-04 14:47:28 -耗时 : 1
2019-04-04 14:47:28 -返回值 : main
2019-04-04 14:47:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:47:30 -HTTP METHOD : GET
2019-04-04 14:47:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:47:30 -参数 : []
2019-04-04 14:47:30 -耗时 : 0
2019-04-04 14:47:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:47:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:47:30 -HTTP METHOD : GET
2019-04-04 14:47:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:47:30 -参数 : [userType]
2019-04-04 14:47:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:47:30 -==> Parameters: userType(String)
2019-04-04 14:47:30 -<==      Total: 2
2019-04-04 14:47:30 -耗时 : 6
2019-04-04 14:47:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:47:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:47:30 -HTTP METHOD : GET
2019-04-04 14:47:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:47:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:47:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:47:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:47:30 -<==      Total: 7
2019-04-04 14:47:30 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:47:30 -==> Parameters: 
2019-04-04 14:47:30 -<==      Total: 1
2019-04-04 14:47:30 -耗时 : 6
2019-04-04 14:47:30 -返回值 : com.bootdo.common.utils.PageUtils@3f503842
2019-04-04 14:47:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:47:31 -HTTP METHOD : GET
2019-04-04 14:47:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:47:31 -参数 : []
2019-04-04 14:47:31 -耗时 : 1
2019-04-04 14:47:31 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:47:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:47:31 -HTTP METHOD : GET
2019-04-04 14:47:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:47:31 -参数 : [userType]
2019-04-04 14:47:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:47:31 -==> Parameters: userType(String)
2019-04-04 14:47:31 -<==      Total: 2
2019-04-04 14:47:31 -耗时 : 5
2019-04-04 14:47:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:47:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:47:31 -HTTP METHOD : GET
2019-04-04 14:47:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:47:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:47:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:47:31 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:47:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:47:31.48(Timestamp)
2019-04-04 14:47:31 -<==    Updates: 1
2019-04-04 14:49:24 -请求地址 : http://localhost:8081/index
2019-04-04 14:49:24 -HTTP METHOD : GET
2019-04-04 14:49:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:49:24 -参数 : [{}]
2019-04-04 14:49:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:49:24 -==> Parameters: 1(Long)
2019-04-04 14:49:24 -<==      Total: 46
2019-04-04 14:49:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:49:24 -==> Parameters: 138(Long)
2019-04-04 14:49:24 -<==      Total: 1
2019-04-04 14:49:24 -耗时 : 25
2019-04-04 14:49:24 -返回值 : index_v1
2019-04-04 14:49:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:49:24.491(Timestamp)
2019-04-04 14:49:24 -<==    Updates: 1
2019-04-04 14:49:24 -请求地址 : http://localhost:8081/main
2019-04-04 14:49:24 -HTTP METHOD : GET
2019-04-04 14:49:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:49:24 -参数 : []
2019-04-04 14:49:24 -耗时 : 0
2019-04-04 14:49:24 -返回值 : main
2019-04-04 14:49:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:49:25 -HTTP METHOD : GET
2019-04-04 14:49:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:49:25 -参数 : []
2019-04-04 14:49:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:49:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:49:25 -<==      Total: 0
2019-04-04 14:49:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:49:25 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:49:25 -<==      Total: 1
2019-04-04 14:49:25 -耗时 : 8
2019-04-04 14:49:25 -返回值 : com.bootdo.common.utils.PageUtils@6e98c3de
2019-04-04 14:49:25 -请求地址 : http://localhost:8081/main
2019-04-04 14:49:25 -HTTP METHOD : GET
2019-04-04 14:49:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:49:25 -参数 : []
2019-04-04 14:49:25 -耗时 : 1
2019-04-04 14:49:25 -返回值 : main
2019-04-04 14:49:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:49:26 -HTTP METHOD : GET
2019-04-04 14:49:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:49:26 -参数 : []
2019-04-04 14:49:26 -耗时 : 1
2019-04-04 14:49:26 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:49:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:27 -HTTP METHOD : GET
2019-04-04 14:49:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:27 -参数 : [userType]
2019-04-04 14:49:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:27 -==> Parameters: userType(String)
2019-04-04 14:49:27 -<==      Total: 2
2019-04-04 14:49:27 -耗时 : 6
2019-04-04 14:49:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:49:27 -HTTP METHOD : GET
2019-04-04 14:49:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:49:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:49:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:49:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:49:27 -<==      Total: 7
2019-04-04 14:49:27 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:49:27 -==> Parameters: 
2019-04-04 14:49:27 -<==      Total: 1
2019-04-04 14:49:27 -耗时 : 8
2019-04-04 14:49:27 -返回值 : com.bootdo.common.utils.PageUtils@5ba14d49
2019-04-04 14:49:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:27 -HTTP METHOD : GET
2019-04-04 14:49:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:27 -参数 : []
2019-04-04 14:49:27 -耗时 : 0
2019-04-04 14:49:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:28 -HTTP METHOD : GET
2019-04-04 14:49:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:28 -参数 : [userType]
2019-04-04 14:49:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:28 -==> Parameters: userType(String)
2019-04-04 14:49:28 -<==      Total: 2
2019-04-04 14:49:28 -耗时 : 3
2019-04-04 14:49:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:28 -HTTP METHOD : GET
2019-04-04 14:49:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:28 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:28.235(Timestamp)
2019-04-04 14:49:28 -<==    Updates: 1
2019-04-04 14:49:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:29 -HTTP METHOD : GET
2019-04-04 14:49:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:29 -参数 : []
2019-04-04 14:49:29 -耗时 : 0
2019-04-04 14:49:29 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:29 -HTTP METHOD : GET
2019-04-04 14:49:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:29 -参数 : [userType]
2019-04-04 14:49:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:29 -==> Parameters: userType(String)
2019-04-04 14:49:29 -<==      Total: 2
2019-04-04 14:49:29 -耗时 : 3
2019-04-04 14:49:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:29 -HTTP METHOD : GET
2019-04-04 14:49:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:29.881(Timestamp)
2019-04-04 14:49:29 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:29 -<==    Updates: 1
2019-04-04 14:49:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:31 -HTTP METHOD : GET
2019-04-04 14:49:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:31 -参数 : []
2019-04-04 14:49:31 -耗时 : 1
2019-04-04 14:49:31 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:31 -HTTP METHOD : GET
2019-04-04 14:49:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:31 -参数 : [userType]
2019-04-04 14:49:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:31 -==> Parameters: userType(String)
2019-04-04 14:49:31 -<==      Total: 2
2019-04-04 14:49:31 -耗时 : 3
2019-04-04 14:49:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:31 -HTTP METHOD : GET
2019-04-04 14:49:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:31.879(Timestamp)
2019-04-04 14:49:31 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:31 -<==    Updates: 1
2019-04-04 14:49:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:32 -HTTP METHOD : GET
2019-04-04 14:49:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:32 -参数 : []
2019-04-04 14:49:32 -耗时 : 1
2019-04-04 14:49:32 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:32 -HTTP METHOD : GET
2019-04-04 14:49:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:33 -参数 : [userType]
2019-04-04 14:49:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:33 -==> Parameters: userType(String)
2019-04-04 14:49:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:33 -HTTP METHOD : GET
2019-04-04 14:49:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:33 -<==      Total: 2
2019-04-04 14:49:33 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:33 -耗时 : 27
2019-04-04 14:49:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:33.021(Timestamp)
2019-04-04 14:49:33 -<==    Updates: 1
2019-04-04 14:49:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:33 -HTTP METHOD : GET
2019-04-04 14:49:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:33 -参数 : []
2019-04-04 14:49:33 -耗时 : 1
2019-04-04 14:49:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:34 -HTTP METHOD : GET
2019-04-04 14:49:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:34 -参数 : [userType]
2019-04-04 14:49:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:34 -==> Parameters: userType(String)
2019-04-04 14:49:34 -<==      Total: 2
2019-04-04 14:49:34 -耗时 : 3
2019-04-04 14:49:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:34 -HTTP METHOD : GET
2019-04-04 14:49:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:34.249(Timestamp)
2019-04-04 14:49:34 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:34 -<==    Updates: 1
2019-04-04 14:49:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:34 -HTTP METHOD : GET
2019-04-04 14:49:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:34 -参数 : []
2019-04-04 14:49:34 -耗时 : 1
2019-04-04 14:49:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:34 -HTTP METHOD : GET
2019-04-04 14:49:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:34 -参数 : [userType]
2019-04-04 14:49:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:34 -==> Parameters: userType(String)
2019-04-04 14:49:34 -<==      Total: 2
2019-04-04 14:49:34 -耗时 : 2
2019-04-04 14:49:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:34 -HTTP METHOD : GET
2019-04-04 14:49:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:34 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:34.982(Timestamp)
2019-04-04 14:49:35 -<==    Updates: 1
2019-04-04 14:49:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:35 -HTTP METHOD : GET
2019-04-04 14:49:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:35 -参数 : []
2019-04-04 14:49:35 -耗时 : 1
2019-04-04 14:49:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:36 -HTTP METHOD : GET
2019-04-04 14:49:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:36 -参数 : [userType]
2019-04-04 14:49:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:36 -==> Parameters: userType(String)
2019-04-04 14:49:36 -<==      Total: 2
2019-04-04 14:49:36 -耗时 : 6
2019-04-04 14:49:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:36 -HTTP METHOD : GET
2019-04-04 14:49:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:36.188(Timestamp)
2019-04-04 14:49:36 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:36 -<==    Updates: 1
2019-04-04 14:49:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:49:36 -HTTP METHOD : GET
2019-04-04 14:49:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:49:36 -参数 : []
2019-04-04 14:49:36 -耗时 : 1
2019-04-04 14:49:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:49:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:36 -HTTP METHOD : GET
2019-04-04 14:49:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:36 -参数 : [userType]
2019-04-04 14:49:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:36 -==> Parameters: userType(String)
2019-04-04 14:49:36 -<==      Total: 2
2019-04-04 14:49:36 -耗时 : 3
2019-04-04 14:49:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:49:36 -HTTP METHOD : GET
2019-04-04 14:49:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:49:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:49:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:49:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:49:36 -<==      Total: 7
2019-04-04 14:49:36 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:49:36 -==> Parameters: 
2019-04-04 14:49:36 -<==      Total: 1
2019-04-04 14:49:36 -耗时 : 7
2019-04-04 14:49:36 -返回值 : com.bootdo.common.utils.PageUtils@6e6fc6cf
2019-04-04 14:49:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:37 -HTTP METHOD : GET
2019-04-04 14:49:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:37 -参数 : []
2019-04-04 14:49:37 -耗时 : 0
2019-04-04 14:49:37 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:37 -HTTP METHOD : GET
2019-04-04 14:49:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:37 -参数 : [userType]
2019-04-04 14:49:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:37 -==> Parameters: userType(String)
2019-04-04 14:49:37 -<==      Total: 2
2019-04-04 14:49:37 -耗时 : 3
2019-04-04 14:49:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:37 -HTTP METHOD : GET
2019-04-04 14:49:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:37.892(Timestamp)
2019-04-04 14:49:37 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:38 -<==    Updates: 1
2019-04-04 14:49:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:49:38 -HTTP METHOD : GET
2019-04-04 14:49:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:49:38 -参数 : []
2019-04-04 14:49:38 -耗时 : 0
2019-04-04 14:49:38 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:49:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:49:38 -HTTP METHOD : GET
2019-04-04 14:49:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:49:38 -参数 : [userType]
2019-04-04 14:49:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:49:38 -==> Parameters: userType(String)
2019-04-04 14:49:38 -<==      Total: 2
2019-04-04 14:49:38 -耗时 : 4
2019-04-04 14:49:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:49:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:49:38 -HTTP METHOD : GET
2019-04-04 14:49:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:49:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:49:38 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$1edc0cc9.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:49:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:49:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:49:38.545(Timestamp)
2019-04-04 14:49:38 -<==    Updates: 1
2019-04-04 14:50:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 11320 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-04 14:50:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-04 14:50:36 -The following profiles are active: dev
2019-04-04 14:50:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:50:36 CST 2019]; root of context hierarchy
2019-04-04 14:50:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-04 14:50:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$740a37bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$66636664] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-04 14:50:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-04 14:50:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-04 14:50:42 -Tomcat initialized with port(s): 8081 (http)
2019-04-04 14:50:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-04 14:50:42 -Starting service [Tomcat]
2019-04-04 14:50:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-04 14:50:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-04 14:50:43 -Initializing Spring embedded WebApplicationContext
2019-04-04 14:50:43 -Root WebApplicationContext: initialization completed in 6645 ms
2019-04-04 14:50:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-04 14:50:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-04 14:50:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-04 14:50:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-04 14:50:43 -Filter xssFilter was not registered (disabled)
2019-04-04 14:50:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-04 14:50:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-04 14:50:43 -Servlet statViewServlet mapped to [/druid/*]
2019-04-04 14:50:43 -Servlet dispatcherServlet mapped to [/]
2019-04-04 14:50:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:50:36 CST 2019]; root of context hierarchy
2019-04-04 14:50:46 -Using default implementation for ThreadExecutor
2019-04-04 14:50:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-04 14:50:46 -Quartz Scheduler v.2.2.1 created.
2019-04-04 14:50:46 -RAMJobStore initialized.
2019-04-04 14:50:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-04 14:50:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-04 14:50:46 -Quartz scheduler version: 2.2.1
2019-04-04 14:50:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5c53c235
2019-04-04 14:50:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-04 14:50:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-04 14:50:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-04 14:50:48 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-04 14:50:48 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-04 14:50:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-04 14:50:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:50:48 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-04 14:50:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-04 14:50:48 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-04 14:50:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-04 14:50:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-04 14:50:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-04 14:50:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-04 14:50:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-04 14:50:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-04 14:50:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:50:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-04 14:50:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-04 14:50:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-04 14:50:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-04 14:50:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-04 14:50:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-04 14:50:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-04 14:50:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-04 14:50:49 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-04 14:50:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-04 14:50:49 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:50:49 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:50:49 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-04 14:50:49 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-04 14:50:49 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-04 14:50:49 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-04 14:50:49 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-04 14:50:49 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-04 14:50:49 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-04 14:50:49 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-04 14:50:49 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-04 14:50:49 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:50:49 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-04 14:50:49 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-04 14:50:49 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-04 14:50:49 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-04 14:50:49 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-04 14:50:49 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:50:49 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:50:49 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-04 14:50:49 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-04 14:50:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-04 14:50:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-04 14:50:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-04 14:50:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-04 14:50:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-04 14:50:49 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-04 14:50:49 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-04 14:50:49 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-04 14:50:49 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-04 14:50:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-04 14:50:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-04 14:50:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-04 14:50:49 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-04 14:50:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-04 14:50:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-04 14:50:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-04 14:50:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-04 14:50:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-04 14:50:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-04 14:50:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-04 14:50:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-04 14:50:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-04 14:50:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-04 14:50:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-04 14:50:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-04 14:50:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-04 14:50:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:50:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-04 14:50:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-04 14:50:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-04 14:50:49 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-04 14:50:49 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-04 14:50:49 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-04 14:50:49 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-04 14:50:49 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-04 14:50:49 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-04 14:50:49 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-04 14:50:49 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-04 14:50:49 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-04 14:50:49 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-04 14:50:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-04 14:50:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-04 14:50:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-04 14:50:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-04 14:50:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-04 14:50:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-04 14:50:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-04 14:50:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:50:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 04 14:50:36 CST 2019]; root of context hierarchy
2019-04-04 14:50:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:50:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:50:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-04 14:50:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-04 14:50:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-04 14:50:52 -Registering beans for JMX exposure on startup
2019-04-04 14:50:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-04 14:50:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-04 14:50:52 -Starting beans in phase 2147483647
2019-04-04 14:50:52 -Context refreshed
2019-04-04 14:50:52 -Found 1 custom documentation plugin(s)
2019-04-04 14:50:52 -Scanning for api listing references
2019-04-04 14:50:52 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-04 14:50:52 -Generating unique operation named: getCountDUsingPOST_1
2019-04-04 14:50:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-04 14:50:52 -Generating unique operation named: getCountDUsingPOST_2
2019-04-04 14:50:52 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-04 14:50:52 -Generating unique operation named: getCountDUsingPOST_3
2019-04-04 14:50:52 -Generating unique operation named: removeUsingPOST_1
2019-04-04 14:50:52 -Generating unique operation named: addUsingGET_1
2019-04-04 14:50:52 -Generating unique operation named: editUsingGET_1
2019-04-04 14:50:52 -Generating unique operation named: listUsingGET_1
2019-04-04 14:50:52 -Generating unique operation named: removeUsingPOST_2
2019-04-04 14:50:52 -Generating unique operation named: removeUsingPOST_3
2019-04-04 14:50:52 -Generating unique operation named: saveUsingPOST_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingGET_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingHEAD_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingPOST_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingPUT_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingPATCH_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingDELETE_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-04 14:50:52 -Generating unique operation named: updateUsingTRACE_1
2019-04-04 14:50:52 -Generating unique operation named: addUsingGET_2
2019-04-04 14:50:52 -Generating unique operation named: editUsingGET_2
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_2
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_4
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_5
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_2
2019-04-04 14:50:53 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_3
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_3
2019-04-04 14:50:53 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_3
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_6
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_7
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_2
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_4
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_4
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_4
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_8
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_9
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_3
2019-04-04 14:50:53 -Generating unique operation named: ElecUsingGET_1
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_5
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_5
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_5
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_10
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_11
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_4
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_6
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_6
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_6
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_7
2019-04-04 14:50:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_7
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_12
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_13
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_5
2019-04-04 14:50:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_7
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_8
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_8
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_14
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_15
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_6
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_8
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_9
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_9
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_16
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_17
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_9
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_7
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_9
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_10
2019-04-04 14:50:53 -Generating unique operation named: infoUsingGET_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingHEAD_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingPOST_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingPUT_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingPATCH_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingDELETE_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-04 14:50:53 -Generating unique operation named: infoUsingTRACE_1
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_10
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_18
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_19
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_9
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_10
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_11
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_20
2019-04-04 14:50:53 -Generating unique operation named: welcomeUsingGET_1
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_10
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_11
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_12
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_21
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_10
2019-04-04 14:50:53 -Generating unique operation named: treeUsingGET_1
2019-04-04 14:50:53 -Generating unique operation named: treeUsingGET_2
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_11
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_11
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_12
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_13
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_22
2019-04-04 14:50:53 -Generating unique operation named: removeUsingPOST_23
2019-04-04 14:50:53 -Generating unique operation named: saveUsingPOST_11
2019-04-04 14:50:53 -Generating unique operation named: updateUsingGET_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingHEAD_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPOST_12
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPUT_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingPATCH_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingDELETE_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-04 14:50:53 -Generating unique operation named: updateUsingTRACE_8
2019-04-04 14:50:53 -Generating unique operation named: addUsingGET_12
2019-04-04 14:50:53 -Generating unique operation named: editUsingGET_13
2019-04-04 14:50:53 -Generating unique operation named: listUsingGET_14
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_24
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_25
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingGET_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingHEAD_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_13
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPUT_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPATCH_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingDELETE_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-04 14:50:54 -Generating unique operation named: updateUsingTRACE_9
2019-04-04 14:50:54 -Generating unique operation named: addUsingGET_13
2019-04-04 14:50:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-04 14:50:54 -Generating unique operation named: editUsingGET_14
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_15
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_13
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_14
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_14
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_16
2019-04-04 14:50:54 -Generating unique operation named: listUsingHEAD_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingPOST_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingPUT_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingPATCH_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingDELETE_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingOPTIONS_1
2019-04-04 14:50:54 -Generating unique operation named: listUsingTRACE_1
2019-04-04 14:50:54 -Generating unique operation named: addUsingGET_14
2019-04-04 14:50:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-04 14:50:54 -Generating unique operation named: editUsingGET_15
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_17
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_26
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_15
2019-04-04 14:50:54 -Generating unique operation named: treeUsingGET_3
2019-04-04 14:50:54 -Generating unique operation named: treeViewUsingGET_1
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_15
2019-04-04 14:50:54 -Generating unique operation named: addUsingGET_15
2019-04-04 14:50:54 -Generating unique operation named: editUsingGET_16
2019-04-04 14:50:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_18
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_27
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_28
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_16
2019-04-04 14:50:54 -Generating unique operation named: updateUsingGET_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingHEAD_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_16
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPUT_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPATCH_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingDELETE_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-04 14:50:54 -Generating unique operation named: updateUsingTRACE_10
2019-04-04 14:50:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-04 14:50:54 -Generating unique operation named: addUsingGET_16
2019-04-04 14:50:54 -Generating unique operation named: editUsingGET_17
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_19
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_29
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_30
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_17
2019-04-04 14:50:54 -Generating unique operation named: updateUsingGET_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingHEAD_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_17
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPUT_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPATCH_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingDELETE_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-04 14:50:54 -Generating unique operation named: updateUsingTRACE_11
2019-04-04 14:50:54 -Generating unique operation named: addUsingGET_17
2019-04-04 14:50:54 -Generating unique operation named: editUsingGET_18
2019-04-04 14:50:54 -Generating unique operation named: listUsingGET_20
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_31
2019-04-04 14:50:54 -Generating unique operation named: removeUsingPOST_32
2019-04-04 14:50:54 -Generating unique operation named: saveUsingPOST_18
2019-04-04 14:50:54 -Generating unique operation named: updateUsingGET_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingHEAD_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPOST_18
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPUT_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingPATCH_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingDELETE_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-04 14:50:54 -Generating unique operation named: updateUsingTRACE_12
2019-04-04 14:50:54 -Starting Quartz Scheduler now
2019-04-04 14:50:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-04 14:50:54 -Starting...
2019-04-04 14:50:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-04 14:50:54 -Started.
2019-04-04 14:50:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-04 14:50:54 -Using a shared selector for servlet write/read
2019-04-04 14:50:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-04 14:50:54 -Started BootdoApplication in 19.272 seconds (JVM running for 20.072)
2019-04-04 14:50:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-04 14:50:54 -==> Parameters: 
2019-04-04 14:50:54 -<==      Total: 1
2019-04-04 14:51:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-04 14:57:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-04 14:57:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-04 14:57:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-04-04 14:57:11 -Enabling session validation scheduler...
2019-04-04 14:57:11 -请求地址 : http://localhost:8081/login;JSESSIONID=806b3a4f-eb60-45f3-8522-8bf44ceb6b5c
2019-04-04 14:57:11 -HTTP METHOD : GET
2019-04-04 14:57:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-04 14:57:11 -参数 : [{}]
2019-04-04 14:57:11 -耗时 : 4
2019-04-04 14:57:11 -返回值 : login
2019-04-04 14:57:13 -请求地址 : http://localhost:8081/getVerify
2019-04-04 14:57:13 -HTTP METHOD : GET
2019-04-04 14:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-04 14:57:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24142679, org.apache.shiro.web.servlet.ShiroHttpServletResponse@202bb623]
2019-04-04 14:57:13 -3578
2019-04-04 14:57:13 -耗时 : 810
2019-04-04 14:57:13 -返回值 : null
2019-04-04 14:57:18 -请求地址 : http://localhost:8081/login
2019-04-04 14:57:18 -HTTP METHOD : POST
2019-04-04 14:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-04 14:57:18 -参数 : [admin, 111111, 3578, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5231a1e6]
2019-04-04 14:57:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-04 14:57:18 -==> Parameters: admin(String)
2019-04-04 14:57:18 -<==      Total: 1
2019-04-04 14:57:18 -耗时 : 75
2019-04-04 14:57:18 -返回值 : {msg=操作成功, code=0}
2019-04-04 14:57:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-04 14:57:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:18 -==> Parameters: 1(Long), admin(String), 登录(String), 75(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-04 14:57:18.787(Timestamp)
2019-04-04 14:57:18 -请求地址 : http://localhost:8081/index
2019-04-04 14:57:18 -HTTP METHOD : GET
2019-04-04 14:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 14:57:18 -参数 : [{}]
2019-04-04 14:57:19 -<==    Updates: 1
2019-04-04 14:57:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 14:57:19 -==> Parameters: 1(Long)
2019-04-04 14:57:19 -<==      Total: 46
2019-04-04 14:57:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 14:57:19 -==> Parameters: 138(Long)
2019-04-04 14:57:19 -<==      Total: 1
2019-04-04 14:57:19 -耗时 : 595
2019-04-04 14:57:19 -返回值 : index_v1
2019-04-04 14:57:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 595(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 14:57:19.492(Timestamp)
2019-04-04 14:57:19 -请求地址 : http://localhost:8081/main
2019-04-04 14:57:19 -HTTP METHOD : GET
2019-04-04 14:57:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:57:19 -参数 : []
2019-04-04 14:57:19 -耗时 : 1
2019-04-04 14:57:19 -返回值 : main
2019-04-04 14:57:19 -<==    Updates: 1
2019-04-04 14:57:20 -请求地址 : http://localhost:8081/main
2019-04-04 14:57:20 -HTTP METHOD : GET
2019-04-04 14:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 14:57:20 -参数 : []
2019-04-04 14:57:20 -耗时 : 1
2019-04-04 14:57:20 -返回值 : main
2019-04-04 14:57:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 14:57:20 -HTTP METHOD : GET
2019-04-04 14:57:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 14:57:20 -参数 : []
2019-04-04 14:57:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 14:57:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 14:57:20 -<==      Total: 0
2019-04-04 14:57:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 14:57:20 -==> Parameters: 1(Long), 0(String)
2019-04-04 14:57:20 -<==      Total: 1
2019-04-04 14:57:20 -耗时 : 61
2019-04-04 14:57:20 -返回值 : com.bootdo.common.utils.PageUtils@6a201a50
2019-04-04 14:57:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-04 14:57:32 -==> Parameters: 1(Long)
2019-04-04 14:57:32 -<==      Total: 90
2019-04-04 14:57:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:57:32 -HTTP METHOD : GET
2019-04-04 14:57:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:57:32 -参数 : []
2019-04-04 14:57:32 -耗时 : 1
2019-04-04 14:57:32 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:57:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:32 -HTTP METHOD : GET
2019-04-04 14:57:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:32 -参数 : [userType]
2019-04-04 14:57:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:32 -==> Parameters: userType(String)
2019-04-04 14:57:32 -<==      Total: 2
2019-04-04 14:57:32 -耗时 : 33
2019-04-04 14:57:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:57:32 -HTTP METHOD : GET
2019-04-04 14:57:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:57:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:57:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:57:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:57:32 -<==      Total: 7
2019-04-04 14:57:32 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:57:32 -==> Parameters: 
2019-04-04 14:57:32 -<==      Total: 1
2019-04-04 14:57:32 -耗时 : 51
2019-04-04 14:57:32 -返回值 : com.bootdo.common.utils.PageUtils@524d5ec2
2019-04-04 14:57:34 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 14:57:34 -HTTP METHOD : GET
2019-04-04 14:57:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 14:57:34 -参数 : []
2019-04-04 14:57:34 -耗时 : 0
2019-04-04 14:57:34 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 14:57:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:34 -HTTP METHOD : GET
2019-04-04 14:57:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:34 -参数 : [userType]
2019-04-04 14:57:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:34 -==> Parameters: userType(String)
2019-04-04 14:57:34 -<==      Total: 2
2019-04-04 14:57:34 -耗时 : 4
2019-04-04 14:57:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 14:57:34 -HTTP METHOD : GET
2019-04-04 14:57:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 14:57:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 14:57:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 14:57:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:57:34 -<==      Total: 5
2019-04-04 14:57:34 -==>  Preparing: select count(*) from water_log 
2019-04-04 14:57:34 -==> Parameters: 
2019-04-04 14:57:34 -<==      Total: 1
2019-04-04 14:57:34 -耗时 : 35
2019-04-04 14:57:34 -返回值 : com.bootdo.common.utils.PageUtils@28fd4d26
2019-04-04 14:57:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:35 -HTTP METHOD : GET
2019-04-04 14:57:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:35 -参数 : []
2019-04-04 14:57:35 -耗时 : 1
2019-04-04 14:57:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:36 -HTTP METHOD : GET
2019-04-04 14:57:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:36 -参数 : [userType]
2019-04-04 14:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:36 -==> Parameters: userType(String)
2019-04-04 14:57:36 -<==      Total: 2
2019-04-04 14:57:36 -耗时 : 8
2019-04-04 14:57:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:36 -HTTP METHOD : GET
2019-04-04 14:57:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:36.409(Timestamp)
2019-04-04 14:57:36 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 120 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 122 common frames omitted
2019-04-04 14:57:36 -<==    Updates: 1
2019-04-04 14:57:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:37 -HTTP METHOD : GET
2019-04-04 14:57:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:37 -参数 : []
2019-04-04 14:57:37 -耗时 : 0
2019-04-04 14:57:37 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:37 -HTTP METHOD : GET
2019-04-04 14:57:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:37 -参数 : [userType]
2019-04-04 14:57:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:37 -==> Parameters: userType(String)
2019-04-04 14:57:37 -<==      Total: 2
2019-04-04 14:57:37 -耗时 : 4
2019-04-04 14:57:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:37 -HTTP METHOD : GET
2019-04-04 14:57:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:37.985(Timestamp)
2019-04-04 14:57:37 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 119 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 121 common frames omitted
2019-04-04 14:57:38 -<==    Updates: 1
2019-04-04 14:57:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:39 -HTTP METHOD : GET
2019-04-04 14:57:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:39 -参数 : []
2019-04-04 14:57:39 -耗时 : 1
2019-04-04 14:57:39 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:40 -HTTP METHOD : GET
2019-04-04 14:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:40 -参数 : [userType]
2019-04-04 14:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:40 -==> Parameters: userType(String)
2019-04-04 14:57:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:40 -HTTP METHOD : GET
2019-04-04 14:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:40 -<==      Total: 2
2019-04-04 14:57:40 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 119 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 121 common frames omitted
2019-04-04 14:57:40 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:40.203(Timestamp)
2019-04-04 14:57:40 -耗时 : 29
2019-04-04 14:57:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:40 -<==    Updates: 1
2019-04-04 14:57:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:40 -HTTP METHOD : GET
2019-04-04 14:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:40 -参数 : []
2019-04-04 14:57:40 -耗时 : 0
2019-04-04 14:57:40 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:41 -HTTP METHOD : GET
2019-04-04 14:57:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:41 -参数 : [userType]
2019-04-04 14:57:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:41 -==> Parameters: userType(String)
2019-04-04 14:57:41 -<==      Total: 2
2019-04-04 14:57:41 -耗时 : 5
2019-04-04 14:57:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:41 -HTTP METHOD : GET
2019-04-04 14:57:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:41.073(Timestamp)
2019-04-04 14:57:41 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:41 -<==    Updates: 1
2019-04-04 14:57:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:41 -HTTP METHOD : GET
2019-04-04 14:57:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:41 -参数 : []
2019-04-04 14:57:41 -耗时 : 0
2019-04-04 14:57:41 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:42 -HTTP METHOD : GET
2019-04-04 14:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:42 -参数 : [userType]
2019-04-04 14:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:42 -==> Parameters: userType(String)
2019-04-04 14:57:42 -<==      Total: 2
2019-04-04 14:57:42 -耗时 : 4
2019-04-04 14:57:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:42 -HTTP METHOD : GET
2019-04-04 14:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:42 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:42.099(Timestamp)
2019-04-04 14:57:42 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:42 -<==    Updates: 1
2019-04-04 14:57:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:42 -HTTP METHOD : GET
2019-04-04 14:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:42 -参数 : []
2019-04-04 14:57:42 -耗时 : 0
2019-04-04 14:57:42 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:43 -HTTP METHOD : GET
2019-04-04 14:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:43 -参数 : [userType]
2019-04-04 14:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:43 -==> Parameters: userType(String)
2019-04-04 14:57:43 -<==      Total: 2
2019-04-04 14:57:43 -耗时 : 7
2019-04-04 14:57:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:43 -HTTP METHOD : GET
2019-04-04 14:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:43 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:43.162(Timestamp)
2019-04-04 14:57:43 -<==    Updates: 1
2019-04-04 14:57:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 14:57:43 -HTTP METHOD : GET
2019-04-04 14:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 14:57:43 -参数 : []
2019-04-04 14:57:43 -耗时 : 1
2019-04-04 14:57:43 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 14:57:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:44 -HTTP METHOD : GET
2019-04-04 14:57:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:44 -参数 : [userType]
2019-04-04 14:57:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:44 -==> Parameters: userType(String)
2019-04-04 14:57:44 -<==      Total: 2
2019-04-04 14:57:44 -耗时 : 4
2019-04-04 14:57:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 14:57:44 -HTTP METHOD : GET
2019-04-04 14:57:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 14:57:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 14:57:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 14:57:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 14:57:44 -<==      Total: 7
2019-04-04 14:57:44 -==>  Preparing: select count(*) from elec_log 
2019-04-04 14:57:44 -==> Parameters: 
2019-04-04 14:57:44 -<==      Total: 1
2019-04-04 14:57:44 -耗时 : 10
2019-04-04 14:57:44 -返回值 : com.bootdo.common.utils.PageUtils@79f074b9
2019-04-04 14:57:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:46 -HTTP METHOD : GET
2019-04-04 14:57:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:46 -参数 : []
2019-04-04 14:57:46 -耗时 : 0
2019-04-04 14:57:46 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:47 -HTTP METHOD : GET
2019-04-04 14:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:47 -参数 : [userType]
2019-04-04 14:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:47 -==> Parameters: userType(String)
2019-04-04 14:57:47 -<==      Total: 2
2019-04-04 14:57:47 -耗时 : 4
2019-04-04 14:57:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:47 -HTTP METHOD : GET
2019-04-04 14:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:47 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:47.18(Timestamp)
2019-04-04 14:57:47 -<==    Updates: 1
2019-04-04 14:57:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:47 -HTTP METHOD : GET
2019-04-04 14:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:47 -参数 : []
2019-04-04 14:57:47 -耗时 : 1
2019-04-04 14:57:47 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:47 -HTTP METHOD : GET
2019-04-04 14:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:47 -参数 : [userType]
2019-04-04 14:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:47 -==> Parameters: userType(String)
2019-04-04 14:57:47 -<==      Total: 2
2019-04-04 14:57:47 -耗时 : 5
2019-04-04 14:57:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:47 -HTTP METHOD : GET
2019-04-04 14:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:47 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:47.931(Timestamp)
2019-04-04 14:57:48 -<==    Updates: 1
2019-04-04 14:57:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:48 -HTTP METHOD : GET
2019-04-04 14:57:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:48 -参数 : []
2019-04-04 14:57:48 -耗时 : 0
2019-04-04 14:57:48 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:48 -HTTP METHOD : GET
2019-04-04 14:57:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:48 -参数 : [userType]
2019-04-04 14:57:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:48 -==> Parameters: userType(String)
2019-04-04 14:57:48 -<==      Total: 2
2019-04-04 14:57:48 -耗时 : 5
2019-04-04 14:57:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:48 -HTTP METHOD : GET
2019-04-04 14:57:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:48.57(Timestamp)
2019-04-04 14:57:48 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:48 -HTTP METHOD : GET
2019-04-04 14:57:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:48 -参数 : []
2019-04-04 14:57:48 -耗时 : 0
2019-04-04 14:57:48 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:48 -<==    Updates: 1
2019-04-04 14:57:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:48 -HTTP METHOD : GET
2019-04-04 14:57:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:48 -参数 : [userType]
2019-04-04 14:57:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:49 -==> Parameters: userType(String)
2019-04-04 14:57:49 -<==      Total: 2
2019-04-04 14:57:49 -耗时 : 3
2019-04-04 14:57:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:49 -HTTP METHOD : GET
2019-04-04 14:57:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:49.023(Timestamp)
2019-04-04 14:57:49 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:49 -<==    Updates: 1
2019-04-04 14:57:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 14:57:50 -HTTP METHOD : GET
2019-04-04 14:57:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 14:57:50 -参数 : []
2019-04-04 14:57:50 -耗时 : 0
2019-04-04 14:57:50 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 14:57:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 14:57:50 -HTTP METHOD : GET
2019-04-04 14:57:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 14:57:50 -参数 : [userType]
2019-04-04 14:57:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 14:57:50 -==> Parameters: userType(String)
2019-04-04 14:57:50 -<==      Total: 2
2019-04-04 14:57:50 -耗时 : 4
2019-04-04 14:57:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 14:57:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 14:57:50 -HTTP METHOD : GET
2019-04-04 14:57:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 14:57:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 14:57:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 14:57:50 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 14:57:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 14:57:50.62(Timestamp)
2019-04-04 14:57:50 -<==    Updates: 1
2019-04-04 15:00:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:00:33 -HTTP METHOD : GET
2019-04-04 15:00:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:00:33 -参数 : []
2019-04-04 15:00:33 -耗时 : 0
2019-04-04 15:00:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:00:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:00:33 -HTTP METHOD : GET
2019-04-04 15:00:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:00:33 -参数 : [userType]
2019-04-04 15:00:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:00:33 -==> Parameters: userType(String)
2019-04-04 15:00:33 -<==      Total: 2
2019-04-04 15:00:33 -耗时 : 6
2019-04-04 15:00:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:00:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:00:33 -HTTP METHOD : GET
2019-04-04 15:00:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:00:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:00:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:00:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:00:33.47(Timestamp)
2019-04-04 15:00:33 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 15:00:33 -<==    Updates: 1
2019-04-04 15:02:08 -请求地址 : http://localhost:8081/index
2019-04-04 15:02:08 -HTTP METHOD : GET
2019-04-04 15:02:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-04 15:02:08 -参数 : [{}]
2019-04-04 15:02:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-04 15:02:08 -==> Parameters: 1(Long)
2019-04-04 15:02:08 -<==      Total: 46
2019-04-04 15:02:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-04 15:02:08 -==> Parameters: 138(Long)
2019-04-04 15:02:08 -<==      Total: 1
2019-04-04 15:02:08 -耗时 : 32
2019-04-04 15:02:08 -返回值 : index_v1
2019-04-04 15:02:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-04 15:02:08.722(Timestamp)
2019-04-04 15:02:09 -<==    Updates: 1
2019-04-04 15:02:09 -请求地址 : http://localhost:8081/main
2019-04-04 15:02:09 -HTTP METHOD : GET
2019-04-04 15:02:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 15:02:09 -参数 : []
2019-04-04 15:02:09 -耗时 : 0
2019-04-04 15:02:09 -返回值 : main
2019-04-04 15:02:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-04 15:02:09 -HTTP METHOD : GET
2019-04-04 15:02:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-04 15:02:09 -参数 : []
2019-04-04 15:02:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-04 15:02:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-04 15:02:09 -<==      Total: 0
2019-04-04 15:02:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-04 15:02:09 -==> Parameters: 1(Long), 0(String)
2019-04-04 15:02:09 -<==      Total: 1
2019-04-04 15:02:09 -耗时 : 6
2019-04-04 15:02:09 -返回值 : com.bootdo.common.utils.PageUtils@1db71a0a
2019-04-04 15:02:09 -请求地址 : http://localhost:8081/main
2019-04-04 15:02:09 -HTTP METHOD : GET
2019-04-04 15:02:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-04 15:02:09 -参数 : []
2019-04-04 15:02:09 -耗时 : 1
2019-04-04 15:02:09 -返回值 : main
2019-04-04 15:02:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-04 15:02:11 -HTTP METHOD : GET
2019-04-04 15:02:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-04 15:02:11 -参数 : []
2019-04-04 15:02:11 -耗时 : 1
2019-04-04 15:02:11 -返回值 : /moneyLog/elecLog/elecLog
2019-04-04 15:02:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:11 -HTTP METHOD : GET
2019-04-04 15:02:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:11 -参数 : [userType]
2019-04-04 15:02:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:11 -==> Parameters: userType(String)
2019-04-04 15:02:11 -<==      Total: 2
2019-04-04 15:02:11 -耗时 : 4
2019-04-04 15:02:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-04 15:02:11 -HTTP METHOD : GET
2019-04-04 15:02:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-04 15:02:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-04 15:02:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-04 15:02:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 15:02:11 -<==      Total: 7
2019-04-04 15:02:11 -==>  Preparing: select count(*) from elec_log 
2019-04-04 15:02:11 -==> Parameters: 
2019-04-04 15:02:11 -<==      Total: 1
2019-04-04 15:02:11 -耗时 : 22
2019-04-04 15:02:11 -返回值 : com.bootdo.common.utils.PageUtils@64eacc0b
2019-04-04 15:02:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-04 15:02:12 -HTTP METHOD : GET
2019-04-04 15:02:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-04 15:02:12 -参数 : []
2019-04-04 15:02:12 -耗时 : 0
2019-04-04 15:02:12 -返回值 : /moneyLog/waterLog/waterLog
2019-04-04 15:02:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:12 -HTTP METHOD : GET
2019-04-04 15:02:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:12 -参数 : [userType]
2019-04-04 15:02:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:12 -==> Parameters: userType(String)
2019-04-04 15:02:12 -<==      Total: 2
2019-04-04 15:02:12 -耗时 : 5
2019-04-04 15:02:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-04 15:02:12 -HTTP METHOD : GET
2019-04-04 15:02:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-04 15:02:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-04 15:02:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-04 15:02:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-04 15:02:12 -<==      Total: 5
2019-04-04 15:02:12 -==>  Preparing: select count(*) from water_log 
2019-04-04 15:02:12 -==> Parameters: 
2019-04-04 15:02:12 -<==      Total: 1
2019-04-04 15:02:12 -耗时 : 11
2019-04-04 15:02:12 -返回值 : com.bootdo.common.utils.PageUtils@e0d691b
2019-04-04 15:02:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:13 -HTTP METHOD : GET
2019-04-04 15:02:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:13 -参数 : []
2019-04-04 15:02:13 -耗时 : 0
2019-04-04 15:02:13 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:13 -HTTP METHOD : GET
2019-04-04 15:02:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:13 -参数 : [userType]
2019-04-04 15:02:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:13 -==> Parameters: userType(String)
2019-04-04 15:02:13 -<==      Total: 2
2019-04-04 15:02:13 -耗时 : 3
2019-04-04 15:02:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:13 -HTTP METHOD : GET
2019-04-04 15:02:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:13 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 15:02:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:13.858(Timestamp)
2019-04-04 15:02:13 -<==    Updates: 1
2019-04-04 15:02:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:14 -HTTP METHOD : GET
2019-04-04 15:02:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:14 -参数 : []
2019-04-04 15:02:14 -耗时 : 2
2019-04-04 15:02:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:15 -HTTP METHOD : GET
2019-04-04 15:02:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:15 -参数 : [userType]
2019-04-04 15:02:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:15 -==> Parameters: userType(String)
2019-04-04 15:02:15 -<==      Total: 2
2019-04-04 15:02:15 -耗时 : 3
2019-04-04 15:02:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:15 -HTTP METHOD : GET
2019-04-04 15:02:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:15.171(Timestamp)
2019-04-04 15:02:15 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 15:02:15 -<==    Updates: 1
2019-04-04 15:02:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:16 -HTTP METHOD : GET
2019-04-04 15:02:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:16 -参数 : []
2019-04-04 15:02:16 -耗时 : 0
2019-04-04 15:02:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:16 -HTTP METHOD : GET
2019-04-04 15:02:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:16 -参数 : [userType]
2019-04-04 15:02:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:16 -==> Parameters: userType(String)
2019-04-04 15:02:16 -<==      Total: 2
2019-04-04 15:02:16 -耗时 : 4
2019-04-04 15:02:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:16 -HTTP METHOD : GET
2019-04-04 15:02:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:16.608(Timestamp)
2019-04-04 15:02:16 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 15:02:16 -<==    Updates: 1
2019-04-04 15:02:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:17 -HTTP METHOD : GET
2019-04-04 15:02:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:17 -参数 : []
2019-04-04 15:02:17 -耗时 : 1
2019-04-04 15:02:17 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:17 -HTTP METHOD : GET
2019-04-04 15:02:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:17 -参数 : [userType]
2019-04-04 15:02:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:17 -==> Parameters: userType(String)
2019-04-04 15:02:17 -<==      Total: 2
2019-04-04 15:02:17 -耗时 : 4
2019-04-04 15:02:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:17 -HTTP METHOD : GET
2019-04-04 15:02:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:17.616(Timestamp)
2019-04-04 15:02:17 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 118 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 120 common frames omitted
2019-04-04 15:02:17 -<==    Updates: 1
2019-04-04 15:02:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:17 -HTTP METHOD : GET
2019-04-04 15:02:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:17 -参数 : []
2019-04-04 15:02:17 -耗时 : 1
2019-04-04 15:02:17 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:18 -HTTP METHOD : GET
2019-04-04 15:02:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:18 -参数 : [userType]
2019-04-04 15:02:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:18 -==> Parameters: userType(String)
2019-04-04 15:02:18 -<==      Total: 2
2019-04-04 15:02:18 -耗时 : 3
2019-04-04 15:02:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:18 -HTTP METHOD : GET
2019-04-04 15:02:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:18.255(Timestamp)
2019-04-04 15:02:18 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 117 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 119 common frames omitted
2019-04-04 15:02:18 -<==    Updates: 1
2019-04-04 15:02:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:18 -HTTP METHOD : GET
2019-04-04 15:02:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:18 -参数 : []
2019-04-04 15:02:18 -耗时 : 0
2019-04-04 15:02:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:19 -HTTP METHOD : GET
2019-04-04 15:02:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:19 -参数 : [userType]
2019-04-04 15:02:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:19 -==> Parameters: userType(String)
2019-04-04 15:02:19 -<==      Total: 2
2019-04-04 15:02:19 -耗时 : 4
2019-04-04 15:02:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:19 -HTTP METHOD : GET
2019-04-04 15:02:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:19 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 117 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 119 common frames omitted
2019-04-04 15:02:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:19.201(Timestamp)
2019-04-04 15:02:19 -<==    Updates: 1
2019-04-04 15:02:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:19 -HTTP METHOD : GET
2019-04-04 15:02:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:19 -参数 : []
2019-04-04 15:02:19 -耗时 : 1
2019-04-04 15:02:19 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:20 -HTTP METHOD : GET
2019-04-04 15:02:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:20 -参数 : [userType]
2019-04-04 15:02:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:20 -==> Parameters: userType(String)
2019-04-04 15:02:20 -<==      Total: 2
2019-04-04 15:02:20 -耗时 : 5
2019-04-04 15:02:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:20 -HTTP METHOD : GET
2019-04-04 15:02:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:20.217(Timestamp)
2019-04-04 15:02:20 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 117 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 119 common frames omitted
2019-04-04 15:02:20 -<==    Updates: 1
2019-04-04 15:02:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:02:21 -HTTP METHOD : GET
2019-04-04 15:02:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:02:21 -参数 : []
2019-04-04 15:02:21 -耗时 : 1
2019-04-04 15:02:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:02:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:02:21 -HTTP METHOD : GET
2019-04-04 15:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:02:21 -参数 : [userType]
2019-04-04 15:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:02:21 -==> Parameters: userType(String)
2019-04-04 15:02:21 -<==      Total: 2
2019-04-04 15:02:21 -耗时 : 3
2019-04-04 15:02:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:02:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:02:21 -HTTP METHOD : GET
2019-04-04 15:02:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:02:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:02:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:02:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:02:21.416(Timestamp)
2019-04-04 15:02:21 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 117 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 119 common frames omitted
2019-04-04 15:02:21 -<==    Updates: 1
2019-04-04 15:07:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-04 15:07:19 -HTTP METHOD : GET
2019-04-04 15:07:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-04 15:07:19 -参数 : []
2019-04-04 15:07:19 -耗时 : 1
2019-04-04 15:07:19 -返回值 : /moneyLog/heatLog/heatLog
2019-04-04 15:07:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-04 15:07:20 -HTTP METHOD : GET
2019-04-04 15:07:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-04 15:07:20 -参数 : [userType]
2019-04-04 15:07:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-04 15:07:20 -==> Parameters: userType(String)
2019-04-04 15:07:20 -<==      Total: 2
2019-04-04 15:07:20 -耗时 : 5
2019-04-04 15:07:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-04 15:07:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-04 15:07:20 -HTTP METHOD : GET
2019-04-04 15:07:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-04 15:07:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-04 15:07:20 -nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.list(HeatLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.HeatLogController.list(HeatLogController.java:70)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$da261840.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor211.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ]
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:46)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:81)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and 
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:112)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.parseExpression(OgnlCache.java:53)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	... 117 common frames omitted
Caused by: org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    
	at org.apache.ibatis.ognl.OgnlParser.generateParseException(OgnlParser.java:3172)
	at org.apache.ibatis.ognl.OgnlParser.jj_consume_token(OgnlParser.java:3051)
	at org.apache.ibatis.ognl.OgnlParser.unaryExpression(OgnlParser.java:1236)
	at org.apache.ibatis.ognl.OgnlParser.multiplicativeExpression(OgnlParser.java:971)
	at org.apache.ibatis.ognl.OgnlParser.additiveExpression(OgnlParser.java:894)
	at org.apache.ibatis.ognl.OgnlParser.shiftExpression(OgnlParser.java:750)
	at org.apache.ibatis.ognl.OgnlParser.relationalExpression(OgnlParser.java:508)
	at org.apache.ibatis.ognl.OgnlParser.equalityExpression(OgnlParser.java:405)
	at org.apache.ibatis.ognl.OgnlParser.andExpression(OgnlParser.java:352)
	at org.apache.ibatis.ognl.OgnlParser.exclusiveOrExpression(OgnlParser.java:299)
	at org.apache.ibatis.ognl.OgnlParser.inclusiveOrExpression(OgnlParser.java:246)
	at org.apache.ibatis.ognl.OgnlParser.logicalAndExpression(OgnlParser.java:221)
	at org.apache.ibatis.ognl.OgnlParser.logicalOrExpression(OgnlParser.java:140)
	at org.apache.ibatis.ognl.OgnlParser.conditionalTestExpression(OgnlParser.java:101)
	at org.apache.ibatis.ognl.OgnlParser.assignmentExpression(OgnlParser.java:64)
	at org.apache.ibatis.ognl.OgnlParser.expression(OgnlParser.java:23)
	at org.apache.ibatis.ognl.OgnlParser.topLevelExpression(OgnlParser.java:15)
	at org.apache.ibatis.ognl.Ognl.parseExpression(Ognl.java:110)
	... 119 common frames omitted
2019-04-04 15:07:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-04 15:07:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/list(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.builder.BuilderException: Error evaluating expression 'updateTime != null and '. Cause: org.apache.ibatis.ognl.ExpressionSyntaxException: Malformed OGNL expression: updateTime != null and  [org.apache.ibatis.ognl.ParseException: Encountered "<EOF>" at line 1, column 23.
Was expecting one of:
    ":" ...
    "not" ...
    "+" ...
    "-" ...
    "~" ...
    "!" ...
    "(" ...
    "true" ...
    "false" ...
    "null" ...
    "#this" ...
    "#root" ...
    "#" ...
    "[" ...
    "{" ...
    "@" ...
    "new" ...
    <IDENT> ...
    <DYNAMIC_SUBSCRIPT> ...
    "\'" ...
    "`" ...
    "\"" ...
    <INT_LITERAL> ...
    <FLT_LITERAL> ...
    ](String), null, 2019-04-04 15:07:20.148(Timestamp)
2019-04-04 15:07:20 -<==    Updates: 1

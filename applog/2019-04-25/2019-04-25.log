2019-04-25 08:21:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 10376 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 08:21:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 08:21:38 -The following profiles are active: dev
2019-04-25 08:21:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 08:21:38 CST 2019]; root of context hierarchy
2019-04-25 08:21:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 08:21:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 08:21:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 08:21:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:21:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 08:21:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 08:21:57 -Starting service [Tomcat]
2019-04-25 08:21:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 08:21:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 08:21:57 -Initializing Spring embedded WebApplicationContext
2019-04-25 08:21:57 -Root WebApplicationContext: initialization completed in 19393 ms
2019-04-25 08:21:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 08:21:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 08:21:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 08:21:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 08:21:58 -Filter xssFilter was not registered (disabled)
2019-04-25 08:21:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 08:21:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 08:21:58 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 08:21:58 -Servlet dispatcherServlet mapped to [/]
2019-04-25 08:22:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 08:21:38 CST 2019]; root of context hierarchy
2019-04-25 08:22:04 -Using default implementation for ThreadExecutor
2019-04-25 08:22:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 08:22:04 -Quartz Scheduler v.2.2.1 created.
2019-04-25 08:22:04 -RAMJobStore initialized.
2019-04-25 08:22:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 08:22:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 08:22:04 -Quartz scheduler version: 2.2.1
2019-04-25 08:22:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e0d16a4
2019-04-25 08:22:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 08:22:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 08:22:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 08:22:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 08:22:07 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 08:22:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 08:22:07 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 08:22:07 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 08:22:07 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 08:22:07 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 08:22:07 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 08:22:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 08:22:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 08:22:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 08:22:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 08:22:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 08:22:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 08:22:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 08:22:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 08:22:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 08:22:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 08:22:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 08:22:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 08:22:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 08:22:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 08:22:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 08:22:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 08:22:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 08:22:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 08:22:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 08:22:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 08:22:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 08:22:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 08:22:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 08:22:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 08:22:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 08:22:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 08:22:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 08:22:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 08:22:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 08:22:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 08:22:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 08:22:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 08:22:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 08:22:07 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 08:22:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 08:22:07 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:22:07 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:22:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 08:22:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 08:22:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 08:22:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 08:22:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 08:22:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 08:22:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 08:22:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 08:22:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 08:22:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 08:22:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 08:22:07 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 08:22:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 08:22:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 08:22:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 08:22:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 08:22:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 08:22:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 08:22:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 08:22:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 08:22:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 08:22:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 08:22:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 08:22:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 08:22:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 08:22:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 08:22:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 08:22:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 08:22:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 08:22:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 08:22:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 08:22:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 08:22:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 08:22:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 08:22:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 08:22:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 08:22:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 08:22:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 08:22:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 08:22:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 08:22:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 08:22:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:22:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 08:22:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 08:22:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:22:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 08:22:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 08:22:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:22:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 08:22:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 08:22:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 08:22:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 08:22:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 08:22:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 08:22:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:22:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 08:21:38 CST 2019]; root of context hierarchy
2019-04-25 08:22:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:22:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:22:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:22:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 08:22:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 08:22:13 -Registering beans for JMX exposure on startup
2019-04-25 08:22:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 08:22:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 08:22:13 -Starting beans in phase 2147483647
2019-04-25 08:22:13 -Context refreshed
2019-04-25 08:22:13 -Found 1 custom documentation plugin(s)
2019-04-25 08:22:13 -Scanning for api listing references
2019-04-25 08:22:14 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_1
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_2
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_3
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPUT_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 08:22:14 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_2
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_2
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_2
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_4
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_5
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_2
2019-04-25 08:22:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_3
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_3
2019-04-25 08:22:14 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_3
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_6
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_7
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingGET_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPUT_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 08:22:14 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_4
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_4
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_4
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_8
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_9
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingGET_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPUT_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 08:22:14 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 08:22:14 -Generating unique operation named: ElecUsingGET_1
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_5
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_5
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_5
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_10
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_11
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingGET_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPUT_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 08:22:14 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_6
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_6
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_6
2019-04-25 08:22:14 -Generating unique operation named: addUsingGET_6
2019-04-25 08:22:14 -Generating unique operation named: editUsingGET_7
2019-04-25 08:22:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 08:22:14 -Generating unique operation named: listUsingGET_7
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_12
2019-04-25 08:22:14 -Generating unique operation named: removeUsingPOST_13
2019-04-25 08:22:14 -Generating unique operation named: saveUsingPOST_6
2019-04-25 08:22:14 -Generating unique operation named: updateUsingGET_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPOST_7
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPUT_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 08:22:14 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 08:22:14 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_7
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_8
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_8
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_14
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_15
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingGET_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPUT_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 08:22:15 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_8
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_9
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_9
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_16
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_17
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingGET_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPUT_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 08:22:15 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_9
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_10
2019-04-25 08:22:15 -Generating unique operation named: infoUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingPOST_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingPUT_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 08:22:15 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_10
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_18
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_19
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_10
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_11
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_20
2019-04-25 08:22:15 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_10
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_11
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_12
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_21
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_10
2019-04-25 08:22:15 -Generating unique operation named: treeUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: treeUsingGET_2
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_11
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_11
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_12
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_13
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_22
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_23
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_11
2019-04-25 08:22:15 -Generating unique operation named: updateUsingGET_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_12
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPUT_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 08:22:15 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_12
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_13
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_14
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_24
2019-04-25 08:22:15 -Generating unique operation named: removeUsingPOST_25
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_12
2019-04-25 08:22:15 -Generating unique operation named: updateUsingGET_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_13
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPUT_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 08:22:15 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_13
2019-04-25 08:22:15 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_14
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_15
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_13
2019-04-25 08:22:15 -Generating unique operation named: saveUsingPOST_14
2019-04-25 08:22:15 -Generating unique operation named: updateUsingPOST_14
2019-04-25 08:22:15 -Generating unique operation named: listUsingGET_16
2019-04-25 08:22:15 -Generating unique operation named: listUsingHEAD_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingPOST_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingPUT_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingPATCH_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingDELETE_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 08:22:15 -Generating unique operation named: listUsingTRACE_1
2019-04-25 08:22:15 -Generating unique operation named: countDDUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 08:22:15 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 08:22:15 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 08:22:15 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 08:22:15 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 08:22:15 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 08:22:15 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 08:22:15 -Generating unique operation named: addUsingGET_14
2019-04-25 08:22:15 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 08:22:15 -Generating unique operation named: editUsingGET_15
2019-04-25 08:22:16 -Generating unique operation named: listUsingGET_17
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_26
2019-04-25 08:22:16 -Generating unique operation named: saveUsingPOST_15
2019-04-25 08:22:16 -Generating unique operation named: treeUsingGET_3
2019-04-25 08:22:16 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPOST_15
2019-04-25 08:22:16 -Generating unique operation named: addUsingGET_15
2019-04-25 08:22:16 -Generating unique operation named: editUsingGET_16
2019-04-25 08:22:16 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 08:22:16 -Generating unique operation named: listUsingGET_18
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_27
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_28
2019-04-25 08:22:16 -Generating unique operation named: saveUsingPOST_16
2019-04-25 08:22:16 -Generating unique operation named: updateUsingGET_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPOST_16
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPUT_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 08:22:16 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 08:22:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 08:22:16 -Generating unique operation named: addUsingGET_16
2019-04-25 08:22:16 -Generating unique operation named: editUsingGET_17
2019-04-25 08:22:16 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 08:22:16 -Generating unique operation named: listUsingGET_19
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_29
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_30
2019-04-25 08:22:16 -Generating unique operation named: saveUsingPOST_17
2019-04-25 08:22:16 -Generating unique operation named: updateUsingGET_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPOST_17
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPUT_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 08:22:16 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 08:22:16 -Generating unique operation named: addUsingGET_17
2019-04-25 08:22:16 -Generating unique operation named: editUsingGET_18
2019-04-25 08:22:16 -Generating unique operation named: listUsingGET_20
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_31
2019-04-25 08:22:16 -Generating unique operation named: removeUsingPOST_32
2019-04-25 08:22:16 -Generating unique operation named: saveUsingPOST_18
2019-04-25 08:22:16 -Generating unique operation named: updateUsingGET_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPOST_18
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPUT_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 08:22:16 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 08:22:16 -Starting Quartz Scheduler now
2019-04-25 08:22:16 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 08:22:16 -Starting...
2019-04-25 08:22:16 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 08:22:16 -Started.
2019-04-25 08:22:16 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 08:22:16 -Using a shared selector for servlet write/read
2019-04-25 08:22:16 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 08:22:16 -Started BootdoApplication in 39.401 seconds (JVM running for 40.216)
2019-04-25 08:22:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 08:22:17 -==> Parameters: 
2019-04-25 08:22:17 -<==      Total: 1
2019-04-25 08:22:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 08:22:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 08:22:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-04-25 08:22:34 -Enabling session validation scheduler...
2019-04-25 08:22:34 -请求地址 : http://localhost:8081/login;JSESSIONID=b9dbf7bf-d956-4e12-b01d-963feac0db4e
2019-04-25 08:22:34 -HTTP METHOD : GET
2019-04-25 08:22:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 08:22:34 -参数 : [{}]
2019-04-25 08:22:34 -耗时 : 4
2019-04-25 08:22:34 -返回值 : login
2019-04-25 08:22:39 -请求地址 : http://localhost:8081/getVerify
2019-04-25 08:22:39 -HTTP METHOD : GET
2019-04-25 08:22:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 08:22:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c5c3955, org.apache.shiro.web.servlet.ShiroHttpServletResponse@79a4e03b]
2019-04-25 08:22:52 -0183
2019-04-25 08:22:53 -耗时 : 13821
2019-04-25 08:22:53 -返回值 : null
2019-04-25 08:23:00 -请求地址 : http://localhost:8081/login
2019-04-25 08:23:00 -HTTP METHOD : POST
2019-04-25 08:23:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 08:23:00 -参数 : [admin, 111111, 0183, org.apache.shiro.web.servlet.ShiroHttpServletRequest@50e2a13f]
2019-04-25 08:23:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 08:23:00 -==> Parameters: admin(String)
2019-04-25 08:23:00 -<==      Total: 1
2019-04-25 08:23:00 -耗时 : 397
2019-04-25 08:23:00 -返回值 : {msg=操作成功, code=0}
2019-04-25 08:23:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 08:23:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:23:01 -==> Parameters: 1(Long), admin(String), 登录(String), 398(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 08:23:01.131(Timestamp)
2019-04-25 08:23:01 -<==    Updates: 1
2019-04-25 08:23:01 -请求地址 : http://localhost:8081/index
2019-04-25 08:23:01 -HTTP METHOD : GET
2019-04-25 08:23:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 08:23:01 -参数 : [{}]
2019-04-25 08:23:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 08:23:02 -==> Parameters: 1(Long)
2019-04-25 08:23:02 -<==      Total: 49
2019-04-25 08:23:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 08:23:02 -==> Parameters: 138(Long)
2019-04-25 08:23:02 -<==      Total: 1
2019-04-25 08:23:02 -耗时 : 452
2019-04-25 08:23:02 -返回值 : index_v1
2019-04-25 08:23:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:23:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 453(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 08:23:02.317(Timestamp)
2019-04-25 08:23:02 -<==    Updates: 1
2019-04-25 08:23:02 -请求地址 : http://localhost:8081/main
2019-04-25 08:23:02 -HTTP METHOD : GET
2019-04-25 08:23:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:23:02 -参数 : []
2019-04-25 08:23:02 -耗时 : 1
2019-04-25 08:23:02 -返回值 : main
2019-04-25 08:23:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 08:23:07 -HTTP METHOD : GET
2019-04-25 08:23:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 08:23:07 -参数 : []
2019-04-25 08:23:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 08:23:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 08:23:07 -<==      Total: 0
2019-04-25 08:23:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 08:23:07 -==> Parameters: 1(Long), 0(String)
2019-04-25 08:23:07 -<==      Total: 1
2019-04-25 08:23:07 -耗时 : 35
2019-04-25 08:23:07 -返回值 : com.bootdo.common.utils.PageUtils@662ece6a
2019-04-25 08:23:07 -请求地址 : http://localhost:8081/main
2019-04-25 08:23:07 -HTTP METHOD : GET
2019-04-25 08:23:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:23:07 -参数 : []
2019-04-25 08:23:07 -耗时 : 1
2019-04-25 08:23:07 -返回值 : main
2019-04-25 08:23:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-25 08:25:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 08:25:22 -==> Parameters: 1(Long)
2019-04-25 08:25:22 -<==      Total: 93
2019-04-25 08:25:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 08:25:22 -HTTP METHOD : GET
2019-04-25 08:25:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 08:25:22 -参数 : []
2019-04-25 08:25:22 -耗时 : 12
2019-04-25 08:25:22 -返回值 : charts/tableElecMM
2019-04-25 08:25:24 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 08:25:24 -HTTP METHOD : GET
2019-04-25 08:25:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 08:25:24 -参数 : []
2019-04-25 08:25:24 -耗时 : 11
2019-04-25 08:25:24 -返回值 : charts/tableWaterMM
2019-04-25 08:25:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 08:25:32 -HTTP METHOD : GET
2019-04-25 08:25:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 08:25:32 -参数 : []
2019-04-25 08:25:32 -耗时 : 2
2019-04-25 08:25:32 -返回值 : system/dept/deptTree
2019-04-25 08:25:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 08:25:33 -HTTP METHOD : GET
2019-04-25 08:25:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 08:25:33 -参数 : []
2019-04-25 08:25:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 08:25:33 -==> Parameters: 
2019-04-25 08:25:33 -<==      Total: 3
2019-04-25 08:25:33 -耗时 : 23
2019-04-25 08:25:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 08:25:35 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:25:35 -HTTP METHOD : POST
2019-04-25 08:25:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:25:35 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1eff9b93, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@36205566, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@1eff9b93, com.bootdo.water.vo.WaterVo@36205566]
2019-04-25 08:25:35 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:25:35 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:25:35 -<==      Total: 2
2019-04-25 08:25:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:25:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:25:35.835(Timestamp)
2019-04-25 08:25:35 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$410ca4ce.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-04-25 08:25:35 -<==    Updates: 1
2019-04-25 08:43:03 -请求地址 : http://localhost:8081/index
2019-04-25 08:43:03 -HTTP METHOD : GET
2019-04-25 08:43:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 08:43:03 -参数 : [{}]
2019-04-25 08:43:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 08:43:03 -==> Parameters: 1(Long)
2019-04-25 08:43:03 -<==      Total: 49
2019-04-25 08:43:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 08:43:03 -==> Parameters: 138(Long)
2019-04-25 08:43:03 -<==      Total: 1
2019-04-25 08:43:03 -耗时 : 28
2019-04-25 08:43:03 -返回值 : index_v1
2019-04-25 08:43:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:43:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 08:43:03.101(Timestamp)
2019-04-25 08:43:03 -<==    Updates: 1
2019-04-25 08:43:03 -请求地址 : http://localhost:8081/main
2019-04-25 08:43:03 -HTTP METHOD : GET
2019-04-25 08:43:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:43:03 -参数 : []
2019-04-25 08:43:03 -耗时 : 1
2019-04-25 08:43:03 -返回值 : main
2019-04-25 08:43:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 08:43:03 -HTTP METHOD : GET
2019-04-25 08:43:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 08:43:03 -参数 : []
2019-04-25 08:43:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 08:43:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 08:43:03 -<==      Total: 0
2019-04-25 08:43:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 08:43:03 -==> Parameters: 1(Long), 0(String)
2019-04-25 08:43:03 -<==      Total: 1
2019-04-25 08:43:03 -耗时 : 10
2019-04-25 08:43:03 -返回值 : com.bootdo.common.utils.PageUtils@792527fc
2019-04-25 08:43:03 -请求地址 : http://localhost:8081/main
2019-04-25 08:43:03 -HTTP METHOD : GET
2019-04-25 08:43:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:43:03 -参数 : []
2019-04-25 08:43:03 -耗时 : 1
2019-04-25 08:43:03 -返回值 : main
2019-04-25 08:43:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 08:43:10 -==> Parameters: 1(Long)
2019-04-25 08:43:10 -<==      Total: 93
2019-04-25 08:43:10 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 08:43:10 -HTTP METHOD : GET
2019-04-25 08:43:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 08:43:10 -参数 : []
2019-04-25 08:43:10 -耗时 : 0
2019-04-25 08:43:10 -返回值 : charts/tableElecMM
2019-04-25 08:43:11 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 08:43:11 -HTTP METHOD : GET
2019-04-25 08:43:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 08:43:11 -参数 : []
2019-04-25 08:43:11 -耗时 : 1
2019-04-25 08:43:11 -返回值 : charts/tableWaterMM
2019-04-25 08:43:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 08:43:17 -HTTP METHOD : GET
2019-04-25 08:43:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 08:43:17 -参数 : []
2019-04-25 08:43:17 -耗时 : 1
2019-04-25 08:43:17 -返回值 : system/dept/deptTree
2019-04-25 08:43:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 08:43:17 -HTTP METHOD : GET
2019-04-25 08:43:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 08:43:17 -参数 : []
2019-04-25 08:43:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 08:43:17 -==> Parameters: 
2019-04-25 08:43:17 -<==      Total: 3
2019-04-25 08:43:17 -耗时 : 4
2019-04-25 08:43:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 08:43:21 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:43:21 -HTTP METHOD : POST
2019-04-25 08:43:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:43:21 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@2d4b9f43, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@b21bb0e, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@2d4b9f43, com.bootdo.water.vo.WaterVo@b21bb0e]
2019-04-25 08:43:21 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:43:21 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:43:21 -<==      Total: 2
2019-04-25 08:43:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:43:21 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$410ca4ce.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-25 08:43:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:43:21.369(Timestamp)
2019-04-25 08:43:21 -<==    Updates: 1
2019-04-25 08:43:22 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:43:22 -HTTP METHOD : POST
2019-04-25 08:43:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:43:22 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@636559a6, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@528fe47c, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@636559a6, com.bootdo.water.vo.WaterVo@528fe47c]
2019-04-25 08:43:22 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:43:22 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:43:22 -<==      Total: 2
2019-04-25 08:43:22 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$410ca4ce.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-25 08:43:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:43:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:43:22.489(Timestamp)
2019-04-25 08:43:22 -<==    Updates: 1
2019-04-25 08:43:23 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:43:23 -HTTP METHOD : POST
2019-04-25 08:43:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:43:23 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@739c856e, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@5a79a8c6, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@739c856e, com.bootdo.water.vo.WaterVo@5a79a8c6]
2019-04-25 08:43:23 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:43:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:43:23 -<==      Total: 2
2019-04-25 08:43:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:43:23 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$410ca4ce.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-25 08:43:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:43:23.607(Timestamp)
2019-04-25 08:43:23 -<==    Updates: 1
2019-04-25 08:43:23 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:43:23 -HTTP METHOD : POST
2019-04-25 08:43:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:43:23 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@244e7d61, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@52c3402a, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@244e7d61, com.bootdo.water.vo.WaterVo@52c3402a]
2019-04-25 08:43:23 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:43:23 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:43:23 -<==      Total: 2
2019-04-25 08:43:23 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$410ca4ce.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-04-25 08:43:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:43:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:43:23.813(Timestamp)
2019-04-25 08:43:23 -<==    Updates: 1
2019-04-25 08:46:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 2404 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 08:46:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 08:46:25 -The following profiles are active: dev
2019-04-25 08:46:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Apr 25 08:46:25 CST 2019]; root of context hierarchy
2019-04-25 08:46:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 08:46:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf345e04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b18d8cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 08:46:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 08:46:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 08:46:34 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 08:46:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 08:46:34 -Starting service [Tomcat]
2019-04-25 08:46:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 08:46:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 08:46:35 -Initializing Spring embedded WebApplicationContext
2019-04-25 08:46:35 -Root WebApplicationContext: initialization completed in 9392 ms
2019-04-25 08:46:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 08:46:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 08:46:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 08:46:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 08:46:35 -Filter xssFilter was not registered (disabled)
2019-04-25 08:46:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 08:46:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 08:46:35 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 08:46:35 -Servlet dispatcherServlet mapped to [/]
2019-04-25 08:46:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Apr 25 08:46:25 CST 2019]; root of context hierarchy
2019-04-25 08:46:59 -Using default implementation for ThreadExecutor
2019-04-25 08:46:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 08:46:59 -Quartz Scheduler v.2.2.1 created.
2019-04-25 08:46:59 -RAMJobStore initialized.
2019-04-25 08:46:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 08:46:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 08:46:59 -Quartz scheduler version: 2.2.1
2019-04-25 08:46:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7cd8831c
2019-04-25 08:46:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 08:46:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 08:47:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 08:47:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 08:47:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 08:47:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 08:47:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 08:47:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 08:47:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 08:47:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 08:47:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 08:47:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 08:47:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 08:47:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 08:47:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 08:47:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 08:47:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 08:47:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 08:47:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 08:47:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 08:47:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 08:47:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 08:47:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 08:47:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 08:47:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 08:47:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 08:47:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 08:47:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 08:47:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 08:47:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 08:47:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 08:47:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 08:47:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 08:47:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 08:47:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 08:47:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 08:47:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 08:47:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 08:47:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 08:47:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 08:47:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 08:47:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 08:47:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 08:47:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 08:47:03 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:47:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 08:47:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:47:03 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 08:47:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 08:47:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 08:47:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 08:47:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 08:47:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 08:47:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 08:47:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 08:47:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 08:47:03 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 08:47:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 08:47:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 08:47:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 08:47:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 08:47:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 08:47:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 08:47:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 08:47:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 08:47:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 08:47:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 08:47:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 08:47:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 08:47:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 08:47:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 08:47:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 08:47:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 08:47:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 08:47:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 08:47:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 08:47:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 08:47:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 08:47:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 08:47:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 08:47:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 08:47:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 08:47:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 08:47:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 08:47:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 08:47:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 08:47:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 08:47:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 08:47:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 08:47:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 08:47:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 08:47:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 08:47:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 08:47:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 08:47:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 08:47:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 08:47:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:47:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Apr 25 08:46:25 CST 2019]; root of context hierarchy
2019-04-25 08:47:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:47:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:47:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 08:47:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 08:47:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 08:47:08 -Registering beans for JMX exposure on startup
2019-04-25 08:47:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 08:47:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 08:47:08 -Starting beans in phase 2147483647
2019-04-25 08:47:08 -Context refreshed
2019-04-25 08:47:08 -Found 1 custom documentation plugin(s)
2019-04-25 08:47:08 -Scanning for api listing references
2019-04-25 08:47:09 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_1
2019-04-25 08:47:09 -Generating unique operation named: addUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: editUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: listUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_2
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_3
2019-04-25 08:47:09 -Generating unique operation named: saveUsingPOST_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPOST_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPUT_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 08:47:09 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 08:47:09 -Generating unique operation named: addUsingGET_2
2019-04-25 08:47:09 -Generating unique operation named: editUsingGET_2
2019-04-25 08:47:09 -Generating unique operation named: listUsingGET_2
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_4
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_5
2019-04-25 08:47:09 -Generating unique operation named: saveUsingPOST_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPOST_2
2019-04-25 08:47:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: addUsingGET_3
2019-04-25 08:47:09 -Generating unique operation named: editUsingGET_3
2019-04-25 08:47:09 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: listUsingGET_3
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_6
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_7
2019-04-25 08:47:09 -Generating unique operation named: saveUsingPOST_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingGET_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPOST_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPUT_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 08:47:09 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 08:47:09 -Generating unique operation named: addUsingGET_4
2019-04-25 08:47:09 -Generating unique operation named: editUsingGET_4
2019-04-25 08:47:09 -Generating unique operation named: listUsingGET_4
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_8
2019-04-25 08:47:09 -Generating unique operation named: removeUsingPOST_9
2019-04-25 08:47:09 -Generating unique operation named: saveUsingPOST_4
2019-04-25 08:47:09 -Generating unique operation named: updateUsingGET_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPOST_4
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPUT_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 08:47:09 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 08:47:09 -Generating unique operation named: ElecUsingGET_1
2019-04-25 08:47:09 -Generating unique operation named: addUsingGET_5
2019-04-25 08:47:09 -Generating unique operation named: editUsingGET_5
2019-04-25 08:47:09 -Generating unique operation named: listUsingGET_5
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_10
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_11
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingGET_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPUT_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 08:47:10 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_6
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_6
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_6
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_7
2019-04-25 08:47:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_7
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_12
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_13
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingGET_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPUT_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 08:47:10 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 08:47:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_7
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_8
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_8
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_14
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_15
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingGET_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_8
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPUT_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 08:47:10 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_8
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_9
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_9
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_16
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_17
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_8
2019-04-25 08:47:10 -Generating unique operation named: updateUsingGET_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_9
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPUT_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 08:47:10 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_9
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_10
2019-04-25 08:47:10 -Generating unique operation named: infoUsingGET_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingPOST_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingPUT_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 08:47:10 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_10
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_18
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_19
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_9
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_10
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_11
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_20
2019-04-25 08:47:10 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_10
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_11
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_12
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_21
2019-04-25 08:47:10 -Generating unique operation named: saveUsingPOST_10
2019-04-25 08:47:10 -Generating unique operation named: treeUsingGET_1
2019-04-25 08:47:10 -Generating unique operation named: treeUsingGET_2
2019-04-25 08:47:10 -Generating unique operation named: updateUsingPOST_11
2019-04-25 08:47:10 -Generating unique operation named: addUsingGET_11
2019-04-25 08:47:10 -Generating unique operation named: editUsingGET_12
2019-04-25 08:47:10 -Generating unique operation named: listUsingGET_13
2019-04-25 08:47:10 -Generating unique operation named: removeUsingPOST_22
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_23
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingGET_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPUT_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 08:47:11 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_12
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_13
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_14
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_24
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_25
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingGET_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_13
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPUT_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 08:47:11 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_13
2019-04-25 08:47:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_14
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_15
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_13
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_14
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_14
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_16
2019-04-25 08:47:11 -Generating unique operation named: listUsingHEAD_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingPOST_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingPUT_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingPATCH_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingDELETE_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingTRACE_1
2019-04-25 08:47:11 -Generating unique operation named: countDDUsingGET_1
2019-04-25 08:47:11 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 08:47:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 08:47:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 08:47:11 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 08:47:11 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 08:47:11 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 08:47:11 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 08:47:11 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_14
2019-04-25 08:47:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_15
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_17
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_26
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_15
2019-04-25 08:47:11 -Generating unique operation named: treeUsingGET_3
2019-04-25 08:47:11 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_15
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_15
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_16
2019-04-25 08:47:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_18
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_27
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_28
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_16
2019-04-25 08:47:11 -Generating unique operation named: updateUsingGET_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_16
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPUT_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 08:47:11 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 08:47:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_16
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_17
2019-04-25 08:47:11 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_19
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_29
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_30
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_17
2019-04-25 08:47:11 -Generating unique operation named: updateUsingGET_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_17
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPUT_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 08:47:11 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 08:47:11 -Generating unique operation named: addUsingGET_17
2019-04-25 08:47:11 -Generating unique operation named: editUsingGET_18
2019-04-25 08:47:11 -Generating unique operation named: listUsingGET_20
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_31
2019-04-25 08:47:11 -Generating unique operation named: removeUsingPOST_32
2019-04-25 08:47:11 -Generating unique operation named: saveUsingPOST_18
2019-04-25 08:47:11 -Generating unique operation named: updateUsingGET_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPOST_18
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPUT_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 08:47:11 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 08:47:12 -Starting Quartz Scheduler now
2019-04-25 08:47:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 08:47:12 -Starting...
2019-04-25 08:47:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 08:47:12 -Started.
2019-04-25 08:47:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 08:47:12 -Using a shared selector for servlet write/read
2019-04-25 08:47:12 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 08:47:12 -Started BootdoApplication in 48.593 seconds (JVM running for 50.952)
2019-04-25 08:47:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 08:47:12 -==> Parameters: 
2019-04-25 08:47:13 -<==      Total: 1
2019-04-25 08:47:22 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 08:47:22 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 08:47:22 -FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2019-04-25 08:47:22 -Enabling session validation scheduler...
2019-04-25 08:47:22 -请求地址 : http://localhost:8081/login;JSESSIONID=0b5231a1-6779-4e5c-8bd2-4d6e023e437e
2019-04-25 08:47:22 -HTTP METHOD : GET
2019-04-25 08:47:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 08:47:22 -参数 : [{}]
2019-04-25 08:47:22 -耗时 : 3
2019-04-25 08:47:22 -返回值 : login
2019-04-25 08:47:24 -请求地址 : http://localhost:8081/getVerify
2019-04-25 08:47:24 -HTTP METHOD : GET
2019-04-25 08:47:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 08:47:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3bf26b62, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3fcdf8c4]
2019-04-25 08:47:27 -2206
2019-04-25 08:47:28 -耗时 : 3608
2019-04-25 08:47:28 -返回值 : null
2019-04-25 08:47:32 -请求地址 : http://localhost:8081/login
2019-04-25 08:47:32 -HTTP METHOD : POST
2019-04-25 08:47:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 08:47:32 -参数 : [admin, 111111, 2206, org.apache.shiro.web.servlet.ShiroHttpServletRequest@619568cd]
2019-04-25 08:47:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 08:47:33 -==> Parameters: admin(String)
2019-04-25 08:47:33 -<==      Total: 1
2019-04-25 08:47:33 -耗时 : 243
2019-04-25 08:47:33 -返回值 : {msg=操作成功, code=0}
2019-04-25 08:47:33 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 08:47:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:47:33 -==> Parameters: 1(Long), admin(String), 登录(String), 245(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 08:47:33.324(Timestamp)
2019-04-25 08:47:33 -请求地址 : http://localhost:8081/index
2019-04-25 08:47:33 -HTTP METHOD : GET
2019-04-25 08:47:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 08:47:33 -参数 : [{}]
2019-04-25 08:47:33 -<==    Updates: 1
2019-04-25 08:47:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 08:47:33 -==> Parameters: 1(Long)
2019-04-25 08:47:34 -<==      Total: 49
2019-04-25 08:47:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 08:47:34 -==> Parameters: 138(Long)
2019-04-25 08:47:34 -<==      Total: 1
2019-04-25 08:47:34 -耗时 : 623
2019-04-25 08:47:34 -返回值 : index_v1
2019-04-25 08:47:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:47:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 625(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 08:47:34.105(Timestamp)
2019-04-25 08:47:34 -<==    Updates: 1
2019-04-25 08:47:34 -请求地址 : http://localhost:8081/main
2019-04-25 08:47:34 -HTTP METHOD : GET
2019-04-25 08:47:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:47:34 -参数 : []
2019-04-25 08:47:34 -耗时 : 1
2019-04-25 08:47:34 -返回值 : main
2019-04-25 08:47:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 08:47:34 -HTTP METHOD : GET
2019-04-25 08:47:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 08:47:34 -参数 : []
2019-04-25 08:47:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 08:47:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 08:47:34 -<==      Total: 0
2019-04-25 08:47:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 08:47:34 -==> Parameters: 1(Long), 0(String)
2019-04-25 08:47:34 -<==      Total: 1
2019-04-25 08:47:34 -耗时 : 60
2019-04-25 08:47:34 -返回值 : com.bootdo.common.utils.PageUtils@31560986
2019-04-25 08:47:34 -请求地址 : http://localhost:8081/main
2019-04-25 08:47:34 -HTTP METHOD : GET
2019-04-25 08:47:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 08:47:34 -参数 : []
2019-04-25 08:47:34 -耗时 : 1
2019-04-25 08:47:34 -返回值 : main
2019-04-25 08:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-25 08:49:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 08:49:21 -==> Parameters: 1(Long)
2019-04-25 08:49:21 -<==      Total: 93
2019-04-25 08:49:21 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 08:49:21 -HTTP METHOD : GET
2019-04-25 08:49:21 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 08:49:21 -参数 : []
2019-04-25 08:49:21 -耗时 : 18
2019-04-25 08:49:21 -返回值 : charts/countMM
2019-04-25 08:49:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 08:49:21 -HTTP METHOD : GET
2019-04-25 08:49:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 08:49:21 -参数 : [userType]
2019-04-25 08:49:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 08:49:21 -==> Parameters: userType(String)
2019-04-25 08:49:21 -<==      Total: 4
2019-04-25 08:49:21 -耗时 : 81
2019-04-25 08:49:21 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 08:49:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 08:49:23 -HTTP METHOD : GET
2019-04-25 08:49:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 08:49:23 -参数 : []
2019-04-25 08:49:23 -耗时 : 16
2019-04-25 08:49:23 -返回值 : charts/tableElecMM
2019-04-25 08:49:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 08:49:29 -HTTP METHOD : GET
2019-04-25 08:49:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 08:49:29 -参数 : []
2019-04-25 08:49:29 -耗时 : 29
2019-04-25 08:49:29 -返回值 : charts/tableWaterMM
2019-04-25 08:49:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 08:49:38 -HTTP METHOD : GET
2019-04-25 08:49:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 08:49:38 -参数 : []
2019-04-25 08:49:38 -耗时 : 0
2019-04-25 08:49:38 -返回值 : system/dept/deptTree
2019-04-25 08:49:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 08:49:38 -HTTP METHOD : GET
2019-04-25 08:49:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 08:49:38 -参数 : []
2019-04-25 08:49:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 08:49:38 -==> Parameters: 
2019-04-25 08:49:38 -<==      Total: 3
2019-04-25 08:49:38 -耗时 : 56
2019-04-25 08:49:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 08:49:40 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 08:49:40 -HTTP METHOD : POST
2019-04-25 08:49:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 08:49:40 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@381dc0de, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@1dd0d50e, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@381dc0de, com.bootdo.water.vo.WaterVo@1dd0d50e]
2019-04-25 08:50:07 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 08:50:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:50:07 -<==      Total: 2
2019-04-25 08:50:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 08:50:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/getTableMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-04-25 08:50:15.69(Timestamp)
2019-04-25 08:50:15 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:82)
	at com.bootdo.charts.controller.tableWaterMMController.getTableMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$5735b685.getTableMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-04-25 08:50:15 -<==    Updates: 1
2019-04-25 08:54:30 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 08:54:30 -HTTP METHOD : GET
2019-04-25 08:54:30 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 08:54:30 -参数 : []
2019-04-25 08:54:30 -耗时 : 20
2019-04-25 08:54:30 -返回值 : charts/countDD
2019-04-25 08:54:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 08:54:31 -HTTP METHOD : GET
2019-04-25 08:54:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 08:54:31 -参数 : [userType]
2019-04-25 08:54:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 08:54:31 -==> Parameters: userType(String)
2019-04-25 08:54:31 -<==      Total: 4
2019-04-25 08:54:31 -耗时 : 39
2019-04-25 08:54:31 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 08:54:33 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 08:54:33 -HTTP METHOD : GET
2019-04-25 08:54:33 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 08:54:33 -参数 : []
2019-04-25 08:54:33 -耗时 : 13
2019-04-25 08:54:33 -返回值 : charts/tableDD
2019-04-25 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 08:54:38 -HTTP METHOD : GET
2019-04-25 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 08:54:38 -参数 : []
2019-04-25 08:54:38 -耗时 : 0
2019-04-25 08:54:38 -返回值 : system/dept/deptTree
2019-04-25 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 08:54:38 -HTTP METHOD : GET
2019-04-25 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 08:54:38 -参数 : []
2019-04-25 08:54:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 08:54:38 -==> Parameters: 
2019-04-25 08:54:38 -<==      Total: 3
2019-04-25 08:54:38 -耗时 : 5
2019-04-25 08:54:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 08:54:41 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-25 08:54:41 -HTTP METHOD : GET
2019-04-25 08:54:41 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-25 08:54:41 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@54d6129b, com.bootdo.moneyLog.vo.HeatLogVo@647a0a0, com.bootdo.moneyLog.vo.WaterLogVo@4440cde5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7db6cf92]
2019-04-25 08:54:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:54:41 -==> Parameters: 2019-03-25 00:00:00(String), 2019-03-25 23:59:59(String), 2(String)
2019-04-25 08:54:41 -<==      Total: 0
2019-04-25 08:54:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:54:41 -==> Parameters: 2019-03-25 00:00:00(String), 2019-03-25 23:59:59(String), 2(String)
2019-04-25 08:54:41 -<==      Total: 0
2019-04-25 08:54:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:54:41 -==> Parameters: 2019-03-25 00:00:00(String), 2019-03-25 23:59:59(String), 2(String)
2019-04-25 08:54:41 -<==      Total: 0
2019-04-25 08:54:42 -耗时 : 856
2019-04-25 08:54:42 -返回值 : null
2019-04-25 08:54:54 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-25 08:54:54 -HTTP METHOD : GET
2019-04-25 08:54:54 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-25 08:54:54 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@57578e64, com.bootdo.moneyLog.vo.HeatLogVo@49b97cc, com.bootdo.moneyLog.vo.WaterLogVo@764013c3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40303906]
2019-04-25 08:54:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:54:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:54:54 -<==      Total: 4
2019-04-25 08:54:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:54:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:54:54 -<==      Total: 1
2019-04-25 08:54:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:54:54 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:54:54 -<==      Total: 1
2019-04-25 08:54:54 -耗时 : 58
2019-04-25 08:54:54 -返回值 : null
2019-04-25 08:56:50 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 08:56:50 -HTTP METHOD : POST
2019-04-25 08:56:50 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 08:56:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@44b8dca0, com.bootdo.moneyLog.vo.WaterLogVo@282a7f1d, com.bootdo.moneyLog.vo.HeatLogVo@7a58c6c1]
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 08:56:50 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 08:56:50 -<==      Total: 1
2019-04-25 08:56:50 -耗时 : 263
2019-04-25 08:56:50 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 08:59:48 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 08:59:48 -HTTP METHOD : GET
2019-04-25 08:59:48 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 08:59:48 -参数 : [com.bootdo.water.vo.WaterVo@2276266c, com.bootdo.moneyLog.vo.WaterLogVo@5d1ab4b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3f9d2650]
2019-04-25 08:59:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 08:59:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:59:48 -<==      Total: 1
2019-04-25 08:59:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 08:59:48 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 08:59:48 -<==      Total: 1
2019-04-25 08:59:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? 
2019-04-25 08:59:48 -==> Parameters: 2(String)
2019-04-25 08:59:48 -<==      Total: 5
2019-04-25 08:59:48 -耗时 : 76
2019-04-25 08:59:48 -返回值 : null
2019-04-25 09:18:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-04-25 09:23:08 -请求地址 : http://localhost:8081/index
2019-04-25 09:23:08 -HTTP METHOD : GET
2019-04-25 09:23:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 09:23:08 -参数 : [{}]
2019-04-25 09:23:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 09:23:08 -==> Parameters: 1(Long)
2019-04-25 09:23:08 -<==      Total: 49
2019-04-25 09:23:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 09:23:08 -==> Parameters: 138(Long)
2019-04-25 09:23:08 -<==      Total: 1
2019-04-25 09:23:08 -耗时 : 143
2019-04-25 09:23:08 -返回值 : index_v1
2019-04-25 09:23:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 09:23:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 09:23:08.7(Timestamp)
2019-04-25 09:23:08 -<==    Updates: 1
2019-04-25 09:23:08 -请求地址 : http://localhost:8081/main
2019-04-25 09:23:08 -HTTP METHOD : GET
2019-04-25 09:23:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 09:23:08 -参数 : []
2019-04-25 09:23:08 -耗时 : 0
2019-04-25 09:23:08 -返回值 : main
2019-04-25 09:23:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 09:23:09 -HTTP METHOD : GET
2019-04-25 09:23:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 09:23:09 -参数 : []
2019-04-25 09:23:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 09:23:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 09:23:09 -<==      Total: 0
2019-04-25 09:23:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 09:23:09 -==> Parameters: 1(Long), 0(String)
2019-04-25 09:23:09 -<==      Total: 1
2019-04-25 09:23:09 -耗时 : 44
2019-04-25 09:23:09 -返回值 : com.bootdo.common.utils.PageUtils@70e1ee1e
2019-04-25 09:23:09 -请求地址 : http://localhost:8081/main
2019-04-25 09:23:09 -HTTP METHOD : GET
2019-04-25 09:23:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 09:23:09 -参数 : []
2019-04-25 09:23:09 -耗时 : 0
2019-04-25 09:23:09 -返回值 : main
2019-04-25 09:23:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 09:23:13 -==> Parameters: 1(Long)
2019-04-25 09:23:14 -<==      Total: 93
2019-04-25 09:23:14 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 09:23:14 -HTTP METHOD : GET
2019-04-25 09:23:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 09:23:14 -参数 : []
2019-04-25 09:23:14 -耗时 : 0
2019-04-25 09:23:14 -返回值 : charts/tableDD
2019-04-25 09:23:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 09:23:52 -HTTP METHOD : GET
2019-04-25 09:23:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 09:23:52 -参数 : []
2019-04-25 09:23:52 -耗时 : 3
2019-04-25 09:23:52 -返回值 : system/dept/deptTree
2019-04-25 09:23:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 09:23:52 -HTTP METHOD : GET
2019-04-25 09:23:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 09:23:52 -参数 : []
2019-04-25 09:23:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 09:23:52 -==> Parameters: 
2019-04-25 09:23:52 -<==      Total: 3
2019-04-25 09:23:52 -耗时 : 8
2019-04-25 09:23:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 09:24:02 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 09:24:02 -HTTP METHOD : POST
2019-04-25 09:24:02 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 09:24:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6a5f7c7d, com.bootdo.moneyLog.vo.WaterLogVo@f2095f3, com.bootdo.moneyLog.vo.HeatLogVo@5e5a5832]
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 09:24:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 09:24:02 -<==      Total: 1
2019-04-25 09:24:02 -耗时 : 112
2019-04-25 09:24:02 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 09:24:40 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 09:24:40 -HTTP METHOD : GET
2019-04-25 09:24:40 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 09:24:40 -参数 : []
2019-04-25 09:24:40 -耗时 : 0
2019-04-25 09:24:40 -返回值 : charts/countMM
2019-04-25 09:24:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 09:24:41 -HTTP METHOD : GET
2019-04-25 09:24:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 09:24:41 -参数 : [userType]
2019-04-25 09:24:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 09:24:41 -==> Parameters: userType(String)
2019-04-25 09:24:41 -<==      Total: 4
2019-04-25 09:24:41 -耗时 : 8
2019-04-25 09:24:41 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 09:24:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 09:24:42 -HTTP METHOD : GET
2019-04-25 09:24:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 09:24:42 -参数 : []
2019-04-25 09:24:42 -耗时 : 2
2019-04-25 09:24:42 -返回值 : charts/tableElecMM
2019-04-25 09:24:44 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 09:24:44 -HTTP METHOD : GET
2019-04-25 09:24:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 09:24:44 -参数 : []
2019-04-25 09:24:44 -耗时 : 1
2019-04-25 09:24:44 -返回值 : charts/tableWaterMM
2019-04-25 09:26:23 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 09:26:23 -HTTP METHOD : GET
2019-04-25 09:26:23 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 09:26:23 -参数 : []
2019-04-25 09:26:23 -耗时 : 23
2019-04-25 09:26:23 -返回值 : charts/tableHeatMM
2019-04-25 09:26:55 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 09:26:55 -HTTP METHOD : GET
2019-04-25 09:26:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 09:26:55 -参数 : []
2019-04-25 09:26:55 -耗时 : 5
2019-04-25 09:26:55 -返回值 : charts/tableElecMM
2019-04-25 09:27:50 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 09:27:50 -HTTP METHOD : GET
2019-04-25 09:27:50 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 09:27:50 -参数 : []
2019-04-25 09:27:50 -耗时 : 0
2019-04-25 09:27:50 -返回值 : charts/countYY
2019-04-25 09:27:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 09:27:52 -HTTP METHOD : GET
2019-04-25 09:27:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 09:27:52 -参数 : []
2019-04-25 09:27:52 -耗时 : 17
2019-04-25 09:27:52 -返回值 : charts/tableElecYY
2019-04-25 09:28:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 09:28:06 -HTTP METHOD : GET
2019-04-25 09:28:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 09:28:06 -参数 : []
2019-04-25 09:28:06 -耗时 : 22
2019-04-25 09:28:06 -返回值 : charts/tableWaterYY
2019-04-25 09:29:41 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:29:41 -HTTP METHOD : GET
2019-04-25 09:29:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:29:41 -参数 : []
2019-04-25 09:29:41 -耗时 : 21
2019-04-25 09:29:41 -返回值 : charts/tableHeatYY
2019-04-25 09:29:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 09:29:56 -HTTP METHOD : GET
2019-04-25 09:29:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 09:29:56 -参数 : []
2019-04-25 09:29:56 -耗时 : 3
2019-04-25 09:29:56 -返回值 : charts/tableElecYY
2019-04-25 09:33:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 09:33:20 -==> Parameters: 1(Long)
2019-04-25 09:33:20 -<==      Total: 93
2019-04-25 09:33:20 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:33:20 -HTTP METHOD : GET
2019-04-25 09:33:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:33:20 -参数 : []
2019-04-25 09:33:20 -耗时 : 0
2019-04-25 09:33:20 -返回值 : charts/tableHeatYY
2019-04-25 09:33:21 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 09:33:21 -HTTP METHOD : GET
2019-04-25 09:33:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 09:33:21 -参数 : []
2019-04-25 09:33:21 -耗时 : 1
2019-04-25 09:33:21 -返回值 : charts/tableElecYY
2019-04-25 09:33:22 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:33:22 -HTTP METHOD : GET
2019-04-25 09:33:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:33:22 -参数 : []
2019-04-25 09:33:22 -耗时 : 4
2019-04-25 09:33:22 -返回值 : charts/tableHeatYY
2019-04-25 09:33:27 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 09:33:27 -HTTP METHOD : GET
2019-04-25 09:33:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 09:33:27 -参数 : []
2019-04-25 09:33:27 -耗时 : 3
2019-04-25 09:33:27 -返回值 : charts/tableWaterYY
2019-04-25 09:33:28 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:33:28 -HTTP METHOD : GET
2019-04-25 09:33:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:33:28 -参数 : []
2019-04-25 09:33:28 -耗时 : 1
2019-04-25 09:33:28 -返回值 : charts/tableHeatYY
2019-04-25 09:33:29 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 09:33:29 -HTTP METHOD : GET
2019-04-25 09:33:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 09:33:29 -参数 : []
2019-04-25 09:33:29 -耗时 : 0
2019-04-25 09:33:29 -返回值 : charts/tableWaterYY
2019-04-25 09:33:30 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:33:30 -HTTP METHOD : GET
2019-04-25 09:33:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:33:30 -参数 : []
2019-04-25 09:33:30 -耗时 : 4
2019-04-25 09:33:30 -返回值 : charts/tableHeatYY
2019-04-25 09:33:31 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 09:33:31 -HTTP METHOD : GET
2019-04-25 09:33:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 09:33:31 -参数 : []
2019-04-25 09:33:31 -耗时 : 0
2019-04-25 09:33:31 -返回值 : charts/tableWaterYY
2019-04-25 09:33:32 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 09:33:32 -HTTP METHOD : GET
2019-04-25 09:33:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 09:33:32 -参数 : []
2019-04-25 09:33:32 -耗时 : 0
2019-04-25 09:33:32 -返回值 : charts/tableHeatYY
2019-04-25 09:34:54 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-25 09:34:54 -HTTP METHOD : GET
2019-04-25 09:34:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-25 09:34:54 -参数 : []
2019-04-25 09:34:54 -耗时 : 4
2019-04-25 09:34:54 -返回值 : /moneyList/moneyList
2019-04-25 09:35:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 09:35:06 -HTTP METHOD : GET
2019-04-25 09:35:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 09:35:06 -参数 : []
2019-04-25 09:35:06 -耗时 : 0
2019-04-25 09:35:06 -返回值 : system/dept/deptTree
2019-04-25 09:35:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 09:35:09 -HTTP METHOD : GET
2019-04-25 09:35:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 09:35:09 -参数 : []
2019-04-25 09:35:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 09:35:09 -==> Parameters: 
2019-04-25 09:35:09 -<==      Total: 3
2019-04-25 09:35:09 -耗时 : 10
2019-04-25 09:35:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 09:35:16 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-25 09:35:16 -HTTP METHOD : POST
2019-04-25 09:35:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-25 09:35:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6fa5d1d1]
2019-04-25 09:35:16 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-04-25 09:35:16 -==> Parameters: 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String), 2019-02(String), 2(String), 1-0001(String)
2019-04-25 09:35:17 -<==      Total: 3
2019-04-25 09:35:17 -耗时 : 422
2019-04-25 09:35:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@47ba2df1, com.bootdo.moneyList.damain.MoneyListDO@2bb91846, com.bootdo.moneyList.damain.MoneyListDO@5e20801]
2019-04-25 09:35:59 -请求地址 : http://localhost:8081/elec/elec
2019-04-25 09:35:59 -HTTP METHOD : GET
2019-04-25 09:35:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-25 09:35:59 -参数 : []
2019-04-25 09:35:59 -耗时 : 0
2019-04-25 09:35:59 -返回值 : elec/elec/elec
2019-04-25 09:35:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 09:35:59 -HTTP METHOD : GET
2019-04-25 09:35:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 09:35:59 -参数 : [userType]
2019-04-25 09:35:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 09:35:59 -==> Parameters: userType(String)
2019-04-25 09:35:59 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-25 09:35:59 -HTTP METHOD : GET
2019-04-25 09:35:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 09:35:59 -参数 : [elecType]
2019-04-25 09:35:59 -<==      Total: 4
2019-04-25 09:35:59 -耗时 : 36
2019-04-25 09:35:59 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 09:35:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 09:35:59 -==> Parameters: elecType(String)
2019-04-25 09:35:59 -<==      Total: 11
2019-04-25 09:35:59 -耗时 : 284
2019-04-25 09:36:00 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 09:36:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-25 09:36:00 -HTTP METHOD : GET
2019-04-25 09:36:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-25 09:36:00 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@266dd84d]
2019-04-25 09:36:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-04-25 09:36:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-25 09:36:00 -<==      Total: 10
2019-04-25 09:36:00 -==>  Preparing: select count(*) from elec 
2019-04-25 09:36:00 -==> Parameters: 
2019-04-25 09:36:00 -<==      Total: 1
2019-04-25 09:36:00 -耗时 : 344
2019-04-25 09:36:00 -返回值 : com.bootdo.common.utils.PageUtils@3a817933
2019-04-25 09:37:09 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 09:37:09 -HTTP METHOD : GET
2019-04-25 09:37:09 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 09:37:09 -参数 : []
2019-04-25 09:37:09 -耗时 : 0
2019-04-25 09:37:09 -返回值 : charts/countDD
2019-04-25 09:37:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 09:37:09 -HTTP METHOD : GET
2019-04-25 09:37:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 09:37:09 -参数 : [userType]
2019-04-25 09:37:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 09:37:09 -==> Parameters: userType(String)
2019-04-25 09:37:09 -<==      Total: 4
2019-04-25 09:37:09 -耗时 : 4
2019-04-25 09:37:09 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 09:37:16 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-25 09:37:16 -HTTP METHOD : GET
2019-04-25 09:37:16 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-25 09:37:16 -参数 : []
2019-04-25 09:37:16 -耗时 : 3
2019-04-25 09:37:16 -返回值 : charts/countOwe
2019-04-25 09:37:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 09:37:16 -HTTP METHOD : GET
2019-04-25 09:37:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 09:37:16 -参数 : [userType]
2019-04-25 09:37:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 09:37:16 -==> Parameters: userType(String)
2019-04-25 09:37:16 -<==      Total: 4
2019-04-25 09:37:16 -耗时 : 4
2019-04-25 09:37:16 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 09:47:22 -Validating all active sessions...
2019-04-25 09:47:22 -Finished session validation.  No sessions were stopped.
2019-04-25 09:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 872]
2019-04-25 10:18:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1305]
2019-04-25 10:25:18 -请求地址 : http://localhost:8081/login;JSESSIONID=95802687-dfbf-4c39-a0bc-023bae908be7
2019-04-25 10:25:18 -HTTP METHOD : GET
2019-04-25 10:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:25:18 -参数 : [{}]
2019-04-25 10:25:18 -耗时 : 18
2019-04-25 10:25:18 -返回值 : login
2019-04-25 10:25:18 -请求地址 : http://localhost:8081/login;JSESSIONID=95802687-dfbf-4c39-a0bc-023bae908be7
2019-04-25 10:25:18 -HTTP METHOD : GET
2019-04-25 10:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:25:18 -参数 : [{}]
2019-04-25 10:25:18 -耗时 : 1
2019-04-25 10:25:18 -返回值 : login
2019-04-25 10:25:18 -请求地址 : http://localhost:8081/getVerify
2019-04-25 10:25:18 -HTTP METHOD : GET
2019-04-25 10:25:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 10:25:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4eaf6544, org.apache.shiro.web.servlet.ShiroHttpServletResponse@ce1dd98]
2019-04-25 10:25:19 -请求地址 : http://localhost:8081/getVerify
2019-04-25 10:25:19 -HTTP METHOD : GET
2019-04-25 10:25:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 10:25:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c91dc86, org.apache.shiro.web.servlet.ShiroHttpServletResponse@23ba9ff6]
2019-04-25 10:25:19 -1676
2019-04-25 10:25:19 -7318
2019-04-25 10:25:19 -耗时 : 229
2019-04-25 10:25:19 -耗时 : 535
2019-04-25 10:25:19 -返回值 : null
2019-04-25 10:25:19 -返回值 : null
2019-04-25 10:25:25 -请求地址 : http://localhost:8081/login
2019-04-25 10:25:25 -HTTP METHOD : POST
2019-04-25 10:25:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 10:25:25 -参数 : [admin, 111111, 1676, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65dc3f9b]
2019-04-25 10:25:25 -耗时 : 1
2019-04-25 10:25:25 -返回值 : {msg=请输入正确的验证码, code=500}
2019-04-25 10:25:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:25:25 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 10:25:25.812(Timestamp)
2019-04-25 10:25:26 -<==    Updates: 1
2019-04-25 10:25:28 -请求地址 : http://localhost:8081/login;JSESSIONID=95802687-dfbf-4c39-a0bc-023bae908be7
2019-04-25 10:25:28 -HTTP METHOD : GET
2019-04-25 10:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:25:28 -参数 : [{}]
2019-04-25 10:25:28 -耗时 : 0
2019-04-25 10:25:28 -返回值 : login
2019-04-25 10:25:28 -请求地址 : http://localhost:8081/getVerify
2019-04-25 10:25:28 -HTTP METHOD : GET
2019-04-25 10:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 10:25:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5178684d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5f66898f]
2019-04-25 10:25:28 -2852
2019-04-25 10:25:28 -耗时 : 55
2019-04-25 10:25:28 -返回值 : null
2019-04-25 10:25:28 -请求地址 : http://localhost:8081/login
2019-04-25 10:25:28 -HTTP METHOD : GET
2019-04-25 10:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:25:28 -参数 : [{}]
2019-04-25 10:25:28 -耗时 : 2
2019-04-25 10:25:28 -返回值 : login
2019-04-25 10:25:34 -请求地址 : http://localhost:8081/login
2019-04-25 10:25:34 -HTTP METHOD : POST
2019-04-25 10:25:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 10:25:34 -参数 : [admin, 111111, 2852, org.apache.shiro.web.servlet.ShiroHttpServletRequest@179c6728]
2019-04-25 10:25:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 10:25:34 -==> Parameters: admin(String)
2019-04-25 10:25:34 -<==      Total: 1
2019-04-25 10:25:34 -耗时 : 252
2019-04-25 10:25:34 -返回值 : {msg=操作成功, code=0}
2019-04-25 10:25:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:25:34 -==> Parameters: 1(Long), admin(String), 登录(String), 253(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 10:25:34.904(Timestamp)
2019-04-25 10:25:34 -请求地址 : http://localhost:8081/index
2019-04-25 10:25:34 -HTTP METHOD : GET
2019-04-25 10:25:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:25:34 -参数 : [{}]
2019-04-25 10:25:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:25:34 -==> Parameters: 1(Long)
2019-04-25 10:25:34 -<==      Total: 49
2019-04-25 10:25:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:25:34 -==> Parameters: 138(Long)
2019-04-25 10:25:34 -<==      Total: 1
2019-04-25 10:25:34 -耗时 : 56
2019-04-25 10:25:34 -返回值 : index_v1
2019-04-25 10:25:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:25:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 56(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:25:35.0(Timestamp)
2019-04-25 10:25:35 -<==    Updates: 1
2019-04-25 10:25:35 -<==    Updates: 1
2019-04-25 10:25:35 -请求地址 : http://localhost:8081/main
2019-04-25 10:25:35 -HTTP METHOD : GET
2019-04-25 10:25:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:25:35 -参数 : []
2019-04-25 10:25:35 -耗时 : 0
2019-04-25 10:25:35 -返回值 : main
2019-04-25 10:25:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:25:35 -HTTP METHOD : GET
2019-04-25 10:25:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:25:35 -参数 : []
2019-04-25 10:25:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:25:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:25:35 -<==      Total: 0
2019-04-25 10:25:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:25:35 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:25:35 -<==      Total: 1
2019-04-25 10:25:35 -耗时 : 11
2019-04-25 10:25:35 -返回值 : com.bootdo.common.utils.PageUtils@3b168543
2019-04-25 10:25:35 -请求地址 : http://localhost:8081/main
2019-04-25 10:25:35 -HTTP METHOD : GET
2019-04-25 10:25:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:25:35 -参数 : []
2019-04-25 10:25:35 -耗时 : 1
2019-04-25 10:25:35 -返回值 : main
2019-04-25 10:25:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 10:25:39 -==> Parameters: 1(Long)
2019-04-25 10:25:39 -<==      Total: 93
2019-04-25 10:25:39 -请求地址 : http://localhost:8081/print/print
2019-04-25 10:25:39 -HTTP METHOD : GET
2019-04-25 10:25:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-25 10:25:39 -参数 : []
2019-04-25 10:25:39 -耗时 : 0
2019-04-25 10:25:39 -返回值 : print/print/print
2019-04-25 10:25:40 -请求地址 : http://localhost:8081/print/print/list
2019-04-25 10:25:40 -HTTP METHOD : GET
2019-04-25 10:25:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-25 10:25:40 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-25 10:25:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:25:40 -HTTP METHOD : GET
2019-04-25 10:25:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:25:40 -参数 : [userType]
2019-04-25 10:25:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:25:40 -==> Parameters: userType(String)
2019-04-25 10:25:40 -<==      Total: 4
2019-04-25 10:25:40 -耗时 : 35
2019-04-25 10:25:40 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:25:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-25 10:25:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-25 10:25:40 -<==      Total: 5
2019-04-25 10:25:40 -==>  Preparing: select count(*) from print 
2019-04-25 10:25:40 -==> Parameters: 
2019-04-25 10:25:40 -<==      Total: 1
2019-04-25 10:25:40 -耗时 : 387
2019-04-25 10:25:40 -返回值 : com.bootdo.common.utils.PageUtils@44129334
2019-04-25 10:25:45 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 10:25:45 -HTTP METHOD : GET
2019-04-25 10:25:45 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 10:25:45 -参数 : []
2019-04-25 10:25:45 -耗时 : 1
2019-04-25 10:25:45 -返回值 : charts/countMM
2019-04-25 10:25:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:25:45 -HTTP METHOD : GET
2019-04-25 10:25:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:25:45 -参数 : [userType]
2019-04-25 10:25:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:25:45 -==> Parameters: userType(String)
2019-04-25 10:25:45 -<==      Total: 4
2019-04-25 10:25:45 -耗时 : 6
2019-04-25 10:25:45 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:25:46 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:25:46 -HTTP METHOD : GET
2019-04-25 10:25:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:25:46 -参数 : []
2019-04-25 10:25:46 -耗时 : 0
2019-04-25 10:25:46 -返回值 : charts/tableElecMM
2019-04-25 10:25:47 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:25:47 -HTTP METHOD : GET
2019-04-25 10:25:47 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:25:47 -参数 : []
2019-04-25 10:25:47 -耗时 : 1
2019-04-25 10:25:47 -返回值 : charts/tableWaterMM
2019-04-25 10:30:21 -请求地址 : http://localhost:8081/index
2019-04-25 10:30:21 -HTTP METHOD : GET
2019-04-25 10:30:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:30:21 -参数 : [{}]
2019-04-25 10:30:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:30:21 -==> Parameters: 1(Long)
2019-04-25 10:30:21 -<==      Total: 49
2019-04-25 10:30:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:30:21 -==> Parameters: 138(Long)
2019-04-25 10:30:21 -<==      Total: 1
2019-04-25 10:30:21 -耗时 : 78
2019-04-25 10:30:21 -返回值 : index_v1
2019-04-25 10:30:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:30:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 78(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:30:21.727(Timestamp)
2019-04-25 10:30:21 -<==    Updates: 1
2019-04-25 10:30:21 -请求地址 : http://localhost:8081/main
2019-04-25 10:30:21 -HTTP METHOD : GET
2019-04-25 10:30:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:30:21 -参数 : []
2019-04-25 10:30:21 -耗时 : 2
2019-04-25 10:30:21 -返回值 : main
2019-04-25 10:30:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:30:22 -HTTP METHOD : GET
2019-04-25 10:30:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:30:22 -参数 : []
2019-04-25 10:30:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:30:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:30:22 -<==      Total: 0
2019-04-25 10:30:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:30:22 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:30:22 -<==      Total: 1
2019-04-25 10:30:22 -耗时 : 6
2019-04-25 10:30:22 -返回值 : com.bootdo.common.utils.PageUtils@5869846f
2019-04-25 10:30:22 -请求地址 : http://localhost:8081/main
2019-04-25 10:30:22 -HTTP METHOD : GET
2019-04-25 10:30:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:30:22 -参数 : []
2019-04-25 10:30:22 -耗时 : 1
2019-04-25 10:30:22 -返回值 : main
2019-04-25 10:30:24 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:30:24 -HTTP METHOD : GET
2019-04-25 10:30:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:30:24 -参数 : []
2019-04-25 10:30:24 -耗时 : 2
2019-04-25 10:30:24 -返回值 : charts/tableElecMM
2019-04-25 10:30:25 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:30:25 -HTTP METHOD : GET
2019-04-25 10:30:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:30:25 -参数 : []
2019-04-25 10:30:25 -耗时 : 1
2019-04-25 10:30:25 -返回值 : charts/tableWaterMM
2019-04-25 10:30:53 -请求地址 : http://localhost:8081/index
2019-04-25 10:30:53 -HTTP METHOD : GET
2019-04-25 10:30:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:30:53 -参数 : [{}]
2019-04-25 10:30:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:30:53 -==> Parameters: 1(Long)
2019-04-25 10:30:53 -<==      Total: 49
2019-04-25 10:30:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:30:53 -==> Parameters: 138(Long)
2019-04-25 10:30:53 -<==      Total: 1
2019-04-25 10:30:54 -耗时 : 92
2019-04-25 10:30:54 -返回值 : index_v1
2019-04-25 10:30:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:30:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 92(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:30:54.007(Timestamp)
2019-04-25 10:30:54 -请求地址 : http://localhost:8081/main
2019-04-25 10:30:54 -HTTP METHOD : GET
2019-04-25 10:30:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:30:54 -参数 : []
2019-04-25 10:30:54 -耗时 : 1
2019-04-25 10:30:54 -返回值 : main
2019-04-25 10:30:54 -<==    Updates: 1
2019-04-25 10:30:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:30:54 -HTTP METHOD : GET
2019-04-25 10:30:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:30:54 -参数 : []
2019-04-25 10:30:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:30:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:30:54 -<==      Total: 0
2019-04-25 10:30:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:30:54 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:30:54 -<==      Total: 1
2019-04-25 10:30:54 -耗时 : 33
2019-04-25 10:30:54 -返回值 : com.bootdo.common.utils.PageUtils@5ce6715e
2019-04-25 10:30:54 -请求地址 : http://localhost:8081/main
2019-04-25 10:30:54 -HTTP METHOD : GET
2019-04-25 10:30:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:30:54 -参数 : []
2019-04-25 10:30:54 -耗时 : 1
2019-04-25 10:30:54 -返回值 : main
2019-04-25 10:31:13 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 10:31:13 -HTTP METHOD : GET
2019-04-25 10:31:13 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 10:31:13 -参数 : []
2019-04-25 10:31:13 -耗时 : 1
2019-04-25 10:31:13 -返回值 : charts/countMM
2019-04-25 10:31:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:31:13 -HTTP METHOD : GET
2019-04-25 10:31:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:31:13 -参数 : [userType]
2019-04-25 10:31:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:31:13 -==> Parameters: userType(String)
2019-04-25 10:31:13 -<==      Total: 4
2019-04-25 10:31:13 -耗时 : 3
2019-04-25 10:31:13 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:31:21 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:31:21 -HTTP METHOD : GET
2019-04-25 10:31:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:31:21 -参数 : []
2019-04-25 10:31:21 -耗时 : 0
2019-04-25 10:31:21 -返回值 : charts/tableElecMM
2019-04-25 10:31:22 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:31:22 -HTTP METHOD : GET
2019-04-25 10:31:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:31:22 -参数 : []
2019-04-25 10:31:22 -耗时 : 0
2019-04-25 10:31:22 -返回值 : charts/tableWaterMM
2019-04-25 10:31:25 -请求地址 : http://localhost:8081/index
2019-04-25 10:31:25 -HTTP METHOD : GET
2019-04-25 10:31:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:31:25 -参数 : [{}]
2019-04-25 10:31:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:31:25 -==> Parameters: 1(Long)
2019-04-25 10:31:25 -<==      Total: 49
2019-04-25 10:31:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:31:25 -==> Parameters: 138(Long)
2019-04-25 10:31:25 -<==      Total: 1
2019-04-25 10:31:25 -耗时 : 18
2019-04-25 10:31:25 -返回值 : index_v1
2019-04-25 10:31:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:31:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:31:25.207(Timestamp)
2019-04-25 10:31:25 -<==    Updates: 1
2019-04-25 10:31:25 -请求地址 : http://localhost:8081/main
2019-04-25 10:31:25 -HTTP METHOD : GET
2019-04-25 10:31:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:31:25 -参数 : []
2019-04-25 10:31:25 -耗时 : 0
2019-04-25 10:31:25 -返回值 : main
2019-04-25 10:31:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:31:25 -HTTP METHOD : GET
2019-04-25 10:31:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:31:25 -参数 : []
2019-04-25 10:31:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:31:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:31:25 -<==      Total: 0
2019-04-25 10:31:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:31:25 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:31:25 -<==      Total: 1
2019-04-25 10:31:25 -耗时 : 36
2019-04-25 10:31:25 -返回值 : com.bootdo.common.utils.PageUtils@6db1cfc3
2019-04-25 10:31:25 -请求地址 : http://localhost:8081/main
2019-04-25 10:31:25 -HTTP METHOD : GET
2019-04-25 10:31:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:31:25 -参数 : []
2019-04-25 10:31:25 -耗时 : 1
2019-04-25 10:31:25 -返回值 : main
2019-04-25 10:31:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:31:31 -HTTP METHOD : GET
2019-04-25 10:31:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:31:31 -参数 : []
2019-04-25 10:31:31 -耗时 : 1
2019-04-25 10:31:31 -返回值 : charts/tableElecMM
2019-04-25 10:31:32 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:31:32 -HTTP METHOD : GET
2019-04-25 10:31:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:31:32 -参数 : []
2019-04-25 10:31:32 -耗时 : 1
2019-04-25 10:31:32 -返回值 : charts/tableWaterMM
2019-04-25 10:31:46 -请求地址 : http://localhost:8081/index
2019-04-25 10:31:46 -HTTP METHOD : GET
2019-04-25 10:31:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:31:46 -参数 : [{}]
2019-04-25 10:31:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:31:46 -==> Parameters: 1(Long)
2019-04-25 10:31:46 -<==      Total: 49
2019-04-25 10:31:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:31:46 -==> Parameters: 138(Long)
2019-04-25 10:31:46 -<==      Total: 1
2019-04-25 10:31:46 -耗时 : 49
2019-04-25 10:31:46 -返回值 : index_v1
2019-04-25 10:31:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:31:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 50(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:31:46.981(Timestamp)
2019-04-25 10:31:47 -<==    Updates: 1
2019-04-25 10:31:47 -请求地址 : http://localhost:8081/main
2019-04-25 10:31:47 -HTTP METHOD : GET
2019-04-25 10:31:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:31:47 -参数 : []
2019-04-25 10:31:47 -耗时 : 0
2019-04-25 10:31:47 -返回值 : main
2019-04-25 10:31:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:31:47 -HTTP METHOD : GET
2019-04-25 10:31:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:31:47 -参数 : []
2019-04-25 10:31:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:31:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:31:47 -<==      Total: 0
2019-04-25 10:31:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:31:47 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:31:47 -<==      Total: 1
2019-04-25 10:31:47 -耗时 : 7
2019-04-25 10:31:47 -返回值 : com.bootdo.common.utils.PageUtils@1f052920
2019-04-25 10:31:47 -请求地址 : http://localhost:8081/main
2019-04-25 10:31:47 -HTTP METHOD : GET
2019-04-25 10:31:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:31:47 -参数 : []
2019-04-25 10:31:47 -耗时 : 2
2019-04-25 10:31:47 -返回值 : main
2019-04-25 10:31:50 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:31:50 -HTTP METHOD : GET
2019-04-25 10:31:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:31:50 -参数 : []
2019-04-25 10:31:50 -耗时 : 1
2019-04-25 10:31:50 -返回值 : charts/tableElecMM
2019-04-25 10:31:51 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:31:51 -HTTP METHOD : GET
2019-04-25 10:31:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:31:51 -参数 : []
2019-04-25 10:31:51 -耗时 : 1
2019-04-25 10:31:51 -返回值 : charts/tableWaterMM
2019-04-25 10:32:42 -请求地址 : http://localhost:8081/login;JSESSIONID=9cb901d1-8dd5-4e76-9de5-c4c0878293d2
2019-04-25 10:32:42 -HTTP METHOD : GET
2019-04-25 10:32:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:32:42 -参数 : [{}]
2019-04-25 10:32:42 -耗时 : 0
2019-04-25 10:32:42 -返回值 : login
2019-04-25 10:32:43 -请求地址 : http://localhost:8081/getVerify
2019-04-25 10:32:43 -HTTP METHOD : GET
2019-04-25 10:32:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 10:32:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d87f72a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b4ac34d]
2019-04-25 10:32:43 -1463
2019-04-25 10:32:43 -耗时 : 120
2019-04-25 10:32:43 -返回值 : null
2019-04-25 10:32:43 -请求地址 : http://localhost:8081/login
2019-04-25 10:32:43 -HTTP METHOD : GET
2019-04-25 10:32:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 10:32:43 -参数 : [{}]
2019-04-25 10:32:43 -耗时 : 1
2019-04-25 10:32:43 -返回值 : login
2019-04-25 10:32:48 -请求地址 : http://localhost:8081/login
2019-04-25 10:32:48 -HTTP METHOD : POST
2019-04-25 10:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 10:32:48 -参数 : [admin, 111111, 1463, org.apache.shiro.web.servlet.ShiroHttpServletRequest@33e41879]
2019-04-25 10:32:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 10:32:48 -==> Parameters: admin(String)
2019-04-25 10:32:48 -<==      Total: 1
2019-04-25 10:32:48 -耗时 : 61
2019-04-25 10:32:48 -返回值 : {msg=操作成功, code=0}
2019-04-25 10:32:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:32:48 -==> Parameters: 1(Long), admin(String), 登录(String), 61(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 10:32:48.08(Timestamp)
2019-04-25 10:32:48 -请求地址 : http://localhost:8081/index
2019-04-25 10:32:48 -HTTP METHOD : GET
2019-04-25 10:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:32:48 -参数 : [{}]
2019-04-25 10:32:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:32:48 -==> Parameters: 1(Long)
2019-04-25 10:32:48 -<==    Updates: 1
2019-04-25 10:32:48 -<==      Total: 49
2019-04-25 10:32:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:32:48 -==> Parameters: 138(Long)
2019-04-25 10:32:48 -<==      Total: 1
2019-04-25 10:32:48 -耗时 : 318
2019-04-25 10:32:48 -返回值 : index_v1
2019-04-25 10:32:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:32:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 319(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:32:48.455(Timestamp)
2019-04-25 10:32:48 -<==    Updates: 1
2019-04-25 10:32:48 -请求地址 : http://localhost:8081/main
2019-04-25 10:32:48 -HTTP METHOD : GET
2019-04-25 10:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:32:48 -参数 : []
2019-04-25 10:32:48 -耗时 : 1
2019-04-25 10:32:48 -返回值 : main
2019-04-25 10:32:50 -请求地址 : http://localhost:8081/main
2019-04-25 10:32:50 -HTTP METHOD : GET
2019-04-25 10:32:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:32:50 -参数 : []
2019-04-25 10:32:50 -耗时 : 0
2019-04-25 10:32:50 -返回值 : main
2019-04-25 10:32:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:32:50 -HTTP METHOD : GET
2019-04-25 10:32:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:32:50 -参数 : []
2019-04-25 10:32:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:32:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:32:51 -<==      Total: 0
2019-04-25 10:32:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:32:51 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:32:51 -<==      Total: 1
2019-04-25 10:32:51 -耗时 : 517
2019-04-25 10:32:51 -返回值 : com.bootdo.common.utils.PageUtils@2348284e
2019-04-25 10:32:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 10:32:54 -==> Parameters: 1(Long)
2019-04-25 10:32:54 -<==      Total: 93
2019-04-25 10:32:54 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 10:32:54 -HTTP METHOD : GET
2019-04-25 10:32:54 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 10:32:54 -参数 : []
2019-04-25 10:32:54 -耗时 : 0
2019-04-25 10:32:54 -返回值 : charts/countMM
2019-04-25 10:32:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:32:55 -HTTP METHOD : GET
2019-04-25 10:32:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:32:55 -参数 : [userType]
2019-04-25 10:32:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:32:55 -==> Parameters: userType(String)
2019-04-25 10:32:55 -<==      Total: 4
2019-04-25 10:32:55 -耗时 : 7
2019-04-25 10:32:55 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:32:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:32:56 -HTTP METHOD : GET
2019-04-25 10:32:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:32:56 -参数 : []
2019-04-25 10:32:56 -耗时 : 0
2019-04-25 10:32:56 -返回值 : charts/tableElecMM
2019-04-25 10:32:57 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 10:32:57 -HTTP METHOD : GET
2019-04-25 10:32:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 10:32:57 -参数 : []
2019-04-25 10:32:57 -耗时 : 1
2019-04-25 10:32:57 -返回值 : charts/countYY
2019-04-25 10:32:59 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:32:59 -HTTP METHOD : GET
2019-04-25 10:32:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:32:59 -参数 : []
2019-04-25 10:32:59 -耗时 : 11
2019-04-25 10:32:59 -返回值 : charts/tableWaterMM
2019-04-25 10:33:56 -请求地址 : http://localhost:8081/index
2019-04-25 10:33:56 -HTTP METHOD : GET
2019-04-25 10:33:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:33:56 -参数 : [{}]
2019-04-25 10:33:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:33:56 -==> Parameters: 1(Long)
2019-04-25 10:33:56 -<==      Total: 49
2019-04-25 10:33:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:33:56 -==> Parameters: 138(Long)
2019-04-25 10:33:56 -<==      Total: 1
2019-04-25 10:33:56 -耗时 : 49
2019-04-25 10:33:56 -返回值 : index_v1
2019-04-25 10:33:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:33:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 49(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:33:56.245(Timestamp)
2019-04-25 10:33:56 -<==    Updates: 1
2019-04-25 10:33:56 -请求地址 : http://localhost:8081/main
2019-04-25 10:33:56 -HTTP METHOD : GET
2019-04-25 10:33:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:33:56 -参数 : []
2019-04-25 10:33:56 -耗时 : 1
2019-04-25 10:33:56 -返回值 : main
2019-04-25 10:33:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:33:56 -HTTP METHOD : GET
2019-04-25 10:33:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:33:56 -参数 : []
2019-04-25 10:33:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:33:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:33:56 -<==      Total: 0
2019-04-25 10:33:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:33:56 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:33:56 -<==      Total: 1
2019-04-25 10:33:56 -耗时 : 47
2019-04-25 10:33:56 -返回值 : com.bootdo.common.utils.PageUtils@1b972073
2019-04-25 10:33:56 -请求地址 : http://localhost:8081/main
2019-04-25 10:33:56 -HTTP METHOD : GET
2019-04-25 10:33:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:33:56 -参数 : []
2019-04-25 10:33:56 -耗时 : 0
2019-04-25 10:33:56 -返回值 : main
2019-04-25 10:34:03 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:34:03 -HTTP METHOD : GET
2019-04-25 10:34:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:34:03 -参数 : []
2019-04-25 10:34:03 -耗时 : 2
2019-04-25 10:34:03 -返回值 : charts/tableElecMM
2019-04-25 10:34:04 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:34:04 -HTTP METHOD : GET
2019-04-25 10:34:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:34:04 -参数 : []
2019-04-25 10:34:04 -耗时 : 0
2019-04-25 10:34:04 -返回值 : charts/tableWaterMM
2019-04-25 10:35:49 -请求地址 : http://localhost:8081/index
2019-04-25 10:35:49 -HTTP METHOD : GET
2019-04-25 10:35:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:35:49 -参数 : [{}]
2019-04-25 10:35:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:35:49 -==> Parameters: 1(Long)
2019-04-25 10:35:49 -<==      Total: 49
2019-04-25 10:35:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:35:49 -==> Parameters: 138(Long)
2019-04-25 10:35:49 -<==      Total: 1
2019-04-25 10:35:49 -耗时 : 21
2019-04-25 10:35:49 -返回值 : index_v1
2019-04-25 10:35:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:35:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 86(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:35:49.921(Timestamp)
2019-04-25 10:35:50 -<==    Updates: 1
2019-04-25 10:35:50 -请求地址 : http://localhost:8081/main
2019-04-25 10:35:50 -HTTP METHOD : GET
2019-04-25 10:35:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:35:50 -参数 : []
2019-04-25 10:35:50 -耗时 : 1
2019-04-25 10:35:50 -返回值 : main
2019-04-25 10:35:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:35:50 -HTTP METHOD : GET
2019-04-25 10:35:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:35:50 -参数 : []
2019-04-25 10:35:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:35:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:35:50 -<==      Total: 0
2019-04-25 10:35:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:35:50 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:35:50 -<==      Total: 1
2019-04-25 10:35:50 -耗时 : 5
2019-04-25 10:35:50 -返回值 : com.bootdo.common.utils.PageUtils@f6519e2
2019-04-25 10:35:50 -请求地址 : http://localhost:8081/main
2019-04-25 10:35:50 -HTTP METHOD : GET
2019-04-25 10:35:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:35:50 -参数 : []
2019-04-25 10:35:50 -耗时 : 1
2019-04-25 10:35:50 -返回值 : main
2019-04-25 10:36:03 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 10:36:03 -HTTP METHOD : GET
2019-04-25 10:36:03 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 10:36:03 -参数 : []
2019-04-25 10:36:03 -耗时 : 1
2019-04-25 10:36:03 -返回值 : charts/countYY
2019-04-25 10:36:05 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:36:05 -HTTP METHOD : GET
2019-04-25 10:36:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:36:05 -参数 : []
2019-04-25 10:36:05 -耗时 : 0
2019-04-25 10:36:05 -返回值 : charts/tableElecMM
2019-04-25 10:36:11 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:36:11 -HTTP METHOD : GET
2019-04-25 10:36:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:36:11 -参数 : []
2019-04-25 10:36:11 -耗时 : 1
2019-04-25 10:36:11 -返回值 : charts/tableWaterMM
2019-04-25 10:38:23 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 10:38:23 -HTTP METHOD : GET
2019-04-25 10:38:23 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 10:38:23 -参数 : []
2019-04-25 10:38:23 -耗时 : 2
2019-04-25 10:38:23 -返回值 : charts/tableHeatMM
2019-04-25 10:40:36 -请求地址 : http://localhost:8081/index
2019-04-25 10:40:36 -HTTP METHOD : GET
2019-04-25 10:40:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:40:36 -参数 : [{}]
2019-04-25 10:40:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:40:36 -==> Parameters: 1(Long)
2019-04-25 10:40:36 -<==      Total: 49
2019-04-25 10:40:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:40:36 -==> Parameters: 138(Long)
2019-04-25 10:40:36 -<==      Total: 1
2019-04-25 10:40:36 -耗时 : 50
2019-04-25 10:40:36 -返回值 : index_v1
2019-04-25 10:40:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:40:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 51(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:40:36.909(Timestamp)
2019-04-25 10:40:37 -请求地址 : http://localhost:8081/main
2019-04-25 10:40:37 -HTTP METHOD : GET
2019-04-25 10:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:40:37 -参数 : []
2019-04-25 10:40:37 -耗时 : 0
2019-04-25 10:40:37 -返回值 : main
2019-04-25 10:40:37 -<==    Updates: 1
2019-04-25 10:40:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:40:37 -HTTP METHOD : GET
2019-04-25 10:40:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:40:37 -参数 : []
2019-04-25 10:40:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:40:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:40:37 -<==      Total: 0
2019-04-25 10:40:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:40:37 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:40:37 -<==      Total: 1
2019-04-25 10:40:37 -耗时 : 29
2019-04-25 10:40:37 -返回值 : com.bootdo.common.utils.PageUtils@6f641548
2019-04-25 10:40:37 -请求地址 : http://localhost:8081/main
2019-04-25 10:40:37 -HTTP METHOD : GET
2019-04-25 10:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:40:37 -参数 : []
2019-04-25 10:40:37 -耗时 : 12
2019-04-25 10:40:37 -返回值 : main
2019-04-25 10:40:43 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 10:40:43 -HTTP METHOD : GET
2019-04-25 10:40:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 10:40:43 -参数 : []
2019-04-25 10:40:43 -耗时 : 1
2019-04-25 10:40:43 -返回值 : charts/countMM
2019-04-25 10:40:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:40:43 -HTTP METHOD : GET
2019-04-25 10:40:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:40:43 -参数 : [userType]
2019-04-25 10:40:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:40:43 -==> Parameters: userType(String)
2019-04-25 10:40:43 -<==      Total: 4
2019-04-25 10:40:43 -耗时 : 4
2019-04-25 10:40:43 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:40:44 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:40:44 -HTTP METHOD : GET
2019-04-25 10:40:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:40:44 -参数 : []
2019-04-25 10:40:44 -耗时 : 1
2019-04-25 10:40:44 -返回值 : charts/tableElecMM
2019-04-25 10:40:48 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 10:40:48 -HTTP METHOD : GET
2019-04-25 10:40:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 10:40:48 -参数 : []
2019-04-25 10:40:48 -耗时 : 0
2019-04-25 10:40:48 -返回值 : charts/tableHeatMM
2019-04-25 10:42:01 -请求地址 : http://localhost:8081/index
2019-04-25 10:42:01 -HTTP METHOD : GET
2019-04-25 10:42:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:42:01 -参数 : [{}]
2019-04-25 10:42:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:42:01 -==> Parameters: 1(Long)
2019-04-25 10:42:01 -<==      Total: 49
2019-04-25 10:42:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:42:01 -==> Parameters: 138(Long)
2019-04-25 10:42:01 -<==      Total: 1
2019-04-25 10:42:01 -耗时 : 39
2019-04-25 10:42:01 -返回值 : index_v1
2019-04-25 10:42:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:42:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:42:01.961(Timestamp)
2019-04-25 10:42:02 -<==    Updates: 1
2019-04-25 10:42:02 -请求地址 : http://localhost:8081/main
2019-04-25 10:42:02 -HTTP METHOD : GET
2019-04-25 10:42:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:42:02 -参数 : []
2019-04-25 10:42:02 -耗时 : 1
2019-04-25 10:42:02 -返回值 : main
2019-04-25 10:42:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:42:02 -HTTP METHOD : GET
2019-04-25 10:42:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:42:02 -参数 : []
2019-04-25 10:42:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:42:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:42:02 -<==      Total: 0
2019-04-25 10:42:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:42:02 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:42:02 -<==      Total: 1
2019-04-25 10:42:02 -耗时 : 37
2019-04-25 10:42:02 -返回值 : com.bootdo.common.utils.PageUtils@5b62081e
2019-04-25 10:42:02 -请求地址 : http://localhost:8081/main
2019-04-25 10:42:02 -HTTP METHOD : GET
2019-04-25 10:42:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:42:02 -参数 : []
2019-04-25 10:42:02 -耗时 : 0
2019-04-25 10:42:02 -返回值 : main
2019-04-25 10:42:11 -请求地址 : http://localhost:8081/heat/heat
2019-04-25 10:42:11 -HTTP METHOD : GET
2019-04-25 10:42:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-04-25 10:42:11 -参数 : []
2019-04-25 10:42:11 -耗时 : 0
2019-04-25 10:42:11 -返回值 : heat/heat/heat
2019-04-25 10:42:12 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-25 10:42:12 -HTTP METHOD : GET
2019-04-25 10:42:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:42:12 -参数 : [heatType]
2019-04-25 10:42:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:42:12 -==> Parameters: heatType(String)
2019-04-25 10:42:12 -<==      Total: 4
2019-04-25 10:42:12 -耗时 : 5
2019-04-25 10:42:12 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:42:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 10:42:12 -HTTP METHOD : GET
2019-04-25 10:42:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 10:42:12 -参数 : [userType]
2019-04-25 10:42:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 10:42:12 -==> Parameters: userType(String)
2019-04-25 10:42:12 -<==      Total: 4
2019-04-25 10:42:12 -耗时 : 6
2019-04-25 10:42:12 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 10:42:12 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-25 10:42:12 -HTTP METHOD : GET
2019-04-25 10:42:12 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-25 10:42:12 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-25 10:42:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-04-25 10:42:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-25 10:42:12 -<==      Total: 10
2019-04-25 10:42:12 -==>  Preparing: select count(*) from heat 
2019-04-25 10:42:12 -==> Parameters: 
2019-04-25 10:42:12 -<==      Total: 1
2019-04-25 10:42:12 -耗时 : 507
2019-04-25 10:42:12 -返回值 : com.bootdo.common.utils.PageUtils@5f7cfd1f
2019-04-25 10:42:15 -请求地址 : http://localhost:8081/heat/heatPrice
2019-04-25 10:42:15 -HTTP METHOD : GET
2019-04-25 10:42:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-04-25 10:42:15 -参数 : []
2019-04-25 10:42:15 -耗时 : 1
2019-04-25 10:42:15 -返回值 : heat/heatPrice/heatPrice
2019-04-25 10:42:15 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-04-25 10:42:15 -HTTP METHOD : GET
2019-04-25 10:42:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-04-25 10:42:15 -参数 : [{limit=10, offset=0}]
2019-04-25 10:42:15 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id desc limit ?, ? 
2019-04-25 10:42:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-25 10:42:15 -<==      Total: 2
2019-04-25 10:42:15 -==>  Preparing: select count(*) from heat_price 
2019-04-25 10:42:15 -==> Parameters: 
2019-04-25 10:42:15 -<==      Total: 1
2019-04-25 10:42:15 -耗时 : 202
2019-04-25 10:42:15 -返回值 : com.bootdo.common.utils.PageUtils@ab22874
2019-04-25 10:42:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:42:19 -HTTP METHOD : GET
2019-04-25 10:42:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:42:19 -参数 : []
2019-04-25 10:42:19 -耗时 : 1
2019-04-25 10:42:19 -返回值 : charts/tableElecMM
2019-04-25 10:42:21 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:42:21 -HTTP METHOD : GET
2019-04-25 10:42:21 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:42:21 -参数 : []
2019-04-25 10:42:21 -耗时 : 1
2019-04-25 10:42:21 -返回值 : charts/tableWaterMM
2019-04-25 10:42:22 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 10:42:22 -HTTP METHOD : GET
2019-04-25 10:42:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 10:42:22 -参数 : []
2019-04-25 10:42:22 -耗时 : 0
2019-04-25 10:42:22 -返回值 : charts/tableHeatMM
2019-04-25 10:42:30 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:42:30 -HTTP METHOD : GET
2019-04-25 10:42:30 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:42:30 -参数 : []
2019-04-25 10:42:30 -耗时 : 0
2019-04-25 10:42:30 -返回值 : charts/tableWaterMM
2019-04-25 10:42:32 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 10:42:32 -HTTP METHOD : GET
2019-04-25 10:42:32 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 10:42:32 -参数 : []
2019-04-25 10:42:32 -耗时 : 0
2019-04-25 10:42:32 -返回值 : charts/tableHeatMM
2019-04-25 10:43:46 -请求地址 : http://localhost:8081/index
2019-04-25 10:43:46 -HTTP METHOD : GET
2019-04-25 10:43:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 10:43:46 -参数 : [{}]
2019-04-25 10:43:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 10:43:46 -==> Parameters: 1(Long)
2019-04-25 10:43:46 -<==      Total: 49
2019-04-25 10:43:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 10:43:46 -==> Parameters: 138(Long)
2019-04-25 10:43:46 -<==      Total: 1
2019-04-25 10:43:46 -耗时 : 13
2019-04-25 10:43:46 -返回值 : index_v1
2019-04-25 10:43:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 10:43:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 10:43:46.793(Timestamp)
2019-04-25 10:43:46 -<==    Updates: 1
2019-04-25 10:43:46 -请求地址 : http://localhost:8081/main
2019-04-25 10:43:46 -HTTP METHOD : GET
2019-04-25 10:43:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:43:46 -参数 : []
2019-04-25 10:43:46 -耗时 : 0
2019-04-25 10:43:46 -返回值 : main
2019-04-25 10:43:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 10:43:47 -HTTP METHOD : GET
2019-04-25 10:43:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 10:43:47 -参数 : []
2019-04-25 10:43:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 10:43:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 10:43:47 -<==      Total: 0
2019-04-25 10:43:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 10:43:47 -==> Parameters: 1(Long), 0(String)
2019-04-25 10:43:47 -<==      Total: 1
2019-04-25 10:43:47 -耗时 : 46
2019-04-25 10:43:47 -返回值 : com.bootdo.common.utils.PageUtils@ea755bc
2019-04-25 10:43:47 -请求地址 : http://localhost:8081/main
2019-04-25 10:43:47 -HTTP METHOD : GET
2019-04-25 10:43:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 10:43:47 -参数 : []
2019-04-25 10:43:47 -耗时 : 2
2019-04-25 10:43:47 -返回值 : main
2019-04-25 10:43:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 10:43:51 -==> Parameters: 1(Long)
2019-04-25 10:43:51 -<==      Total: 93
2019-04-25 10:43:51 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:43:51 -HTTP METHOD : GET
2019-04-25 10:43:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:43:51 -参数 : []
2019-04-25 10:43:51 -耗时 : 0
2019-04-25 10:43:51 -返回值 : charts/tableElecMM
2019-04-25 10:43:53 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 10:43:53 -HTTP METHOD : GET
2019-04-25 10:43:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 10:43:53 -参数 : []
2019-04-25 10:43:53 -耗时 : 1
2019-04-25 10:43:53 -返回值 : charts/tableHeatMM
2019-04-25 10:43:55 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 10:43:55 -HTTP METHOD : GET
2019-04-25 10:43:55 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 10:43:55 -参数 : []
2019-04-25 10:43:55 -耗时 : 1
2019-04-25 10:43:55 -返回值 : charts/tableWaterMM
2019-04-25 10:43:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 10:43:56 -HTTP METHOD : GET
2019-04-25 10:43:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 10:43:56 -参数 : []
2019-04-25 10:43:56 -耗时 : 0
2019-04-25 10:43:56 -返回值 : charts/tableElecMM
2019-04-25 10:47:22 -Validating all active sessions...
2019-04-25 10:47:22 -Finished session validation.  No sessions were stopped.
2019-04-25 10:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(13)-CONNECTED(13)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 153], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 25], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1733]
2019-04-25 11:18:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 13 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(13)-CONNECTED(13)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 153], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 25], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2166]
2019-04-25 11:38:40 -请求地址 : http://localhost:8081/login;JSESSIONID=7c3b6712-e9b2-4aac-ad48-20eb6532efc4
2019-04-25 11:38:40 -HTTP METHOD : GET
2019-04-25 11:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 11:38:40 -参数 : [{}]
2019-04-25 11:38:40 -耗时 : 7
2019-04-25 11:38:40 -返回值 : login
2019-04-25 11:38:40 -请求地址 : http://localhost:8081/getVerify
2019-04-25 11:38:40 -HTTP METHOD : GET
2019-04-25 11:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 11:38:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f24fcfb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e035e71]
2019-04-25 11:38:40 -8059
2019-04-25 11:38:40 -耗时 : 60
2019-04-25 11:38:40 -返回值 : null
2019-04-25 11:38:47 -请求地址 : http://localhost:8081/login
2019-04-25 11:38:47 -HTTP METHOD : POST
2019-04-25 11:38:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 11:38:47 -参数 : [admin, 111111, 8059, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5afb85fc]
2019-04-25 11:38:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 11:38:47 -==> Parameters: admin(String)
2019-04-25 11:38:47 -<==      Total: 1
2019-04-25 11:38:47 -耗时 : 26
2019-04-25 11:38:47 -返回值 : {msg=操作成功, code=0}
2019-04-25 11:38:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 11:38:47 -==> Parameters: 1(Long), admin(String), 登录(String), 26(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 11:38:47.039(Timestamp)
2019-04-25 11:38:47 -请求地址 : http://localhost:8081/index
2019-04-25 11:38:47 -HTTP METHOD : GET
2019-04-25 11:38:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 11:38:47 -参数 : [{}]
2019-04-25 11:38:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 11:38:47 -==> Parameters: 1(Long)
2019-04-25 11:38:47 -<==      Total: 49
2019-04-25 11:38:47 -<==    Updates: 1
2019-04-25 11:38:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 11:38:47 -==> Parameters: 138(Long)
2019-04-25 11:38:47 -<==      Total: 1
2019-04-25 11:38:47 -耗时 : 26
2019-04-25 11:38:47 -返回值 : index_v1
2019-04-25 11:38:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 11:38:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 11:38:47.093(Timestamp)
2019-04-25 11:38:47 -请求地址 : http://localhost:8081/main
2019-04-25 11:38:47 -HTTP METHOD : GET
2019-04-25 11:38:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:38:47 -参数 : []
2019-04-25 11:38:47 -耗时 : 1
2019-04-25 11:38:47 -返回值 : main
2019-04-25 11:38:47 -<==    Updates: 1
2019-04-25 11:38:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 11:38:47 -HTTP METHOD : GET
2019-04-25 11:38:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 11:38:47 -参数 : []
2019-04-25 11:38:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 11:38:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 11:38:47 -<==      Total: 0
2019-04-25 11:38:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 11:38:47 -==> Parameters: 1(Long), 0(String)
2019-04-25 11:38:47 -<==      Total: 1
2019-04-25 11:38:47 -耗时 : 34
2019-04-25 11:38:47 -返回值 : com.bootdo.common.utils.PageUtils@7361637a
2019-04-25 11:38:47 -请求地址 : http://localhost:8081/main
2019-04-25 11:38:47 -HTTP METHOD : GET
2019-04-25 11:38:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:38:47 -参数 : []
2019-04-25 11:38:47 -耗时 : 0
2019-04-25 11:38:47 -返回值 : main
2019-04-25 11:38:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 11:38:50 -==> Parameters: 1(Long)
2019-04-25 11:38:50 -<==      Total: 93
2019-04-25 11:38:50 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 11:38:50 -HTTP METHOD : GET
2019-04-25 11:38:50 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 11:38:50 -参数 : []
2019-04-25 11:38:50 -耗时 : 2
2019-04-25 11:38:50 -返回值 : charts/countMM
2019-04-25 11:38:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 11:38:50 -HTTP METHOD : GET
2019-04-25 11:38:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 11:38:50 -参数 : [userType]
2019-04-25 11:38:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 11:38:50 -==> Parameters: userType(String)
2019-04-25 11:38:50 -<==      Total: 4
2019-04-25 11:38:50 -耗时 : 4
2019-04-25 11:38:50 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 11:38:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 11:38:52 -HTTP METHOD : GET
2019-04-25 11:38:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 11:38:52 -参数 : []
2019-04-25 11:38:52 -耗时 : 0
2019-04-25 11:38:52 -返回值 : charts/tableElecMM
2019-04-25 11:40:22 -请求地址 : http://localhost:8081/index
2019-04-25 11:40:22 -HTTP METHOD : GET
2019-04-25 11:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 11:40:22 -参数 : [{}]
2019-04-25 11:40:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 11:40:22 -==> Parameters: 1(Long)
2019-04-25 11:40:22 -<==      Total: 49
2019-04-25 11:40:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 11:40:22 -==> Parameters: 138(Long)
2019-04-25 11:40:22 -<==      Total: 1
2019-04-25 11:40:22 -耗时 : 37
2019-04-25 11:40:22 -返回值 : index_v1
2019-04-25 11:40:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 11:40:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 11:40:22.577(Timestamp)
2019-04-25 11:40:22 -<==    Updates: 1
2019-04-25 11:40:22 -请求地址 : http://localhost:8081/main
2019-04-25 11:40:22 -HTTP METHOD : GET
2019-04-25 11:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:40:22 -参数 : []
2019-04-25 11:40:22 -耗时 : 1
2019-04-25 11:40:22 -返回值 : main
2019-04-25 11:40:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 11:40:22 -HTTP METHOD : GET
2019-04-25 11:40:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 11:40:22 -参数 : []
2019-04-25 11:40:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 11:40:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 11:40:22 -<==      Total: 0
2019-04-25 11:40:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 11:40:22 -==> Parameters: 1(Long), 0(String)
2019-04-25 11:40:22 -<==      Total: 1
2019-04-25 11:40:22 -耗时 : 8
2019-04-25 11:40:22 -返回值 : com.bootdo.common.utils.PageUtils@6cec0200
2019-04-25 11:40:22 -请求地址 : http://localhost:8081/main
2019-04-25 11:40:22 -HTTP METHOD : GET
2019-04-25 11:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:40:22 -参数 : []
2019-04-25 11:40:22 -耗时 : 1
2019-04-25 11:40:22 -返回值 : main
2019-04-25 11:40:26 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 11:40:26 -HTTP METHOD : GET
2019-04-25 11:40:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 11:40:26 -参数 : []
2019-04-25 11:40:26 -耗时 : 1
2019-04-25 11:40:26 -返回值 : charts/tableElecMM
2019-04-25 11:41:07 -请求地址 : http://localhost:8081/index
2019-04-25 11:41:07 -HTTP METHOD : GET
2019-04-25 11:41:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 11:41:07 -参数 : [{}]
2019-04-25 11:41:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 11:41:07 -==> Parameters: 1(Long)
2019-04-25 11:41:07 -<==      Total: 49
2019-04-25 11:41:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 11:41:08 -==> Parameters: 138(Long)
2019-04-25 11:41:08 -<==      Total: 1
2019-04-25 11:41:08 -耗时 : 110
2019-04-25 11:41:08 -返回值 : index_v1
2019-04-25 11:41:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 11:41:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 110(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 11:41:08.043(Timestamp)
2019-04-25 11:41:08 -<==    Updates: 1
2019-04-25 11:41:08 -请求地址 : http://localhost:8081/main
2019-04-25 11:41:08 -HTTP METHOD : GET
2019-04-25 11:41:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:41:08 -参数 : []
2019-04-25 11:41:08 -耗时 : 1
2019-04-25 11:41:08 -返回值 : main
2019-04-25 11:41:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 11:41:08 -HTTP METHOD : GET
2019-04-25 11:41:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 11:41:08 -参数 : []
2019-04-25 11:41:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 11:41:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 11:41:08 -<==      Total: 0
2019-04-25 11:41:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 11:41:08 -==> Parameters: 1(Long), 0(String)
2019-04-25 11:41:08 -<==      Total: 1
2019-04-25 11:41:08 -耗时 : 26
2019-04-25 11:41:08 -返回值 : com.bootdo.common.utils.PageUtils@3f88b24b
2019-04-25 11:41:08 -请求地址 : http://localhost:8081/main
2019-04-25 11:41:08 -HTTP METHOD : GET
2019-04-25 11:41:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 11:41:08 -参数 : []
2019-04-25 11:41:08 -耗时 : 1
2019-04-25 11:41:08 -返回值 : main
2019-04-25 11:41:19 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 11:41:19 -HTTP METHOD : GET
2019-04-25 11:41:19 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 11:41:19 -参数 : []
2019-04-25 11:41:19 -耗时 : 0
2019-04-25 11:41:19 -返回值 : charts/countMM
2019-04-25 11:41:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 11:41:19 -HTTP METHOD : GET
2019-04-25 11:41:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 11:41:19 -参数 : [userType]
2019-04-25 11:41:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 11:41:19 -==> Parameters: userType(String)
2019-04-25 11:41:19 -<==      Total: 4
2019-04-25 11:41:19 -耗时 : 6
2019-04-25 11:41:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 11:41:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 11:41:20 -HTTP METHOD : GET
2019-04-25 11:41:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 11:41:20 -参数 : []
2019-04-25 11:41:20 -耗时 : 1
2019-04-25 11:41:20 -返回值 : charts/tableElecMM
2019-04-25 11:47:28 -Validating all active sessions...
2019-04-25 11:47:28 -Finished session validation.  [1] sessions were stopped.
2019-04-25 11:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2596]
2019-04-25 11:49:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 11:49:02 -==> Parameters: 1(Long)
2019-04-25 11:49:02 -<==      Total: 93
2019-04-25 11:49:02 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 11:49:02 -HTTP METHOD : GET
2019-04-25 11:49:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 11:49:02 -参数 : []
2019-04-25 11:49:02 -耗时 : 0
2019-04-25 11:49:02 -返回值 : charts/tableElecYY
2019-04-25 11:49:03 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 11:49:03 -HTTP METHOD : GET
2019-04-25 11:49:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 11:49:03 -参数 : []
2019-04-25 11:49:03 -耗时 : 17
2019-04-25 11:49:03 -返回值 : charts/tableWaterYY
2019-04-25 12:36:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 4, queued tasks = 0, completed tasks = 2846]
2019-04-25 12:38:00 -请求地址 : http://localhost:8081/login;JSESSIONID=7f7d3a62-2c4d-45e5-ae46-e9bd86717b6c
2019-04-25 12:38:00 -HTTP METHOD : GET
2019-04-25 12:38:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 12:38:00 -参数 : [{}]
2019-04-25 12:38:00 -耗时 : 2
2019-04-25 12:38:00 -返回值 : login
2019-04-25 12:38:01 -请求地址 : http://localhost:8081/login;JSESSIONID=7f7d3a62-2c4d-45e5-ae46-e9bd86717b6c
2019-04-25 12:38:01 -HTTP METHOD : GET
2019-04-25 12:38:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 12:38:01 -参数 : [{}]
2019-04-25 12:38:01 -耗时 : 0
2019-04-25 12:38:01 -返回值 : login
2019-04-25 12:38:01 -请求地址 : http://localhost:8081/getVerify
2019-04-25 12:38:01 -HTTP METHOD : GET
2019-04-25 12:38:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 12:38:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@34872f4e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@273481f8]
2019-04-25 12:38:01 -2406
2019-04-25 12:38:01 -耗时 : 13
2019-04-25 12:38:01 -返回值 : null
2019-04-25 12:38:01 -请求地址 : http://localhost:8081/getVerify
2019-04-25 12:38:01 -HTTP METHOD : GET
2019-04-25 12:38:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 12:38:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a34404f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@387a28dd]
2019-04-25 12:38:01 -9867
2019-04-25 12:38:01 -耗时 : 20
2019-04-25 12:38:01 -返回值 : null
2019-04-25 12:38:05 -请求地址 : http://localhost:8081/login
2019-04-25 12:38:05 -HTTP METHOD : POST
2019-04-25 12:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 12:38:05 -参数 : [admin, 111111, 9867, org.apache.shiro.web.servlet.ShiroHttpServletRequest@142efd21]
2019-04-25 12:38:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 12:38:05 -==> Parameters: admin(String)
2019-04-25 12:38:05 -<==      Total: 1
2019-04-25 12:38:05 -耗时 : 79
2019-04-25 12:38:05 -返回值 : {msg=操作成功, code=0}
2019-04-25 12:38:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:38:05 -==> Parameters: 1(Long), admin(String), 登录(String), 80(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 12:38:05.427(Timestamp)
2019-04-25 12:38:06 -请求地址 : http://localhost:8081/index
2019-04-25 12:38:06 -HTTP METHOD : GET
2019-04-25 12:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:38:06 -参数 : [{}]
2019-04-25 12:38:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:38:06 -==> Parameters: 1(Long)
2019-04-25 12:38:06 -<==    Updates: 1
2019-04-25 12:38:06 -<==      Total: 49
2019-04-25 12:38:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:38:06 -==> Parameters: 138(Long)
2019-04-25 12:38:06 -<==      Total: 1
2019-04-25 12:38:06 -耗时 : 398
2019-04-25 12:38:06 -返回值 : index_v1
2019-04-25 12:38:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:38:06 -请求地址 : http://localhost:8081/main
2019-04-25 12:38:06 -HTTP METHOD : GET
2019-04-25 12:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:38:06 -参数 : []
2019-04-25 12:38:06 -耗时 : 0
2019-04-25 12:38:06 -返回值 : main
2019-04-25 12:38:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 398(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:38:06.418(Timestamp)
2019-04-25 12:38:06 -<==    Updates: 1
2019-04-25 12:38:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:38:06 -HTTP METHOD : GET
2019-04-25 12:38:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:38:06 -参数 : []
2019-04-25 12:38:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:38:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:38:06 -<==      Total: 0
2019-04-25 12:38:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:38:06 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:38:06 -<==      Total: 1
2019-04-25 12:38:06 -耗时 : 9
2019-04-25 12:38:06 -返回值 : com.bootdo.common.utils.PageUtils@370a458
2019-04-25 12:38:07 -请求地址 : http://localhost:8081/main
2019-04-25 12:38:07 -HTTP METHOD : GET
2019-04-25 12:38:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:38:07 -参数 : []
2019-04-25 12:38:07 -耗时 : 0
2019-04-25 12:38:07 -返回值 : main
2019-04-25 12:38:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 12:38:32 -==> Parameters: 1(Long)
2019-04-25 12:38:32 -<==      Total: 93
2019-04-25 12:38:32 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 12:38:32 -HTTP METHOD : GET
2019-04-25 12:38:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 12:38:32 -参数 : []
2019-04-25 12:38:32 -耗时 : 1
2019-04-25 12:38:32 -返回值 : charts/tableElecYY
2019-04-25 12:40:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:40:57 -HTTP METHOD : GET
2019-04-25 12:40:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:40:57 -参数 : []
2019-04-25 12:40:57 -耗时 : 0
2019-04-25 12:40:57 -返回值 : charts/tableWaterYY
2019-04-25 12:44:48 -请求地址 : http://localhost:8081/index
2019-04-25 12:44:48 -HTTP METHOD : GET
2019-04-25 12:44:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:44:48 -参数 : [{}]
2019-04-25 12:44:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:44:48 -==> Parameters: 1(Long)
2019-04-25 12:44:48 -<==      Total: 49
2019-04-25 12:44:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:44:48 -==> Parameters: 138(Long)
2019-04-25 12:44:48 -<==      Total: 1
2019-04-25 12:44:48 -耗时 : 22
2019-04-25 12:44:48 -返回值 : index_v1
2019-04-25 12:44:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:44:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:44:48.214(Timestamp)
2019-04-25 12:44:48 -<==    Updates: 1
2019-04-25 12:44:48 -请求地址 : http://localhost:8081/main
2019-04-25 12:44:48 -HTTP METHOD : GET
2019-04-25 12:44:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:44:48 -参数 : []
2019-04-25 12:44:48 -耗时 : 0
2019-04-25 12:44:48 -返回值 : main
2019-04-25 12:44:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:44:48 -HTTP METHOD : GET
2019-04-25 12:44:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:44:48 -参数 : []
2019-04-25 12:44:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:44:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:44:48 -<==      Total: 0
2019-04-25 12:44:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:44:48 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:44:48 -<==      Total: 1
2019-04-25 12:44:48 -耗时 : 6
2019-04-25 12:44:48 -返回值 : com.bootdo.common.utils.PageUtils@7d168613
2019-04-25 12:44:48 -请求地址 : http://localhost:8081/main
2019-04-25 12:44:48 -HTTP METHOD : GET
2019-04-25 12:44:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:44:48 -参数 : []
2019-04-25 12:44:48 -耗时 : 1
2019-04-25 12:44:48 -返回值 : main
2019-04-25 12:44:51 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 12:44:51 -HTTP METHOD : GET
2019-04-25 12:44:51 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 12:44:51 -参数 : []
2019-04-25 12:44:51 -耗时 : 0
2019-04-25 12:44:51 -返回值 : charts/countYY
2019-04-25 12:44:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 12:44:55 -HTTP METHOD : GET
2019-04-25 12:44:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 12:44:55 -参数 : []
2019-04-25 12:44:55 -耗时 : 0
2019-04-25 12:44:55 -返回值 : charts/tableElecYY
2019-04-25 12:45:05 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:45:05 -HTTP METHOD : GET
2019-04-25 12:45:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:45:05 -参数 : []
2019-04-25 12:45:05 -耗时 : 2
2019-04-25 12:45:05 -返回值 : charts/tableWaterYY
2019-04-25 12:46:02 -请求地址 : http://localhost:8081/index
2019-04-25 12:46:02 -HTTP METHOD : GET
2019-04-25 12:46:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:46:02 -参数 : [{}]
2019-04-25 12:46:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:46:02 -==> Parameters: 1(Long)
2019-04-25 12:46:02 -<==      Total: 49
2019-04-25 12:46:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:46:02 -==> Parameters: 138(Long)
2019-04-25 12:46:02 -<==      Total: 1
2019-04-25 12:46:02 -耗时 : 112
2019-04-25 12:46:02 -返回值 : index_v1
2019-04-25 12:46:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:46:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 112(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:46:02.543(Timestamp)
2019-04-25 12:46:02 -请求地址 : http://localhost:8081/main
2019-04-25 12:46:02 -HTTP METHOD : GET
2019-04-25 12:46:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:46:02 -参数 : []
2019-04-25 12:46:02 -耗时 : 0
2019-04-25 12:46:02 -返回值 : main
2019-04-25 12:46:02 -<==    Updates: 1
2019-04-25 12:46:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:46:02 -HTTP METHOD : GET
2019-04-25 12:46:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:46:02 -参数 : []
2019-04-25 12:46:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:46:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:46:02 -<==      Total: 0
2019-04-25 12:46:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:46:02 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:46:02 -<==      Total: 1
2019-04-25 12:46:02 -耗时 : 9
2019-04-25 12:46:02 -返回值 : com.bootdo.common.utils.PageUtils@1ef5772b
2019-04-25 12:46:02 -请求地址 : http://localhost:8081/main
2019-04-25 12:46:02 -HTTP METHOD : GET
2019-04-25 12:46:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:46:02 -参数 : []
2019-04-25 12:46:02 -耗时 : 1
2019-04-25 12:46:02 -返回值 : main
2019-04-25 12:46:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 12:46:05 -HTTP METHOD : GET
2019-04-25 12:46:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 12:46:05 -参数 : []
2019-04-25 12:46:05 -耗时 : 0
2019-04-25 12:46:05 -返回值 : charts/tableElecYY
2019-04-25 12:46:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:46:06 -HTTP METHOD : GET
2019-04-25 12:46:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:46:06 -参数 : []
2019-04-25 12:46:06 -耗时 : 1
2019-04-25 12:46:06 -返回值 : charts/tableWaterYY
2019-04-25 12:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 19 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(19)-CONNECTED(19)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 225], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 37], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3383]
2019-04-25 12:56:36 -请求地址 : http://localhost:8081/index
2019-04-25 12:56:36 -HTTP METHOD : GET
2019-04-25 12:56:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:56:36 -参数 : [{}]
2019-04-25 12:56:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:56:36 -==> Parameters: 1(Long)
2019-04-25 12:56:36 -<==      Total: 49
2019-04-25 12:56:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:56:36 -==> Parameters: 138(Long)
2019-04-25 12:56:36 -<==      Total: 1
2019-04-25 12:56:36 -耗时 : 60
2019-04-25 12:56:36 -返回值 : index_v1
2019-04-25 12:56:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:56:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 60(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:56:36.891(Timestamp)
2019-04-25 12:56:37 -<==    Updates: 1
2019-04-25 12:56:37 -请求地址 : http://localhost:8081/main
2019-04-25 12:56:37 -HTTP METHOD : GET
2019-04-25 12:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:56:37 -参数 : []
2019-04-25 12:56:37 -耗时 : 1
2019-04-25 12:56:37 -返回值 : main
2019-04-25 12:56:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:56:37 -HTTP METHOD : GET
2019-04-25 12:56:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:56:37 -参数 : []
2019-04-25 12:56:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:56:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:56:37 -<==      Total: 0
2019-04-25 12:56:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:56:37 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:56:37 -<==      Total: 1
2019-04-25 12:56:37 -耗时 : 9
2019-04-25 12:56:37 -返回值 : com.bootdo.common.utils.PageUtils@6ed1c3ae
2019-04-25 12:56:37 -请求地址 : http://localhost:8081/main
2019-04-25 12:56:37 -HTTP METHOD : GET
2019-04-25 12:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:56:37 -参数 : []
2019-04-25 12:56:37 -耗时 : 0
2019-04-25 12:56:37 -返回值 : main
2019-04-25 12:56:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 12:56:40 -==> Parameters: 1(Long)
2019-04-25 12:56:40 -<==      Total: 93
2019-04-25 12:56:40 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 12:56:40 -HTTP METHOD : GET
2019-04-25 12:56:40 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 12:56:40 -参数 : []
2019-04-25 12:56:40 -耗时 : 1
2019-04-25 12:56:40 -返回值 : charts/countYY
2019-04-25 12:56:41 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 12:56:41 -HTTP METHOD : GET
2019-04-25 12:56:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 12:56:41 -参数 : []
2019-04-25 12:56:41 -耗时 : 1
2019-04-25 12:56:41 -返回值 : charts/tableElecYY
2019-04-25 12:56:42 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:56:42 -HTTP METHOD : GET
2019-04-25 12:56:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:56:42 -参数 : []
2019-04-25 12:56:42 -耗时 : 1
2019-04-25 12:56:42 -返回值 : charts/tableWaterYY
2019-04-25 12:56:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 12:56:53 -HTTP METHOD : GET
2019-04-25 12:56:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 12:56:53 -参数 : []
2019-04-25 12:56:53 -耗时 : 2
2019-04-25 12:56:53 -返回值 : charts/tableHeatYY
2019-04-25 12:57:57 -请求地址 : http://localhost:8081/index
2019-04-25 12:57:57 -HTTP METHOD : GET
2019-04-25 12:57:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:57:57 -参数 : [{}]
2019-04-25 12:57:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:57:57 -==> Parameters: 1(Long)
2019-04-25 12:57:58 -<==      Total: 49
2019-04-25 12:57:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:57:58 -==> Parameters: 138(Long)
2019-04-25 12:57:58 -<==      Total: 1
2019-04-25 12:57:58 -耗时 : 100
2019-04-25 12:57:58 -返回值 : index_v1
2019-04-25 12:57:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:57:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 100(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:57:58.037(Timestamp)
2019-04-25 12:57:58 -<==    Updates: 1
2019-04-25 12:57:58 -请求地址 : http://localhost:8081/main
2019-04-25 12:57:58 -HTTP METHOD : GET
2019-04-25 12:57:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:57:58 -参数 : []
2019-04-25 12:57:58 -耗时 : 1
2019-04-25 12:57:58 -返回值 : main
2019-04-25 12:57:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:57:58 -HTTP METHOD : GET
2019-04-25 12:57:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:57:58 -参数 : []
2019-04-25 12:57:58 -请求地址 : http://localhost:8081/main
2019-04-25 12:57:58 -HTTP METHOD : GET
2019-04-25 12:57:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:57:58 -参数 : []
2019-04-25 12:57:58 -耗时 : 0
2019-04-25 12:57:58 -返回值 : main
2019-04-25 12:57:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:57:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:57:58 -<==      Total: 0
2019-04-25 12:57:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:57:58 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:57:58 -<==      Total: 1
2019-04-25 12:57:58 -耗时 : 100
2019-04-25 12:57:58 -返回值 : com.bootdo.common.utils.PageUtils@75588db4
2019-04-25 12:58:01 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 12:58:01 -HTTP METHOD : GET
2019-04-25 12:58:01 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 12:58:01 -参数 : []
2019-04-25 12:58:01 -耗时 : 0
2019-04-25 12:58:01 -返回值 : charts/countYY
2019-04-25 12:58:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 12:58:03 -HTTP METHOD : GET
2019-04-25 12:58:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 12:58:03 -参数 : []
2019-04-25 12:58:03 -耗时 : 0
2019-04-25 12:58:03 -返回值 : charts/tableElecYY
2019-04-25 12:58:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:58:04 -HTTP METHOD : GET
2019-04-25 12:58:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:58:04 -参数 : []
2019-04-25 12:58:04 -耗时 : 3
2019-04-25 12:58:04 -返回值 : charts/tableWaterYY
2019-04-25 12:58:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 12:58:04 -HTTP METHOD : GET
2019-04-25 12:58:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 12:58:04 -参数 : []
2019-04-25 12:58:05 -耗时 : 1
2019-04-25 12:58:05 -返回值 : charts/tableHeatYY
2019-04-25 12:58:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 12:58:05 -HTTP METHOD : GET
2019-04-25 12:58:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 12:58:05 -参数 : []
2019-04-25 12:58:05 -耗时 : 0
2019-04-25 12:58:05 -返回值 : charts/tableHeatYY
2019-04-25 12:58:11 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:58:11 -HTTP METHOD : GET
2019-04-25 12:58:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:58:11 -参数 : []
2019-04-25 12:58:11 -耗时 : 0
2019-04-25 12:58:11 -返回值 : charts/tableWaterYY
2019-04-25 12:58:12 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 12:58:12 -HTTP METHOD : GET
2019-04-25 12:58:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 12:58:12 -参数 : []
2019-04-25 12:58:12 -耗时 : 1
2019-04-25 12:58:12 -返回值 : charts/tableHeatYY
2019-04-25 12:58:13 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 12:58:13 -HTTP METHOD : GET
2019-04-25 12:58:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 12:58:13 -参数 : []
2019-04-25 12:58:13 -耗时 : 0
2019-04-25 12:58:13 -返回值 : charts/tableWaterYY
2019-04-25 12:58:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 12:58:14 -HTTP METHOD : GET
2019-04-25 12:58:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 12:58:14 -参数 : []
2019-04-25 12:58:14 -耗时 : 1
2019-04-25 12:58:14 -返回值 : charts/tableHeatYY
2019-04-25 12:59:00 -请求地址 : http://localhost:8081/index
2019-04-25 12:59:00 -HTTP METHOD : GET
2019-04-25 12:59:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 12:59:00 -参数 : [{}]
2019-04-25 12:59:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 12:59:00 -==> Parameters: 1(Long)
2019-04-25 12:59:00 -<==      Total: 49
2019-04-25 12:59:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 12:59:00 -==> Parameters: 138(Long)
2019-04-25 12:59:00 -<==      Total: 1
2019-04-25 12:59:00 -耗时 : 19
2019-04-25 12:59:00 -返回值 : index_v1
2019-04-25 12:59:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 12:59:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 12:59:00.17(Timestamp)
2019-04-25 12:59:00 -<==    Updates: 1
2019-04-25 12:59:00 -请求地址 : http://localhost:8081/main
2019-04-25 12:59:00 -HTTP METHOD : GET
2019-04-25 12:59:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:59:00 -参数 : []
2019-04-25 12:59:00 -耗时 : 1
2019-04-25 12:59:00 -返回值 : main
2019-04-25 12:59:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 12:59:00 -HTTP METHOD : GET
2019-04-25 12:59:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 12:59:00 -参数 : []
2019-04-25 12:59:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 12:59:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 12:59:00 -<==      Total: 0
2019-04-25 12:59:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 12:59:00 -==> Parameters: 1(Long), 0(String)
2019-04-25 12:59:00 -<==      Total: 1
2019-04-25 12:59:00 -耗时 : 9
2019-04-25 12:59:00 -返回值 : com.bootdo.common.utils.PageUtils@755610eb
2019-04-25 12:59:00 -请求地址 : http://localhost:8081/main
2019-04-25 12:59:00 -HTTP METHOD : GET
2019-04-25 12:59:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 12:59:00 -参数 : []
2019-04-25 12:59:00 -耗时 : 1
2019-04-25 12:59:00 -返回值 : main
2019-04-25 13:03:32 -请求地址 : http://localhost:8081/index
2019-04-25 13:03:32 -HTTP METHOD : GET
2019-04-25 13:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:03:32 -参数 : [{}]
2019-04-25 13:03:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:03:32 -==> Parameters: 1(Long)
2019-04-25 13:03:32 -<==      Total: 49
2019-04-25 13:03:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:03:32 -==> Parameters: 138(Long)
2019-04-25 13:03:32 -<==      Total: 1
2019-04-25 13:03:32 -耗时 : 93
2019-04-25 13:03:32 -返回值 : index_v1
2019-04-25 13:03:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:03:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 93(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:03:32.173(Timestamp)
2019-04-25 13:03:32 -<==    Updates: 1
2019-04-25 13:03:32 -请求地址 : http://localhost:8081/main
2019-04-25 13:03:32 -HTTP METHOD : GET
2019-04-25 13:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:03:32 -参数 : []
2019-04-25 13:03:32 -耗时 : 0
2019-04-25 13:03:32 -返回值 : main
2019-04-25 13:03:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:03:32 -HTTP METHOD : GET
2019-04-25 13:03:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:03:32 -参数 : []
2019-04-25 13:03:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:03:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:03:32 -<==      Total: 0
2019-04-25 13:03:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:03:32 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:03:32 -<==      Total: 1
2019-04-25 13:03:32 -耗时 : 8
2019-04-25 13:03:32 -返回值 : com.bootdo.common.utils.PageUtils@4d1a0832
2019-04-25 13:03:32 -请求地址 : http://localhost:8081/main
2019-04-25 13:03:32 -HTTP METHOD : GET
2019-04-25 13:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:03:32 -参数 : []
2019-04-25 13:03:32 -耗时 : 0
2019-04-25 13:03:32 -返回值 : main
2019-04-25 13:03:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 13:03:36 -HTTP METHOD : GET
2019-04-25 13:03:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 13:03:36 -参数 : []
2019-04-25 13:03:36 -耗时 : 1
2019-04-25 13:03:36 -返回值 : charts/tableElecMM
2019-04-25 13:03:42 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:03:42 -HTTP METHOD : GET
2019-04-25 13:03:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:03:42 -参数 : []
2019-04-25 13:03:42 -耗时 : 1
2019-04-25 13:03:42 -返回值 : charts/tableElecYY
2019-04-25 13:03:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:03:51 -HTTP METHOD : GET
2019-04-25 13:03:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:03:51 -参数 : []
2019-04-25 13:03:51 -耗时 : 1
2019-04-25 13:03:51 -返回值 : charts/tableHeatYY
2019-04-25 13:03:52 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:03:52 -HTTP METHOD : GET
2019-04-25 13:03:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:03:52 -参数 : []
2019-04-25 13:03:52 -耗时 : 0
2019-04-25 13:03:52 -返回值 : charts/tableWaterYY
2019-04-25 13:03:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:03:53 -HTTP METHOD : GET
2019-04-25 13:03:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:03:53 -参数 : []
2019-04-25 13:03:53 -耗时 : 0
2019-04-25 13:03:53 -返回值 : charts/tableHeatYY
2019-04-25 13:04:30 -请求地址 : http://localhost:8081/index
2019-04-25 13:04:30 -HTTP METHOD : GET
2019-04-25 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:04:30 -参数 : [{}]
2019-04-25 13:04:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:04:30 -==> Parameters: 1(Long)
2019-04-25 13:04:30 -<==      Total: 49
2019-04-25 13:04:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:04:30 -==> Parameters: 138(Long)
2019-04-25 13:04:30 -<==      Total: 1
2019-04-25 13:04:30 -耗时 : 20
2019-04-25 13:04:30 -返回值 : index_v1
2019-04-25 13:04:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:04:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:04:30.513(Timestamp)
2019-04-25 13:04:30 -<==    Updates: 1
2019-04-25 13:04:30 -请求地址 : http://localhost:8081/main
2019-04-25 13:04:30 -HTTP METHOD : GET
2019-04-25 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:04:30 -参数 : []
2019-04-25 13:04:30 -耗时 : 23
2019-04-25 13:04:30 -返回值 : main
2019-04-25 13:04:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:04:30 -HTTP METHOD : GET
2019-04-25 13:04:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:04:30 -参数 : []
2019-04-25 13:04:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:04:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:04:30 -<==      Total: 0
2019-04-25 13:04:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:04:30 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:04:30 -<==      Total: 1
2019-04-25 13:04:30 -耗时 : 8
2019-04-25 13:04:30 -返回值 : com.bootdo.common.utils.PageUtils@7d2fca25
2019-04-25 13:04:30 -请求地址 : http://localhost:8081/main
2019-04-25 13:04:30 -HTTP METHOD : GET
2019-04-25 13:04:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:04:30 -参数 : []
2019-04-25 13:04:30 -耗时 : 0
2019-04-25 13:04:30 -返回值 : main
2019-04-25 13:04:33 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:04:33 -HTTP METHOD : GET
2019-04-25 13:04:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:04:33 -参数 : []
2019-04-25 13:04:33 -耗时 : 0
2019-04-25 13:04:33 -返回值 : charts/tableElecYY
2019-04-25 13:05:28 -请求地址 : http://localhost:8081/index
2019-04-25 13:05:28 -HTTP METHOD : GET
2019-04-25 13:05:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:05:28 -参数 : [{}]
2019-04-25 13:05:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:05:28 -==> Parameters: 1(Long)
2019-04-25 13:05:28 -<==      Total: 49
2019-04-25 13:05:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:05:28 -==> Parameters: 138(Long)
2019-04-25 13:05:28 -<==      Total: 1
2019-04-25 13:05:28 -耗时 : 20
2019-04-25 13:05:28 -返回值 : index_v1
2019-04-25 13:05:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:05:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:05:28.558(Timestamp)
2019-04-25 13:05:28 -<==    Updates: 1
2019-04-25 13:05:28 -请求地址 : http://localhost:8081/main
2019-04-25 13:05:28 -HTTP METHOD : GET
2019-04-25 13:05:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:05:28 -参数 : []
2019-04-25 13:05:28 -耗时 : 1
2019-04-25 13:05:28 -返回值 : main
2019-04-25 13:05:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:05:28 -HTTP METHOD : GET
2019-04-25 13:05:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:05:28 -参数 : []
2019-04-25 13:05:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:05:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:05:28 -<==      Total: 0
2019-04-25 13:05:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:05:28 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:05:28 -<==      Total: 1
2019-04-25 13:05:28 -耗时 : 6
2019-04-25 13:05:28 -返回值 : com.bootdo.common.utils.PageUtils@41283996
2019-04-25 13:05:28 -请求地址 : http://localhost:8081/main
2019-04-25 13:05:28 -HTTP METHOD : GET
2019-04-25 13:05:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:05:28 -参数 : []
2019-04-25 13:05:28 -耗时 : 1
2019-04-25 13:05:28 -返回值 : main
2019-04-25 13:05:33 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 13:05:33 -HTTP METHOD : GET
2019-04-25 13:05:33 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 13:05:33 -参数 : []
2019-04-25 13:05:33 -耗时 : 0
2019-04-25 13:05:33 -返回值 : charts/countYY
2019-04-25 13:05:35 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:35 -HTTP METHOD : GET
2019-04-25 13:05:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:35 -参数 : []
2019-04-25 13:05:35 -耗时 : 0
2019-04-25 13:05:35 -返回值 : charts/tableElecYY
2019-04-25 13:05:42 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:42 -HTTP METHOD : GET
2019-04-25 13:05:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:42 -参数 : []
2019-04-25 13:05:42 -耗时 : 0
2019-04-25 13:05:42 -返回值 : charts/tableHeatYY
2019-04-25 13:05:43 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:43 -HTTP METHOD : GET
2019-04-25 13:05:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:43 -参数 : []
2019-04-25 13:05:43 -耗时 : 0
2019-04-25 13:05:43 -返回值 : charts/tableWaterYY
2019-04-25 13:05:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:44 -HTTP METHOD : GET
2019-04-25 13:05:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:44 -参数 : []
2019-04-25 13:05:44 -耗时 : 76
2019-04-25 13:05:44 -返回值 : charts/tableHeatYY
2019-04-25 13:05:44 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:44 -HTTP METHOD : GET
2019-04-25 13:05:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:44 -参数 : []
2019-04-25 13:05:44 -耗时 : 1
2019-04-25 13:05:44 -返回值 : charts/tableElecYY
2019-04-25 13:05:45 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:45 -HTTP METHOD : GET
2019-04-25 13:05:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:45 -参数 : []
2019-04-25 13:05:45 -耗时 : 0
2019-04-25 13:05:45 -返回值 : charts/tableHeatYY
2019-04-25 13:05:46 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:46 -HTTP METHOD : GET
2019-04-25 13:05:46 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:46 -参数 : []
2019-04-25 13:05:46 -耗时 : 0
2019-04-25 13:05:46 -返回值 : charts/tableWaterYY
2019-04-25 13:05:46 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:46 -HTTP METHOD : GET
2019-04-25 13:05:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:46 -参数 : []
2019-04-25 13:05:46 -耗时 : 0
2019-04-25 13:05:46 -返回值 : charts/tableHeatYY
2019-04-25 13:05:47 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:47 -HTTP METHOD : GET
2019-04-25 13:05:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:47 -参数 : []
2019-04-25 13:05:47 -耗时 : 1
2019-04-25 13:05:47 -返回值 : charts/tableElecYY
2019-04-25 13:05:50 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:50 -HTTP METHOD : GET
2019-04-25 13:05:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:50 -参数 : []
2019-04-25 13:05:50 -耗时 : 1
2019-04-25 13:05:50 -返回值 : charts/tableHeatYY
2019-04-25 13:05:51 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:51 -HTTP METHOD : GET
2019-04-25 13:05:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:51 -参数 : []
2019-04-25 13:05:51 -耗时 : 0
2019-04-25 13:05:51 -返回值 : charts/tableWaterYY
2019-04-25 13:05:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:51 -HTTP METHOD : GET
2019-04-25 13:05:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:51 -参数 : []
2019-04-25 13:05:51 -耗时 : 0
2019-04-25 13:05:51 -返回值 : charts/tableHeatYY
2019-04-25 13:05:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:52 -HTTP METHOD : GET
2019-04-25 13:05:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:52 -参数 : []
2019-04-25 13:05:52 -耗时 : 0
2019-04-25 13:05:52 -返回值 : charts/tableElecYY
2019-04-25 13:05:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:53 -HTTP METHOD : GET
2019-04-25 13:05:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:53 -参数 : []
2019-04-25 13:05:53 -耗时 : 0
2019-04-25 13:05:53 -返回值 : charts/tableHeatYY
2019-04-25 13:05:53 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:53 -HTTP METHOD : GET
2019-04-25 13:05:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:53 -参数 : []
2019-04-25 13:05:53 -耗时 : 1
2019-04-25 13:05:53 -返回值 : charts/tableWaterYY
2019-04-25 13:05:54 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:54 -HTTP METHOD : GET
2019-04-25 13:05:54 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:54 -参数 : []
2019-04-25 13:05:54 -耗时 : 0
2019-04-25 13:05:54 -返回值 : charts/tableHeatYY
2019-04-25 13:05:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:56 -HTTP METHOD : GET
2019-04-25 13:05:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:56 -参数 : []
2019-04-25 13:05:56 -耗时 : 1
2019-04-25 13:05:56 -返回值 : charts/tableElecYY
2019-04-25 13:05:56 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:56 -HTTP METHOD : GET
2019-04-25 13:05:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:56 -参数 : []
2019-04-25 13:05:56 -耗时 : 1
2019-04-25 13:05:56 -返回值 : charts/tableHeatYY
2019-04-25 13:05:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:57 -HTTP METHOD : GET
2019-04-25 13:05:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:57 -参数 : []
2019-04-25 13:05:57 -耗时 : 0
2019-04-25 13:05:57 -返回值 : charts/tableWaterYY
2019-04-25 13:05:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:57 -HTTP METHOD : GET
2019-04-25 13:05:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:57 -参数 : []
2019-04-25 13:05:57 -耗时 : 0
2019-04-25 13:05:57 -返回值 : charts/tableHeatYY
2019-04-25 13:05:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:05:58 -HTTP METHOD : GET
2019-04-25 13:05:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:05:58 -参数 : []
2019-04-25 13:05:58 -耗时 : 0
2019-04-25 13:05:58 -返回值 : charts/tableElecYY
2019-04-25 13:05:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:59 -HTTP METHOD : GET
2019-04-25 13:05:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:59 -参数 : []
2019-04-25 13:05:59 -耗时 : 0
2019-04-25 13:05:59 -返回值 : charts/tableHeatYY
2019-04-25 13:05:59 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:05:59 -HTTP METHOD : GET
2019-04-25 13:05:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:05:59 -参数 : []
2019-04-25 13:05:59 -耗时 : 0
2019-04-25 13:05:59 -返回值 : charts/tableWaterYY
2019-04-25 13:05:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:05:59 -HTTP METHOD : GET
2019-04-25 13:05:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:05:59 -参数 : []
2019-04-25 13:05:59 -耗时 : 1
2019-04-25 13:05:59 -返回值 : charts/tableHeatYY
2019-04-25 13:06:00 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:06:00 -HTTP METHOD : GET
2019-04-25 13:06:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:06:00 -参数 : []
2019-04-25 13:06:00 -耗时 : 0
2019-04-25 13:06:00 -返回值 : charts/tableElecYY
2019-04-25 13:06:01 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:01 -HTTP METHOD : GET
2019-04-25 13:06:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:01 -参数 : []
2019-04-25 13:06:01 -耗时 : 1
2019-04-25 13:06:01 -返回值 : charts/tableHeatYY
2019-04-25 13:06:01 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:06:01 -HTTP METHOD : GET
2019-04-25 13:06:01 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:06:01 -参数 : []
2019-04-25 13:06:01 -耗时 : 1
2019-04-25 13:06:01 -返回值 : charts/tableWaterYY
2019-04-25 13:06:02 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:02 -HTTP METHOD : GET
2019-04-25 13:06:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:02 -参数 : []
2019-04-25 13:06:02 -耗时 : 0
2019-04-25 13:06:02 -返回值 : charts/tableHeatYY
2019-04-25 13:06:03 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:06:03 -HTTP METHOD : GET
2019-04-25 13:06:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:06:03 -参数 : []
2019-04-25 13:06:03 -耗时 : 1
2019-04-25 13:06:03 -返回值 : charts/tableElecYY
2019-04-25 13:06:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:03 -HTTP METHOD : GET
2019-04-25 13:06:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:03 -参数 : []
2019-04-25 13:06:03 -耗时 : 0
2019-04-25 13:06:03 -返回值 : charts/tableHeatYY
2019-04-25 13:06:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:06:04 -HTTP METHOD : GET
2019-04-25 13:06:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:06:04 -参数 : []
2019-04-25 13:06:04 -耗时 : 1
2019-04-25 13:06:04 -返回值 : charts/tableWaterYY
2019-04-25 13:06:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:04 -HTTP METHOD : GET
2019-04-25 13:06:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:04 -参数 : []
2019-04-25 13:06:04 -耗时 : 0
2019-04-25 13:06:04 -返回值 : charts/tableHeatYY
2019-04-25 13:06:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:06:05 -HTTP METHOD : GET
2019-04-25 13:06:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:06:05 -参数 : []
2019-04-25 13:06:05 -耗时 : 1
2019-04-25 13:06:05 -返回值 : charts/tableElecYY
2019-04-25 13:06:34 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:34 -HTTP METHOD : GET
2019-04-25 13:06:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:34 -参数 : []
2019-04-25 13:06:34 -耗时 : 1
2019-04-25 13:06:34 -返回值 : charts/tableHeatYY
2019-04-25 13:06:37 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:06:37 -HTTP METHOD : GET
2019-04-25 13:06:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:06:37 -参数 : []
2019-04-25 13:06:37 -耗时 : 0
2019-04-25 13:06:37 -返回值 : charts/tableWaterYY
2019-04-25 13:06:39 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:39 -HTTP METHOD : GET
2019-04-25 13:06:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:39 -参数 : []
2019-04-25 13:06:39 -耗时 : 1
2019-04-25 13:06:39 -返回值 : charts/tableHeatYY
2019-04-25 13:06:40 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:06:40 -HTTP METHOD : GET
2019-04-25 13:06:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:06:40 -参数 : []
2019-04-25 13:06:40 -耗时 : 1
2019-04-25 13:06:40 -返回值 : charts/tableWaterYY
2019-04-25 13:06:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 13:06:41 -==> Parameters: 1(Long)
2019-04-25 13:06:41 -<==      Total: 93
2019-04-25 13:06:41 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:06:41 -HTTP METHOD : GET
2019-04-25 13:06:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:06:41 -参数 : []
2019-04-25 13:06:41 -耗时 : 0
2019-04-25 13:06:41 -返回值 : charts/tableHeatYY
2019-04-25 13:10:04 -请求地址 : http://localhost:8081/index
2019-04-25 13:10:04 -HTTP METHOD : GET
2019-04-25 13:10:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:10:04 -参数 : [{}]
2019-04-25 13:10:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:10:04 -==> Parameters: 1(Long)
2019-04-25 13:10:04 -<==      Total: 49
2019-04-25 13:10:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:10:04 -==> Parameters: 138(Long)
2019-04-25 13:10:04 -<==      Total: 1
2019-04-25 13:10:04 -耗时 : 18
2019-04-25 13:10:04 -返回值 : index_v1
2019-04-25 13:10:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:10:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:10:04.634(Timestamp)
2019-04-25 13:10:04 -<==    Updates: 1
2019-04-25 13:10:04 -请求地址 : http://localhost:8081/main
2019-04-25 13:10:04 -HTTP METHOD : GET
2019-04-25 13:10:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:10:04 -参数 : []
2019-04-25 13:10:04 -耗时 : 145
2019-04-25 13:10:04 -返回值 : main
2019-04-25 13:10:06 -请求地址 : http://localhost:8081/main
2019-04-25 13:10:06 -HTTP METHOD : GET
2019-04-25 13:10:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:10:06 -参数 : []
2019-04-25 13:10:06 -耗时 : 0
2019-04-25 13:10:06 -返回值 : main
2019-04-25 13:10:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:10:06 -HTTP METHOD : GET
2019-04-25 13:10:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:10:06 -参数 : []
2019-04-25 13:10:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:10:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:10:06 -<==      Total: 0
2019-04-25 13:10:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:10:06 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:10:06 -<==      Total: 1
2019-04-25 13:10:06 -耗时 : 6
2019-04-25 13:10:06 -返回值 : com.bootdo.common.utils.PageUtils@1fbe6855
2019-04-25 13:10:09 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:10:09 -HTTP METHOD : GET
2019-04-25 13:10:09 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:10:09 -参数 : []
2019-04-25 13:10:09 -耗时 : 1
2019-04-25 13:10:09 -返回值 : charts/tableElecYY
2019-04-25 13:10:11 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 13:10:11 -HTTP METHOD : GET
2019-04-25 13:10:11 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 13:10:11 -参数 : []
2019-04-25 13:10:11 -耗时 : 32
2019-04-25 13:10:11 -返回值 : charts/countYY
2019-04-25 13:10:13 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:10:13 -HTTP METHOD : GET
2019-04-25 13:10:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:10:13 -参数 : []
2019-04-25 13:10:13 -耗时 : 1
2019-04-25 13:10:13 -返回值 : charts/tableWaterYY
2019-04-25 13:10:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:10:14 -HTTP METHOD : GET
2019-04-25 13:10:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:10:14 -参数 : []
2019-04-25 13:10:14 -耗时 : 0
2019-04-25 13:10:14 -返回值 : charts/tableHeatYY
2019-04-25 13:10:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:10:16 -HTTP METHOD : GET
2019-04-25 13:10:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:10:16 -参数 : []
2019-04-25 13:10:16 -耗时 : 0
2019-04-25 13:10:16 -返回值 : charts/tableElecYY
2019-04-25 13:10:17 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:10:17 -HTTP METHOD : GET
2019-04-25 13:10:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:10:17 -参数 : []
2019-04-25 13:10:17 -耗时 : 0
2019-04-25 13:10:17 -返回值 : charts/tableHeatYY
2019-04-25 13:10:17 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:10:17 -HTTP METHOD : GET
2019-04-25 13:10:17 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:10:17 -参数 : []
2019-04-25 13:10:17 -耗时 : 1
2019-04-25 13:10:17 -返回值 : charts/tableWaterYY
2019-04-25 13:10:18 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:10:18 -HTTP METHOD : GET
2019-04-25 13:10:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:10:18 -参数 : []
2019-04-25 13:10:18 -耗时 : 1
2019-04-25 13:10:18 -返回值 : charts/tableHeatYY
2019-04-25 13:10:18 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:10:18 -HTTP METHOD : GET
2019-04-25 13:10:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:10:18 -参数 : []
2019-04-25 13:10:18 -耗时 : 1
2019-04-25 13:10:18 -返回值 : charts/tableElecYY
2019-04-25 13:10:19 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:10:19 -HTTP METHOD : GET
2019-04-25 13:10:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:10:19 -参数 : []
2019-04-25 13:10:19 -耗时 : 0
2019-04-25 13:10:19 -返回值 : charts/tableHeatYY
2019-04-25 13:10:19 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 13:10:19 -HTTP METHOD : GET
2019-04-25 13:10:19 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 13:10:19 -参数 : []
2019-04-25 13:10:19 -耗时 : 0
2019-04-25 13:10:19 -返回值 : charts/tableWaterYY
2019-04-25 13:10:20 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-04-25 13:10:20 -HTTP METHOD : GET
2019-04-25 13:10:20 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-04-25 13:10:20 -参数 : []
2019-04-25 13:10:20 -耗时 : 0
2019-04-25 13:10:20 -返回值 : charts/tableHeatYY
2019-04-25 13:10:21 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:10:21 -HTTP METHOD : GET
2019-04-25 13:10:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:10:21 -参数 : []
2019-04-25 13:10:21 -耗时 : 1
2019-04-25 13:10:21 -返回值 : charts/tableElecYY
2019-04-25 13:18:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 26 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(26)-CONNECTED(26)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 309], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 51], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3814]
2019-04-25 13:19:15 -Validating all active sessions...
2019-04-25 13:19:15 -Finished session validation.  No sessions were stopped.
2019-04-25 13:28:22 -请求地址 : http://localhost:8081/index
2019-04-25 13:28:22 -HTTP METHOD : GET
2019-04-25 13:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:28:22 -参数 : [{}]
2019-04-25 13:28:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:28:22 -==> Parameters: 1(Long)
2019-04-25 13:28:22 -<==      Total: 49
2019-04-25 13:28:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:28:22 -==> Parameters: 138(Long)
2019-04-25 13:28:22 -<==      Total: 1
2019-04-25 13:28:22 -耗时 : 17
2019-04-25 13:28:22 -返回值 : index_v1
2019-04-25 13:28:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:28:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:28:22.208(Timestamp)
2019-04-25 13:28:22 -<==    Updates: 1
2019-04-25 13:28:22 -请求地址 : http://localhost:8081/main
2019-04-25 13:28:22 -HTTP METHOD : GET
2019-04-25 13:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:28:22 -参数 : []
2019-04-25 13:28:22 -耗时 : 13
2019-04-25 13:28:22 -返回值 : main
2019-04-25 13:28:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:28:22 -HTTP METHOD : GET
2019-04-25 13:28:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:28:22 -参数 : []
2019-04-25 13:28:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:28:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:28:22 -<==      Total: 0
2019-04-25 13:28:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:28:22 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:28:22 -<==      Total: 1
2019-04-25 13:28:22 -耗时 : 9
2019-04-25 13:28:22 -返回值 : com.bootdo.common.utils.PageUtils@69d78a64
2019-04-25 13:28:22 -请求地址 : http://localhost:8081/main
2019-04-25 13:28:22 -HTTP METHOD : GET
2019-04-25 13:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:28:22 -参数 : []
2019-04-25 13:28:22 -耗时 : 0
2019-04-25 13:28:22 -返回值 : main
2019-04-25 13:28:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 13:28:26 -==> Parameters: 1(Long)
2019-04-25 13:28:26 -<==      Total: 93
2019-04-25 13:28:26 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 13:28:26 -HTTP METHOD : GET
2019-04-25 13:28:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 13:28:26 -参数 : []
2019-04-25 13:28:26 -耗时 : 0
2019-04-25 13:28:26 -返回值 : charts/countMM
2019-04-25 13:28:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 13:28:26 -HTTP METHOD : GET
2019-04-25 13:28:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 13:28:26 -参数 : [userType]
2019-04-25 13:28:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 13:28:26 -==> Parameters: userType(String)
2019-04-25 13:28:26 -<==      Total: 4
2019-04-25 13:28:26 -耗时 : 5
2019-04-25 13:28:26 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 13:28:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 13:28:28 -HTTP METHOD : GET
2019-04-25 13:28:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 13:28:28 -参数 : []
2019-04-25 13:28:28 -耗时 : 1
2019-04-25 13:28:28 -返回值 : charts/tableElecMM
2019-04-25 13:28:29 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 13:28:29 -HTTP METHOD : GET
2019-04-25 13:28:29 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 13:28:29 -参数 : []
2019-04-25 13:28:29 -耗时 : 0
2019-04-25 13:28:29 -返回值 : charts/countYY
2019-04-25 13:28:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 13:28:31 -HTTP METHOD : GET
2019-04-25 13:28:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 13:28:31 -参数 : []
2019-04-25 13:28:31 -耗时 : 0
2019-04-25 13:28:31 -返回值 : charts/tableElecYY
2019-04-25 13:28:32 -请求地址 : http://localhost:8081/charts/countOwe
2019-04-25 13:28:32 -HTTP METHOD : GET
2019-04-25 13:28:32 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-04-25 13:28:32 -参数 : []
2019-04-25 13:28:32 -耗时 : 2
2019-04-25 13:28:32 -返回值 : charts/countOwe
2019-04-25 13:28:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 13:28:33 -HTTP METHOD : GET
2019-04-25 13:28:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 13:28:33 -参数 : [userType]
2019-04-25 13:28:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 13:28:33 -==> Parameters: userType(String)
2019-04-25 13:28:33 -<==      Total: 4
2019-04-25 13:28:33 -耗时 : 5
2019-04-25 13:28:33 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 13:28:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 13:28:39 -HTTP METHOD : GET
2019-04-25 13:28:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 13:28:39 -参数 : []
2019-04-25 13:28:39 -耗时 : 0
2019-04-25 13:28:39 -返回值 : system/dept/deptTree
2019-04-25 13:28:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 13:28:39 -HTTP METHOD : GET
2019-04-25 13:28:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 13:28:39 -参数 : []
2019-04-25 13:28:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 13:28:39 -==> Parameters: 
2019-04-25 13:28:39 -<==      Total: 3
2019-04-25 13:28:39 -耗时 : 116
2019-04-25 13:28:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 13:28:43 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-25 13:28:43 -HTTP METHOD : POST
2019-04-25 13:28:43 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-25 13:28:43 -参数 : [com.bootdo.elec.vo.ElecVo@291684e2, com.bootdo.water.vo.WaterVo@726bdc6d, com.bootdo.heat.vo.HeatVo@22d8555f]
2019-04-25 13:28:43 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:43 -==> Parameters: 
2019-04-25 13:28:43 -<==      Total: 1
2019-04-25 13:28:43 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:43 -==> Parameters: 
2019-04-25 13:28:43 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -耗时 : 968
2019-04-25 13:28:44 -返回值 : com.bootdo.charts.vo.CountOweVo@9e4e0cb
2019-04-25 13:28:44 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-25 13:28:44 -HTTP METHOD : POST
2019-04-25 13:28:44 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-25 13:28:44 -参数 : [com.bootdo.elec.vo.ElecVo@33148b99, com.bootdo.water.vo.WaterVo@1ecd2f9d, com.bootdo.heat.vo.HeatVo@62ade5b4]
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -耗时 : 58
2019-04-25 13:28:44 -返回值 : com.bootdo.charts.vo.CountOweVo@7a7a1039
2019-04-25 13:28:44 -请求地址 : http://localhost:8081/charts/countOwe/getCountOwe
2019-04-25 13:28:44 -HTTP METHOD : POST
2019-04-25 13:28:44 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.getCountD
2019-04-25 13:28:44 -参数 : [com.bootdo.elec.vo.ElecVo@7a6f3099, com.bootdo.water.vo.WaterVo@21ec99c9, com.bootdo.heat.vo.HeatVo@7af741ec]
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT SUM(ELEC_SUM) FROM ELEC WHERE `elec_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:44 -==> Parameters: 
2019-04-25 13:28:44 -<==      Total: 1
2019-04-25 13:28:45 -==>  Preparing: SELECT SUM(WATER_SUM) FROM WATER WHERE `water_sum` < 0 
2019-04-25 13:28:45 -==> Parameters: 
2019-04-25 13:28:45 -<==      Total: 1
2019-04-25 13:28:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:45 -==> Parameters: 
2019-04-25 13:28:45 -<==      Total: 1
2019-04-25 13:28:45 -==>  Preparing: SELECT SUM(HEAT_SUM) FROM HEAT WHERE `heat_sum` < 0 
2019-04-25 13:28:45 -==> Parameters: 
2019-04-25 13:28:45 -<==      Total: 1
2019-04-25 13:28:45 -耗时 : 138
2019-04-25 13:28:45 -返回值 : com.bootdo.charts.vo.CountOweVo@3477954c
2019-04-25 13:31:47 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 13:31:47 -HTTP METHOD : GET
2019-04-25 13:31:47 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 13:31:47 -参数 : []
2019-04-25 13:31:47 -耗时 : 2
2019-04-25 13:31:47 -返回值 : charts/countDD
2019-04-25 13:31:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 13:31:47 -HTTP METHOD : GET
2019-04-25 13:31:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 13:31:47 -参数 : [userType]
2019-04-25 13:31:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 13:31:47 -==> Parameters: userType(String)
2019-04-25 13:31:47 -<==      Total: 4
2019-04-25 13:31:47 -耗时 : 4
2019-04-25 13:31:47 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 13:31:48 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 13:31:48 -HTTP METHOD : GET
2019-04-25 13:31:48 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 13:31:48 -参数 : []
2019-04-25 13:31:48 -耗时 : 0
2019-04-25 13:31:48 -返回值 : charts/tableDD
2019-04-25 13:46:23 -请求地址 : http://localhost:8081/index
2019-04-25 13:46:23 -HTTP METHOD : GET
2019-04-25 13:46:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 13:46:23 -参数 : [{}]
2019-04-25 13:46:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 13:46:23 -==> Parameters: 1(Long)
2019-04-25 13:46:23 -<==      Total: 49
2019-04-25 13:46:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 13:46:23 -==> Parameters: 138(Long)
2019-04-25 13:46:23 -<==      Total: 1
2019-04-25 13:46:23 -耗时 : 210
2019-04-25 13:46:23 -返回值 : index_v1
2019-04-25 13:46:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 13:46:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 211(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 13:46:23.64(Timestamp)
2019-04-25 13:46:23 -<==    Updates: 1
2019-04-25 13:46:23 -请求地址 : http://localhost:8081/main
2019-04-25 13:46:23 -HTTP METHOD : GET
2019-04-25 13:46:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:46:23 -参数 : []
2019-04-25 13:46:23 -耗时 : 0
2019-04-25 13:46:23 -返回值 : main
2019-04-25 13:46:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 13:46:24 -HTTP METHOD : GET
2019-04-25 13:46:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 13:46:24 -参数 : []
2019-04-25 13:46:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 13:46:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 13:46:24 -<==      Total: 0
2019-04-25 13:46:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 13:46:24 -==> Parameters: 1(Long), 0(String)
2019-04-25 13:46:24 -<==      Total: 1
2019-04-25 13:46:24 -耗时 : 29
2019-04-25 13:46:24 -返回值 : com.bootdo.common.utils.PageUtils@14667b13
2019-04-25 13:46:24 -请求地址 : http://localhost:8081/main
2019-04-25 13:46:24 -HTTP METHOD : GET
2019-04-25 13:46:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 13:46:24 -参数 : []
2019-04-25 13:46:24 -耗时 : 130
2019-04-25 13:46:24 -返回值 : main
2019-04-25 13:47:22 -Validating all active sessions...
2019-04-25 13:47:22 -Finished session validation.  No sessions were stopped.
2019-04-25 13:48:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4245]
2019-04-25 14:02:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 14:02:01 -==> Parameters: 1(Long)
2019-04-25 14:02:01 -<==      Total: 93
2019-04-25 14:02:01 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 14:02:01 -HTTP METHOD : GET
2019-04-25 14:02:01 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 14:02:01 -参数 : []
2019-04-25 14:02:01 -耗时 : 0
2019-04-25 14:02:01 -返回值 : charts/countMM
2019-04-25 14:02:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 14:02:01 -HTTP METHOD : GET
2019-04-25 14:02:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 14:02:01 -参数 : [userType]
2019-04-25 14:02:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 14:02:01 -==> Parameters: userType(String)
2019-04-25 14:02:01 -<==      Total: 4
2019-04-25 14:02:01 -耗时 : 5
2019-04-25 14:02:01 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 14:02:02 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 14:02:02 -HTTP METHOD : GET
2019-04-25 14:02:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 14:02:02 -参数 : []
2019-04-25 14:02:02 -耗时 : 1
2019-04-25 14:02:02 -返回值 : charts/tableElecMM
2019-04-25 14:02:03 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 14:02:03 -HTTP METHOD : GET
2019-04-25 14:02:03 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 14:02:03 -参数 : []
2019-04-25 14:02:03 -耗时 : 0
2019-04-25 14:02:03 -返回值 : charts/countYY
2019-04-25 14:02:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-04-25 14:02:04 -HTTP METHOD : GET
2019-04-25 14:02:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-04-25 14:02:04 -参数 : []
2019-04-25 14:02:04 -耗时 : 0
2019-04-25 14:02:04 -返回值 : charts/tableElecYY
2019-04-25 14:02:05 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-04-25 14:02:05 -HTTP METHOD : GET
2019-04-25 14:02:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-04-25 14:02:05 -参数 : []
2019-04-25 14:02:05 -耗时 : 0
2019-04-25 14:02:05 -返回值 : charts/tableWaterYY
2019-04-25 14:10:20 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 14:10:20 -HTTP METHOD : GET
2019-04-25 14:10:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 14:10:20 -参数 : []
2019-04-25 14:10:20 -耗时 : 0
2019-04-25 14:10:20 -返回值 : charts/tableWaterMM
2019-04-25 14:10:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:10:29 -HTTP METHOD : GET
2019-04-25 14:10:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:10:29 -参数 : []
2019-04-25 14:10:29 -耗时 : 1
2019-04-25 14:10:29 -返回值 : system/dept/deptTree
2019-04-25 14:10:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:10:29 -HTTP METHOD : GET
2019-04-25 14:10:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:10:29 -参数 : []
2019-04-25 14:10:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:10:29 -==> Parameters: 
2019-04-25 14:10:29 -<==      Total: 3
2019-04-25 14:10:29 -耗时 : 25
2019-04-25 14:10:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:10:31 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 14:10:31 -HTTP METHOD : GET
2019-04-25 14:10:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 14:10:31 -参数 : [com.bootdo.water.vo.WaterVo@2db9283b, com.bootdo.moneyLog.vo.WaterLogVo@5ae0e22b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41a4f60d]
2019-04-25 14:10:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:10:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:10:32 -<==      Total: 1
2019-04-25 14:10:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:10:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:10:32 -<==      Total: 1
2019-04-25 14:10:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? 
2019-04-25 14:10:32 -==> Parameters: 2(String)
2019-04-25 14:10:32 -<==      Total: 5
2019-04-25 14:10:32 -耗时 : 490
2019-04-25 14:10:32 -返回值 : null
2019-04-25 14:18:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 28 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(28)-CONNECTED(28)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 333], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 55], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4678]
2019-04-25 14:25:09 -Starting BootdoApplication on ZJZL-20180906VX with PID 8156 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 14:25:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 14:25:09 -The following profiles are active: dev
2019-04-25 14:25:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:25:10 CST 2019]; root of context hierarchy
2019-04-25 14:25:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 14:25:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 14:25:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 14:25:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:23 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:25:24 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 14:25:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 14:25:24 -Starting service [Tomcat]
2019-04-25 14:25:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 14:25:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 14:25:25 -Initializing Spring embedded WebApplicationContext
2019-04-25 14:25:25 -Root WebApplicationContext: initialization completed in 15288 ms
2019-04-25 14:25:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 14:25:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 14:25:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 14:25:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 14:25:26 -Filter xssFilter was not registered (disabled)
2019-04-25 14:25:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 14:25:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 14:25:26 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 14:25:26 -Servlet dispatcherServlet mapped to [/]
2019-04-25 14:25:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:25:10 CST 2019]; root of context hierarchy
2019-04-25 14:25:32 -Using default implementation for ThreadExecutor
2019-04-25 14:25:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 14:25:32 -Quartz Scheduler v.2.2.1 created.
2019-04-25 14:25:32 -RAMJobStore initialized.
2019-04-25 14:25:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 14:25:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 14:25:32 -Quartz scheduler version: 2.2.1
2019-04-25 14:25:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-04-25 14:25:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 14:25:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 14:25:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 14:25:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 14:25:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 14:25:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 14:25:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 14:25:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 14:25:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 14:25:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 14:25:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 14:25:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 14:25:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 14:25:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 14:25:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 14:25:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 14:25:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 14:25:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:25:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 14:25:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:25:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 14:25:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 14:25:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 14:25:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 14:25:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 14:25:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 14:25:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 14:25:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 14:25:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 14:25:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 14:25:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 14:25:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 14:25:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 14:25:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 14:25:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 14:25:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 14:25:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:25:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:25:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 14:25:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 14:25:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 14:25:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 14:25:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:25:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:25:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 14:25:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 14:25:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 14:25:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 14:25:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 14:25:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 14:25:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 14:25:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 14:25:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 14:25:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 14:25:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 14:25:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 14:25:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 14:25:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 14:25:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 14:25:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 14:25:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 14:25:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 14:25:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 14:25:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 14:25:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 14:25:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 14:25:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 14:25:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 14:25:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 14:25:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 14:25:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 14:25:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 14:25:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 14:25:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 14:25:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:25:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:25:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 14:25:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 14:25:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 14:25:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 14:25:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:25:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 14:25:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 14:25:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:25:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:25:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 14:25:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:25:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 14:25:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 14:25:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 14:25:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 14:25:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 14:25:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 14:25:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:25:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:25:10 CST 2019]; root of context hierarchy
2019-04-25 14:25:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:25:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:25:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:25:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 14:25:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 14:25:44 -Registering beans for JMX exposure on startup
2019-04-25 14:25:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 14:25:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 14:25:44 -Starting beans in phase 2147483647
2019-04-25 14:25:44 -Context refreshed
2019-04-25 14:25:44 -Found 1 custom documentation plugin(s)
2019-04-25 14:25:44 -Scanning for api listing references
2019-04-25 14:25:45 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_1
2019-04-25 14:25:45 -Generating unique operation named: addUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: editUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: listUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_2
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_3
2019-04-25 14:25:45 -Generating unique operation named: saveUsingPOST_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPOST_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPUT_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 14:25:45 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 14:25:45 -Generating unique operation named: addUsingGET_2
2019-04-25 14:25:45 -Generating unique operation named: editUsingGET_2
2019-04-25 14:25:45 -Generating unique operation named: listUsingGET_2
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_4
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_5
2019-04-25 14:25:45 -Generating unique operation named: saveUsingPOST_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPOST_2
2019-04-25 14:25:45 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: addUsingGET_3
2019-04-25 14:25:45 -Generating unique operation named: editUsingGET_3
2019-04-25 14:25:45 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 14:25:45 -Generating unique operation named: listUsingGET_3
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_6
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_7
2019-04-25 14:25:45 -Generating unique operation named: saveUsingPOST_3
2019-04-25 14:25:45 -Generating unique operation named: updateUsingGET_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPOST_3
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPUT_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 14:25:45 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 14:25:45 -Generating unique operation named: addUsingGET_4
2019-04-25 14:25:45 -Generating unique operation named: editUsingGET_4
2019-04-25 14:25:45 -Generating unique operation named: listUsingGET_4
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_8
2019-04-25 14:25:45 -Generating unique operation named: removeUsingPOST_9
2019-04-25 14:25:45 -Generating unique operation named: saveUsingPOST_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingGET_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPUT_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 14:25:46 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 14:25:46 -Generating unique operation named: ElecUsingGET_1
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_5
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_5
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_5
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_10
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_11
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingGET_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPUT_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 14:25:46 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_6
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_6
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_6
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_7
2019-04-25 14:25:46 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_7
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_12
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_13
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingGET_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPUT_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 14:25:46 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 14:25:46 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_7
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_8
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_8
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_14
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_15
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingGET_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_8
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPUT_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 14:25:46 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_8
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_9
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_9
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_16
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_17
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_8
2019-04-25 14:25:46 -Generating unique operation named: updateUsingGET_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_9
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPUT_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 14:25:46 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_9
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_10
2019-04-25 14:25:46 -Generating unique operation named: infoUsingGET_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingPOST_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingPUT_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 14:25:46 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_10
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_18
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_19
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_9
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_10
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_11
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_20
2019-04-25 14:25:46 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_10
2019-04-25 14:25:46 -Generating unique operation named: editUsingGET_11
2019-04-25 14:25:46 -Generating unique operation named: listUsingGET_12
2019-04-25 14:25:46 -Generating unique operation named: removeUsingPOST_21
2019-04-25 14:25:46 -Generating unique operation named: saveUsingPOST_10
2019-04-25 14:25:46 -Generating unique operation named: treeUsingGET_1
2019-04-25 14:25:46 -Generating unique operation named: treeUsingGET_2
2019-04-25 14:25:46 -Generating unique operation named: updateUsingPOST_11
2019-04-25 14:25:46 -Generating unique operation named: addUsingGET_11
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_12
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_13
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_22
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_23
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingGET_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPUT_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 14:25:47 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_12
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_13
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_14
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_24
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_25
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingGET_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_13
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPUT_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 14:25:47 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_13
2019-04-25 14:25:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_14
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_15
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_13
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_14
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_14
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_16
2019-04-25 14:25:47 -Generating unique operation named: listUsingHEAD_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingPOST_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingPUT_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingPATCH_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingDELETE_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingTRACE_1
2019-04-25 14:25:47 -Generating unique operation named: countDDUsingGET_1
2019-04-25 14:25:47 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 14:25:47 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 14:25:47 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 14:25:47 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 14:25:47 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 14:25:47 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 14:25:47 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 14:25:47 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_14
2019-04-25 14:25:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_15
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_17
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_26
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_15
2019-04-25 14:25:47 -Generating unique operation named: treeUsingGET_3
2019-04-25 14:25:47 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_15
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_15
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_16
2019-04-25 14:25:47 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_18
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_27
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_28
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_16
2019-04-25 14:25:47 -Generating unique operation named: updateUsingGET_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_16
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPUT_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 14:25:47 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 14:25:47 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_16
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_17
2019-04-25 14:25:47 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_19
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_29
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_30
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_17
2019-04-25 14:25:47 -Generating unique operation named: updateUsingGET_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_17
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPUT_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 14:25:47 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 14:25:47 -Generating unique operation named: addUsingGET_17
2019-04-25 14:25:47 -Generating unique operation named: editUsingGET_18
2019-04-25 14:25:47 -Generating unique operation named: listUsingGET_20
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_31
2019-04-25 14:25:47 -Generating unique operation named: removeUsingPOST_32
2019-04-25 14:25:47 -Generating unique operation named: saveUsingPOST_18
2019-04-25 14:25:47 -Generating unique operation named: updateUsingGET_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPOST_18
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPUT_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 14:25:47 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 14:25:48 -Starting Quartz Scheduler now
2019-04-25 14:25:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 14:25:48 -Starting...
2019-04-25 14:25:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 14:25:48 -Started.
2019-04-25 14:25:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 14:25:48 -Using a shared selector for servlet write/read
2019-04-25 14:25:48 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 14:25:48 -Started BootdoApplication in 39.811 seconds (JVM running for 40.772)
2019-04-25 14:25:48 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 14:25:49 -==> Parameters: 
2019-04-25 14:25:49 -<==      Total: 1
2019-04-25 14:26:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-25 14:26:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 14:26:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 14:26:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 117 ms
2019-04-25 14:26:42 -Enabling session validation scheduler...
2019-04-25 14:26:43 -请求地址 : http://localhost:8081/login;JSESSIONID=07cac1a2-625a-4dc4-8af9-30400257f9c4
2019-04-25 14:26:43 -HTTP METHOD : GET
2019-04-25 14:26:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 14:26:43 -参数 : [{}]
2019-04-25 14:26:43 -耗时 : 8
2019-04-25 14:26:43 -返回值 : login
2019-04-25 14:26:46 -请求地址 : http://localhost:8081/getVerify
2019-04-25 14:26:46 -HTTP METHOD : GET
2019-04-25 14:26:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 14:26:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@75d99c20, org.apache.shiro.web.servlet.ShiroHttpServletResponse@379f353]
2019-04-25 14:26:51 -6733
2019-04-25 14:26:51 -耗时 : 5371
2019-04-25 14:26:51 -返回值 : null
2019-04-25 14:26:57 -请求地址 : http://localhost:8081/login
2019-04-25 14:26:57 -HTTP METHOD : POST
2019-04-25 14:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 14:26:57 -参数 : [admin, 111111, 6733, org.apache.shiro.web.servlet.ShiroHttpServletRequest@41baf87e]
2019-04-25 14:26:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 14:26:57 -==> Parameters: admin(String)
2019-04-25 14:26:57 -<==      Total: 1
2019-04-25 14:26:57 -耗时 : 512
2019-04-25 14:26:57 -返回值 : {msg=操作成功, code=0}
2019-04-25 14:26:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 14:26:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:26:58 -==> Parameters: 1(Long), admin(String), 登录(String), 513(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 14:26:58.022(Timestamp)
2019-04-25 14:26:58 -请求地址 : http://localhost:8081/index
2019-04-25 14:26:58 -HTTP METHOD : GET
2019-04-25 14:26:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 14:26:58 -参数 : [{}]
2019-04-25 14:26:58 -<==    Updates: 1
2019-04-25 14:26:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 14:26:59 -==> Parameters: 1(Long)
2019-04-25 14:26:59 -<==      Total: 49
2019-04-25 14:26:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 14:26:59 -==> Parameters: 138(Long)
2019-04-25 14:26:59 -<==      Total: 1
2019-04-25 14:26:59 -耗时 : 1714
2019-04-25 14:26:59 -返回值 : index_v1
2019-04-25 14:27:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:27:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1715(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 14:27:00.276(Timestamp)
2019-04-25 14:27:00 -<==    Updates: 1
2019-04-25 14:27:00 -请求地址 : http://localhost:8081/main
2019-04-25 14:27:00 -HTTP METHOD : GET
2019-04-25 14:27:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:27:00 -参数 : []
2019-04-25 14:27:00 -耗时 : 1
2019-04-25 14:27:00 -返回值 : main
2019-04-25 14:27:01 -请求地址 : http://localhost:8081/main
2019-04-25 14:27:01 -HTTP METHOD : GET
2019-04-25 14:27:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:27:01 -参数 : []
2019-04-25 14:27:01 -耗时 : 1
2019-04-25 14:27:01 -返回值 : main
2019-04-25 14:27:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 14:27:01 -HTTP METHOD : GET
2019-04-25 14:27:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 14:27:01 -参数 : []
2019-04-25 14:27:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 14:27:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 14:27:01 -<==      Total: 0
2019-04-25 14:27:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 14:27:01 -==> Parameters: 1(Long), 0(String)
2019-04-25 14:27:01 -<==      Total: 1
2019-04-25 14:27:01 -耗时 : 192
2019-04-25 14:27:01 -返回值 : com.bootdo.common.utils.PageUtils@2bf5fe2d
2019-04-25 14:27:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 14:27:18 -==> Parameters: 1(Long)
2019-04-25 14:27:18 -<==      Total: 93
2019-04-25 14:27:18 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 14:27:18 -HTTP METHOD : GET
2019-04-25 14:27:18 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 14:27:18 -参数 : []
2019-04-25 14:27:18 -耗时 : 11
2019-04-25 14:27:18 -返回值 : charts/countMM
2019-04-25 14:27:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 14:27:18 -HTTP METHOD : GET
2019-04-25 14:27:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 14:27:18 -参数 : [userType]
2019-04-25 14:27:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 14:27:18 -==> Parameters: userType(String)
2019-04-25 14:27:19 -<==      Total: 4
2019-04-25 14:27:19 -耗时 : 182
2019-04-25 14:27:19 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 14:27:19 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 14:27:19 -HTTP METHOD : GET
2019-04-25 14:27:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 14:27:19 -参数 : []
2019-04-25 14:27:19 -耗时 : 7
2019-04-25 14:27:19 -返回值 : charts/tableDD
2019-04-25 14:27:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 14:27:20 -HTTP METHOD : GET
2019-04-25 14:27:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 14:27:20 -参数 : []
2019-04-25 14:27:20 -耗时 : 12
2019-04-25 14:27:20 -返回值 : charts/tableElecMM
2019-04-25 14:27:26 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 14:27:26 -HTTP METHOD : GET
2019-04-25 14:27:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 14:27:26 -参数 : []
2019-04-25 14:27:26 -耗时 : 7
2019-04-25 14:27:26 -返回值 : charts/tableWaterMM
2019-04-25 14:27:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:27:38 -HTTP METHOD : GET
2019-04-25 14:27:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:27:38 -参数 : []
2019-04-25 14:27:38 -耗时 : 0
2019-04-25 14:27:38 -返回值 : system/dept/deptTree
2019-04-25 14:27:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:27:38 -HTTP METHOD : GET
2019-04-25 14:27:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:27:38 -参数 : []
2019-04-25 14:27:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:27:38 -==> Parameters: 
2019-04-25 14:27:38 -<==      Total: 3
2019-04-25 14:27:38 -耗时 : 51
2019-04-25 14:27:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:27:42 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 14:27:42 -HTTP METHOD : GET
2019-04-25 14:27:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 14:27:42 -参数 : [com.bootdo.water.vo.WaterVo@1dbf4769, com.bootdo.moneyLog.vo.WaterLogVo@72696d2e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@ad24c1b]
2019-04-25 14:27:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:27:42 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:27:43 -<==      Total: 1
2019-04-25 14:27:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:27:43 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:27:43 -<==      Total: 1
2019-04-25 14:27:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? 
2019-04-25 14:27:43 -==> Parameters: 2(String)
2019-04-25 14:27:43 -<==      Total: 5
2019-04-25 14:27:43 -耗时 : 1287
2019-04-25 14:27:43 -返回值 : null
2019-04-25 14:33:30 -Starting BootdoApplication on ZJZL-20180906VX with PID 4668 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 14:33:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 14:33:30 -The following profiles are active: dev
2019-04-25 14:33:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 14:33:30 CST 2019]; root of context hierarchy
2019-04-25 14:33:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 14:33:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 14:33:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 14:33:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:33:37 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 14:33:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 14:33:37 -Starting service [Tomcat]
2019-04-25 14:33:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 14:33:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 14:33:38 -Initializing Spring embedded WebApplicationContext
2019-04-25 14:33:38 -Root WebApplicationContext: initialization completed in 7672 ms
2019-04-25 14:33:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 14:33:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 14:33:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 14:33:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 14:33:38 -Filter xssFilter was not registered (disabled)
2019-04-25 14:33:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 14:33:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 14:33:38 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 14:33:38 -Servlet dispatcherServlet mapped to [/]
2019-04-25 14:33:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 14:33:30 CST 2019]; root of context hierarchy
2019-04-25 14:33:42 -Using default implementation for ThreadExecutor
2019-04-25 14:33:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 14:33:42 -Quartz Scheduler v.2.2.1 created.
2019-04-25 14:33:42 -RAMJobStore initialized.
2019-04-25 14:33:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 14:33:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 14:33:42 -Quartz scheduler version: 2.2.1
2019-04-25 14:33:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-25 14:33:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 14:33:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 14:33:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 14:33:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 14:33:45 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 14:33:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 14:33:45 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 14:33:45 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 14:33:45 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 14:33:45 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 14:33:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 14:33:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 14:33:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 14:33:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 14:33:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 14:33:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 14:33:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:33:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 14:33:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:33:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 14:33:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 14:33:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 14:33:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 14:33:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 14:33:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 14:33:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 14:33:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 14:33:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 14:33:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 14:33:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 14:33:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 14:33:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 14:33:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 14:33:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 14:33:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 14:33:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:33:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:33:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 14:33:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 14:33:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 14:33:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 14:33:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:33:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:33:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 14:33:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 14:33:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 14:33:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 14:33:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 14:33:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 14:33:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 14:33:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 14:33:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 14:33:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 14:33:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 14:33:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 14:33:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 14:33:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 14:33:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 14:33:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 14:33:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 14:33:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 14:33:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 14:33:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 14:33:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 14:33:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 14:33:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 14:33:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 14:33:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 14:33:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 14:33:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 14:33:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 14:33:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 14:33:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 14:33:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:33:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:33:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 14:33:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 14:33:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 14:33:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 14:33:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 14:33:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:33:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:33:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 14:33:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:33:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 14:33:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:33:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 14:33:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 14:33:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 14:33:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 14:33:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 14:33:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 14:33:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:33:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 14:33:30 CST 2019]; root of context hierarchy
2019-04-25 14:33:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:33:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:33:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:33:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 14:33:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 14:33:49 -Registering beans for JMX exposure on startup
2019-04-25 14:33:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 14:33:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 14:33:49 -Starting beans in phase 2147483647
2019-04-25 14:33:49 -Context refreshed
2019-04-25 14:33:49 -Found 1 custom documentation plugin(s)
2019-04-25 14:33:49 -Scanning for api listing references
2019-04-25 14:33:49 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 14:33:49 -Generating unique operation named: removeUsingPOST_1
2019-04-25 14:33:49 -Generating unique operation named: addUsingGET_1
2019-04-25 14:33:49 -Generating unique operation named: editUsingGET_1
2019-04-25 14:33:49 -Generating unique operation named: listUsingGET_1
2019-04-25 14:33:49 -Generating unique operation named: removeUsingPOST_2
2019-04-25 14:33:49 -Generating unique operation named: removeUsingPOST_3
2019-04-25 14:33:49 -Generating unique operation named: saveUsingPOST_1
2019-04-25 14:33:49 -Generating unique operation named: updateUsingGET_1
2019-04-25 14:33:49 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_4
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_5
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_2
2019-04-25 14:33:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_3
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_3
2019-04-25 14:33:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_3
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_6
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_7
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_4
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_4
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_4
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_8
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_9
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 14:33:50 -Generating unique operation named: ElecUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_5
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_5
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_5
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_10
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_11
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_6
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_6
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_6
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_7
2019-04-25 14:33:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_7
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_12
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_13
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 14:33:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_7
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_8
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_8
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_14
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_15
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_8
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_9
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_9
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_16
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_17
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_9
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_9
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_10
2019-04-25 14:33:50 -Generating unique operation named: infoUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingPOST_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingPUT_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 14:33:50 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_10
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_18
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_19
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_9
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_10
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_11
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_20
2019-04-25 14:33:50 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_10
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_11
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_12
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_21
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_10
2019-04-25 14:33:50 -Generating unique operation named: treeUsingGET_1
2019-04-25 14:33:50 -Generating unique operation named: treeUsingGET_2
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_11
2019-04-25 14:33:50 -Generating unique operation named: addUsingGET_11
2019-04-25 14:33:50 -Generating unique operation named: editUsingGET_12
2019-04-25 14:33:50 -Generating unique operation named: listUsingGET_13
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_22
2019-04-25 14:33:50 -Generating unique operation named: removeUsingPOST_23
2019-04-25 14:33:50 -Generating unique operation named: saveUsingPOST_11
2019-04-25 14:33:50 -Generating unique operation named: updateUsingGET_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPOST_12
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPUT_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 14:33:50 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_12
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_13
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_14
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_24
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_25
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingGET_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_13
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPUT_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 14:33:51 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_13
2019-04-25 14:33:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_14
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_15
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_13
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_14
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_14
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_16
2019-04-25 14:33:51 -Generating unique operation named: listUsingHEAD_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingPOST_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingPUT_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingPATCH_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingDELETE_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingTRACE_1
2019-04-25 14:33:51 -Generating unique operation named: countDDUsingGET_1
2019-04-25 14:33:51 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 14:33:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 14:33:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 14:33:51 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 14:33:51 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 14:33:51 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 14:33:51 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 14:33:51 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_14
2019-04-25 14:33:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_15
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_17
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_26
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_15
2019-04-25 14:33:51 -Generating unique operation named: treeUsingGET_3
2019-04-25 14:33:51 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_15
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_15
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_16
2019-04-25 14:33:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_18
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_27
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_28
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_16
2019-04-25 14:33:51 -Generating unique operation named: updateUsingGET_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_16
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPUT_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 14:33:51 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 14:33:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_16
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_17
2019-04-25 14:33:51 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_19
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_29
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_30
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_17
2019-04-25 14:33:51 -Generating unique operation named: updateUsingGET_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_17
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPUT_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 14:33:51 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 14:33:51 -Generating unique operation named: addUsingGET_17
2019-04-25 14:33:51 -Generating unique operation named: editUsingGET_18
2019-04-25 14:33:51 -Generating unique operation named: listUsingGET_20
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_31
2019-04-25 14:33:51 -Generating unique operation named: removeUsingPOST_32
2019-04-25 14:33:51 -Generating unique operation named: saveUsingPOST_18
2019-04-25 14:33:51 -Generating unique operation named: updateUsingGET_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPOST_18
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPUT_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 14:33:51 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 14:33:51 -Starting Quartz Scheduler now
2019-04-25 14:33:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 14:33:51 -Starting...
2019-04-25 14:33:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 14:33:51 -Started.
2019-04-25 14:33:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 14:33:51 -Using a shared selector for servlet write/read
2019-04-25 14:33:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 14:33:51 -Started BootdoApplication in 22.459 seconds (JVM running for 23.263)
2019-04-25 14:33:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 14:33:52 -==> Parameters: 
2019-04-25 14:33:52 -<==      Total: 1
2019-04-25 14:34:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 14:34:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 14:34:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-04-25 14:34:02 -Enabling session validation scheduler...
2019-04-25 14:34:02 -请求地址 : http://localhost:8081/login;JSESSIONID=582a8281-4295-429e-8348-5c95463462e7
2019-04-25 14:34:02 -HTTP METHOD : GET
2019-04-25 14:34:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 14:34:02 -参数 : [{}]
2019-04-25 14:34:02 -耗时 : 3
2019-04-25 14:34:02 -返回值 : login
2019-04-25 14:34:04 -请求地址 : http://localhost:8081/getVerify
2019-04-25 14:34:04 -HTTP METHOD : GET
2019-04-25 14:34:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 14:34:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@145067fc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@18e435b1]
2019-04-25 14:34:07 -6757
2019-04-25 14:34:07 -耗时 : 3744
2019-04-25 14:34:07 -返回值 : null
2019-04-25 14:34:14 -请求地址 : http://localhost:8081/login
2019-04-25 14:34:14 -HTTP METHOD : POST
2019-04-25 14:34:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 14:34:14 -参数 : [admin, 111111, 6757, org.apache.shiro.web.servlet.ShiroHttpServletRequest@132894bb]
2019-04-25 14:34:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 14:34:14 -==> Parameters: admin(String)
2019-04-25 14:34:14 -<==      Total: 1
2019-04-25 14:34:14 -耗时 : 184
2019-04-25 14:34:14 -返回值 : {msg=操作成功, code=0}
2019-04-25 14:34:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 14:34:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:34:14 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 14:34:14.655(Timestamp)
2019-04-25 14:34:14 -请求地址 : http://localhost:8081/index
2019-04-25 14:34:14 -HTTP METHOD : GET
2019-04-25 14:34:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 14:34:14 -参数 : [{}]
2019-04-25 14:34:14 -<==    Updates: 1
2019-04-25 14:34:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 14:34:14 -==> Parameters: 1(Long)
2019-04-25 14:34:15 -<==      Total: 49
2019-04-25 14:34:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 14:34:15 -==> Parameters: 138(Long)
2019-04-25 14:34:15 -<==      Total: 1
2019-04-25 14:34:15 -耗时 : 400
2019-04-25 14:34:15 -返回值 : index_v1
2019-04-25 14:34:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:34:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 400(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 14:34:15.301(Timestamp)
2019-04-25 14:34:15 -<==    Updates: 1
2019-04-25 14:34:15 -请求地址 : http://localhost:8081/main
2019-04-25 14:34:15 -HTTP METHOD : GET
2019-04-25 14:34:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:34:15 -参数 : []
2019-04-25 14:34:15 -耗时 : 0
2019-04-25 14:34:15 -返回值 : main
2019-04-25 14:34:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 14:34:15 -HTTP METHOD : GET
2019-04-25 14:34:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 14:34:15 -参数 : []
2019-04-25 14:34:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 14:34:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 14:34:15 -<==      Total: 0
2019-04-25 14:34:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 14:34:15 -==> Parameters: 1(Long), 0(String)
2019-04-25 14:34:15 -<==      Total: 1
2019-04-25 14:34:15 -耗时 : 99
2019-04-25 14:34:15 -返回值 : com.bootdo.common.utils.PageUtils@7bbbee18
2019-04-25 14:34:15 -请求地址 : http://localhost:8081/main
2019-04-25 14:34:15 -HTTP METHOD : GET
2019-04-25 14:34:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:34:15 -参数 : []
2019-04-25 14:34:15 -耗时 : 0
2019-04-25 14:34:15 -返回值 : main
2019-04-25 14:34:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 14:34:25 -==> Parameters: 1(Long)
2019-04-25 14:34:25 -<==      Total: 93
2019-04-25 14:34:25 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 14:34:25 -HTTP METHOD : GET
2019-04-25 14:34:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 14:34:25 -参数 : []
2019-04-25 14:34:25 -耗时 : 12
2019-04-25 14:34:25 -返回值 : charts/tableElecMM
2019-04-25 14:34:28 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 14:34:28 -HTTP METHOD : GET
2019-04-25 14:34:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 14:34:28 -参数 : []
2019-04-25 14:34:28 -耗时 : 7
2019-04-25 14:34:28 -返回值 : charts/tableWaterMM
2019-04-25 14:34:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:34:33 -HTTP METHOD : GET
2019-04-25 14:34:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:34:33 -参数 : []
2019-04-25 14:34:33 -耗时 : 0
2019-04-25 14:34:33 -返回值 : system/dept/deptTree
2019-04-25 14:34:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:34:33 -HTTP METHOD : GET
2019-04-25 14:34:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:34:33 -参数 : []
2019-04-25 14:34:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:34:33 -==> Parameters: 
2019-04-25 14:34:33 -<==      Total: 3
2019-04-25 14:34:33 -耗时 : 54
2019-04-25 14:34:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:34:36 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 14:34:36 -HTTP METHOD : GET
2019-04-25 14:34:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 14:34:36 -参数 : [com.bootdo.water.vo.WaterVo@3f39ab49, com.bootdo.moneyLog.vo.WaterLogVo@615ae02e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ab79e50]
2019-04-25 14:34:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:34:36 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:34:37 -<==      Total: 1
2019-04-25 14:34:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 14:34:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:34:37 -<==      Total: 1
2019-04-25 14:34:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 14:34:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 14:34:37 -<==      Total: 3
2019-04-25 14:34:37 -耗时 : 1328
2019-04-25 14:34:37 -返回值 : null
2019-04-25 14:34:46 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-25 14:46:06 -请求地址 : http://localhost:8081/index
2019-04-25 14:46:06 -HTTP METHOD : GET
2019-04-25 14:46:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 14:46:06 -参数 : [{}]
2019-04-25 14:46:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 14:46:06 -==> Parameters: 1(Long)
2019-04-25 14:46:06 -<==      Total: 49
2019-04-25 14:46:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 14:46:06 -==> Parameters: 138(Long)
2019-04-25 14:46:06 -<==      Total: 1
2019-04-25 14:46:06 -耗时 : 125
2019-04-25 14:46:06 -返回值 : index_v1
2019-04-25 14:46:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:46:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 125(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 14:46:06.135(Timestamp)
2019-04-25 14:46:06 -<==    Updates: 1
2019-04-25 14:46:06 -请求地址 : http://localhost:8081/main
2019-04-25 14:46:06 -HTTP METHOD : GET
2019-04-25 14:46:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:46:06 -参数 : []
2019-04-25 14:46:06 -耗时 : 0
2019-04-25 14:46:06 -返回值 : main
2019-04-25 14:46:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 14:46:06 -HTTP METHOD : GET
2019-04-25 14:46:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 14:46:06 -参数 : []
2019-04-25 14:46:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 14:46:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 14:46:06 -<==      Total: 0
2019-04-25 14:46:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 14:46:06 -==> Parameters: 1(Long), 0(String)
2019-04-25 14:46:06 -<==      Total: 1
2019-04-25 14:46:06 -耗时 : 37
2019-04-25 14:46:06 -返回值 : com.bootdo.common.utils.PageUtils@2d3f30b7
2019-04-25 14:46:06 -请求地址 : http://localhost:8081/main
2019-04-25 14:46:06 -HTTP METHOD : GET
2019-04-25 14:46:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:46:06 -参数 : []
2019-04-25 14:46:06 -耗时 : 2
2019-04-25 14:46:06 -返回值 : main
2019-04-25 14:46:32 -Starting BootdoApplication on ZJZL-20180906VX with PID 3364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 14:46:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 14:46:32 -The following profiles are active: dev
2019-04-25 14:46:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:46:32 CST 2019]; root of context hierarchy
2019-04-25 14:46:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 14:46:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14971f41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6f04de8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 14:46:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 14:46:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 14:46:40 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 14:46:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 14:46:40 -Starting service [Tomcat]
2019-04-25 14:46:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 14:46:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 14:46:40 -Initializing Spring embedded WebApplicationContext
2019-04-25 14:46:40 -Root WebApplicationContext: initialization completed in 8220 ms
2019-04-25 14:46:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 14:46:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 14:46:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 14:46:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 14:46:41 -Filter xssFilter was not registered (disabled)
2019-04-25 14:46:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 14:46:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 14:46:41 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 14:46:41 -Servlet dispatcherServlet mapped to [/]
2019-04-25 14:46:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:46:32 CST 2019]; root of context hierarchy
2019-04-25 14:46:44 -Using default implementation for ThreadExecutor
2019-04-25 14:46:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 14:46:44 -Quartz Scheduler v.2.2.1 created.
2019-04-25 14:46:44 -RAMJobStore initialized.
2019-04-25 14:46:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 14:46:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 14:46:44 -Quartz scheduler version: 2.2.1
2019-04-25 14:46:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-04-25 14:46:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 14:46:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 14:46:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 14:46:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 14:46:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 14:46:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 14:46:48 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 14:46:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 14:46:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 14:46:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 14:46:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 14:46:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 14:46:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 14:46:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 14:46:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 14:46:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 14:46:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 14:46:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:46:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 14:46:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 14:46:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 14:46:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 14:46:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 14:46:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 14:46:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 14:46:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 14:46:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 14:46:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 14:46:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 14:46:48 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 14:46:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 14:46:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 14:46:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 14:46:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 14:46:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 14:46:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 14:46:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:46:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 14:46:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 14:46:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 14:46:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 14:46:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 14:46:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:46:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:46:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 14:46:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 14:46:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 14:46:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 14:46:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 14:46:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 14:46:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 14:46:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 14:46:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 14:46:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 14:46:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 14:46:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 14:46:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 14:46:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 14:46:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 14:46:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 14:46:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 14:46:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 14:46:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 14:46:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 14:46:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 14:46:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 14:46:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 14:46:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 14:46:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 14:46:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 14:46:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 14:46:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 14:46:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:46:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 14:46:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 14:46:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 14:46:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 14:46:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 14:46:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 14:46:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 14:46:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 14:46:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 14:46:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 14:46:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 14:46:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 14:46:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 14:46:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 14:46:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 14:46:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 14:46:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 14:46:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 14:46:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 14:46:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 14:46:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 14:46:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:46:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Thu Apr 25 14:46:32 CST 2019]; root of context hierarchy
2019-04-25 14:46:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:46:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:46:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 14:46:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 14:46:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 14:46:52 -Registering beans for JMX exposure on startup
2019-04-25 14:46:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 14:46:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 14:46:52 -Starting beans in phase 2147483647
2019-04-25 14:46:52 -Context refreshed
2019-04-25 14:46:52 -Found 1 custom documentation plugin(s)
2019-04-25 14:46:52 -Scanning for api listing references
2019-04-25 14:46:52 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_1
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_2
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_3
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPUT_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 14:46:53 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_2
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_2
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_2
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_4
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_5
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_2
2019-04-25 14:46:53 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_3
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_3
2019-04-25 14:46:53 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_3
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_6
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_7
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingGET_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPUT_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 14:46:53 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_4
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_4
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_4
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_8
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_9
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingGET_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPUT_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 14:46:53 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 14:46:53 -Generating unique operation named: ElecUsingGET_1
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_5
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_5
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_5
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_10
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_11
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingGET_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPUT_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 14:46:53 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_6
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_6
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_6
2019-04-25 14:46:53 -Generating unique operation named: addUsingGET_6
2019-04-25 14:46:53 -Generating unique operation named: editUsingGET_7
2019-04-25 14:46:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 14:46:53 -Generating unique operation named: listUsingGET_7
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_12
2019-04-25 14:46:53 -Generating unique operation named: removeUsingPOST_13
2019-04-25 14:46:53 -Generating unique operation named: saveUsingPOST_6
2019-04-25 14:46:53 -Generating unique operation named: updateUsingGET_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPOST_7
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPUT_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 14:46:53 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 14:46:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 14:46:54 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 14:46:54 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_7
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_8
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_8
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_14
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_15
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingGET_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPUT_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 14:46:54 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_8
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_9
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_9
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_16
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_17
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingGET_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPUT_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 14:46:54 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_9
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_10
2019-04-25 14:46:54 -Generating unique operation named: infoUsingGET_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingPOST_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingPUT_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 14:46:54 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_10
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_18
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_19
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_10
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_11
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_20
2019-04-25 14:46:54 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_10
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_11
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_12
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_21
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_10
2019-04-25 14:46:54 -Generating unique operation named: treeUsingGET_1
2019-04-25 14:46:54 -Generating unique operation named: treeUsingGET_2
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_11
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_11
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_12
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_13
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_22
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_23
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_11
2019-04-25 14:46:54 -Generating unique operation named: updateUsingGET_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_12
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPUT_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 14:46:54 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_12
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_13
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_14
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_24
2019-04-25 14:46:54 -Generating unique operation named: removeUsingPOST_25
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_12
2019-04-25 14:46:54 -Generating unique operation named: updateUsingGET_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_13
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPUT_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 14:46:54 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 14:46:54 -Generating unique operation named: addUsingGET_13
2019-04-25 14:46:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 14:46:54 -Generating unique operation named: editUsingGET_14
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_15
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_13
2019-04-25 14:46:54 -Generating unique operation named: saveUsingPOST_14
2019-04-25 14:46:54 -Generating unique operation named: updateUsingPOST_14
2019-04-25 14:46:54 -Generating unique operation named: listUsingGET_16
2019-04-25 14:46:54 -Generating unique operation named: listUsingHEAD_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingPOST_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingPUT_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingPATCH_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingDELETE_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 14:46:54 -Generating unique operation named: listUsingTRACE_1
2019-04-25 14:46:55 -Generating unique operation named: countDDUsingGET_1
2019-04-25 14:46:55 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 14:46:55 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 14:46:55 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 14:46:55 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 14:46:55 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 14:46:55 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 14:46:55 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 14:46:55 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 14:46:55 -Generating unique operation named: addUsingGET_14
2019-04-25 14:46:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 14:46:55 -Generating unique operation named: editUsingGET_15
2019-04-25 14:46:55 -Generating unique operation named: listUsingGET_17
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_26
2019-04-25 14:46:55 -Generating unique operation named: saveUsingPOST_15
2019-04-25 14:46:55 -Generating unique operation named: treeUsingGET_3
2019-04-25 14:46:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPOST_15
2019-04-25 14:46:55 -Generating unique operation named: addUsingGET_15
2019-04-25 14:46:55 -Generating unique operation named: editUsingGET_16
2019-04-25 14:46:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 14:46:55 -Generating unique operation named: listUsingGET_18
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_27
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_28
2019-04-25 14:46:55 -Generating unique operation named: saveUsingPOST_16
2019-04-25 14:46:55 -Generating unique operation named: updateUsingGET_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPOST_16
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPUT_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 14:46:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 14:46:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 14:46:55 -Generating unique operation named: addUsingGET_16
2019-04-25 14:46:55 -Generating unique operation named: editUsingGET_17
2019-04-25 14:46:55 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 14:46:55 -Generating unique operation named: listUsingGET_19
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_29
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_30
2019-04-25 14:46:55 -Generating unique operation named: saveUsingPOST_17
2019-04-25 14:46:55 -Generating unique operation named: updateUsingGET_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPOST_17
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPUT_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 14:46:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 14:46:55 -Generating unique operation named: addUsingGET_17
2019-04-25 14:46:55 -Generating unique operation named: editUsingGET_18
2019-04-25 14:46:55 -Generating unique operation named: listUsingGET_20
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_31
2019-04-25 14:46:55 -Generating unique operation named: removeUsingPOST_32
2019-04-25 14:46:55 -Generating unique operation named: saveUsingPOST_18
2019-04-25 14:46:55 -Generating unique operation named: updateUsingGET_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPOST_18
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPUT_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 14:46:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 14:46:55 -Starting Quartz Scheduler now
2019-04-25 14:46:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 14:46:55 -Starting...
2019-04-25 14:46:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 14:46:55 -Started.
2019-04-25 14:46:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 14:46:55 -Using a shared selector for servlet write/read
2019-04-25 14:46:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 14:46:55 -Started BootdoApplication in 24.696 seconds (JVM running for 25.62)
2019-04-25 14:46:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 14:46:55 -==> Parameters: 
2019-04-25 14:46:56 -<==      Total: 1
2019-04-25 14:47:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 14:47:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 14:47:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-04-25 14:47:27 -Enabling session validation scheduler...
2019-04-25 14:47:27 -请求地址 : http://localhost:8081/login;JSESSIONID=02d197a9-3bda-4ca9-84dc-0b7dc6381103
2019-04-25 14:47:27 -HTTP METHOD : GET
2019-04-25 14:47:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 14:47:27 -参数 : [{}]
2019-04-25 14:47:27 -耗时 : 2
2019-04-25 14:47:27 -返回值 : login
2019-04-25 14:47:29 -请求地址 : http://localhost:8081/getVerify
2019-04-25 14:47:29 -HTTP METHOD : GET
2019-04-25 14:47:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 14:47:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e4c143a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ba03856]
2019-04-25 14:47:32 -0565
2019-04-25 14:47:32 -耗时 : 3183
2019-04-25 14:47:32 -返回值 : null
2019-04-25 14:47:38 -请求地址 : http://localhost:8081/login
2019-04-25 14:47:38 -HTTP METHOD : POST
2019-04-25 14:47:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 14:47:38 -参数 : [admin, 111111, 0565, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2eecf32f]
2019-04-25 14:47:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 14:47:38 -==> Parameters: admin(String)
2019-04-25 14:47:39 -<==      Total: 1
2019-04-25 14:47:39 -耗时 : 221
2019-04-25 14:47:39 -返回值 : {msg=操作成功, code=0}
2019-04-25 14:47:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 14:47:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:47:39 -==> Parameters: 1(Long), admin(String), 登录(String), 222(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 14:47:39.116(Timestamp)
2019-04-25 14:47:39 -请求地址 : http://localhost:8081/index
2019-04-25 14:47:39 -HTTP METHOD : GET
2019-04-25 14:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 14:47:39 -参数 : [{}]
2019-04-25 14:47:39 -<==    Updates: 1
2019-04-25 14:47:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 14:47:39 -==> Parameters: 1(Long)
2019-04-25 14:47:40 -<==      Total: 49
2019-04-25 14:47:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 14:47:40 -==> Parameters: 138(Long)
2019-04-25 14:47:40 -<==      Total: 1
2019-04-25 14:47:40 -耗时 : 1169
2019-04-25 14:47:40 -返回值 : index_v1
2019-04-25 14:47:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 14:47:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1169(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 14:47:40.423(Timestamp)
2019-04-25 14:47:40 -<==    Updates: 1
2019-04-25 14:47:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 14:47:40 -HTTP METHOD : GET
2019-04-25 14:47:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 14:47:40 -参数 : []
2019-04-25 14:47:40 -请求地址 : http://localhost:8081/main
2019-04-25 14:47:40 -HTTP METHOD : GET
2019-04-25 14:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:47:40 -参数 : []
2019-04-25 14:47:40 -耗时 : 1
2019-04-25 14:47:40 -返回值 : main
2019-04-25 14:47:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 14:47:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 14:47:40 -<==      Total: 0
2019-04-25 14:47:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 14:47:40 -==> Parameters: 1(Long), 0(String)
2019-04-25 14:47:40 -<==      Total: 1
2019-04-25 14:47:40 -耗时 : 121
2019-04-25 14:47:40 -返回值 : com.bootdo.common.utils.PageUtils@75b72377
2019-04-25 14:47:40 -请求地址 : http://localhost:8081/main
2019-04-25 14:47:40 -HTTP METHOD : GET
2019-04-25 14:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 14:47:40 -参数 : []
2019-04-25 14:47:40 -耗时 : 1
2019-04-25 14:47:40 -返回值 : main
2019-04-25 14:47:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-04-25 14:47:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 14:47:49 -==> Parameters: 1(Long)
2019-04-25 14:47:49 -<==      Total: 93
2019-04-25 14:47:49 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 14:47:49 -HTTP METHOD : GET
2019-04-25 14:47:49 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 14:47:49 -参数 : []
2019-04-25 14:47:49 -耗时 : 14
2019-04-25 14:47:49 -返回值 : charts/tableDD
2019-04-25 14:47:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:47:55 -HTTP METHOD : GET
2019-04-25 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:47:55 -参数 : []
2019-04-25 14:47:55 -耗时 : 1
2019-04-25 14:47:55 -返回值 : system/dept/deptTree
2019-04-25 14:47:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:47:55 -HTTP METHOD : GET
2019-04-25 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:47:55 -参数 : []
2019-04-25 14:47:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:47:55 -==> Parameters: 
2019-04-25 14:47:55 -<==      Total: 3
2019-04-25 14:47:55 -耗时 : 76
2019-04-25 14:47:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:47:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:47:57 -HTTP METHOD : GET
2019-04-25 14:47:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:47:57 -参数 : []
2019-04-25 14:47:57 -耗时 : 1
2019-04-25 14:47:57 -返回值 : system/dept/deptTree
2019-04-25 14:47:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:47:57 -HTTP METHOD : GET
2019-04-25 14:47:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:47:57 -参数 : []
2019-04-25 14:47:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:47:57 -==> Parameters: 
2019-04-25 14:47:57 -<==      Total: 3
2019-04-25 14:47:57 -耗时 : 5
2019-04-25 14:47:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:47:59 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 14:47:59 -HTTP METHOD : POST
2019-04-25 14:47:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 14:47:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@621572af, com.bootdo.moneyLog.vo.WaterLogVo@6a999eee, com.bootdo.moneyLog.vo.HeatLogVo@74d5f1b9]
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:47:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:47:59 -<==      Total: 1
2019-04-25 14:47:59 -耗时 : 292
2019-04-25 14:47:59 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 14:48:01 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 14:48:01 -HTTP METHOD : POST
2019-04-25 14:48:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 14:48:01 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7fb54b15, com.bootdo.moneyLog.vo.WaterLogVo@5c23e68e, com.bootdo.moneyLog.vo.HeatLogVo@30e7bd05]
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:01 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:01 -<==      Total: 1
2019-04-25 14:48:01 -耗时 : 113
2019-04-25 14:48:01 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 14:48:03 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 14:48:03 -HTTP METHOD : POST
2019-04-25 14:48:03 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 14:48:03 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4d153ee9, com.bootdo.moneyLog.vo.WaterLogVo@42fd48c7, com.bootdo.moneyLog.vo.HeatLogVo@780baf63]
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:48:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:48:03 -<==      Total: 1
2019-04-25 14:48:03 -耗时 : 91
2019-04-25 14:48:03 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 14:48:49 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 14:48:49 -HTTP METHOD : GET
2019-04-25 14:48:49 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 14:48:49 -参数 : []
2019-04-25 14:48:49 -耗时 : 14
2019-04-25 14:48:49 -返回值 : charts/countDD
2019-04-25 14:48:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 14:48:49 -HTTP METHOD : GET
2019-04-25 14:48:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 14:48:49 -参数 : [userType]
2019-04-25 14:48:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 14:48:49 -==> Parameters: userType(String)
2019-04-25 14:48:49 -<==      Total: 4
2019-04-25 14:48:49 -耗时 : 28
2019-04-25 14:48:49 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 14:49:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 14:49:21 -HTTP METHOD : GET
2019-04-25 14:49:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 14:49:21 -参数 : []
2019-04-25 14:49:21 -耗时 : 1
2019-04-25 14:49:21 -返回值 : system/dept/deptTree
2019-04-25 14:49:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 14:49:22 -HTTP METHOD : GET
2019-04-25 14:49:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 14:49:22 -参数 : []
2019-04-25 14:49:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 14:49:22 -==> Parameters: 
2019-04-25 14:49:22 -<==      Total: 3
2019-04-25 14:49:22 -耗时 : 3
2019-04-25 14:49:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 14:49:25 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-25 14:49:25 -HTTP METHOD : POST
2019-04-25 14:49:25 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-25 14:49:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@74acfa2b, com.bootdo.moneyLog.vo.WaterLogVo@1219bc01, com.bootdo.moneyLog.vo.HeatLogVo@4d72c092]
2019-04-25 14:49:25 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:25 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:25 -<==      Total: 1
2019-04-25 14:49:25 -耗时 : 22
2019-04-25 14:49:25 -返回值 : com.bootdo.charts.vo.CountDayVo@23a25cc3
2019-04-25 14:49:26 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-25 14:49:26 -HTTP METHOD : POST
2019-04-25 14:49:26 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-25 14:49:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@8d970f, com.bootdo.moneyLog.vo.WaterLogVo@29584eab, com.bootdo.moneyLog.vo.HeatLogVo@39ebb185]
2019-04-25 14:49:26 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and `create_time` = ? and user_org = ? 
2019-04-25 14:49:26 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2019-03-19(String), 2(String)
2019-04-25 14:49:26 -<==      Total: 1
2019-04-25 14:49:26 -耗时 : 16
2019-04-25 14:49:26 -返回值 : com.bootdo.charts.vo.CountDayVo@4b249543
2019-04-25 15:17:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-04-25 15:25:56 -Starting BootdoApplication on ZJZL-20180906VX with PID 11596 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 15:25:56 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 15:25:56 -The following profiles are active: dev
2019-04-25 15:25:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:25:56 CST 2019]; root of context hierarchy
2019-04-25 15:26:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 15:26:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 15:26:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 15:26:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:26:05 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 15:26:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 15:26:06 -Starting service [Tomcat]
2019-04-25 15:26:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 15:26:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 15:26:06 -Initializing Spring embedded WebApplicationContext
2019-04-25 15:26:06 -Root WebApplicationContext: initialization completed in 9619 ms
2019-04-25 15:26:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 15:26:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 15:26:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 15:26:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 15:26:07 -Filter xssFilter was not registered (disabled)
2019-04-25 15:26:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 15:26:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 15:26:07 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 15:26:07 -Servlet dispatcherServlet mapped to [/]
2019-04-25 15:26:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:25:56 CST 2019]; root of context hierarchy
2019-04-25 15:26:11 -Using default implementation for ThreadExecutor
2019-04-25 15:26:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 15:26:11 -Quartz Scheduler v.2.2.1 created.
2019-04-25 15:26:11 -RAMJobStore initialized.
2019-04-25 15:26:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 15:26:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 15:26:11 -Quartz scheduler version: 2.2.1
2019-04-25 15:26:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-04-25 15:26:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 15:26:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 15:26:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 15:26:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 15:26:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 15:26:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 15:26:16 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 15:26:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 15:26:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 15:26:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 15:26:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 15:26:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 15:26:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 15:26:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 15:26:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 15:26:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 15:26:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 15:26:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 15:26:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 15:26:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 15:26:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 15:26:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:26:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 15:26:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 15:26:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:26:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 15:26:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 15:26:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 15:26:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 15:26:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 15:26:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 15:26:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 15:26:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 15:26:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 15:26:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 15:26:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 15:26:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 15:26:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 15:26:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 15:26:17 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 15:26:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 15:26:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 15:26:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 15:26:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 15:26:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 15:26:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 15:26:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:26:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:26:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 15:26:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 15:26:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 15:26:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:26:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 15:26:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 15:26:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:26:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:26:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 15:26:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 15:26:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 15:26:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 15:26:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 15:26:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 15:26:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 15:26:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 15:26:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 15:26:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 15:26:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 15:26:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 15:26:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 15:26:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 15:26:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 15:26:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 15:26:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 15:26:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 15:26:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 15:26:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 15:26:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 15:26:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 15:26:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 15:26:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 15:26:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 15:26:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 15:26:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 15:26:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 15:26:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:26:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 15:26:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:26:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 15:26:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 15:26:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 15:26:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 15:26:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 15:26:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:26:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 15:26:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 15:26:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 15:26:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:26:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:26:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:26:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 15:26:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 15:26:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 15:26:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 15:26:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 15:26:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 15:26:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:26:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:25:56 CST 2019]; root of context hierarchy
2019-04-25 15:26:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:26:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:26:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:26:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 15:26:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 15:26:22 -Registering beans for JMX exposure on startup
2019-04-25 15:26:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 15:26:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 15:26:22 -Starting beans in phase 2147483647
2019-04-25 15:26:22 -Context refreshed
2019-04-25 15:26:22 -Found 1 custom documentation plugin(s)
2019-04-25 15:26:22 -Scanning for api listing references
2019-04-25 15:26:23 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_1
2019-04-25 15:26:23 -Generating unique operation named: addUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: editUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: listUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_2
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_3
2019-04-25 15:26:23 -Generating unique operation named: saveUsingPOST_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingPOST_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingPUT_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 15:26:23 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 15:26:23 -Generating unique operation named: addUsingGET_2
2019-04-25 15:26:23 -Generating unique operation named: editUsingGET_2
2019-04-25 15:26:23 -Generating unique operation named: listUsingGET_2
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_4
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_5
2019-04-25 15:26:23 -Generating unique operation named: saveUsingPOST_2
2019-04-25 15:26:23 -Generating unique operation named: updateUsingPOST_2
2019-04-25 15:26:23 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: addUsingGET_3
2019-04-25 15:26:23 -Generating unique operation named: editUsingGET_3
2019-04-25 15:26:23 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 15:26:23 -Generating unique operation named: listUsingGET_3
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_6
2019-04-25 15:26:23 -Generating unique operation named: removeUsingPOST_7
2019-04-25 15:26:23 -Generating unique operation named: saveUsingPOST_3
2019-04-25 15:26:23 -Generating unique operation named: updateUsingGET_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_4
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_4
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_4
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_8
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_9
2019-04-25 15:26:24 -Generating unique operation named: saveUsingPOST_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingGET_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 15:26:24 -Generating unique operation named: ElecUsingGET_1
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_5
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_5
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_5
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_10
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_11
2019-04-25 15:26:24 -Generating unique operation named: saveUsingPOST_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingGET_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_6
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_6
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_6
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_7
2019-04-25 15:26:24 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_7
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_12
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_13
2019-04-25 15:26:24 -Generating unique operation named: saveUsingPOST_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingGET_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 15:26:24 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_7
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_8
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_8
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_14
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_15
2019-04-25 15:26:24 -Generating unique operation named: saveUsingPOST_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingGET_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_8
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_8
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_9
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_9
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_16
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_17
2019-04-25 15:26:24 -Generating unique operation named: saveUsingPOST_8
2019-04-25 15:26:24 -Generating unique operation named: updateUsingGET_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPOST_9
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPUT_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 15:26:24 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 15:26:24 -Generating unique operation named: addUsingGET_9
2019-04-25 15:26:24 -Generating unique operation named: editUsingGET_10
2019-04-25 15:26:24 -Generating unique operation named: infoUsingGET_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingPOST_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingPUT_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 15:26:24 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 15:26:24 -Generating unique operation named: listUsingGET_10
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_18
2019-04-25 15:26:24 -Generating unique operation named: removeUsingPOST_19
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPOST_10
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_11
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_20
2019-04-25 15:26:25 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 15:26:25 -Generating unique operation named: addUsingGET_10
2019-04-25 15:26:25 -Generating unique operation named: editUsingGET_11
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_12
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_21
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_10
2019-04-25 15:26:25 -Generating unique operation named: treeUsingGET_1
2019-04-25 15:26:25 -Generating unique operation named: treeUsingGET_2
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPOST_11
2019-04-25 15:26:25 -Generating unique operation named: addUsingGET_11
2019-04-25 15:26:25 -Generating unique operation named: editUsingGET_12
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_13
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_22
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_23
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_11
2019-04-25 15:26:25 -Generating unique operation named: updateUsingGET_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPOST_12
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPUT_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 15:26:25 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 15:26:25 -Generating unique operation named: addUsingGET_12
2019-04-25 15:26:25 -Generating unique operation named: editUsingGET_13
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_14
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_24
2019-04-25 15:26:25 -Generating unique operation named: removeUsingPOST_25
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_12
2019-04-25 15:26:25 -Generating unique operation named: updateUsingGET_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPOST_13
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPUT_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 15:26:25 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 15:26:25 -Generating unique operation named: addUsingGET_13
2019-04-25 15:26:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 15:26:25 -Generating unique operation named: editUsingGET_14
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_15
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_13
2019-04-25 15:26:25 -Generating unique operation named: saveUsingPOST_14
2019-04-25 15:26:25 -Generating unique operation named: updateUsingPOST_14
2019-04-25 15:26:25 -Generating unique operation named: listUsingGET_16
2019-04-25 15:26:25 -Generating unique operation named: listUsingHEAD_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingPOST_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingPUT_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingPATCH_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingDELETE_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 15:26:25 -Generating unique operation named: listUsingTRACE_1
2019-04-25 15:26:25 -Generating unique operation named: countDDUsingGET_1
2019-04-25 15:26:25 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 15:26:25 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 15:26:25 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 15:26:25 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 15:26:25 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 15:26:25 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 15:26:25 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 15:26:25 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 15:26:26 -Generating unique operation named: addUsingGET_14
2019-04-25 15:26:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 15:26:26 -Generating unique operation named: editUsingGET_15
2019-04-25 15:26:26 -Generating unique operation named: listUsingGET_17
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_26
2019-04-25 15:26:26 -Generating unique operation named: saveUsingPOST_15
2019-04-25 15:26:26 -Generating unique operation named: treeUsingGET_3
2019-04-25 15:26:26 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPOST_15
2019-04-25 15:26:26 -Generating unique operation named: addUsingGET_15
2019-04-25 15:26:26 -Generating unique operation named: editUsingGET_16
2019-04-25 15:26:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 15:26:26 -Generating unique operation named: listUsingGET_18
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_27
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_28
2019-04-25 15:26:26 -Generating unique operation named: saveUsingPOST_16
2019-04-25 15:26:26 -Generating unique operation named: updateUsingGET_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPOST_16
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPUT_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 15:26:26 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 15:26:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 15:26:26 -Generating unique operation named: addUsingGET_16
2019-04-25 15:26:26 -Generating unique operation named: editUsingGET_17
2019-04-25 15:26:26 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 15:26:26 -Generating unique operation named: listUsingGET_19
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_29
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_30
2019-04-25 15:26:26 -Generating unique operation named: saveUsingPOST_17
2019-04-25 15:26:26 -Generating unique operation named: updateUsingGET_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPOST_17
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPUT_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 15:26:26 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 15:26:26 -Generating unique operation named: addUsingGET_17
2019-04-25 15:26:26 -Generating unique operation named: editUsingGET_18
2019-04-25 15:26:26 -Generating unique operation named: listUsingGET_20
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_31
2019-04-25 15:26:26 -Generating unique operation named: removeUsingPOST_32
2019-04-25 15:26:26 -Generating unique operation named: saveUsingPOST_18
2019-04-25 15:26:26 -Generating unique operation named: updateUsingGET_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPOST_18
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPUT_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 15:26:26 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 15:26:26 -Starting Quartz Scheduler now
2019-04-25 15:26:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 15:26:26 -Starting...
2019-04-25 15:26:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 15:26:26 -Started.
2019-04-25 15:26:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 15:26:26 -Using a shared selector for servlet write/read
2019-04-25 15:26:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 15:26:26 -Started BootdoApplication in 31.344 seconds (JVM running for 32.488)
2019-04-25 15:26:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 15:26:27 -==> Parameters: 
2019-04-25 15:26:27 -<==      Total: 1
2019-04-25 15:27:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 15:27:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 15:27:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2019-04-25 15:27:08 -Enabling session validation scheduler...
2019-04-25 15:27:08 -请求地址 : http://localhost:8081/login;JSESSIONID=257673b9-9884-48d3-9edf-6235a490a467
2019-04-25 15:27:08 -HTTP METHOD : GET
2019-04-25 15:27:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 15:27:08 -参数 : [{}]
2019-04-25 15:27:08 -耗时 : 3
2019-04-25 15:27:08 -返回值 : login
2019-04-25 15:27:10 -请求地址 : http://localhost:8081/getVerify
2019-04-25 15:27:10 -HTTP METHOD : GET
2019-04-25 15:27:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 15:27:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6f6346f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6b5ccfcc]
2019-04-25 15:27:13 -8332
2019-04-25 15:27:13 -耗时 : 3907
2019-04-25 15:27:13 -返回值 : null
2019-04-25 15:27:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-25 15:27:20 -请求地址 : http://localhost:8081/login
2019-04-25 15:27:20 -HTTP METHOD : POST
2019-04-25 15:27:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 15:27:20 -参数 : [admin, 111111, 8332, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f1b2dfc]
2019-04-25 15:27:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 15:27:21 -==> Parameters: admin(String)
2019-04-25 15:27:21 -<==      Total: 1
2019-04-25 15:27:21 -耗时 : 142
2019-04-25 15:27:21 -返回值 : {msg=操作成功, code=0}
2019-04-25 15:27:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 15:27:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:27:21 -==> Parameters: 1(Long), admin(String), 登录(String), 142(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 15:27:21.206(Timestamp)
2019-04-25 15:27:21 -请求地址 : http://localhost:8081/index
2019-04-25 15:27:21 -HTTP METHOD : GET
2019-04-25 15:27:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 15:27:21 -参数 : [{}]
2019-04-25 15:27:21 -<==    Updates: 1
2019-04-25 15:27:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 15:27:21 -==> Parameters: 1(Long)
2019-04-25 15:27:21 -<==      Total: 49
2019-04-25 15:27:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 15:27:21 -==> Parameters: 138(Long)
2019-04-25 15:27:21 -<==      Total: 1
2019-04-25 15:27:21 -耗时 : 400
2019-04-25 15:27:21 -返回值 : index_v1
2019-04-25 15:27:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:27:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 400(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 15:27:21.804(Timestamp)
2019-04-25 15:27:21 -<==    Updates: 1
2019-04-25 15:27:22 -请求地址 : http://localhost:8081/main
2019-04-25 15:27:22 -HTTP METHOD : GET
2019-04-25 15:27:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:27:22 -参数 : []
2019-04-25 15:27:22 -耗时 : 0
2019-04-25 15:27:22 -返回值 : main
2019-04-25 15:27:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 15:27:22 -HTTP METHOD : GET
2019-04-25 15:27:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 15:27:22 -参数 : []
2019-04-25 15:27:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 15:27:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 15:27:22 -<==      Total: 0
2019-04-25 15:27:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 15:27:22 -==> Parameters: 1(Long), 0(String)
2019-04-25 15:27:22 -<==      Total: 1
2019-04-25 15:27:22 -耗时 : 79
2019-04-25 15:27:22 -返回值 : com.bootdo.common.utils.PageUtils@12989208
2019-04-25 15:27:22 -请求地址 : http://localhost:8081/main
2019-04-25 15:27:22 -HTTP METHOD : GET
2019-04-25 15:27:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:27:22 -参数 : []
2019-04-25 15:27:22 -耗时 : 1
2019-04-25 15:27:22 -返回值 : main
2019-04-25 15:27:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 15:27:31 -==> Parameters: 1(Long)
2019-04-25 15:27:31 -<==      Total: 93
2019-04-25 15:27:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 15:27:31 -HTTP METHOD : GET
2019-04-25 15:27:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 15:27:31 -参数 : []
2019-04-25 15:27:31 -耗时 : 11
2019-04-25 15:27:31 -返回值 : charts/tableElecMM
2019-04-25 15:27:36 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 15:27:36 -HTTP METHOD : GET
2019-04-25 15:27:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 15:27:36 -参数 : []
2019-04-25 15:27:36 -耗时 : 9
2019-04-25 15:27:36 -返回值 : charts/countMM
2019-04-25 15:27:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:27:36 -HTTP METHOD : GET
2019-04-25 15:27:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:27:36 -参数 : [userType]
2019-04-25 15:27:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:27:36 -==> Parameters: userType(String)
2019-04-25 15:27:36 -<==      Total: 4
2019-04-25 15:27:36 -耗时 : 302
2019-04-25 15:27:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:27:39 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 15:27:39 -HTTP METHOD : GET
2019-04-25 15:27:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 15:27:39 -参数 : []
2019-04-25 15:27:39 -耗时 : 10
2019-04-25 15:27:39 -返回值 : charts/countDD
2019-04-25 15:27:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:27:39 -HTTP METHOD : GET
2019-04-25 15:27:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:27:39 -参数 : [userType]
2019-04-25 15:27:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:27:39 -==> Parameters: userType(String)
2019-04-25 15:27:39 -<==      Total: 4
2019-04-25 15:27:39 -耗时 : 5
2019-04-25 15:27:39 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:27:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:27:45 -HTTP METHOD : GET
2019-04-25 15:27:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:27:45 -参数 : []
2019-04-25 15:27:45 -耗时 : 0
2019-04-25 15:27:45 -返回值 : system/dept/deptTree
2019-04-25 15:27:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:27:45 -HTTP METHOD : GET
2019-04-25 15:27:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:27:45 -参数 : []
2019-04-25 15:27:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:27:45 -==> Parameters: 
2019-04-25 15:27:45 -<==      Total: 3
2019-04-25 15:27:45 -耗时 : 33
2019-04-25 15:27:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:27:48 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-04-25 15:27:48 -HTTP METHOD : POST
2019-04-25 15:27:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-04-25 15:27:48 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1edda66c, com.bootdo.moneyLog.vo.WaterLogVo@310fb02f, com.bootdo.moneyLog.vo.HeatLogVo@2f572e40]
2019-04-25 15:27:48 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:27:48 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:27:48 -<==      Total: 1
2019-04-25 15:27:48 -耗时 : 338
2019-04-25 15:27:48 -返回值 : com.bootdo.charts.vo.CountDayVo@4afcc3ee
2019-04-25 15:27:54 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 15:27:54 -HTTP METHOD : GET
2019-04-25 15:27:54 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 15:27:54 -参数 : []
2019-04-25 15:27:54 -耗时 : 8
2019-04-25 15:27:54 -返回值 : charts/tableWaterMM
2019-04-25 15:27:56 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 15:27:56 -HTTP METHOD : GET
2019-04-25 15:27:56 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 15:27:56 -参数 : []
2019-04-25 15:27:56 -耗时 : 11
2019-04-25 15:27:56 -返回值 : charts/tableDD
2019-04-25 15:28:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:28:03 -HTTP METHOD : GET
2019-04-25 15:28:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:28:03 -参数 : []
2019-04-25 15:28:03 -耗时 : 1
2019-04-25 15:28:03 -返回值 : system/dept/deptTree
2019-04-25 15:28:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:28:04 -HTTP METHOD : GET
2019-04-25 15:28:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:28:04 -参数 : []
2019-04-25 15:28:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:28:04 -==> Parameters: 
2019-04-25 15:28:04 -<==      Total: 3
2019-04-25 15:28:04 -耗时 : 5
2019-04-25 15:28:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:28:05 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-04-25 15:28:05 -HTTP METHOD : POST
2019-04-25 15:28:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-04-25 15:28:05 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@670e6620, com.bootdo.moneyLog.vo.WaterLogVo@7e5ba5ab, com.bootdo.moneyLog.vo.HeatLogVo@7892828a]
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:28:05 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:28:05 -<==      Total: 1
2019-04-25 15:28:05 -耗时 : 150
2019-04-25 15:28:05 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=150, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=270, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-04-25 15:30:02 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-25 15:30:02 -HTTP METHOD : GET
2019-04-25 15:30:02 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-25 15:30:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2a7e0b9b, com.bootdo.moneyLog.vo.HeatLogVo@156066f1, com.bootdo.moneyLog.vo.WaterLogVo@660ec36e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f95d3a4]
2019-04-25 15:30:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:30:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:30:03 -<==      Total: 4
2019-04-25 15:30:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:30:03 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:30:03 -<==      Total: 1
2019-04-25 15:30:03 -耗时 : 633
2019-04-25 15:30:03 -返回值 : null
2019-04-25 15:32:46 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-25 15:32:46 -HTTP METHOD : GET
2019-04-25 15:32:46 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-25 15:32:46 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@68ae8edc, com.bootdo.moneyLog.vo.HeatLogVo@2660267f, com.bootdo.moneyLog.vo.WaterLogVo@61e2fea6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1bd3ba5d]
2019-04-25 15:32:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:32:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:32:46 -<==      Total: 4
2019-04-25 15:32:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:32:46 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:32:46 -<==      Total: 1
2019-04-25 15:32:46 -耗时 : 28
2019-04-25 15:32:46 -返回值 : null
2019-04-25 15:36:27 -Starting BootdoApplication on ZJZL-20180906VX with PID 11296 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 15:36:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 15:36:27 -The following profiles are active: dev
2019-04-25 15:36:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:36:27 CST 2019]; root of context hierarchy
2019-04-25 15:36:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 15:36:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 15:36:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 15:36:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:36:36 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 15:36:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 15:36:36 -Starting service [Tomcat]
2019-04-25 15:36:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 15:36:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 15:36:37 -Initializing Spring embedded WebApplicationContext
2019-04-25 15:36:37 -Root WebApplicationContext: initialization completed in 9130 ms
2019-04-25 15:36:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 15:36:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 15:36:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 15:36:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 15:36:37 -Filter xssFilter was not registered (disabled)
2019-04-25 15:36:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 15:36:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 15:36:37 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 15:36:37 -Servlet dispatcherServlet mapped to [/]
2019-04-25 15:36:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:36:27 CST 2019]; root of context hierarchy
2019-04-25 15:36:41 -Using default implementation for ThreadExecutor
2019-04-25 15:36:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 15:36:41 -Quartz Scheduler v.2.2.1 created.
2019-04-25 15:36:41 -RAMJobStore initialized.
2019-04-25 15:36:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 15:36:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 15:36:41 -Quartz scheduler version: 2.2.1
2019-04-25 15:36:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-04-25 15:36:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 15:36:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 15:36:45 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 15:36:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 15:36:45 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 15:36:45 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 15:36:45 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 15:36:45 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 15:36:45 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 15:36:45 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 15:36:45 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 15:36:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 15:36:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 15:36:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 15:36:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 15:36:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 15:36:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 15:36:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:36:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 15:36:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:36:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 15:36:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 15:36:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 15:36:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 15:36:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 15:36:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 15:36:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 15:36:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 15:36:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 15:36:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 15:36:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 15:36:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 15:36:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 15:36:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 15:36:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 15:36:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 15:36:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 15:36:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:36:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:36:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 15:36:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 15:36:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 15:36:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 15:36:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 15:36:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:36:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:36:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 15:36:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 15:36:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 15:36:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 15:36:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 15:36:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 15:36:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 15:36:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 15:36:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 15:36:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 15:36:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 15:36:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 15:36:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 15:36:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 15:36:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 15:36:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 15:36:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 15:36:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 15:36:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 15:36:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 15:36:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 15:36:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 15:36:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 15:36:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 15:36:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 15:36:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 15:36:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 15:36:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 15:36:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:36:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:36:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 15:36:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 15:36:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 15:36:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 15:36:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 15:36:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:36:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 15:36:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 15:36:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 15:36:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:36:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:36:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:36:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 15:36:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 15:36:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 15:36:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 15:36:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 15:36:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 15:36:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:36:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:36:27 CST 2019]; root of context hierarchy
2019-04-25 15:36:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:36:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:36:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:36:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 15:36:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 15:36:50 -Registering beans for JMX exposure on startup
2019-04-25 15:36:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 15:36:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 15:36:50 -Starting beans in phase 2147483647
2019-04-25 15:36:50 -Context refreshed
2019-04-25 15:36:50 -Found 1 custom documentation plugin(s)
2019-04-25 15:36:50 -Scanning for api listing references
2019-04-25 15:36:50 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 15:36:50 -Generating unique operation named: removeUsingPOST_1
2019-04-25 15:36:51 -Generating unique operation named: addUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: listUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_2
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_3
2019-04-25 15:36:51 -Generating unique operation named: saveUsingPOST_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPOST_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPUT_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 15:36:51 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 15:36:51 -Generating unique operation named: addUsingGET_2
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_2
2019-04-25 15:36:51 -Generating unique operation named: listUsingGET_2
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_4
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_5
2019-04-25 15:36:51 -Generating unique operation named: saveUsingPOST_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPOST_2
2019-04-25 15:36:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: addUsingGET_3
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_3
2019-04-25 15:36:51 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: listUsingGET_3
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_6
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_7
2019-04-25 15:36:51 -Generating unique operation named: saveUsingPOST_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingGET_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPOST_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPUT_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 15:36:51 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 15:36:51 -Generating unique operation named: addUsingGET_4
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_4
2019-04-25 15:36:51 -Generating unique operation named: listUsingGET_4
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_8
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_9
2019-04-25 15:36:51 -Generating unique operation named: saveUsingPOST_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingGET_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPOST_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPUT_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 15:36:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 15:36:51 -Generating unique operation named: ElecUsingGET_1
2019-04-25 15:36:51 -Generating unique operation named: addUsingGET_5
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_5
2019-04-25 15:36:51 -Generating unique operation named: listUsingGET_5
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_10
2019-04-25 15:36:51 -Generating unique operation named: removeUsingPOST_11
2019-04-25 15:36:51 -Generating unique operation named: saveUsingPOST_5
2019-04-25 15:36:51 -Generating unique operation named: updateUsingGET_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPOST_5
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPUT_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 15:36:51 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 15:36:51 -Generating unique operation named: editUsingGET_6
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_6
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_6
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_7
2019-04-25 15:36:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_7
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_12
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_13
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingGET_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPUT_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 15:36:52 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 15:36:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_7
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_8
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_8
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_14
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_15
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingGET_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPUT_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 15:36:52 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_8
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_9
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_9
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_16
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_17
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingGET_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_9
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPUT_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 15:36:52 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_9
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_10
2019-04-25 15:36:52 -Generating unique operation named: infoUsingGET_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingPOST_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingPUT_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 15:36:52 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_10
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_18
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_19
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_9
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_10
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_11
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_20
2019-04-25 15:36:52 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_10
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_11
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_12
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_21
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_10
2019-04-25 15:36:52 -Generating unique operation named: treeUsingGET_1
2019-04-25 15:36:52 -Generating unique operation named: treeUsingGET_2
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_11
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_11
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_12
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_13
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_22
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_23
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_11
2019-04-25 15:36:52 -Generating unique operation named: updateUsingGET_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_12
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPUT_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 15:36:52 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 15:36:52 -Generating unique operation named: addUsingGET_12
2019-04-25 15:36:52 -Generating unique operation named: editUsingGET_13
2019-04-25 15:36:52 -Generating unique operation named: listUsingGET_14
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_24
2019-04-25 15:36:52 -Generating unique operation named: removeUsingPOST_25
2019-04-25 15:36:52 -Generating unique operation named: saveUsingPOST_12
2019-04-25 15:36:52 -Generating unique operation named: updateUsingGET_9
2019-04-25 15:36:52 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPOST_13
2019-04-25 15:36:52 -Generating unique operation named: updateUsingPUT_9
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 15:36:53 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 15:36:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 15:36:53 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 15:36:53 -Generating unique operation named: addUsingGET_13
2019-04-25 15:36:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 15:36:53 -Generating unique operation named: editUsingGET_14
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_15
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_13
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_14
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPOST_14
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_16
2019-04-25 15:36:53 -Generating unique operation named: listUsingHEAD_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingPOST_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingPUT_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingPATCH_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingDELETE_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingTRACE_1
2019-04-25 15:36:53 -Generating unique operation named: countDDUsingGET_1
2019-04-25 15:36:53 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 15:36:53 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 15:36:53 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 15:36:53 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 15:36:53 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 15:36:53 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 15:36:53 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 15:36:53 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 15:36:53 -Generating unique operation named: addUsingGET_14
2019-04-25 15:36:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 15:36:53 -Generating unique operation named: editUsingGET_15
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_17
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_26
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_15
2019-04-25 15:36:53 -Generating unique operation named: treeUsingGET_3
2019-04-25 15:36:53 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPOST_15
2019-04-25 15:36:53 -Generating unique operation named: addUsingGET_15
2019-04-25 15:36:53 -Generating unique operation named: editUsingGET_16
2019-04-25 15:36:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_18
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_27
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_28
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_16
2019-04-25 15:36:53 -Generating unique operation named: updateUsingGET_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPOST_16
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPUT_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 15:36:53 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 15:36:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 15:36:53 -Generating unique operation named: addUsingGET_16
2019-04-25 15:36:53 -Generating unique operation named: editUsingGET_17
2019-04-25 15:36:53 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_19
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_29
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_30
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_17
2019-04-25 15:36:53 -Generating unique operation named: updateUsingGET_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPOST_17
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPUT_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 15:36:53 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 15:36:53 -Generating unique operation named: addUsingGET_17
2019-04-25 15:36:53 -Generating unique operation named: editUsingGET_18
2019-04-25 15:36:53 -Generating unique operation named: listUsingGET_20
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_31
2019-04-25 15:36:53 -Generating unique operation named: removeUsingPOST_32
2019-04-25 15:36:53 -Generating unique operation named: saveUsingPOST_18
2019-04-25 15:36:53 -Generating unique operation named: updateUsingGET_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPOST_18
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPUT_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 15:36:53 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 15:36:53 -Starting Quartz Scheduler now
2019-04-25 15:36:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 15:36:53 -Starting...
2019-04-25 15:36:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 15:36:53 -Started.
2019-04-25 15:36:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 15:36:53 -Using a shared selector for servlet write/read
2019-04-25 15:36:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 15:36:53 -Started BootdoApplication in 27.499 seconds (JVM running for 28.443)
2019-04-25 15:36:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 15:36:54 -==> Parameters: 
2019-04-25 15:36:54 -<==      Total: 1
2019-04-25 15:37:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 15:37:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 15:37:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2019-04-25 15:37:05 -Enabling session validation scheduler...
2019-04-25 15:37:05 -请求地址 : http://localhost:8081/login;JSESSIONID=960edbc5-6001-4271-9c6a-081c34395d2b
2019-04-25 15:37:05 -HTTP METHOD : GET
2019-04-25 15:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 15:37:05 -参数 : [{}]
2019-04-25 15:37:05 -耗时 : 5
2019-04-25 15:37:05 -返回值 : login
2019-04-25 15:37:07 -请求地址 : http://localhost:8081/getVerify
2019-04-25 15:37:07 -HTTP METHOD : GET
2019-04-25 15:37:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 15:37:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4591452f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41aec945]
2019-04-25 15:37:12 -9362
2019-04-25 15:37:12 -耗时 : 5198
2019-04-25 15:37:12 -返回值 : null
2019-04-25 15:37:12 -请求地址 : http://localhost:8081/login
2019-04-25 15:37:12 -HTTP METHOD : GET
2019-04-25 15:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 15:37:12 -参数 : [{}]
2019-04-25 15:37:12 -耗时 : 0
2019-04-25 15:37:12 -返回值 : login
2019-04-25 15:37:19 -请求地址 : http://localhost:8081/login
2019-04-25 15:37:19 -HTTP METHOD : POST
2019-04-25 15:37:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 15:37:19 -参数 : [admin, 111111, 9362, org.apache.shiro.web.servlet.ShiroHttpServletRequest@651595a]
2019-04-25 15:37:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 15:37:19 -==> Parameters: admin(String)
2019-04-25 15:37:19 -<==      Total: 1
2019-04-25 15:37:19 -耗时 : 228
2019-04-25 15:37:19 -返回值 : {msg=操作成功, code=0}
2019-04-25 15:37:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 15:37:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:37:19 -==> Parameters: 1(Long), admin(String), 登录(String), 228(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 15:37:19.521(Timestamp)
2019-04-25 15:37:19 -请求地址 : http://localhost:8081/index
2019-04-25 15:37:19 -HTTP METHOD : GET
2019-04-25 15:37:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 15:37:19 -参数 : [{}]
2019-04-25 15:37:19 -<==    Updates: 1
2019-04-25 15:37:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 15:37:20 -==> Parameters: 1(Long)
2019-04-25 15:37:20 -<==      Total: 49
2019-04-25 15:37:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 15:37:20 -==> Parameters: 138(Long)
2019-04-25 15:37:20 -<==      Total: 1
2019-04-25 15:37:20 -耗时 : 524
2019-04-25 15:37:20 -返回值 : index_v1
2019-04-25 15:37:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:37:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 525(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 15:37:20.358(Timestamp)
2019-04-25 15:37:20 -<==    Updates: 1
2019-04-25 15:37:20 -请求地址 : http://localhost:8081/main
2019-04-25 15:37:20 -HTTP METHOD : GET
2019-04-25 15:37:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:37:20 -参数 : []
2019-04-25 15:37:20 -耗时 : 1
2019-04-25 15:37:20 -返回值 : main
2019-04-25 15:37:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 15:37:21 -HTTP METHOD : GET
2019-04-25 15:37:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 15:37:21 -参数 : []
2019-04-25 15:37:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 15:37:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 15:37:21 -<==      Total: 0
2019-04-25 15:37:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 15:37:21 -==> Parameters: 1(Long), 0(String)
2019-04-25 15:37:21 -<==      Total: 1
2019-04-25 15:37:21 -耗时 : 76
2019-04-25 15:37:21 -返回值 : com.bootdo.common.utils.PageUtils@2615a79a
2019-04-25 15:37:21 -请求地址 : http://localhost:8081/main
2019-04-25 15:37:21 -HTTP METHOD : GET
2019-04-25 15:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:37:21 -参数 : []
2019-04-25 15:37:21 -耗时 : 1
2019-04-25 15:37:21 -返回值 : main
2019-04-25 15:37:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/205/jtd5fngp/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 15:37:22 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 15:37:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 15:37:43 -==> Parameters: 1(Long)
2019-04-25 15:37:43 -<==      Total: 93
2019-04-25 15:37:43 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 15:37:43 -HTTP METHOD : GET
2019-04-25 15:37:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 15:37:43 -参数 : []
2019-04-25 15:37:43 -耗时 : 9
2019-04-25 15:37:43 -返回值 : charts/countMM
2019-04-25 15:37:44 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 15:37:44 -HTTP METHOD : GET
2019-04-25 15:37:44 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 15:37:44 -参数 : []
2019-04-25 15:37:44 -耗时 : 12
2019-04-25 15:37:44 -返回值 : charts/tableDD
2019-04-25 15:37:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:37:44 -HTTP METHOD : GET
2019-04-25 15:37:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:37:44 -参数 : [userType]
2019-04-25 15:37:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:37:44 -==> Parameters: userType(String)
2019-04-25 15:37:44 -<==      Total: 4
2019-04-25 15:37:44 -耗时 : 76
2019-04-25 15:37:44 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:37:46 -WebSocketSession[1 current WS(0)-HttpStream(0)-HttpPoll(1), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-25 15:37:48 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 15:37:48 -HTTP METHOD : GET
2019-04-25 15:37:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 15:37:48 -参数 : []
2019-04-25 15:37:48 -耗时 : 14
2019-04-25 15:37:48 -返回值 : charts/countDD
2019-04-25 15:37:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:37:49 -HTTP METHOD : GET
2019-04-25 15:37:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:37:49 -参数 : [userType]
2019-04-25 15:37:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:37:49 -==> Parameters: userType(String)
2019-04-25 15:37:49 -<==      Total: 4
2019-04-25 15:37:49 -耗时 : 8
2019-04-25 15:37:49 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:37:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:37:53 -HTTP METHOD : GET
2019-04-25 15:37:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:37:53 -参数 : []
2019-04-25 15:37:53 -耗时 : 1
2019-04-25 15:37:53 -返回值 : system/dept/deptTree
2019-04-25 15:37:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:37:53 -HTTP METHOD : GET
2019-04-25 15:37:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:37:53 -参数 : []
2019-04-25 15:37:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:37:53 -==> Parameters: 
2019-04-25 15:37:54 -<==      Total: 3
2019-04-25 15:37:54 -耗时 : 60
2019-04-25 15:37:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:37:56 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-25 15:37:56 -HTTP METHOD : GET
2019-04-25 15:37:56 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-25 15:37:56 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2caf9d55, com.bootdo.moneyLog.vo.HeatLogVo@2c294b92, com.bootdo.moneyLog.vo.WaterLogVo@766b0077, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4f75bb1b]
2019-04-25 15:37:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:37:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:37:57 -<==      Total: 4
2019-04-25 15:37:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:37:57 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:37:57 -<==      Total: 1
2019-04-25 15:37:57 -耗时 : 706
2019-04-25 15:37:57 -返回值 : null
2019-04-25 15:43:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 7676 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 15:43:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 15:43:26 -The following profiles are active: dev
2019-04-25 15:43:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:43:26 CST 2019]; root of context hierarchy
2019-04-25 15:43:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 15:43:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 15:43:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 15:43:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 15:43:34 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 15:43:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 15:43:34 -Starting service [Tomcat]
2019-04-25 15:43:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 15:43:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 15:43:35 -Initializing Spring embedded WebApplicationContext
2019-04-25 15:43:35 -Root WebApplicationContext: initialization completed in 9104 ms
2019-04-25 15:43:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 15:43:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 15:43:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 15:43:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 15:43:36 -Filter xssFilter was not registered (disabled)
2019-04-25 15:43:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 15:43:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 15:43:36 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 15:43:36 -Servlet dispatcherServlet mapped to [/]
2019-04-25 15:43:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:43:26 CST 2019]; root of context hierarchy
2019-04-25 15:43:40 -Using default implementation for ThreadExecutor
2019-04-25 15:43:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 15:43:40 -Quartz Scheduler v.2.2.1 created.
2019-04-25 15:43:40 -RAMJobStore initialized.
2019-04-25 15:43:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 15:43:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 15:43:40 -Quartz scheduler version: 2.2.1
2019-04-25 15:43:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6009cd34
2019-04-25 15:43:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 15:43:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 15:43:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 15:43:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 15:43:43 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 15:43:43 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 15:43:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 15:43:43 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:43 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 15:43:43 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 15:43:43 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 15:43:43 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 15:43:43 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 15:43:43 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 15:43:43 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:43 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:43 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 15:43:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 15:43:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 15:43:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 15:43:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 15:43:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 15:43:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 15:43:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 15:43:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:43:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 15:43:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 15:43:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 15:43:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 15:43:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 15:43:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 15:43:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 15:43:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 15:43:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 15:43:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 15:43:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 15:43:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 15:43:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 15:43:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 15:43:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 15:43:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 15:43:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 15:43:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 15:43:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:43:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 15:43:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 15:43:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 15:43:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 15:43:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 15:43:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:43:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:43:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 15:43:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 15:43:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 15:43:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 15:43:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 15:43:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 15:43:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 15:43:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 15:43:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 15:43:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 15:43:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 15:43:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 15:43:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 15:43:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 15:43:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 15:43:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 15:43:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 15:43:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 15:43:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 15:43:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 15:43:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 15:43:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 15:43:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 15:43:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 15:43:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 15:43:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 15:43:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 15:43:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 15:43:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 15:43:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:43:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 15:43:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 15:43:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 15:43:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 15:43:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 15:43:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 15:43:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 15:43:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 15:43:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 15:43:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 15:43:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 15:43:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 15:43:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 15:43:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 15:43:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 15:43:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 15:43:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 15:43:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 15:43:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:43:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 15:43:26 CST 2019]; root of context hierarchy
2019-04-25 15:43:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:43:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:43:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 15:43:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 15:43:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 15:43:48 -Registering beans for JMX exposure on startup
2019-04-25 15:43:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 15:43:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 15:43:48 -Starting beans in phase 2147483647
2019-04-25 15:43:48 -Context refreshed
2019-04-25 15:43:48 -Found 1 custom documentation plugin(s)
2019-04-25 15:43:48 -Scanning for api listing references
2019-04-25 15:43:49 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 15:43:49 -Generating unique operation named: removeUsingPOST_1
2019-04-25 15:43:49 -Generating unique operation named: addUsingGET_1
2019-04-25 15:43:49 -Generating unique operation named: editUsingGET_1
2019-04-25 15:43:49 -Generating unique operation named: listUsingGET_1
2019-04-25 15:43:49 -Generating unique operation named: removeUsingPOST_2
2019-04-25 15:43:49 -Generating unique operation named: removeUsingPOST_3
2019-04-25 15:43:49 -Generating unique operation named: saveUsingPOST_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingGET_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingPOST_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingPUT_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 15:43:49 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 15:43:49 -Generating unique operation named: addUsingGET_2
2019-04-25 15:43:49 -Generating unique operation named: editUsingGET_2
2019-04-25 15:43:49 -Generating unique operation named: listUsingGET_2
2019-04-25 15:43:49 -Generating unique operation named: removeUsingPOST_4
2019-04-25 15:43:49 -Generating unique operation named: removeUsingPOST_5
2019-04-25 15:43:49 -Generating unique operation named: saveUsingPOST_2
2019-04-25 15:43:49 -Generating unique operation named: updateUsingPOST_2
2019-04-25 15:43:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 15:43:49 -Generating unique operation named: addUsingGET_3
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_3
2019-04-25 15:43:50 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_3
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_6
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_7
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_4
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_4
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_4
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_8
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_9
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 15:43:50 -Generating unique operation named: ElecUsingGET_1
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_5
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_5
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_5
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_10
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_11
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_6
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_6
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_6
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_7
2019-04-25 15:43:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_7
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_12
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_13
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 15:43:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_7
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_8
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_8
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_14
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_15
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_8
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_8
2019-04-25 15:43:50 -Generating unique operation named: editUsingGET_9
2019-04-25 15:43:50 -Generating unique operation named: listUsingGET_9
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_16
2019-04-25 15:43:50 -Generating unique operation named: removeUsingPOST_17
2019-04-25 15:43:50 -Generating unique operation named: saveUsingPOST_8
2019-04-25 15:43:50 -Generating unique operation named: updateUsingGET_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPOST_9
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPUT_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 15:43:50 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 15:43:50 -Generating unique operation named: addUsingGET_9
2019-04-25 15:43:51 -Generating unique operation named: editUsingGET_10
2019-04-25 15:43:51 -Generating unique operation named: infoUsingGET_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingPOST_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingPUT_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 15:43:51 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_10
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_18
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_19
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPOST_10
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_11
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_20
2019-04-25 15:43:51 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 15:43:51 -Generating unique operation named: addUsingGET_10
2019-04-25 15:43:51 -Generating unique operation named: editUsingGET_11
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_12
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_21
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_10
2019-04-25 15:43:51 -Generating unique operation named: treeUsingGET_1
2019-04-25 15:43:51 -Generating unique operation named: treeUsingGET_2
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPOST_11
2019-04-25 15:43:51 -Generating unique operation named: addUsingGET_11
2019-04-25 15:43:51 -Generating unique operation named: editUsingGET_12
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_13
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_22
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_23
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_11
2019-04-25 15:43:51 -Generating unique operation named: updateUsingGET_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPOST_12
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPUT_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 15:43:51 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 15:43:51 -Generating unique operation named: addUsingGET_12
2019-04-25 15:43:51 -Generating unique operation named: editUsingGET_13
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_14
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_24
2019-04-25 15:43:51 -Generating unique operation named: removeUsingPOST_25
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_12
2019-04-25 15:43:51 -Generating unique operation named: updateUsingGET_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPOST_13
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPUT_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 15:43:51 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 15:43:51 -Generating unique operation named: addUsingGET_13
2019-04-25 15:43:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 15:43:51 -Generating unique operation named: editUsingGET_14
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_15
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_13
2019-04-25 15:43:51 -Generating unique operation named: saveUsingPOST_14
2019-04-25 15:43:51 -Generating unique operation named: updateUsingPOST_14
2019-04-25 15:43:51 -Generating unique operation named: listUsingGET_16
2019-04-25 15:43:51 -Generating unique operation named: listUsingHEAD_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingPOST_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingPUT_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingPATCH_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingDELETE_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 15:43:51 -Generating unique operation named: listUsingTRACE_1
2019-04-25 15:43:52 -Generating unique operation named: countDDUsingGET_1
2019-04-25 15:43:52 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 15:43:52 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 15:43:52 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 15:43:52 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 15:43:52 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 15:43:52 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 15:43:52 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 15:43:52 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 15:43:52 -Generating unique operation named: addUsingGET_14
2019-04-25 15:43:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 15:43:52 -Generating unique operation named: editUsingGET_15
2019-04-25 15:43:52 -Generating unique operation named: listUsingGET_17
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_26
2019-04-25 15:43:52 -Generating unique operation named: saveUsingPOST_15
2019-04-25 15:43:52 -Generating unique operation named: treeUsingGET_3
2019-04-25 15:43:52 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPOST_15
2019-04-25 15:43:52 -Generating unique operation named: addUsingGET_15
2019-04-25 15:43:52 -Generating unique operation named: editUsingGET_16
2019-04-25 15:43:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 15:43:52 -Generating unique operation named: listUsingGET_18
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_27
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_28
2019-04-25 15:43:52 -Generating unique operation named: saveUsingPOST_16
2019-04-25 15:43:52 -Generating unique operation named: updateUsingGET_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPOST_16
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPUT_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 15:43:52 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 15:43:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 15:43:52 -Generating unique operation named: addUsingGET_16
2019-04-25 15:43:52 -Generating unique operation named: editUsingGET_17
2019-04-25 15:43:52 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 15:43:52 -Generating unique operation named: listUsingGET_19
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_29
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_30
2019-04-25 15:43:52 -Generating unique operation named: saveUsingPOST_17
2019-04-25 15:43:52 -Generating unique operation named: updateUsingGET_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPOST_17
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPUT_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 15:43:52 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 15:43:52 -Generating unique operation named: addUsingGET_17
2019-04-25 15:43:52 -Generating unique operation named: editUsingGET_18
2019-04-25 15:43:52 -Generating unique operation named: listUsingGET_20
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_31
2019-04-25 15:43:52 -Generating unique operation named: removeUsingPOST_32
2019-04-25 15:43:52 -Generating unique operation named: saveUsingPOST_18
2019-04-25 15:43:52 -Generating unique operation named: updateUsingGET_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPOST_18
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPUT_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 15:43:52 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 15:43:52 -Starting Quartz Scheduler now
2019-04-25 15:43:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 15:43:52 -Starting...
2019-04-25 15:43:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 15:43:52 -Started.
2019-04-25 15:43:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 15:43:52 -Using a shared selector for servlet write/read
2019-04-25 15:43:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 15:43:52 -Started BootdoApplication in 27.959 seconds (JVM running for 28.928)
2019-04-25 15:43:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 15:43:53 -==> Parameters: 
2019-04-25 15:43:53 -<==      Total: 1
2019-04-25 15:44:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 15:44:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 15:44:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-04-25 15:44:01 -Enabling session validation scheduler...
2019-04-25 15:44:01 -请求地址 : http://localhost:8081/login;JSESSIONID=45cb14a5-a15e-4fca-9df9-cb517ee3a4ee
2019-04-25 15:44:01 -HTTP METHOD : GET
2019-04-25 15:44:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 15:44:01 -参数 : [{}]
2019-04-25 15:44:01 -耗时 : 6
2019-04-25 15:44:01 -返回值 : login
2019-04-25 15:44:04 -请求地址 : http://localhost:8081/getVerify
2019-04-25 15:44:04 -HTTP METHOD : GET
2019-04-25 15:44:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 15:44:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28cb7ab7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@335e7d13]
2019-04-25 15:44:07 -2429
2019-04-25 15:44:08 -耗时 : 3906
2019-04-25 15:44:08 -返回值 : null
2019-04-25 15:44:14 -请求地址 : http://localhost:8081/login
2019-04-25 15:44:14 -HTTP METHOD : POST
2019-04-25 15:44:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 15:44:14 -参数 : [admin, 111111, 2429, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59aab3a7]
2019-04-25 15:44:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 15:44:14 -==> Parameters: admin(String)
2019-04-25 15:44:14 -<==      Total: 1
2019-04-25 15:44:14 -耗时 : 196
2019-04-25 15:44:14 -返回值 : {msg=操作成功, code=0}
2019-04-25 15:44:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 15:44:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:44:14 -==> Parameters: 1(Long), admin(String), 登录(String), 197(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 15:44:14.674(Timestamp)
2019-04-25 15:44:14 -请求地址 : http://localhost:8081/index
2019-04-25 15:44:14 -HTTP METHOD : GET
2019-04-25 15:44:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 15:44:14 -参数 : [{}]
2019-04-25 15:44:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 15:44:15 -<==    Updates: 1
2019-04-25 15:44:15 -==> Parameters: 1(Long)
2019-04-25 15:44:15 -<==      Total: 49
2019-04-25 15:44:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 15:44:15 -==> Parameters: 138(Long)
2019-04-25 15:44:15 -<==      Total: 1
2019-04-25 15:44:15 -耗时 : 593
2019-04-25 15:44:15 -返回值 : index_v1
2019-04-25 15:44:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 15:44:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 593(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 15:44:15.359(Timestamp)
2019-04-25 15:44:15 -<==    Updates: 1
2019-04-25 15:44:15 -请求地址 : http://localhost:8081/main
2019-04-25 15:44:15 -HTTP METHOD : GET
2019-04-25 15:44:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:44:15 -参数 : []
2019-04-25 15:44:15 -耗时 : 0
2019-04-25 15:44:15 -返回值 : main
2019-04-25 15:44:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 15:44:15 -HTTP METHOD : GET
2019-04-25 15:44:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 15:44:15 -参数 : []
2019-04-25 15:44:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 15:44:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 15:44:15 -<==      Total: 0
2019-04-25 15:44:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 15:44:15 -==> Parameters: 1(Long), 0(String)
2019-04-25 15:44:15 -<==      Total: 1
2019-04-25 15:44:15 -耗时 : 58
2019-04-25 15:44:15 -返回值 : com.bootdo.common.utils.PageUtils@74f4b4be
2019-04-25 15:44:16 -请求地址 : http://localhost:8081/main
2019-04-25 15:44:16 -HTTP METHOD : GET
2019-04-25 15:44:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 15:44:16 -参数 : []
2019-04-25 15:44:16 -耗时 : 0
2019-04-25 15:44:16 -返回值 : main
2019-04-25 15:44:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 15:44:22 -==> Parameters: 1(Long)
2019-04-25 15:44:22 -<==      Total: 93
2019-04-25 15:44:22 -请求地址 : http://localhost:8081/charts/countDD
2019-04-25 15:44:22 -HTTP METHOD : GET
2019-04-25 15:44:22 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-25 15:44:22 -参数 : []
2019-04-25 15:44:22 -耗时 : 13
2019-04-25 15:44:22 -返回值 : charts/countDD
2019-04-25 15:44:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:44:23 -HTTP METHOD : GET
2019-04-25 15:44:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:44:23 -参数 : [userType]
2019-04-25 15:44:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:44:23 -==> Parameters: userType(String)
2019-04-25 15:44:23 -<==      Total: 4
2019-04-25 15:44:23 -耗时 : 68
2019-04-25 15:44:23 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:44:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:44:28 -HTTP METHOD : GET
2019-04-25 15:44:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:44:28 -参数 : []
2019-04-25 15:44:28 -耗时 : 1
2019-04-25 15:44:28 -返回值 : system/dept/deptTree
2019-04-25 15:44:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:44:29 -HTTP METHOD : GET
2019-04-25 15:44:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:44:29 -参数 : []
2019-04-25 15:44:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:44:29 -==> Parameters: 
2019-04-25 15:44:29 -<==      Total: 3
2019-04-25 15:44:29 -耗时 : 26
2019-04-25 15:44:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:44:31 -请求地址 : http://localhost:8081/charts/countDD/exportDD
2019-04-25 15:44:31 -HTTP METHOD : GET
2019-04-25 15:44:31 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.exportDD
2019-04-25 15:44:31 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@526ecafa, com.bootdo.moneyLog.vo.HeatLogVo@45073c28, com.bootdo.moneyLog.vo.WaterLogVo@7a68c240, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a252341]
2019-04-25 15:44:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:44:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:44:31 -<==      Total: 4
2019-04-25 15:44:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:44:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:44:31 -<==      Total: 1
2019-04-25 15:44:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:44:31 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:44:31 -<==      Total: 1
2019-04-25 15:44:32 -耗时 : 1632
2019-04-25 15:44:32 -返回值 : null
2019-04-25 15:44:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-25 15:46:05 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 15:46:05 -HTTP METHOD : GET
2019-04-25 15:46:05 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 15:46:05 -参数 : []
2019-04-25 15:46:05 -耗时 : 16
2019-04-25 15:46:05 -返回值 : charts/tableDD
2019-04-25 15:46:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:46:18 -HTTP METHOD : GET
2019-04-25 15:46:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:46:18 -参数 : []
2019-04-25 15:46:18 -耗时 : 1
2019-04-25 15:46:18 -返回值 : system/dept/deptTree
2019-04-25 15:46:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:46:18 -HTTP METHOD : GET
2019-04-25 15:46:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:46:18 -参数 : []
2019-04-25 15:46:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:46:18 -==> Parameters: 
2019-04-25 15:46:18 -<==      Total: 3
2019-04-25 15:46:18 -耗时 : 5
2019-04-25 15:46:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:46:19 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-04-25 15:46:19 -HTTP METHOD : GET
2019-04-25 15:46:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-04-25 15:46:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@631c1dac, com.bootdo.moneyLog.vo.HeatLogVo@7eca4ff6, com.bootdo.moneyLog.vo.WaterLogVo@66d8e0c7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7b525ac1]
2019-04-25 15:46:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-04-25 15:46:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:46:19 -<==      Total: 4
2019-04-25 15:46:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-04-25 15:46:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:46:19 -<==      Total: 1
2019-04-25 15:46:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-04-25 15:46:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-04-25 15:46:19 -<==      Total: 1
2019-04-25 15:46:20 -耗时 : 33
2019-04-25 15:46:20 -返回值 : null
2019-04-25 15:46:54 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 15:46:54 -HTTP METHOD : GET
2019-04-25 15:46:54 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 15:46:54 -参数 : []
2019-04-25 15:46:54 -耗时 : 14
2019-04-25 15:46:54 -返回值 : charts/countMM
2019-04-25 15:46:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 15:46:54 -HTTP METHOD : GET
2019-04-25 15:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 15:46:54 -参数 : [userType]
2019-04-25 15:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 15:46:54 -==> Parameters: userType(String)
2019-04-25 15:46:54 -<==      Total: 4
2019-04-25 15:46:54 -耗时 : 5
2019-04-25 15:46:54 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 15:46:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 15:46:56 -HTTP METHOD : GET
2019-04-25 15:46:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 15:46:56 -参数 : []
2019-04-25 15:46:56 -耗时 : 20
2019-04-25 15:46:56 -返回值 : charts/tableElecMM
2019-04-25 15:46:57 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 15:46:57 -HTTP METHOD : GET
2019-04-25 15:46:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 15:46:57 -参数 : []
2019-04-25 15:46:57 -耗时 : 8
2019-04-25 15:46:57 -返回值 : charts/tableWaterMM
2019-04-25 15:47:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 15:47:03 -HTTP METHOD : GET
2019-04-25 15:47:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 15:47:03 -参数 : []
2019-04-25 15:47:03 -耗时 : 0
2019-04-25 15:47:03 -返回值 : system/dept/deptTree
2019-04-25 15:47:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 15:47:03 -HTTP METHOD : GET
2019-04-25 15:47:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 15:47:03 -参数 : []
2019-04-25 15:47:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 15:47:03 -==> Parameters: 
2019-04-25 15:47:03 -<==      Total: 3
2019-04-25 15:47:03 -耗时 : 4
2019-04-25 15:47:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 15:47:05 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 15:47:05 -HTTP METHOD : GET
2019-04-25 15:47:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 15:47:05 -参数 : [com.bootdo.water.vo.WaterVo@38fb6eda, com.bootdo.moneyLog.vo.WaterLogVo@498f7b45, org.apache.shiro.web.servlet.ShiroHttpServletResponse@574817f6]
2019-04-25 15:47:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 15:47:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 15:47:05 -<==      Total: 1
2019-04-25 15:47:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 15:47:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 15:47:05 -<==      Total: 1
2019-04-25 15:47:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 15:47:05 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 15:47:05 -<==      Total: 3
2019-04-25 15:47:05 -耗时 : 145
2019-04-25 15:47:05 -返回值 : null
2019-04-25 16:02:42 -请求地址 : http://localhost:8081/index
2019-04-25 16:02:42 -HTTP METHOD : GET
2019-04-25 16:02:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:02:42 -参数 : [{}]
2019-04-25 16:02:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:02:42 -==> Parameters: 1(Long)
2019-04-25 16:02:42 -<==      Total: 49
2019-04-25 16:02:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:02:42 -==> Parameters: 138(Long)
2019-04-25 16:02:42 -<==      Total: 1
2019-04-25 16:02:42 -耗时 : 27
2019-04-25 16:02:42 -返回值 : index_v1
2019-04-25 16:02:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:02:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:02:42.859(Timestamp)
2019-04-25 16:02:42 -<==    Updates: 1
2019-04-25 16:02:43 -请求地址 : http://localhost:8081/main
2019-04-25 16:02:43 -HTTP METHOD : GET
2019-04-25 16:02:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:02:43 -参数 : []
2019-04-25 16:02:43 -耗时 : 1
2019-04-25 16:02:43 -返回值 : main
2019-04-25 16:02:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:02:43 -HTTP METHOD : GET
2019-04-25 16:02:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:02:43 -参数 : []
2019-04-25 16:02:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:02:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:02:43 -<==      Total: 0
2019-04-25 16:02:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:02:43 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:02:43 -<==      Total: 1
2019-04-25 16:02:43 -耗时 : 9
2019-04-25 16:02:43 -返回值 : com.bootdo.common.utils.PageUtils@129a57a0
2019-04-25 16:02:43 -请求地址 : http://localhost:8081/main
2019-04-25 16:02:43 -HTTP METHOD : GET
2019-04-25 16:02:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:02:43 -参数 : []
2019-04-25 16:02:43 -耗时 : 2
2019-04-25 16:02:43 -返回值 : main
2019-04-25 16:02:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 16:02:46 -==> Parameters: 1(Long)
2019-04-25 16:02:46 -<==      Total: 93
2019-04-25 16:02:46 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 16:02:46 -HTTP METHOD : GET
2019-04-25 16:02:46 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 16:02:46 -参数 : []
2019-04-25 16:02:46 -耗时 : 1
2019-04-25 16:02:46 -返回值 : charts/countMM
2019-04-25 16:02:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 16:02:46 -HTTP METHOD : GET
2019-04-25 16:02:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 16:02:46 -参数 : [userType]
2019-04-25 16:02:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 16:02:46 -==> Parameters: userType(String)
2019-04-25 16:02:46 -<==      Total: 4
2019-04-25 16:02:46 -耗时 : 6
2019-04-25 16:02:46 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 16:02:47 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:02:47 -HTTP METHOD : GET
2019-04-25 16:02:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:02:47 -参数 : []
2019-04-25 16:02:47 -耗时 : 0
2019-04-25 16:02:47 -返回值 : charts/tableElecMM
2019-04-25 16:02:49 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 16:02:49 -HTTP METHOD : GET
2019-04-25 16:02:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 16:02:49 -参数 : []
2019-04-25 16:02:49 -耗时 : 1
2019-04-25 16:02:49 -返回值 : charts/tableWaterMM
2019-04-25 16:02:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:02:56 -HTTP METHOD : GET
2019-04-25 16:02:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:02:56 -参数 : []
2019-04-25 16:02:56 -耗时 : 0
2019-04-25 16:02:56 -返回值 : system/dept/deptTree
2019-04-25 16:02:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:02:57 -HTTP METHOD : GET
2019-04-25 16:02:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:02:57 -参数 : []
2019-04-25 16:02:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:02:57 -==> Parameters: 
2019-04-25 16:02:57 -<==      Total: 3
2019-04-25 16:02:57 -耗时 : 4
2019-04-25 16:02:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:02:59 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 16:02:59 -HTTP METHOD : GET
2019-04-25 16:02:59 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 16:02:59 -参数 : [com.bootdo.water.vo.WaterVo@34c76408, com.bootdo.moneyLog.vo.WaterLogVo@45f9153f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50f9ab95]
2019-04-25 16:02:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:02:59 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:02:59 -<==      Total: 1
2019-04-25 16:02:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:02:59 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:02:59 -<==      Total: 1
2019-04-25 16:02:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:02:59 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:02:59 -<==      Total: 3
2019-04-25 16:02:59 -耗时 : 29
2019-04-25 16:02:59 -返回值 : null
2019-04-25 16:04:34 -Starting BootdoApplication on ZJZL-20180906VX with PID 10132 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 16:04:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 16:04:34 -The following profiles are active: dev
2019-04-25 16:04:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:04:35 CST 2019]; root of context hierarchy
2019-04-25 16:04:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 16:04:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 16:04:42 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 16:04:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:04:43 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 16:04:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 16:04:43 -Starting service [Tomcat]
2019-04-25 16:04:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 16:04:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 16:04:44 -Initializing Spring embedded WebApplicationContext
2019-04-25 16:04:44 -Root WebApplicationContext: initialization completed in 8961 ms
2019-04-25 16:04:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 16:04:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 16:04:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 16:04:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 16:04:44 -Filter xssFilter was not registered (disabled)
2019-04-25 16:04:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 16:04:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 16:04:44 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 16:04:44 -Servlet dispatcherServlet mapped to [/]
2019-04-25 16:04:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:04:35 CST 2019]; root of context hierarchy
2019-04-25 16:04:48 -Using default implementation for ThreadExecutor
2019-04-25 16:04:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 16:04:48 -Quartz Scheduler v.2.2.1 created.
2019-04-25 16:04:48 -RAMJobStore initialized.
2019-04-25 16:04:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 16:04:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 16:04:48 -Quartz scheduler version: 2.2.1
2019-04-25 16:04:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-25 16:04:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 16:04:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 16:04:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 16:04:52 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 16:04:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 16:04:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 16:04:52 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 16:04:52 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 16:04:52 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 16:04:52 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 16:04:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 16:04:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 16:04:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 16:04:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 16:04:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 16:04:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 16:04:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:04:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 16:04:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:04:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 16:04:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 16:04:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 16:04:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 16:04:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 16:04:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 16:04:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 16:04:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 16:04:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 16:04:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 16:04:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 16:04:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 16:04:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 16:04:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 16:04:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 16:04:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 16:04:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:04:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:04:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 16:04:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 16:04:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 16:04:52 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 16:04:52 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:04:52 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:04:52 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:04:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 16:04:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 16:04:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 16:04:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 16:04:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 16:04:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 16:04:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 16:04:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 16:04:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 16:04:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 16:04:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 16:04:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 16:04:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 16:04:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 16:04:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 16:04:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 16:04:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 16:04:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 16:04:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 16:04:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 16:04:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 16:04:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 16:04:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 16:04:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 16:04:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 16:04:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 16:04:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:04:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 16:04:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:04:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 16:04:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 16:04:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 16:04:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 16:04:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 16:04:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:04:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 16:04:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 16:04:52 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 16:04:52 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:04:52 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:04:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:04:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 16:04:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 16:04:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 16:04:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 16:04:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 16:04:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 16:04:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:04:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:04:35 CST 2019]; root of context hierarchy
2019-04-25 16:04:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:04:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:04:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:04:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 16:04:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 16:04:57 -Registering beans for JMX exposure on startup
2019-04-25 16:04:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 16:04:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 16:04:57 -Starting beans in phase 2147483647
2019-04-25 16:04:57 -Context refreshed
2019-04-25 16:04:57 -Found 1 custom documentation plugin(s)
2019-04-25 16:04:57 -Scanning for api listing references
2019-04-25 16:04:57 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 16:04:57 -Generating unique operation named: removeUsingPOST_1
2019-04-25 16:04:57 -Generating unique operation named: addUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_2
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_3
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPUT_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 16:04:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 16:04:58 -Generating unique operation named: addUsingGET_2
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_2
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_2
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_4
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_5
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_2
2019-04-25 16:04:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: addUsingGET_3
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_3
2019-04-25 16:04:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_3
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_6
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_7
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingGET_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPUT_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 16:04:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 16:04:58 -Generating unique operation named: addUsingGET_4
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_4
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_4
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_8
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_9
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingGET_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPUT_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 16:04:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 16:04:58 -Generating unique operation named: ElecUsingGET_1
2019-04-25 16:04:58 -Generating unique operation named: addUsingGET_5
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_5
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_5
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_10
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_11
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_5
2019-04-25 16:04:58 -Generating unique operation named: updateUsingGET_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_5
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPUT_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 16:04:58 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_6
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_6
2019-04-25 16:04:58 -Generating unique operation named: updateUsingPOST_6
2019-04-25 16:04:58 -Generating unique operation named: addUsingGET_6
2019-04-25 16:04:58 -Generating unique operation named: editUsingGET_7
2019-04-25 16:04:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 16:04:58 -Generating unique operation named: listUsingGET_7
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_12
2019-04-25 16:04:58 -Generating unique operation named: removeUsingPOST_13
2019-04-25 16:04:58 -Generating unique operation named: saveUsingPOST_6
2019-04-25 16:04:58 -Generating unique operation named: updateUsingGET_5
2019-04-25 16:04:58 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPUT_5
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 16:04:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 16:04:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 16:04:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 16:04:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_7
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_8
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_8
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_14
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_15
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingGET_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPUT_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 16:04:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_8
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_9
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_9
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_16
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_17
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingGET_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPUT_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 16:04:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_9
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_10
2019-04-25 16:04:59 -Generating unique operation named: infoUsingGET_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingPOST_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingPUT_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 16:04:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_10
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_18
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_19
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_10
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_11
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_20
2019-04-25 16:04:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_10
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_11
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_12
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_21
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_10
2019-04-25 16:04:59 -Generating unique operation named: treeUsingGET_1
2019-04-25 16:04:59 -Generating unique operation named: treeUsingGET_2
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_11
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_11
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_12
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_13
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_22
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_23
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_11
2019-04-25 16:04:59 -Generating unique operation named: updateUsingGET_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_12
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPUT_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 16:04:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 16:04:59 -Generating unique operation named: addUsingGET_12
2019-04-25 16:04:59 -Generating unique operation named: editUsingGET_13
2019-04-25 16:04:59 -Generating unique operation named: listUsingGET_14
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_24
2019-04-25 16:04:59 -Generating unique operation named: removeUsingPOST_25
2019-04-25 16:04:59 -Generating unique operation named: saveUsingPOST_12
2019-04-25 16:04:59 -Generating unique operation named: updateUsingGET_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPOST_13
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPUT_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 16:04:59 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 16:05:00 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 16:05:00 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 16:05:00 -Generating unique operation named: addUsingGET_13
2019-04-25 16:05:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 16:05:00 -Generating unique operation named: editUsingGET_14
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_15
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_13
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_14
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPOST_14
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_16
2019-04-25 16:05:00 -Generating unique operation named: listUsingHEAD_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingPOST_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingPUT_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingPATCH_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingDELETE_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingTRACE_1
2019-04-25 16:05:00 -Generating unique operation named: countDDUsingGET_1
2019-04-25 16:05:00 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 16:05:00 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 16:05:00 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 16:05:00 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 16:05:00 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 16:05:00 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 16:05:00 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 16:05:00 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 16:05:00 -Generating unique operation named: addUsingGET_14
2019-04-25 16:05:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 16:05:00 -Generating unique operation named: editUsingGET_15
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_17
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_26
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_15
2019-04-25 16:05:00 -Generating unique operation named: treeUsingGET_3
2019-04-25 16:05:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPOST_15
2019-04-25 16:05:00 -Generating unique operation named: addUsingGET_15
2019-04-25 16:05:00 -Generating unique operation named: editUsingGET_16
2019-04-25 16:05:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_18
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_27
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_28
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_16
2019-04-25 16:05:00 -Generating unique operation named: updateUsingGET_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPOST_16
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPUT_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 16:05:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 16:05:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 16:05:00 -Generating unique operation named: addUsingGET_16
2019-04-25 16:05:00 -Generating unique operation named: editUsingGET_17
2019-04-25 16:05:00 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_19
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_29
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_30
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_17
2019-04-25 16:05:00 -Generating unique operation named: updateUsingGET_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPOST_17
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPUT_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 16:05:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 16:05:00 -Generating unique operation named: addUsingGET_17
2019-04-25 16:05:00 -Generating unique operation named: editUsingGET_18
2019-04-25 16:05:00 -Generating unique operation named: listUsingGET_20
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_31
2019-04-25 16:05:00 -Generating unique operation named: removeUsingPOST_32
2019-04-25 16:05:00 -Generating unique operation named: saveUsingPOST_18
2019-04-25 16:05:00 -Generating unique operation named: updateUsingGET_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPOST_18
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPUT_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 16:05:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 16:05:00 -Starting Quartz Scheduler now
2019-04-25 16:05:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 16:05:00 -Starting...
2019-04-25 16:05:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 16:05:00 -Started.
2019-04-25 16:05:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 16:05:00 -Using a shared selector for servlet write/read
2019-04-25 16:05:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 16:05:01 -Started BootdoApplication in 27.233 seconds (JVM running for 28.19)
2019-04-25 16:05:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 16:05:01 -==> Parameters: 
2019-04-25 16:05:01 -<==      Total: 1
2019-04-25 16:05:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 16:05:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 16:05:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-04-25 16:05:11 -Enabling session validation scheduler...
2019-04-25 16:05:11 -请求地址 : http://localhost:8081/login;JSESSIONID=c4e42fac-7b75-45a3-a5ce-18ceac3ebf79
2019-04-25 16:05:11 -HTTP METHOD : GET
2019-04-25 16:05:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 16:05:11 -参数 : [{}]
2019-04-25 16:05:11 -耗时 : 5
2019-04-25 16:05:11 -返回值 : login
2019-04-25 16:05:13 -请求地址 : http://localhost:8081/getVerify
2019-04-25 16:05:13 -HTTP METHOD : GET
2019-04-25 16:05:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 16:05:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1d175807, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1b2ae868]
2019-04-25 16:05:19 -8413
2019-04-25 16:05:19 -耗时 : 6059
2019-04-25 16:05:19 -返回值 : null
2019-04-25 16:05:23 -请求地址 : http://localhost:8081/login
2019-04-25 16:05:23 -HTTP METHOD : POST
2019-04-25 16:05:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 16:05:23 -参数 : [admin, 111111, 8413, org.apache.shiro.web.servlet.ShiroHttpServletRequest@110f58fe]
2019-04-25 16:05:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 16:05:23 -==> Parameters: admin(String)
2019-04-25 16:05:23 -<==      Total: 1
2019-04-25 16:05:23 -耗时 : 185
2019-04-25 16:05:23 -返回值 : {msg=操作成功, code=0}
2019-04-25 16:05:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 16:05:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:05:23 -==> Parameters: 1(Long), admin(String), 登录(String), 186(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 16:05:23.584(Timestamp)
2019-04-25 16:05:23 -<==    Updates: 1
2019-04-25 16:05:23 -请求地址 : http://localhost:8081/index
2019-04-25 16:05:23 -HTTP METHOD : GET
2019-04-25 16:05:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:05:23 -参数 : [{}]
2019-04-25 16:05:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:05:24 -==> Parameters: 1(Long)
2019-04-25 16:05:24 -<==      Total: 49
2019-04-25 16:05:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:05:24 -==> Parameters: 138(Long)
2019-04-25 16:05:24 -<==      Total: 1
2019-04-25 16:05:24 -耗时 : 623
2019-04-25 16:05:24 -返回值 : index_v1
2019-04-25 16:05:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:05:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 624(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:05:24.572(Timestamp)
2019-04-25 16:05:24 -<==    Updates: 1
2019-04-25 16:05:24 -请求地址 : http://localhost:8081/main
2019-04-25 16:05:24 -HTTP METHOD : GET
2019-04-25 16:05:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:05:24 -参数 : []
2019-04-25 16:05:24 -耗时 : 0
2019-04-25 16:05:24 -返回值 : main
2019-04-25 16:05:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:05:24 -HTTP METHOD : GET
2019-04-25 16:05:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:05:24 -参数 : []
2019-04-25 16:05:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:05:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:05:25 -请求地址 : http://localhost:8081/main
2019-04-25 16:05:25 -HTTP METHOD : GET
2019-04-25 16:05:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:05:25 -参数 : []
2019-04-25 16:05:25 -耗时 : 1
2019-04-25 16:05:25 -返回值 : main
2019-04-25 16:05:25 -<==      Total: 0
2019-04-25 16:05:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:05:25 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:05:25 -<==      Total: 1
2019-04-25 16:05:25 -耗时 : 268
2019-04-25 16:05:25 -返回值 : com.bootdo.common.utils.PageUtils@4a9bd784
2019-04-25 16:05:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 16:05:28 -==> Parameters: 1(Long)
2019-04-25 16:05:28 -<==      Total: 93
2019-04-25 16:05:28 -请求地址 : http://localhost:8081/charts/tableDD
2019-04-25 16:05:28 -HTTP METHOD : GET
2019-04-25 16:05:28 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-04-25 16:05:28 -参数 : []
2019-04-25 16:05:28 -耗时 : 15
2019-04-25 16:05:28 -返回值 : charts/tableDD
2019-04-25 16:05:29 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 16:05:29 -HTTP METHOD : GET
2019-04-25 16:05:29 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 16:05:29 -参数 : []
2019-04-25 16:05:29 -耗时 : 16
2019-04-25 16:05:29 -返回值 : charts/countMM
2019-04-25 16:05:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 16:05:29 -HTTP METHOD : GET
2019-04-25 16:05:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 16:05:29 -参数 : [userType]
2019-04-25 16:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 16:05:29 -==> Parameters: userType(String)
2019-04-25 16:05:29 -<==      Total: 4
2019-04-25 16:05:29 -耗时 : 101
2019-04-25 16:05:29 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 16:05:31 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:05:31 -HTTP METHOD : GET
2019-04-25 16:05:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:05:31 -参数 : []
2019-04-25 16:05:31 -耗时 : 12
2019-04-25 16:05:31 -返回值 : charts/tableElecMM
2019-04-25 16:05:34 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 16:05:34 -HTTP METHOD : GET
2019-04-25 16:05:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 16:05:34 -参数 : []
2019-04-25 16:05:34 -耗时 : 9
2019-04-25 16:05:34 -返回值 : charts/tableWaterMM
2019-04-25 16:05:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:05:37 -HTTP METHOD : GET
2019-04-25 16:05:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:05:37 -参数 : []
2019-04-25 16:05:37 -耗时 : 1
2019-04-25 16:05:37 -返回值 : system/dept/deptTree
2019-04-25 16:05:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:05:38 -HTTP METHOD : GET
2019-04-25 16:05:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:05:38 -参数 : []
2019-04-25 16:05:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:05:38 -==> Parameters: 
2019-04-25 16:05:38 -<==      Total: 3
2019-04-25 16:05:38 -耗时 : 100
2019-04-25 16:05:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:05:43 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-04-25 16:05:43 -HTTP METHOD : GET
2019-04-25 16:05:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-04-25 16:05:43 -参数 : [com.bootdo.water.vo.WaterVo@745f408d, com.bootdo.moneyLog.vo.WaterLogVo@32d8de5d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2b8c521b]
2019-04-25 16:05:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:05:44 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:05:44 -<==      Total: 1
2019-04-25 16:05:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:05:44 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:05:44 -<==      Total: 1
2019-04-25 16:05:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:05:44 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:05:44 -<==      Total: 3
2019-04-25 16:05:45 -耗时 : 1390
2019-04-25 16:05:45 -返回值 : null
2019-04-25 16:05:53 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-25 16:25:40 -Starting BootdoApplication on ZJZL-20180906VX with PID 1140 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 16:25:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 16:25:40 -The following profiles are active: dev
2019-04-25 16:25:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:25:41 CST 2019]; root of context hierarchy
2019-04-25 16:25:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 16:25:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 16:25:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 16:25:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:25:47 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 16:25:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 16:25:47 -Starting service [Tomcat]
2019-04-25 16:25:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 16:25:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 16:25:48 -Initializing Spring embedded WebApplicationContext
2019-04-25 16:25:48 -Root WebApplicationContext: initialization completed in 7156 ms
2019-04-25 16:25:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 16:25:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 16:25:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 16:25:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 16:25:48 -Filter xssFilter was not registered (disabled)
2019-04-25 16:25:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 16:25:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 16:25:48 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 16:25:48 -Servlet dispatcherServlet mapped to [/]
2019-04-25 16:25:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:25:41 CST 2019]; root of context hierarchy
2019-04-25 16:25:51 -Using default implementation for ThreadExecutor
2019-04-25 16:25:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 16:25:51 -Quartz Scheduler v.2.2.1 created.
2019-04-25 16:25:51 -RAMJobStore initialized.
2019-04-25 16:25:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 16:25:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 16:25:51 -Quartz scheduler version: 2.2.1
2019-04-25 16:25:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-25 16:25:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 16:25:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 16:25:54 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 16:25:54 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 16:25:54 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 16:25:54 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 16:25:54 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 16:25:54 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 16:25:54 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 16:25:54 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 16:25:54 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 16:25:54 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 16:25:54 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 16:25:54 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 16:25:54 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 16:25:54 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 16:25:54 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:25:54 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:25:54 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 16:25:54 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 16:25:54 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 16:25:54 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 16:25:54 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 16:25:54 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 16:25:54 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 16:25:54 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 16:25:54 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 16:25:54 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 16:25:54 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 16:25:54 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 16:25:54 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 16:25:54 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 16:25:54 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 16:25:54 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 16:25:54 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 16:25:54 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:25:54 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:25:54 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 16:25:54 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 16:25:54 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 16:25:54 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 16:25:54 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:25:54 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:25:54 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:25:54 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 16:25:54 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 16:25:54 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 16:25:54 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 16:25:54 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 16:25:54 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 16:25:54 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 16:25:54 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 16:25:54 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 16:25:54 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 16:25:54 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 16:25:54 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 16:25:54 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 16:25:54 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 16:25:54 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 16:25:54 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 16:25:54 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 16:25:54 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 16:25:54 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 16:25:54 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 16:25:54 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 16:25:54 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 16:25:54 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 16:25:54 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 16:25:54 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 16:25:54 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 16:25:54 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 16:25:54 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 16:25:54 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 16:25:54 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:25:54 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:25:54 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 16:25:54 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 16:25:54 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 16:25:54 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 16:25:54 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 16:25:54 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:25:54 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 16:25:54 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:25:54 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 16:25:54 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 16:25:54 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:25:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:25:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 16:25:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 16:25:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 16:25:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 16:25:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 16:25:55 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 16:25:55 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:25:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:25:41 CST 2019]; root of context hierarchy
2019-04-25 16:25:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:25:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:25:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:25:56 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 16:25:56 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 16:25:57 -Registering beans for JMX exposure on startup
2019-04-25 16:25:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 16:25:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 16:25:57 -Starting beans in phase 2147483647
2019-04-25 16:25:57 -Context refreshed
2019-04-25 16:25:57 -Found 1 custom documentation plugin(s)
2019-04-25 16:25:57 -Scanning for api listing references
2019-04-25 16:25:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_1
2019-04-25 16:25:58 -Generating unique operation named: addUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: editUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: listUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_2
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_3
2019-04-25 16:25:58 -Generating unique operation named: saveUsingPOST_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPOST_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPUT_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 16:25:58 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 16:25:58 -Generating unique operation named: addUsingGET_2
2019-04-25 16:25:58 -Generating unique operation named: editUsingGET_2
2019-04-25 16:25:58 -Generating unique operation named: listUsingGET_2
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_4
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_5
2019-04-25 16:25:58 -Generating unique operation named: saveUsingPOST_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPOST_2
2019-04-25 16:25:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: addUsingGET_3
2019-04-25 16:25:58 -Generating unique operation named: editUsingGET_3
2019-04-25 16:25:58 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: listUsingGET_3
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_6
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_7
2019-04-25 16:25:58 -Generating unique operation named: saveUsingPOST_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingGET_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPOST_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPUT_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 16:25:58 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 16:25:58 -Generating unique operation named: addUsingGET_4
2019-04-25 16:25:58 -Generating unique operation named: editUsingGET_4
2019-04-25 16:25:58 -Generating unique operation named: listUsingGET_4
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_8
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_9
2019-04-25 16:25:58 -Generating unique operation named: saveUsingPOST_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingGET_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPOST_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPUT_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 16:25:58 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 16:25:58 -Generating unique operation named: ElecUsingGET_1
2019-04-25 16:25:58 -Generating unique operation named: addUsingGET_5
2019-04-25 16:25:58 -Generating unique operation named: editUsingGET_5
2019-04-25 16:25:58 -Generating unique operation named: listUsingGET_5
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_10
2019-04-25 16:25:58 -Generating unique operation named: removeUsingPOST_11
2019-04-25 16:25:58 -Generating unique operation named: saveUsingPOST_5
2019-04-25 16:25:58 -Generating unique operation named: updateUsingGET_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPOST_5
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPUT_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 16:25:58 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_6
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_6
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_6
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_7
2019-04-25 16:25:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_7
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_12
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_13
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingGET_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPUT_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 16:25:59 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 16:25:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_7
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_8
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_8
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_14
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_15
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingGET_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPUT_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 16:25:59 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_8
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_9
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_9
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_16
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_17
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingGET_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPUT_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 16:25:59 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_9
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_10
2019-04-25 16:25:59 -Generating unique operation named: infoUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingPOST_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingPUT_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 16:25:59 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_10
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_18
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_19
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_10
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_11
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_20
2019-04-25 16:25:59 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_10
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_11
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_12
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_21
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_10
2019-04-25 16:25:59 -Generating unique operation named: treeUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: treeUsingGET_2
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_11
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_11
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_12
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_13
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_22
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_23
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_11
2019-04-25 16:25:59 -Generating unique operation named: updateUsingGET_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_12
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPUT_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 16:25:59 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_12
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_13
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_14
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_24
2019-04-25 16:25:59 -Generating unique operation named: removeUsingPOST_25
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_12
2019-04-25 16:25:59 -Generating unique operation named: updateUsingGET_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_13
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPUT_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 16:25:59 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_13
2019-04-25 16:25:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 16:25:59 -Generating unique operation named: editUsingGET_14
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_15
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_13
2019-04-25 16:25:59 -Generating unique operation named: saveUsingPOST_14
2019-04-25 16:25:59 -Generating unique operation named: updateUsingPOST_14
2019-04-25 16:25:59 -Generating unique operation named: listUsingGET_16
2019-04-25 16:25:59 -Generating unique operation named: listUsingHEAD_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingPOST_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingPUT_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingPATCH_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingDELETE_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 16:25:59 -Generating unique operation named: listUsingTRACE_1
2019-04-25 16:25:59 -Generating unique operation named: countDDUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 16:25:59 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 16:25:59 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 16:25:59 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 16:25:59 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 16:25:59 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 16:25:59 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 16:25:59 -Generating unique operation named: addUsingGET_14
2019-04-25 16:26:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 16:26:00 -Generating unique operation named: editUsingGET_15
2019-04-25 16:26:00 -Generating unique operation named: listUsingGET_17
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_26
2019-04-25 16:26:00 -Generating unique operation named: saveUsingPOST_15
2019-04-25 16:26:00 -Generating unique operation named: treeUsingGET_3
2019-04-25 16:26:00 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPOST_15
2019-04-25 16:26:00 -Generating unique operation named: addUsingGET_15
2019-04-25 16:26:00 -Generating unique operation named: editUsingGET_16
2019-04-25 16:26:00 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 16:26:00 -Generating unique operation named: listUsingGET_18
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_27
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_28
2019-04-25 16:26:00 -Generating unique operation named: saveUsingPOST_16
2019-04-25 16:26:00 -Generating unique operation named: updateUsingGET_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPOST_16
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPUT_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 16:26:00 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 16:26:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 16:26:00 -Generating unique operation named: addUsingGET_16
2019-04-25 16:26:00 -Generating unique operation named: editUsingGET_17
2019-04-25 16:26:00 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 16:26:00 -Generating unique operation named: listUsingGET_19
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_29
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_30
2019-04-25 16:26:00 -Generating unique operation named: saveUsingPOST_17
2019-04-25 16:26:00 -Generating unique operation named: updateUsingGET_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPOST_17
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPUT_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 16:26:00 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 16:26:00 -Generating unique operation named: addUsingGET_17
2019-04-25 16:26:00 -Generating unique operation named: editUsingGET_18
2019-04-25 16:26:00 -Generating unique operation named: listUsingGET_20
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_31
2019-04-25 16:26:00 -Generating unique operation named: removeUsingPOST_32
2019-04-25 16:26:00 -Generating unique operation named: saveUsingPOST_18
2019-04-25 16:26:00 -Generating unique operation named: updateUsingGET_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPOST_18
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPUT_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 16:26:00 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 16:26:00 -Starting Quartz Scheduler now
2019-04-25 16:26:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 16:26:00 -Starting...
2019-04-25 16:26:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 16:26:00 -Started.
2019-04-25 16:26:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 16:26:00 -Using a shared selector for servlet write/read
2019-04-25 16:26:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 16:26:00 -Started BootdoApplication in 20.572 seconds (JVM running for 21.383)
2019-04-25 16:26:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 16:26:00 -==> Parameters: 
2019-04-25 16:26:00 -<==      Total: 1
2019-04-25 16:26:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 16:26:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 16:26:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2019-04-25 16:26:08 -Enabling session validation scheduler...
2019-04-25 16:26:08 -请求地址 : http://localhost:8081/login;JSESSIONID=791427a9-d169-4313-9fee-0c384416b418
2019-04-25 16:26:08 -HTTP METHOD : GET
2019-04-25 16:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 16:26:08 -参数 : [{}]
2019-04-25 16:26:08 -耗时 : 6
2019-04-25 16:26:08 -返回值 : login
2019-04-25 16:26:09 -请求地址 : http://localhost:8081/getVerify
2019-04-25 16:26:09 -HTTP METHOD : GET
2019-04-25 16:26:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 16:26:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b71f91e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@13bcea01]
2019-04-25 16:26:14 -0444
2019-04-25 16:26:14 -耗时 : 4719
2019-04-25 16:26:14 -返回值 : null
2019-04-25 16:26:19 -请求地址 : http://localhost:8081/login
2019-04-25 16:26:19 -HTTP METHOD : POST
2019-04-25 16:26:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 16:26:19 -参数 : [admin, 111111, 0444, org.apache.shiro.web.servlet.ShiroHttpServletRequest@35b6b361]
2019-04-25 16:26:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 16:26:19 -==> Parameters: admin(String)
2019-04-25 16:26:19 -<==      Total: 1
2019-04-25 16:26:19 -耗时 : 293
2019-04-25 16:26:19 -返回值 : {msg=操作成功, code=0}
2019-04-25 16:26:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 16:26:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:26:19 -==> Parameters: 1(Long), admin(String), 登录(String), 294(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 16:26:19.506(Timestamp)
2019-04-25 16:26:19 -请求地址 : http://localhost:8081/index
2019-04-25 16:26:19 -HTTP METHOD : GET
2019-04-25 16:26:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:26:19 -参数 : [{}]
2019-04-25 16:26:19 -<==    Updates: 1
2019-04-25 16:26:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:26:19 -==> Parameters: 1(Long)
2019-04-25 16:26:20 -<==      Total: 49
2019-04-25 16:26:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:26:20 -==> Parameters: 138(Long)
2019-04-25 16:26:20 -<==      Total: 1
2019-04-25 16:26:20 -耗时 : 477
2019-04-25 16:26:20 -返回值 : index_v1
2019-04-25 16:26:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:26:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 477(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:26:20.121(Timestamp)
2019-04-25 16:26:20 -<==    Updates: 1
2019-04-25 16:26:20 -请求地址 : http://localhost:8081/main
2019-04-25 16:26:20 -HTTP METHOD : GET
2019-04-25 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:26:20 -参数 : []
2019-04-25 16:26:20 -耗时 : 1
2019-04-25 16:26:20 -返回值 : main
2019-04-25 16:26:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:26:20 -HTTP METHOD : GET
2019-04-25 16:26:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:26:20 -参数 : []
2019-04-25 16:26:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:26:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:26:20 -<==      Total: 0
2019-04-25 16:26:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:26:20 -请求地址 : http://localhost:8081/main
2019-04-25 16:26:20 -HTTP METHOD : GET
2019-04-25 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:26:20 -参数 : []
2019-04-25 16:26:20 -耗时 : 1
2019-04-25 16:26:20 -返回值 : main
2019-04-25 16:26:20 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:26:20 -<==      Total: 1
2019-04-25 16:26:20 -耗时 : 288
2019-04-25 16:26:20 -返回值 : com.bootdo.common.utils.PageUtils@4a48792b
2019-04-25 16:26:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 16:26:34 -==> Parameters: 1(Long)
2019-04-25 16:26:34 -<==      Total: 93
2019-04-25 16:26:34 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 16:26:34 -HTTP METHOD : GET
2019-04-25 16:26:34 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 16:26:34 -参数 : []
2019-04-25 16:26:34 -耗时 : 15
2019-04-25 16:26:34 -返回值 : charts/countMM
2019-04-25 16:26:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 16:26:35 -HTTP METHOD : GET
2019-04-25 16:26:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 16:26:35 -参数 : [userType]
2019-04-25 16:26:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 16:26:35 -==> Parameters: userType(String)
2019-04-25 16:26:35 -<==      Total: 4
2019-04-25 16:26:35 -耗时 : 61
2019-04-25 16:26:35 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 16:26:36 -请求地址 : http://localhost:8081/charts/countYY
2019-04-25 16:26:36 -HTTP METHOD : GET
2019-04-25 16:26:36 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-04-25 16:26:36 -参数 : []
2019-04-25 16:26:36 -耗时 : 4
2019-04-25 16:26:36 -返回值 : charts/countYY
2019-04-25 16:26:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:26:37 -HTTP METHOD : GET
2019-04-25 16:26:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:26:37 -参数 : []
2019-04-25 16:26:37 -耗时 : 10
2019-04-25 16:26:37 -返回值 : charts/tableElecMM
2019-04-25 16:26:40 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 16:26:40 -HTTP METHOD : GET
2019-04-25 16:26:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 16:26:40 -参数 : []
2019-04-25 16:26:40 -耗时 : 8
2019-04-25 16:26:40 -返回值 : charts/tableHeatMM
2019-04-25 16:26:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:26:49 -HTTP METHOD : GET
2019-04-25 16:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:26:49 -参数 : []
2019-04-25 16:26:49 -耗时 : 1
2019-04-25 16:26:49 -返回值 : system/dept/deptTree
2019-04-25 16:26:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:26:49 -HTTP METHOD : GET
2019-04-25 16:26:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:26:49 -参数 : []
2019-04-25 16:26:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:26:49 -==> Parameters: 
2019-04-25 16:26:49 -<==      Total: 3
2019-04-25 16:26:49 -耗时 : 16
2019-04-25 16:26:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:26:51 -请求地址 : http://localhost:8081/charts/tableHeatMM/exportHeatMM
2019-04-25 16:26:51 -HTTP METHOD : GET
2019-04-25 16:26:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.exportHeatMM
2019-04-25 16:26:51 -参数 : [com.bootdo.heat.vo.HeatVo@4ce5b7c5, com.bootdo.moneyLog.vo.HeatLogVo@27ebde8e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3c4b6c0a]
2019-04-25 16:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:26:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:26:52 -<==      Total: 1
2019-04-25 16:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:26:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:26:52 -<==      Total: 0
2019-04-25 16:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:26:52 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:26:52 -<==      Total: 4
2019-04-25 16:26:52 -耗时 : 1287
2019-04-25 16:26:52 -返回值 : null
2019-04-25 16:26:55 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-04-25 16:29:22 -请求地址 : http://localhost:8081/index
2019-04-25 16:29:22 -HTTP METHOD : GET
2019-04-25 16:29:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:29:22 -参数 : [{}]
2019-04-25 16:29:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:29:22 -==> Parameters: 1(Long)
2019-04-25 16:29:22 -<==      Total: 49
2019-04-25 16:29:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:29:22 -==> Parameters: 138(Long)
2019-04-25 16:29:22 -<==      Total: 1
2019-04-25 16:29:22 -耗时 : 35
2019-04-25 16:29:22 -返回值 : index_v1
2019-04-25 16:29:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:29:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:29:22.844(Timestamp)
2019-04-25 16:29:22 -<==    Updates: 1
2019-04-25 16:29:22 -请求地址 : http://localhost:8081/main
2019-04-25 16:29:22 -HTTP METHOD : GET
2019-04-25 16:29:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:29:22 -参数 : []
2019-04-25 16:29:22 -耗时 : 1
2019-04-25 16:29:22 -返回值 : main
2019-04-25 16:29:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:29:23 -HTTP METHOD : GET
2019-04-25 16:29:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:29:23 -参数 : []
2019-04-25 16:29:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:29:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:29:23 -<==      Total: 0
2019-04-25 16:29:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:29:23 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:29:23 -<==      Total: 1
2019-04-25 16:29:23 -耗时 : 10
2019-04-25 16:29:23 -返回值 : com.bootdo.common.utils.PageUtils@2777e37d
2019-04-25 16:29:23 -请求地址 : http://localhost:8081/main
2019-04-25 16:29:23 -HTTP METHOD : GET
2019-04-25 16:29:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:29:23 -参数 : []
2019-04-25 16:29:23 -耗时 : 1
2019-04-25 16:29:23 -返回值 : main
2019-04-25 16:29:28 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:29:28 -HTTP METHOD : GET
2019-04-25 16:29:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:29:28 -参数 : []
2019-04-25 16:29:28 -耗时 : 0
2019-04-25 16:29:28 -返回值 : charts/tableElecMM
2019-04-25 16:29:29 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 16:29:29 -HTTP METHOD : GET
2019-04-25 16:29:29 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 16:29:29 -参数 : []
2019-04-25 16:29:29 -耗时 : 0
2019-04-25 16:29:29 -返回值 : charts/tableHeatMM
2019-04-25 16:29:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:29:36 -HTTP METHOD : GET
2019-04-25 16:29:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:29:36 -参数 : []
2019-04-25 16:29:36 -耗时 : 1
2019-04-25 16:29:36 -返回值 : system/dept/deptTree
2019-04-25 16:29:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:29:36 -HTTP METHOD : GET
2019-04-25 16:29:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:29:36 -参数 : []
2019-04-25 16:29:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:29:36 -==> Parameters: 
2019-04-25 16:29:36 -<==      Total: 3
2019-04-25 16:29:36 -耗时 : 5
2019-04-25 16:29:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:29:37 -请求地址 : http://localhost:8081/charts/tableHeatMM/exportHeatMM
2019-04-25 16:29:37 -HTTP METHOD : GET
2019-04-25 16:29:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.exportHeatMM
2019-04-25 16:29:37 -参数 : [com.bootdo.heat.vo.HeatVo@51a08ba0, com.bootdo.moneyLog.vo.HeatLogVo@390caec, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63f06639]
2019-04-25 16:29:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:29:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:29:37 -<==      Total: 1
2019-04-25 16:29:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:29:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:29:37 -<==      Total: 0
2019-04-25 16:29:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:29:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:29:37 -<==      Total: 4
2019-04-25 16:29:37 -耗时 : 25
2019-04-25 16:29:37 -返回值 : null
2019-04-25 16:30:54 -请求地址 : http://localhost:8081/login;JSESSIONID=d29963ae-4c36-46a8-a201-f45eb3cda889
2019-04-25 16:30:54 -HTTP METHOD : GET
2019-04-25 16:30:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 16:30:54 -参数 : [{}]
2019-04-25 16:30:54 -耗时 : 1
2019-04-25 16:30:54 -返回值 : login
2019-04-25 16:30:55 -请求地址 : http://localhost:8081/getVerify
2019-04-25 16:30:55 -HTTP METHOD : GET
2019-04-25 16:30:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 16:30:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6443f779, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c378c87]
2019-04-25 16:30:55 -9833
2019-04-25 16:30:55 -耗时 : 17
2019-04-25 16:30:55 -返回值 : null
2019-04-25 16:30:55 -请求地址 : http://localhost:8081/login
2019-04-25 16:30:55 -HTTP METHOD : GET
2019-04-25 16:30:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 16:30:55 -参数 : [{}]
2019-04-25 16:30:55 -耗时 : 0
2019-04-25 16:30:55 -返回值 : login
2019-04-25 16:30:59 -请求地址 : http://localhost:8081/login
2019-04-25 16:30:59 -HTTP METHOD : POST
2019-04-25 16:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 16:30:59 -参数 : [admin, 111111, 9833, org.apache.shiro.web.servlet.ShiroHttpServletRequest@27051caf]
2019-04-25 16:30:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 16:30:59 -==> Parameters: admin(String)
2019-04-25 16:30:59 -<==      Total: 1
2019-04-25 16:30:59 -耗时 : 7
2019-04-25 16:30:59 -返回值 : {msg=操作成功, code=0}
2019-04-25 16:30:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:30:59 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 16:30:59.682(Timestamp)
2019-04-25 16:30:59 -请求地址 : http://localhost:8081/index
2019-04-25 16:30:59 -HTTP METHOD : GET
2019-04-25 16:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:30:59 -参数 : [{}]
2019-04-25 16:30:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:30:59 -==> Parameters: 1(Long)
2019-04-25 16:31:00 -<==    Updates: 1
2019-04-25 16:31:00 -<==      Total: 49
2019-04-25 16:31:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:31:00 -==> Parameters: 138(Long)
2019-04-25 16:31:00 -<==      Total: 1
2019-04-25 16:31:00 -耗时 : 647
2019-04-25 16:31:00 -返回值 : index_v1
2019-04-25 16:31:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:31:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 647(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:31:00.352(Timestamp)
2019-04-25 16:31:00 -请求地址 : http://localhost:8081/main
2019-04-25 16:31:00 -HTTP METHOD : GET
2019-04-25 16:31:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:31:00 -参数 : []
2019-04-25 16:31:00 -耗时 : 0
2019-04-25 16:31:00 -返回值 : main
2019-04-25 16:31:00 -<==    Updates: 1
2019-04-25 16:31:01 -请求地址 : http://localhost:8081/main
2019-04-25 16:31:01 -HTTP METHOD : GET
2019-04-25 16:31:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:31:01 -参数 : []
2019-04-25 16:31:01 -耗时 : 2
2019-04-25 16:31:01 -返回值 : main
2019-04-25 16:31:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:31:01 -HTTP METHOD : GET
2019-04-25 16:31:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:31:01 -参数 : []
2019-04-25 16:31:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:31:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:31:01 -<==      Total: 0
2019-04-25 16:31:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:31:01 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:31:01 -<==      Total: 1
2019-04-25 16:31:01 -耗时 : 17
2019-04-25 16:31:01 -返回值 : com.bootdo.common.utils.PageUtils@78980857
2019-04-25 16:31:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 16:31:08 -==> Parameters: 1(Long)
2019-04-25 16:31:08 -<==      Total: 93
2019-04-25 16:31:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:31:08 -HTTP METHOD : GET
2019-04-25 16:31:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:31:08 -参数 : []
2019-04-25 16:31:08 -耗时 : 0
2019-04-25 16:31:08 -返回值 : charts/tableElecMM
2019-04-25 16:31:09 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 16:31:09 -HTTP METHOD : GET
2019-04-25 16:31:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 16:31:09 -参数 : []
2019-04-25 16:31:09 -耗时 : 0
2019-04-25 16:31:09 -返回值 : charts/tableHeatMM
2019-04-25 16:31:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:31:17 -HTTP METHOD : GET
2019-04-25 16:31:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:31:17 -参数 : []
2019-04-25 16:31:17 -耗时 : 0
2019-04-25 16:31:17 -返回值 : system/dept/deptTree
2019-04-25 16:31:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:31:17 -HTTP METHOD : GET
2019-04-25 16:31:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:31:17 -参数 : []
2019-04-25 16:31:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:31:17 -==> Parameters: 
2019-04-25 16:31:17 -<==      Total: 3
2019-04-25 16:31:17 -耗时 : 18
2019-04-25 16:31:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:31:19 -请求地址 : http://localhost:8081/charts/tableHeatMM/exportHeatMM
2019-04-25 16:31:19 -HTTP METHOD : GET
2019-04-25 16:31:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.exportHeatMM
2019-04-25 16:31:19 -参数 : [com.bootdo.heat.vo.HeatVo@138c1550, com.bootdo.moneyLog.vo.HeatLogVo@414e2dda, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7104eb94]
2019-04-25 16:31:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:31:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:31:19 -<==      Total: 1
2019-04-25 16:31:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:31:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:31:19 -<==      Total: 0
2019-04-25 16:31:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:31:19 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:31:19 -<==      Total: 4
2019-04-25 16:31:19 -耗时 : 244
2019-04-25 16:31:19 -返回值 : null
2019-04-25 16:33:40 -请求地址 : http://localhost:8081/index
2019-04-25 16:33:40 -HTTP METHOD : GET
2019-04-25 16:33:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:33:40 -参数 : [{}]
2019-04-25 16:33:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:33:40 -==> Parameters: 1(Long)
2019-04-25 16:33:40 -<==      Total: 49
2019-04-25 16:33:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:33:40 -==> Parameters: 138(Long)
2019-04-25 16:33:40 -<==      Total: 1
2019-04-25 16:33:40 -耗时 : 82
2019-04-25 16:33:40 -返回值 : index_v1
2019-04-25 16:33:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:33:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:33:40.874(Timestamp)
2019-04-25 16:33:41 -<==    Updates: 1
2019-04-25 16:33:41 -请求地址 : http://localhost:8081/main
2019-04-25 16:33:41 -HTTP METHOD : GET
2019-04-25 16:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:33:41 -参数 : []
2019-04-25 16:33:41 -耗时 : 1
2019-04-25 16:33:41 -返回值 : main
2019-04-25 16:33:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:33:41 -HTTP METHOD : GET
2019-04-25 16:33:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:33:41 -参数 : []
2019-04-25 16:33:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:33:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:33:41 -请求地址 : http://localhost:8081/main
2019-04-25 16:33:41 -HTTP METHOD : GET
2019-04-25 16:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:33:41 -参数 : []
2019-04-25 16:33:41 -耗时 : 1
2019-04-25 16:33:41 -返回值 : main
2019-04-25 16:33:41 -<==      Total: 0
2019-04-25 16:33:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:33:41 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:33:41 -<==      Total: 1
2019-04-25 16:33:41 -耗时 : 298
2019-04-25 16:33:41 -返回值 : com.bootdo.common.utils.PageUtils@6464324f
2019-04-25 16:33:50 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 16:33:50 -HTTP METHOD : GET
2019-04-25 16:33:50 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 16:33:50 -参数 : []
2019-04-25 16:33:50 -耗时 : 1
2019-04-25 16:33:50 -返回值 : charts/countMM
2019-04-25 16:33:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 16:33:51 -HTTP METHOD : GET
2019-04-25 16:33:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 16:33:51 -参数 : [userType]
2019-04-25 16:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 16:33:51 -==> Parameters: userType(String)
2019-04-25 16:33:51 -<==      Total: 4
2019-04-25 16:33:51 -耗时 : 103
2019-04-25 16:33:51 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 16:33:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:33:52 -HTTP METHOD : GET
2019-04-25 16:33:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:33:52 -参数 : []
2019-04-25 16:33:52 -耗时 : 1
2019-04-25 16:33:52 -返回值 : charts/tableElecMM
2019-04-25 16:33:53 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 16:33:53 -HTTP METHOD : GET
2019-04-25 16:33:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 16:33:53 -参数 : []
2019-04-25 16:33:53 -耗时 : 1
2019-04-25 16:33:53 -返回值 : charts/tableHeatMM
2019-04-25 16:33:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:33:58 -HTTP METHOD : GET
2019-04-25 16:33:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:33:58 -参数 : []
2019-04-25 16:33:58 -耗时 : 0
2019-04-25 16:33:58 -返回值 : system/dept/deptTree
2019-04-25 16:33:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:33:58 -HTTP METHOD : GET
2019-04-25 16:33:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:33:58 -参数 : []
2019-04-25 16:33:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:33:58 -==> Parameters: 
2019-04-25 16:33:58 -<==      Total: 3
2019-04-25 16:33:58 -耗时 : 4
2019-04-25 16:33:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:33:59 -请求地址 : http://localhost:8081/charts/tableHeatMM/exportHeatMM
2019-04-25 16:33:59 -HTTP METHOD : GET
2019-04-25 16:33:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.exportHeatMM
2019-04-25 16:33:59 -参数 : [com.bootdo.heat.vo.HeatVo@21e8e90c, com.bootdo.moneyLog.vo.HeatLogVo@317480f1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e0bf678]
2019-04-25 16:33:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:33:59 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:34:00 -<==      Total: 6
2019-04-25 16:34:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:34:00 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:34:00 -<==      Total: 1
2019-04-25 16:34:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:34:00 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:34:00 -<==      Total: 4
2019-04-25 16:34:00 -耗时 : 132
2019-04-25 16:34:00 -返回值 : null
2019-04-25 16:44:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 6912 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 16:44:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 16:44:31 -The following profiles are active: dev
2019-04-25 16:44:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:44:32 CST 2019]; root of context hierarchy
2019-04-25 16:44:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 16:44:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 16:44:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 16:44:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 16:44:42 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 16:44:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 16:44:42 -Starting service [Tomcat]
2019-04-25 16:44:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 16:44:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 16:44:42 -Initializing Spring embedded WebApplicationContext
2019-04-25 16:44:42 -Root WebApplicationContext: initialization completed in 10593 ms
2019-04-25 16:44:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 16:44:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 16:44:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 16:44:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 16:44:43 -Filter xssFilter was not registered (disabled)
2019-04-25 16:44:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 16:44:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 16:44:43 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 16:44:43 -Servlet dispatcherServlet mapped to [/]
2019-04-25 16:44:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:44:32 CST 2019]; root of context hierarchy
2019-04-25 16:44:48 -Using default implementation for ThreadExecutor
2019-04-25 16:44:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 16:44:48 -Quartz Scheduler v.2.2.1 created.
2019-04-25 16:44:48 -RAMJobStore initialized.
2019-04-25 16:44:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 16:44:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 16:44:48 -Quartz scheduler version: 2.2.1
2019-04-25 16:44:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-04-25 16:44:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 16:44:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 16:44:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 16:44:52 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 16:44:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 16:44:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 16:44:52 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 16:44:52 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 16:44:52 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 16:44:52 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 16:44:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 16:44:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 16:44:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 16:44:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 16:44:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 16:44:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 16:44:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 16:44:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:44:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 16:44:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 16:44:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 16:44:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 16:44:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 16:44:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 16:44:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 16:44:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 16:44:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 16:44:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 16:44:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 16:44:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 16:44:52 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-25 16:44:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 16:44:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 16:44:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 16:44:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 16:44:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 16:44:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 16:44:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:44:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 16:44:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 16:44:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 16:44:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 16:44:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 16:44:52 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:44:52 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:44:52 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:44:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 16:44:52 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 16:44:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 16:44:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 16:44:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 16:44:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 16:44:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 16:44:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 16:44:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 16:44:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 16:44:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 16:44:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 16:44:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 16:44:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 16:44:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 16:44:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 16:44:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 16:44:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 16:44:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 16:44:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 16:44:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 16:44:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 16:44:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 16:44:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 16:44:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 16:44:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 16:44:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 16:44:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 16:44:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 16:44:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 16:44:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:44:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 16:44:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 16:44:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 16:44:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 16:44:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 16:44:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 16:44:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 16:44:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 16:44:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 16:44:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 16:44:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 16:44:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 16:44:53 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 16:44:53 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 16:44:53 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 16:44:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 16:44:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 16:44:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 16:44:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 16:44:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 16:44:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 16:44:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 16:44:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:44:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 16:44:32 CST 2019]; root of context hierarchy
2019-04-25 16:44:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:44:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:44:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 16:44:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 16:44:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 16:44:57 -Registering beans for JMX exposure on startup
2019-04-25 16:44:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 16:44:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 16:44:57 -Starting beans in phase 2147483647
2019-04-25 16:44:57 -Context refreshed
2019-04-25 16:44:57 -Found 1 custom documentation plugin(s)
2019-04-25 16:44:57 -Scanning for api listing references
2019-04-25 16:44:58 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 16:44:58 -Generating unique operation named: removeUsingPOST_1
2019-04-25 16:44:58 -Generating unique operation named: addUsingGET_1
2019-04-25 16:44:58 -Generating unique operation named: editUsingGET_1
2019-04-25 16:44:58 -Generating unique operation named: listUsingGET_1
2019-04-25 16:44:58 -Generating unique operation named: removeUsingPOST_2
2019-04-25 16:44:58 -Generating unique operation named: removeUsingPOST_3
2019-04-25 16:44:58 -Generating unique operation named: saveUsingPOST_1
2019-04-25 16:44:58 -Generating unique operation named: updateUsingGET_1
2019-04-25 16:44:58 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 16:44:58 -Generating unique operation named: updateUsingPOST_1
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPUT_1
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 16:44:59 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 16:44:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 16:44:59 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 16:44:59 -Generating unique operation named: addUsingGET_2
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_2
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_2
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_4
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_5
2019-04-25 16:44:59 -Generating unique operation named: saveUsingPOST_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_2
2019-04-25 16:44:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 16:44:59 -Generating unique operation named: addUsingGET_3
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_3
2019-04-25 16:44:59 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_3
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_6
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_7
2019-04-25 16:44:59 -Generating unique operation named: saveUsingPOST_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingGET_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPUT_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 16:44:59 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 16:44:59 -Generating unique operation named: addUsingGET_4
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_4
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_4
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_8
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_9
2019-04-25 16:44:59 -Generating unique operation named: saveUsingPOST_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingGET_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPUT_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 16:44:59 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 16:44:59 -Generating unique operation named: ElecUsingGET_1
2019-04-25 16:44:59 -Generating unique operation named: addUsingGET_5
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_5
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_5
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_10
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_11
2019-04-25 16:44:59 -Generating unique operation named: saveUsingPOST_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingGET_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPUT_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 16:44:59 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_6
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_6
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_6
2019-04-25 16:44:59 -Generating unique operation named: addUsingGET_6
2019-04-25 16:44:59 -Generating unique operation named: editUsingGET_7
2019-04-25 16:44:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 16:44:59 -Generating unique operation named: listUsingGET_7
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_12
2019-04-25 16:44:59 -Generating unique operation named: removeUsingPOST_13
2019-04-25 16:44:59 -Generating unique operation named: saveUsingPOST_6
2019-04-25 16:44:59 -Generating unique operation named: updateUsingGET_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPOST_7
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPUT_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 16:44:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 16:45:00 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 16:45:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 16:45:00 -Generating unique operation named: addUsingGET_7
2019-04-25 16:45:00 -Generating unique operation named: editUsingGET_8
2019-04-25 16:45:00 -Generating unique operation named: listUsingGET_8
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_14
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_15
2019-04-25 16:45:00 -Generating unique operation named: saveUsingPOST_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingGET_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPOST_8
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPUT_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 16:45:00 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 16:45:00 -Generating unique operation named: addUsingGET_8
2019-04-25 16:45:00 -Generating unique operation named: editUsingGET_9
2019-04-25 16:45:00 -Generating unique operation named: listUsingGET_9
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_16
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_17
2019-04-25 16:45:00 -Generating unique operation named: saveUsingPOST_8
2019-04-25 16:45:00 -Generating unique operation named: updateUsingGET_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPOST_9
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPUT_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 16:45:00 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 16:45:00 -Generating unique operation named: addUsingGET_9
2019-04-25 16:45:00 -Generating unique operation named: editUsingGET_10
2019-04-25 16:45:00 -Generating unique operation named: infoUsingGET_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingPOST_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingPUT_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 16:45:00 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 16:45:00 -Generating unique operation named: listUsingGET_10
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_18
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_19
2019-04-25 16:45:00 -Generating unique operation named: saveUsingPOST_9
2019-04-25 16:45:00 -Generating unique operation named: updateUsingPOST_10
2019-04-25 16:45:00 -Generating unique operation named: listUsingGET_11
2019-04-25 16:45:00 -Generating unique operation named: removeUsingPOST_20
2019-04-25 16:45:01 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_10
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_11
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_12
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_21
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_10
2019-04-25 16:45:01 -Generating unique operation named: treeUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: treeUsingGET_2
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_11
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_11
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_12
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_13
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_22
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_23
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_11
2019-04-25 16:45:01 -Generating unique operation named: updateUsingGET_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_12
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPUT_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 16:45:01 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_12
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_13
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_14
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_24
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_25
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_12
2019-04-25 16:45:01 -Generating unique operation named: updateUsingGET_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_13
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPUT_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 16:45:01 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_13
2019-04-25 16:45:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_14
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_15
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_13
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_14
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_14
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_16
2019-04-25 16:45:01 -Generating unique operation named: listUsingHEAD_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingPOST_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingPUT_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingPATCH_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingDELETE_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 16:45:01 -Generating unique operation named: listUsingTRACE_1
2019-04-25 16:45:01 -Generating unique operation named: countDDUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 16:45:01 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 16:45:01 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 16:45:01 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 16:45:01 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 16:45:01 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_14
2019-04-25 16:45:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_15
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_17
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_26
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_15
2019-04-25 16:45:01 -Generating unique operation named: treeUsingGET_3
2019-04-25 16:45:01 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_15
2019-04-25 16:45:01 -Generating unique operation named: addUsingGET_15
2019-04-25 16:45:01 -Generating unique operation named: editUsingGET_16
2019-04-25 16:45:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 16:45:01 -Generating unique operation named: listUsingGET_18
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_27
2019-04-25 16:45:01 -Generating unique operation named: removeUsingPOST_28
2019-04-25 16:45:01 -Generating unique operation named: saveUsingPOST_16
2019-04-25 16:45:01 -Generating unique operation named: updateUsingGET_10
2019-04-25 16:45:01 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 16:45:01 -Generating unique operation named: updateUsingPOST_16
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPUT_10
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 16:45:02 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 16:45:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 16:45:02 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 16:45:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 16:45:02 -Generating unique operation named: addUsingGET_16
2019-04-25 16:45:02 -Generating unique operation named: editUsingGET_17
2019-04-25 16:45:02 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 16:45:02 -Generating unique operation named: listUsingGET_19
2019-04-25 16:45:02 -Generating unique operation named: removeUsingPOST_29
2019-04-25 16:45:02 -Generating unique operation named: removeUsingPOST_30
2019-04-25 16:45:02 -Generating unique operation named: saveUsingPOST_17
2019-04-25 16:45:02 -Generating unique operation named: updateUsingGET_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPOST_17
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPUT_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 16:45:02 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 16:45:02 -Generating unique operation named: addUsingGET_17
2019-04-25 16:45:02 -Generating unique operation named: editUsingGET_18
2019-04-25 16:45:02 -Generating unique operation named: listUsingGET_20
2019-04-25 16:45:02 -Generating unique operation named: removeUsingPOST_31
2019-04-25 16:45:02 -Generating unique operation named: removeUsingPOST_32
2019-04-25 16:45:02 -Generating unique operation named: saveUsingPOST_18
2019-04-25 16:45:02 -Generating unique operation named: updateUsingGET_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPOST_18
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPUT_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 16:45:02 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 16:45:02 -Starting Quartz Scheduler now
2019-04-25 16:45:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 16:45:02 -Starting...
2019-04-25 16:45:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 16:45:02 -Started.
2019-04-25 16:45:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 16:45:02 -Using a shared selector for servlet write/read
2019-04-25 16:45:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 16:45:02 -Started BootdoApplication in 31.98 seconds (JVM running for 32.947)
2019-04-25 16:45:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 16:45:03 -==> Parameters: 
2019-04-25 16:45:03 -<==      Total: 1
2019-04-25 16:45:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 16:45:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 16:45:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-04-25 16:45:10 -Enabling session validation scheduler...
2019-04-25 16:45:11 -请求地址 : http://localhost:8081/login;JSESSIONID=d9bf6ff7-8144-4893-b2ac-0b34c59afa85
2019-04-25 16:45:11 -HTTP METHOD : GET
2019-04-25 16:45:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 16:45:11 -参数 : [{}]
2019-04-25 16:45:11 -耗时 : 6
2019-04-25 16:45:11 -返回值 : login
2019-04-25 16:45:13 -请求地址 : http://localhost:8081/getVerify
2019-04-25 16:45:13 -HTTP METHOD : GET
2019-04-25 16:45:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 16:45:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@18d8eab, org.apache.shiro.web.servlet.ShiroHttpServletResponse@595558f3]
2019-04-25 16:45:17 -3427
2019-04-25 16:45:17 -耗时 : 4456
2019-04-25 16:45:17 -返回值 : null
2019-04-25 16:45:22 -请求地址 : http://localhost:8081/login
2019-04-25 16:45:22 -HTTP METHOD : POST
2019-04-25 16:45:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 16:45:22 -参数 : [admin, 111111, 3427, org.apache.shiro.web.servlet.ShiroHttpServletRequest@64bcb2b3]
2019-04-25 16:45:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 16:45:23 -==> Parameters: admin(String)
2019-04-25 16:45:23 -<==      Total: 1
2019-04-25 16:45:23 -耗时 : 203
2019-04-25 16:45:23 -返回值 : {msg=操作成功, code=0}
2019-04-25 16:45:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 16:45:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:45:23 -==> Parameters: 1(Long), admin(String), 登录(String), 204(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 16:45:23.273(Timestamp)
2019-04-25 16:45:23 -请求地址 : http://localhost:8081/index
2019-04-25 16:45:23 -HTTP METHOD : GET
2019-04-25 16:45:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:45:23 -参数 : [{}]
2019-04-25 16:45:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:45:23 -<==    Updates: 1
2019-04-25 16:45:23 -==> Parameters: 1(Long)
2019-04-25 16:45:23 -<==      Total: 49
2019-04-25 16:45:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:45:23 -==> Parameters: 138(Long)
2019-04-25 16:45:23 -<==      Total: 1
2019-04-25 16:45:23 -耗时 : 588
2019-04-25 16:45:23 -返回值 : index_v1
2019-04-25 16:45:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:45:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 588(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:45:24.007(Timestamp)
2019-04-25 16:45:24 -请求地址 : http://localhost:8081/main
2019-04-25 16:45:24 -HTTP METHOD : GET
2019-04-25 16:45:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:45:24 -参数 : []
2019-04-25 16:45:24 -耗时 : 1
2019-04-25 16:45:24 -返回值 : main
2019-04-25 16:45:24 -<==    Updates: 1
2019-04-25 16:45:24 -请求地址 : http://localhost:8081/main
2019-04-25 16:45:24 -HTTP METHOD : GET
2019-04-25 16:45:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:45:24 -参数 : []
2019-04-25 16:45:24 -耗时 : 1
2019-04-25 16:45:24 -返回值 : main
2019-04-25 16:45:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:45:24 -HTTP METHOD : GET
2019-04-25 16:45:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:45:24 -参数 : []
2019-04-25 16:45:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:45:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:45:25 -<==      Total: 0
2019-04-25 16:45:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:45:25 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:45:25 -<==      Total: 1
2019-04-25 16:45:25 -耗时 : 250
2019-04-25 16:45:25 -返回值 : com.bootdo.common.utils.PageUtils@1491a6ac
2019-04-25 16:45:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 16:45:36 -==> Parameters: 1(Long)
2019-04-25 16:45:36 -<==      Total: 93
2019-04-25 16:45:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:45:36 -HTTP METHOD : GET
2019-04-25 16:45:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:45:36 -参数 : []
2019-04-25 16:45:36 -耗时 : 10
2019-04-25 16:45:36 -返回值 : charts/tableElecMM
2019-04-25 16:45:38 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 16:45:38 -HTTP METHOD : GET
2019-04-25 16:45:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 16:45:38 -参数 : []
2019-04-25 16:45:38 -耗时 : 12
2019-04-25 16:45:38 -返回值 : charts/tableWaterMM
2019-04-25 16:45:39 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:45:39 -HTTP METHOD : GET
2019-04-25 16:45:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:45:39 -参数 : []
2019-04-25 16:45:39 -耗时 : 1
2019-04-25 16:45:39 -返回值 : charts/tableElecMM
2019-04-25 16:45:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:45:48 -HTTP METHOD : GET
2019-04-25 16:45:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:45:48 -参数 : []
2019-04-25 16:45:48 -耗时 : 1
2019-04-25 16:45:48 -返回值 : system/dept/deptTree
2019-04-25 16:45:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:45:48 -HTTP METHOD : GET
2019-04-25 16:45:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:45:48 -参数 : []
2019-04-25 16:45:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:45:48 -==> Parameters: 
2019-04-25 16:45:48 -<==      Total: 3
2019-04-25 16:45:48 -耗时 : 39
2019-04-25 16:45:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:45:50 -请求地址 : http://localhost:8081/charts/tableElecMM/exportElecMM
2019-04-25 16:45:50 -HTTP METHOD : GET
2019-04-25 16:45:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.exportElecMM
2019-04-25 16:45:50 -参数 : [com.bootdo.elec.vo.ElecVo@3d4c79cd, com.bootdo.moneyLog.vo.ElecLogVo@41425e14, org.apache.shiro.web.servlet.ShiroHttpServletResponse@108f2b9b]
2019-04-25 16:45:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:45:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:45:51 -<==      Total: 6
2019-04-25 16:45:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:45:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:45:51 -<==      Total: 0
2019-04-25 16:45:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:45:51 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:45:51 -<==      Total: 6
2019-04-25 16:45:51 -耗时 : 1236
2019-04-25 16:45:51 -返回值 : null
2019-04-25 16:45:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-04-25 16:50:29 -请求地址 : http://localhost:8081/index
2019-04-25 16:50:29 -HTTP METHOD : GET
2019-04-25 16:50:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 16:50:29 -参数 : [{}]
2019-04-25 16:50:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 16:50:29 -==> Parameters: 1(Long)
2019-04-25 16:50:29 -<==      Total: 49
2019-04-25 16:50:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 16:50:30 -==> Parameters: 138(Long)
2019-04-25 16:50:30 -<==      Total: 1
2019-04-25 16:50:30 -耗时 : 119
2019-04-25 16:50:30 -返回值 : index_v1
2019-04-25 16:50:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 16:50:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 120(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 16:50:30.01(Timestamp)
2019-04-25 16:50:30 -<==    Updates: 1
2019-04-25 16:50:30 -请求地址 : http://localhost:8081/main
2019-04-25 16:50:30 -HTTP METHOD : GET
2019-04-25 16:50:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:50:30 -参数 : []
2019-04-25 16:50:30 -耗时 : 0
2019-04-25 16:50:30 -返回值 : main
2019-04-25 16:50:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 16:50:31 -HTTP METHOD : GET
2019-04-25 16:50:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 16:50:31 -参数 : []
2019-04-25 16:50:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 16:50:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 16:50:31 -<==      Total: 0
2019-04-25 16:50:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 16:50:31 -==> Parameters: 1(Long), 0(String)
2019-04-25 16:50:31 -<==      Total: 1
2019-04-25 16:50:31 -耗时 : 7
2019-04-25 16:50:31 -返回值 : com.bootdo.common.utils.PageUtils@64b6b8c8
2019-04-25 16:50:31 -请求地址 : http://localhost:8081/main
2019-04-25 16:50:31 -HTTP METHOD : GET
2019-04-25 16:50:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 16:50:31 -参数 : []
2019-04-25 16:50:31 -耗时 : 1
2019-04-25 16:50:31 -返回值 : main
2019-04-25 16:50:36 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 16:50:36 -HTTP METHOD : GET
2019-04-25 16:50:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 16:50:36 -参数 : []
2019-04-25 16:50:36 -耗时 : 12
2019-04-25 16:50:36 -返回值 : charts/countMM
2019-04-25 16:50:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 16:50:37 -HTTP METHOD : GET
2019-04-25 16:50:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 16:50:37 -参数 : [userType]
2019-04-25 16:50:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 16:50:37 -==> Parameters: userType(String)
2019-04-25 16:50:37 -<==      Total: 4
2019-04-25 16:50:37 -耗时 : 146
2019-04-25 16:50:37 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 16:50:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 16:50:40 -HTTP METHOD : GET
2019-04-25 16:50:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 16:50:40 -参数 : []
2019-04-25 16:50:40 -耗时 : 1
2019-04-25 16:50:40 -返回值 : charts/tableElecMM
2019-04-25 16:50:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 16:50:46 -HTTP METHOD : GET
2019-04-25 16:50:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 16:50:46 -参数 : []
2019-04-25 16:50:46 -耗时 : 1
2019-04-25 16:50:46 -返回值 : system/dept/deptTree
2019-04-25 16:50:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 16:50:47 -HTTP METHOD : GET
2019-04-25 16:50:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 16:50:47 -参数 : []
2019-04-25 16:50:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 16:50:47 -==> Parameters: 
2019-04-25 16:50:47 -<==      Total: 3
2019-04-25 16:50:47 -耗时 : 6
2019-04-25 16:50:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 16:50:49 -请求地址 : http://localhost:8081/charts/tableElecMM/exportElecMM
2019-04-25 16:50:49 -HTTP METHOD : GET
2019-04-25 16:50:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.exportElecMM
2019-04-25 16:50:49 -参数 : [com.bootdo.elec.vo.ElecVo@40a1c628, com.bootdo.moneyLog.vo.ElecLogVo@123c5b02, org.apache.shiro.web.servlet.ShiroHttpServletResponse@204464d9]
2019-04-25 16:50:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:50:49 -<==      Total: 4
2019-04-25 16:50:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 16:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:50:49 -<==      Total: 2
2019-04-25 16:50:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 16:50:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 16:50:49 -<==      Total: 6
2019-04-25 16:50:49 -耗时 : 35
2019-04-25 16:50:49 -返回值 : null
2019-04-25 17:02:04 -请求地址 : http://localhost:8081/index
2019-04-25 17:02:04 -HTTP METHOD : GET
2019-04-25 17:02:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 17:02:04 -参数 : [{}]
2019-04-25 17:02:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 17:02:04 -==> Parameters: 1(Long)
2019-04-25 17:02:04 -<==      Total: 49
2019-04-25 17:02:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 17:02:04 -==> Parameters: 138(Long)
2019-04-25 17:02:04 -<==      Total: 1
2019-04-25 17:02:04 -耗时 : 88
2019-04-25 17:02:04 -返回值 : index_v1
2019-04-25 17:02:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 17:02:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 88(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 17:02:04.706(Timestamp)
2019-04-25 17:02:04 -<==    Updates: 1
2019-04-25 17:02:05 -请求地址 : http://localhost:8081/main
2019-04-25 17:02:05 -HTTP METHOD : GET
2019-04-25 17:02:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 17:02:05 -参数 : []
2019-04-25 17:02:05 -耗时 : 1
2019-04-25 17:02:05 -返回值 : main
2019-04-25 17:02:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 17:02:05 -HTTP METHOD : GET
2019-04-25 17:02:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 17:02:05 -参数 : []
2019-04-25 17:02:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 17:02:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 17:02:05 -<==      Total: 0
2019-04-25 17:02:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 17:02:05 -==> Parameters: 1(Long), 0(String)
2019-04-25 17:02:05 -<==      Total: 1
2019-04-25 17:02:05 -耗时 : 8
2019-04-25 17:02:05 -返回值 : com.bootdo.common.utils.PageUtils@2a5c6a93
2019-04-25 17:02:05 -请求地址 : http://localhost:8081/main
2019-04-25 17:02:05 -HTTP METHOD : GET
2019-04-25 17:02:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 17:02:05 -参数 : []
2019-04-25 17:02:05 -耗时 : 0
2019-04-25 17:02:05 -返回值 : main
2019-04-25 17:02:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 17:02:59 -==> Parameters: 1(Long)
2019-04-25 17:02:59 -<==      Total: 93
2019-04-25 17:02:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 17:02:59 -HTTP METHOD : GET
2019-04-25 17:02:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 17:02:59 -参数 : []
2019-04-25 17:02:59 -耗时 : 1
2019-04-25 17:02:59 -返回值 : charts/tableElecMM
2019-04-25 17:03:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 17:03:05 -HTTP METHOD : GET
2019-04-25 17:03:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 17:03:05 -参数 : []
2019-04-25 17:03:05 -耗时 : 0
2019-04-25 17:03:05 -返回值 : system/dept/deptTree
2019-04-25 17:03:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 17:03:05 -HTTP METHOD : GET
2019-04-25 17:03:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 17:03:05 -参数 : []
2019-04-25 17:03:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 17:03:05 -==> Parameters: 
2019-04-25 17:03:05 -<==      Total: 3
2019-04-25 17:03:05 -耗时 : 5
2019-04-25 17:03:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 17:03:07 -请求地址 : http://localhost:8081/charts/tableElecMM/exportElecMM
2019-04-25 17:03:07 -HTTP METHOD : GET
2019-04-25 17:03:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.exportElecMM
2019-04-25 17:03:07 -参数 : [com.bootdo.elec.vo.ElecVo@48cfe12a, com.bootdo.moneyLog.vo.ElecLogVo@5277e1e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@db88669]
2019-04-25 17:03:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 17:03:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 17:03:07 -<==      Total: 4
2019-04-25 17:03:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-04-25 17:03:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 17:03:07 -<==      Total: 2
2019-04-25 17:03:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-04-25 17:03:07 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 17:03:07 -<==      Total: 6
2019-04-25 17:03:07 -耗时 : 60
2019-04-25 17:03:07 -返回值 : null
2019-04-25 17:15:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-04-25 18:28:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 1516 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 18:28:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 18:28:04 -The following profiles are active: dev
2019-04-25 18:28:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 18:28:04 CST 2019]; root of context hierarchy
2019-04-25 18:28:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 18:28:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 18:28:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 18:28:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 18:28:16 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 18:28:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 18:28:16 -Starting service [Tomcat]
2019-04-25 18:28:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 18:28:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 18:28:17 -Initializing Spring embedded WebApplicationContext
2019-04-25 18:28:17 -Root WebApplicationContext: initialization completed in 12915 ms
2019-04-25 18:28:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 18:28:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 18:28:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 18:28:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 18:28:19 -Filter xssFilter was not registered (disabled)
2019-04-25 18:28:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 18:28:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 18:28:19 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 18:28:19 -Servlet dispatcherServlet mapped to [/]
2019-04-25 18:28:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 18:28:04 CST 2019]; root of context hierarchy
2019-04-25 18:28:25 -Using default implementation for ThreadExecutor
2019-04-25 18:28:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 18:28:25 -Quartz Scheduler v.2.2.1 created.
2019-04-25 18:28:25 -RAMJobStore initialized.
2019-04-25 18:28:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 18:28:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 18:28:25 -Quartz scheduler version: 2.2.1
2019-04-25 18:28:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-04-25 18:28:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 18:28:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 18:28:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 18:28:30 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 18:28:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 18:28:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 18:28:30 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 18:28:30 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 18:28:30 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 18:28:30 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 18:28:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 18:28:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 18:28:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 18:28:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 18:28:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 18:28:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 18:28:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 18:28:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 18:28:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 18:28:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 18:28:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 18:28:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 18:28:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 18:28:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 18:28:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 18:28:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 18:28:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 18:28:30 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-25 18:28:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 18:28:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 18:28:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 18:28:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 18:28:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 18:28:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 18:28:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 18:28:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 18:28:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 18:28:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 18:28:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 18:28:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 18:28:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 18:28:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 18:28:30 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 18:28:30 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 18:28:30 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 18:28:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 18:28:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 18:28:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 18:28:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 18:28:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 18:28:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 18:28:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 18:28:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 18:28:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 18:28:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 18:28:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 18:28:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 18:28:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 18:28:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 18:28:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 18:28:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 18:28:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 18:28:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 18:28:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 18:28:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 18:28:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 18:28:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 18:28:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 18:28:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 18:28:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 18:28:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 18:28:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 18:28:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 18:28:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 18:28:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 18:28:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 18:28:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 18:28:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 18:28:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 18:28:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 18:28:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 18:28:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 18:28:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 18:28:30 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 18:28:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 18:28:30 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 18:28:30 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 18:28:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 18:28:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 18:28:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 18:28:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 18:28:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 18:28:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 18:28:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 18:28:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 18:28:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 18:28:04 CST 2019]; root of context hierarchy
2019-04-25 18:28:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 18:28:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 18:28:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 18:28:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 18:28:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 18:28:36 -Registering beans for JMX exposure on startup
2019-04-25 18:28:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 18:28:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 18:28:36 -Starting beans in phase 2147483647
2019-04-25 18:28:36 -Context refreshed
2019-04-25 18:28:36 -Found 1 custom documentation plugin(s)
2019-04-25 18:28:36 -Scanning for api listing references
2019-04-25 18:28:37 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_1
2019-04-25 18:28:37 -Generating unique operation named: addUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: editUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: listUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_2
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_3
2019-04-25 18:28:37 -Generating unique operation named: saveUsingPOST_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPOST_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPUT_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 18:28:37 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 18:28:37 -Generating unique operation named: addUsingGET_2
2019-04-25 18:28:37 -Generating unique operation named: editUsingGET_2
2019-04-25 18:28:37 -Generating unique operation named: listUsingGET_2
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_4
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_5
2019-04-25 18:28:37 -Generating unique operation named: saveUsingPOST_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPOST_2
2019-04-25 18:28:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: addUsingGET_3
2019-04-25 18:28:37 -Generating unique operation named: editUsingGET_3
2019-04-25 18:28:37 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: listUsingGET_3
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_6
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_7
2019-04-25 18:28:37 -Generating unique operation named: saveUsingPOST_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingGET_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPOST_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPUT_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 18:28:37 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 18:28:37 -Generating unique operation named: addUsingGET_4
2019-04-25 18:28:37 -Generating unique operation named: editUsingGET_4
2019-04-25 18:28:37 -Generating unique operation named: listUsingGET_4
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_8
2019-04-25 18:28:37 -Generating unique operation named: removeUsingPOST_9
2019-04-25 18:28:37 -Generating unique operation named: saveUsingPOST_4
2019-04-25 18:28:37 -Generating unique operation named: updateUsingGET_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPOST_4
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPUT_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 18:28:37 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 18:28:37 -Generating unique operation named: ElecUsingGET_1
2019-04-25 18:28:37 -Generating unique operation named: addUsingGET_5
2019-04-25 18:28:37 -Generating unique operation named: editUsingGET_5
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_5
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_10
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_11
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_6
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_6
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_6
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_7
2019-04-25 18:28:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_7
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_12
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_13
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 18:28:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_7
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_8
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_8
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_14
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_15
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_8
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_9
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_9
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_16
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_17
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_9
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_10
2019-04-25 18:28:38 -Generating unique operation named: infoUsingGET_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingPOST_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingPUT_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 18:28:38 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_10
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_18
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_19
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_10
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_11
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_20
2019-04-25 18:28:38 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_10
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_11
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_12
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_21
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_10
2019-04-25 18:28:38 -Generating unique operation named: treeUsingGET_1
2019-04-25 18:28:38 -Generating unique operation named: treeUsingGET_2
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_11
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_11
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_12
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_13
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_22
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_23
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_11
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_12
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_12
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_13
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_14
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_24
2019-04-25 18:28:38 -Generating unique operation named: removeUsingPOST_25
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_12
2019-04-25 18:28:38 -Generating unique operation named: updateUsingGET_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_13
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPUT_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 18:28:38 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 18:28:38 -Generating unique operation named: addUsingGET_13
2019-04-25 18:28:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 18:28:38 -Generating unique operation named: editUsingGET_14
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_15
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_13
2019-04-25 18:28:38 -Generating unique operation named: saveUsingPOST_14
2019-04-25 18:28:38 -Generating unique operation named: updateUsingPOST_14
2019-04-25 18:28:38 -Generating unique operation named: listUsingGET_16
2019-04-25 18:28:38 -Generating unique operation named: listUsingHEAD_1
2019-04-25 18:28:38 -Generating unique operation named: listUsingPOST_1
2019-04-25 18:28:38 -Generating unique operation named: listUsingPUT_1
2019-04-25 18:28:38 -Generating unique operation named: listUsingPATCH_1
2019-04-25 18:28:39 -Generating unique operation named: listUsingDELETE_1
2019-04-25 18:28:39 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 18:28:39 -Generating unique operation named: listUsingTRACE_1
2019-04-25 18:28:39 -Generating unique operation named: countDDUsingGET_1
2019-04-25 18:28:39 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 18:28:39 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 18:28:39 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 18:28:39 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 18:28:39 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 18:28:39 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 18:28:39 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 18:28:39 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 18:28:39 -Generating unique operation named: addUsingGET_14
2019-04-25 18:28:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 18:28:39 -Generating unique operation named: editUsingGET_15
2019-04-25 18:28:39 -Generating unique operation named: listUsingGET_17
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_26
2019-04-25 18:28:39 -Generating unique operation named: saveUsingPOST_15
2019-04-25 18:28:39 -Generating unique operation named: treeUsingGET_3
2019-04-25 18:28:39 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPOST_15
2019-04-25 18:28:39 -Generating unique operation named: addUsingGET_15
2019-04-25 18:28:39 -Generating unique operation named: editUsingGET_16
2019-04-25 18:28:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 18:28:39 -Generating unique operation named: listUsingGET_18
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_27
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_28
2019-04-25 18:28:39 -Generating unique operation named: saveUsingPOST_16
2019-04-25 18:28:39 -Generating unique operation named: updateUsingGET_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPOST_16
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPUT_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 18:28:39 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 18:28:39 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 18:28:39 -Generating unique operation named: addUsingGET_16
2019-04-25 18:28:39 -Generating unique operation named: editUsingGET_17
2019-04-25 18:28:39 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 18:28:39 -Generating unique operation named: listUsingGET_19
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_29
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_30
2019-04-25 18:28:39 -Generating unique operation named: saveUsingPOST_17
2019-04-25 18:28:39 -Generating unique operation named: updateUsingGET_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPOST_17
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPUT_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 18:28:39 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 18:28:39 -Generating unique operation named: addUsingGET_17
2019-04-25 18:28:39 -Generating unique operation named: editUsingGET_18
2019-04-25 18:28:39 -Generating unique operation named: listUsingGET_20
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_31
2019-04-25 18:28:39 -Generating unique operation named: removeUsingPOST_32
2019-04-25 18:28:39 -Generating unique operation named: saveUsingPOST_18
2019-04-25 18:28:39 -Generating unique operation named: updateUsingGET_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPOST_18
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPUT_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 18:28:39 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 18:28:39 -Starting Quartz Scheduler now
2019-04-25 18:28:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 18:28:39 -Starting...
2019-04-25 18:28:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 18:28:40 -Started.
2019-04-25 18:28:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 18:28:40 -Using a shared selector for servlet write/read
2019-04-25 18:28:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 18:28:40 -Started BootdoApplication in 37.201 seconds (JVM running for 37.985)
2019-04-25 18:28:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 18:28:40 -==> Parameters: 
2019-04-25 18:28:40 -<==      Total: 1
2019-04-25 18:28:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 18:28:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 18:28:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-04-25 18:28:51 -Enabling session validation scheduler...
2019-04-25 18:28:51 -请求地址 : http://localhost:8081/login;JSESSIONID=0ad6b7e8-675f-48f8-a0ea-440ef63f6b50
2019-04-25 18:28:51 -HTTP METHOD : GET
2019-04-25 18:28:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 18:28:51 -参数 : [{}]
2019-04-25 18:28:51 -耗时 : 8
2019-04-25 18:28:51 -返回值 : login
2019-04-25 18:28:54 -请求地址 : http://localhost:8081/getVerify
2019-04-25 18:28:54 -HTTP METHOD : GET
2019-04-25 18:28:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 18:28:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7043bc08, org.apache.shiro.web.servlet.ShiroHttpServletResponse@577570c8]
2019-04-25 18:29:07 -5269
2019-04-25 18:29:07 -耗时 : 12514
2019-04-25 18:29:07 -返回值 : null
2019-04-25 18:29:12 -请求地址 : http://localhost:8081/login
2019-04-25 18:29:12 -HTTP METHOD : POST
2019-04-25 18:29:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 18:29:12 -参数 : [admin, 111111, 5269, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11436232]
2019-04-25 18:29:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 18:29:12 -==> Parameters: admin(String)
2019-04-25 18:29:12 -<==      Total: 1
2019-04-25 18:29:12 -耗时 : 102
2019-04-25 18:29:12 -返回值 : {msg=操作成功, code=0}
2019-04-25 18:29:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 18:29:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 18:29:12 -==> Parameters: 1(Long), admin(String), 登录(String), 102(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 18:29:12.906(Timestamp)
2019-04-25 18:29:12 -<==    Updates: 1
2019-04-25 18:29:13 -请求地址 : http://localhost:8081/index
2019-04-25 18:29:13 -HTTP METHOD : GET
2019-04-25 18:29:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 18:29:13 -参数 : [{}]
2019-04-25 18:29:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 18:29:13 -==> Parameters: 1(Long)
2019-04-25 18:29:13 -<==      Total: 49
2019-04-25 18:29:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 18:29:13 -==> Parameters: 138(Long)
2019-04-25 18:29:13 -<==      Total: 1
2019-04-25 18:29:13 -耗时 : 442
2019-04-25 18:29:13 -返回值 : index_v1
2019-04-25 18:29:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 18:29:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 442(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 18:29:13.769(Timestamp)
2019-04-25 18:29:13 -<==    Updates: 1
2019-04-25 18:29:14 -请求地址 : http://localhost:8081/main
2019-04-25 18:29:14 -HTTP METHOD : GET
2019-04-25 18:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 18:29:14 -参数 : []
2019-04-25 18:29:14 -耗时 : 0
2019-04-25 18:29:14 -返回值 : main
2019-04-25 18:29:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 18:29:14 -HTTP METHOD : GET
2019-04-25 18:29:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 18:29:14 -参数 : []
2019-04-25 18:29:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 18:29:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 18:29:14 -<==      Total: 0
2019-04-25 18:29:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 18:29:14 -==> Parameters: 1(Long), 0(String)
2019-04-25 18:29:14 -<==      Total: 1
2019-04-25 18:29:14 -耗时 : 59
2019-04-25 18:29:14 -返回值 : com.bootdo.common.utils.PageUtils@450ed3fc
2019-04-25 18:29:14 -请求地址 : http://localhost:8081/main
2019-04-25 18:29:14 -HTTP METHOD : GET
2019-04-25 18:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 18:29:14 -参数 : []
2019-04-25 18:29:14 -耗时 : 0
2019-04-25 18:29:14 -返回值 : main
2019-04-25 18:29:31 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-25 18:29:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 18:29:34 -==> Parameters: 1(Long)
2019-04-25 18:29:34 -<==      Total: 93
2019-04-25 18:29:34 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 18:29:34 -HTTP METHOD : GET
2019-04-25 18:29:34 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 18:29:34 -参数 : []
2019-04-25 18:29:34 -耗时 : 9
2019-04-25 18:29:34 -返回值 : charts/countMM
2019-04-25 18:29:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 18:29:36 -HTTP METHOD : GET
2019-04-25 18:29:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 18:29:36 -参数 : [userType]
2019-04-25 18:29:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 18:29:36 -==> Parameters: userType(String)
2019-04-25 18:29:36 -<==      Total: 4
2019-04-25 18:29:36 -耗时 : 34
2019-04-25 18:29:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 18:29:36 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 18:29:36 -HTTP METHOD : GET
2019-04-25 18:29:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 18:29:36 -参数 : []
2019-04-25 18:29:37 -耗时 : 13
2019-04-25 18:29:37 -返回值 : charts/tableElecMM
2019-04-25 18:29:38 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 18:29:38 -HTTP METHOD : GET
2019-04-25 18:29:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 18:29:38 -参数 : []
2019-04-25 18:29:38 -耗时 : 10
2019-04-25 18:29:38 -返回值 : charts/tableWaterMM
2019-04-25 18:32:37 -请求地址 : http://localhost:8081/index
2019-04-25 18:32:37 -HTTP METHOD : GET
2019-04-25 18:32:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 18:32:37 -参数 : [{}]
2019-04-25 18:32:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 18:32:37 -==> Parameters: 1(Long)
2019-04-25 18:32:37 -<==      Total: 49
2019-04-25 18:32:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 18:32:37 -==> Parameters: 138(Long)
2019-04-25 18:32:37 -<==      Total: 1
2019-04-25 18:32:37 -耗时 : 59
2019-04-25 18:32:37 -返回值 : index_v1
2019-04-25 18:32:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 18:32:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 18:32:37.283(Timestamp)
2019-04-25 18:32:37 -请求地址 : http://localhost:8081/main
2019-04-25 18:32:37 -HTTP METHOD : GET
2019-04-25 18:32:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 18:32:37 -参数 : []
2019-04-25 18:32:37 -耗时 : 0
2019-04-25 18:32:37 -返回值 : main
2019-04-25 18:32:37 -<==    Updates: 1
2019-04-25 18:32:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 18:32:37 -HTTP METHOD : GET
2019-04-25 18:32:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 18:32:37 -参数 : []
2019-04-25 18:32:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 18:32:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 18:32:37 -<==      Total: 0
2019-04-25 18:32:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 18:32:37 -==> Parameters: 1(Long), 0(String)
2019-04-25 18:32:37 -<==      Total: 1
2019-04-25 18:32:37 -耗时 : 25
2019-04-25 18:32:37 -返回值 : com.bootdo.common.utils.PageUtils@22cbb324
2019-04-25 18:32:37 -请求地址 : http://localhost:8081/main
2019-04-25 18:32:38 -HTTP METHOD : GET
2019-04-25 18:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 18:32:38 -参数 : []
2019-04-25 18:32:38 -耗时 : 1
2019-04-25 18:32:38 -返回值 : main
2019-04-25 18:32:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 18:32:41 -HTTP METHOD : GET
2019-04-25 18:32:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 18:32:41 -参数 : []
2019-04-25 18:32:41 -耗时 : 1
2019-04-25 18:32:41 -返回值 : charts/tableElecMM
2019-04-25 18:32:42 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 18:32:42 -HTTP METHOD : GET
2019-04-25 18:32:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 18:32:42 -参数 : []
2019-04-25 18:32:42 -耗时 : 14
2019-04-25 18:32:42 -返回值 : charts/tableWaterMM
2019-04-25 18:33:26 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 18:59:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-04-25 19:28:51 -Validating all active sessions...
2019-04-25 19:28:51 -Finished session validation.  [1] sessions were stopped.
2019-04-25 19:29:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 872]
2019-04-25 20:04:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 1364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 20:04:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 20:04:15 -The following profiles are active: dev
2019-04-25 20:04:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:04:15 CST 2019]; root of context hierarchy
2019-04-25 20:04:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 20:04:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 20:04:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 20:04:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:04:23 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 20:04:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 20:04:23 -Starting service [Tomcat]
2019-04-25 20:04:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 20:04:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 20:04:23 -Initializing Spring embedded WebApplicationContext
2019-04-25 20:04:23 -Root WebApplicationContext: initialization completed in 8109 ms
2019-04-25 20:04:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 20:04:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 20:04:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 20:04:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 20:04:24 -Filter xssFilter was not registered (disabled)
2019-04-25 20:04:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 20:04:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 20:04:24 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 20:04:24 -Servlet dispatcherServlet mapped to [/]
2019-04-25 20:04:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:04:15 CST 2019]; root of context hierarchy
2019-04-25 20:04:28 -Using default implementation for ThreadExecutor
2019-04-25 20:04:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 20:04:28 -Quartz Scheduler v.2.2.1 created.
2019-04-25 20:04:28 -RAMJobStore initialized.
2019-04-25 20:04:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 20:04:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 20:04:28 -Quartz scheduler version: 2.2.1
2019-04-25 20:04:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-04-25 20:04:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 20:04:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 20:04:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 20:04:31 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 20:04:31 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 20:04:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 20:04:31 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 20:04:31 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 20:04:31 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 20:04:31 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 20:04:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 20:04:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 20:04:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 20:04:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 20:04:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 20:04:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 20:04:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 20:04:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 20:04:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 20:04:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 20:04:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 20:04:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 20:04:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 20:04:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 20:04:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 20:04:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 20:04:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 20:04:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 20:04:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 20:04:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 20:04:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 20:04:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-25 20:04:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 20:04:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 20:04:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 20:04:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 20:04:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 20:04:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 20:04:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 20:04:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 20:04:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 20:04:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 20:04:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 20:04:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 20:04:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 20:04:31 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 20:04:31 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:04:31 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:04:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 20:04:31 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 20:04:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 20:04:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 20:04:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 20:04:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 20:04:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 20:04:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 20:04:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 20:04:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 20:04:31 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 20:04:31 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 20:04:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 20:04:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 20:04:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 20:04:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 20:04:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 20:04:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 20:04:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 20:04:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 20:04:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 20:04:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 20:04:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 20:04:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 20:04:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 20:04:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 20:04:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 20:04:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 20:04:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 20:04:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 20:04:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 20:04:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 20:04:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 20:04:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 20:04:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 20:04:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 20:04:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 20:04:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:04:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 20:04:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 20:04:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:04:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 20:04:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 20:04:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:04:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 20:04:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 20:04:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 20:04:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 20:04:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 20:04:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 20:04:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:04:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:04:15 CST 2019]; root of context hierarchy
2019-04-25 20:04:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:04:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:04:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:04:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 20:04:33 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 20:04:35 -Registering beans for JMX exposure on startup
2019-04-25 20:04:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 20:04:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 20:04:35 -Starting beans in phase 2147483647
2019-04-25 20:04:35 -Context refreshed
2019-04-25 20:04:36 -Found 1 custom documentation plugin(s)
2019-04-25 20:04:36 -Scanning for api listing references
2019-04-25 20:04:36 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 20:04:36 -Generating unique operation named: removeUsingPOST_1
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_2
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_3
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_2
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_2
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_2
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_4
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_5
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_2
2019-04-25 20:04:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_3
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_3
2019-04-25 20:04:37 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_3
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_6
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_7
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_4
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_4
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_4
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_8
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_9
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 20:04:37 -Generating unique operation named: ElecUsingGET_1
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_5
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_5
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_5
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_10
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_11
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_6
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_6
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_6
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_7
2019-04-25 20:04:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_7
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_12
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_13
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_7
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 20:04:37 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_7
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_8
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_8
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_14
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_15
2019-04-25 20:04:37 -Generating unique operation named: saveUsingPOST_7
2019-04-25 20:04:37 -Generating unique operation named: updateUsingGET_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPOST_8
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPUT_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 20:04:37 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 20:04:37 -Generating unique operation named: addUsingGET_8
2019-04-25 20:04:37 -Generating unique operation named: editUsingGET_9
2019-04-25 20:04:37 -Generating unique operation named: listUsingGET_9
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_16
2019-04-25 20:04:37 -Generating unique operation named: removeUsingPOST_17
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingGET_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPUT_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 20:04:38 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_9
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_10
2019-04-25 20:04:38 -Generating unique operation named: infoUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingPOST_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingPUT_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 20:04:38 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_10
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_18
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_19
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_10
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_11
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_20
2019-04-25 20:04:38 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_10
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_11
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_12
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_21
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_10
2019-04-25 20:04:38 -Generating unique operation named: treeUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: treeUsingGET_2
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_11
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_11
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_12
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_13
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_22
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_23
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_11
2019-04-25 20:04:38 -Generating unique operation named: updateUsingGET_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_12
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPUT_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 20:04:38 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_12
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_13
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_14
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_24
2019-04-25 20:04:38 -Generating unique operation named: removeUsingPOST_25
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_12
2019-04-25 20:04:38 -Generating unique operation named: updateUsingGET_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_13
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPUT_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 20:04:38 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_13
2019-04-25 20:04:38 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_14
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_15
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_13
2019-04-25 20:04:38 -Generating unique operation named: saveUsingPOST_14
2019-04-25 20:04:38 -Generating unique operation named: updateUsingPOST_14
2019-04-25 20:04:38 -Generating unique operation named: listUsingGET_16
2019-04-25 20:04:38 -Generating unique operation named: listUsingHEAD_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingPOST_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingPUT_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingPATCH_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingDELETE_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 20:04:38 -Generating unique operation named: listUsingTRACE_1
2019-04-25 20:04:38 -Generating unique operation named: countDDUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 20:04:38 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 20:04:38 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 20:04:38 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 20:04:38 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 20:04:38 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 20:04:38 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 20:04:38 -Generating unique operation named: addUsingGET_14
2019-04-25 20:04:38 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 20:04:38 -Generating unique operation named: editUsingGET_15
2019-04-25 20:04:39 -Generating unique operation named: listUsingGET_17
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_26
2019-04-25 20:04:39 -Generating unique operation named: saveUsingPOST_15
2019-04-25 20:04:39 -Generating unique operation named: treeUsingGET_3
2019-04-25 20:04:39 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPOST_15
2019-04-25 20:04:39 -Generating unique operation named: addUsingGET_15
2019-04-25 20:04:39 -Generating unique operation named: editUsingGET_16
2019-04-25 20:04:39 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 20:04:39 -Generating unique operation named: listUsingGET_18
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_27
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_28
2019-04-25 20:04:39 -Generating unique operation named: saveUsingPOST_16
2019-04-25 20:04:39 -Generating unique operation named: updateUsingGET_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPOST_16
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPUT_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 20:04:39 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 20:04:39 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 20:04:39 -Generating unique operation named: addUsingGET_16
2019-04-25 20:04:39 -Generating unique operation named: editUsingGET_17
2019-04-25 20:04:39 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 20:04:39 -Generating unique operation named: listUsingGET_19
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_29
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_30
2019-04-25 20:04:39 -Generating unique operation named: saveUsingPOST_17
2019-04-25 20:04:39 -Generating unique operation named: updateUsingGET_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPOST_17
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPUT_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 20:04:39 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 20:04:39 -Generating unique operation named: addUsingGET_17
2019-04-25 20:04:39 -Generating unique operation named: editUsingGET_18
2019-04-25 20:04:39 -Generating unique operation named: listUsingGET_20
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_31
2019-04-25 20:04:39 -Generating unique operation named: removeUsingPOST_32
2019-04-25 20:04:39 -Generating unique operation named: saveUsingPOST_18
2019-04-25 20:04:39 -Generating unique operation named: updateUsingGET_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPOST_18
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPUT_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 20:04:39 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 20:04:39 -Starting Quartz Scheduler now
2019-04-25 20:04:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 20:04:39 -Starting...
2019-04-25 20:04:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 20:04:39 -Started.
2019-04-25 20:04:39 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 20:04:39 -Using a shared selector for servlet write/read
2019-04-25 20:04:39 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 20:04:39 -Started BootdoApplication in 25.318 seconds (JVM running for 26.177)
2019-04-25 20:04:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 20:04:39 -==> Parameters: 
2019-04-25 20:04:39 -<==      Total: 1
2019-04-25 20:04:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 20:04:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 20:04:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-04-25 20:04:56 -Enabling session validation scheduler...
2019-04-25 20:04:56 -请求地址 : http://localhost:8081/login;JSESSIONID=44d95115-a90d-4a0d-9201-5aa6ab4c7844
2019-04-25 20:04:56 -HTTP METHOD : GET
2019-04-25 20:04:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 20:04:56 -参数 : [{}]
2019-04-25 20:04:56 -耗时 : 4
2019-04-25 20:04:56 -返回值 : login
2019-04-25 20:04:58 -请求地址 : http://localhost:8081/getVerify
2019-04-25 20:04:58 -HTTP METHOD : GET
2019-04-25 20:04:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 20:04:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@48b6c12f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4c895ce1]
2019-04-25 20:05:01 -8645
2019-04-25 20:05:02 -耗时 : 3937
2019-04-25 20:05:02 -返回值 : null
2019-04-25 20:05:02 -请求地址 : http://localhost:8081/login
2019-04-25 20:05:02 -HTTP METHOD : GET
2019-04-25 20:05:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 20:05:02 -参数 : [{}]
2019-04-25 20:05:02 -耗时 : 1
2019-04-25 20:05:02 -返回值 : login
2019-04-25 20:05:09 -请求地址 : http://localhost:8081/login
2019-04-25 20:05:09 -HTTP METHOD : POST
2019-04-25 20:05:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 20:05:09 -参数 : [admin, 111111, 8645, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58a20572]
2019-04-25 20:05:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 20:05:09 -==> Parameters: admin(String)
2019-04-25 20:05:09 -<==      Total: 1
2019-04-25 20:05:09 -耗时 : 230
2019-04-25 20:05:09 -返回值 : {msg=操作成功, code=0}
2019-04-25 20:05:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 20:05:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 20:05:09 -==> Parameters: 1(Long), admin(String), 登录(String), 230(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 20:05:09.381(Timestamp)
2019-04-25 20:05:09 -请求地址 : http://localhost:8081/index
2019-04-25 20:05:09 -HTTP METHOD : GET
2019-04-25 20:05:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 20:05:09 -参数 : [{}]
2019-04-25 20:05:09 -<==    Updates: 1
2019-04-25 20:05:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 20:05:09 -==> Parameters: 1(Long)
2019-04-25 20:05:09 -<==      Total: 49
2019-04-25 20:05:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 20:05:09 -==> Parameters: 138(Long)
2019-04-25 20:05:09 -<==      Total: 1
2019-04-25 20:05:09 -耗时 : 472
2019-04-25 20:05:09 -返回值 : index_v1
2019-04-25 20:05:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 20:05:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 472(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 20:05:10.047(Timestamp)
2019-04-25 20:05:10 -<==    Updates: 1
2019-04-25 20:05:10 -请求地址 : http://localhost:8081/main
2019-04-25 20:05:10 -HTTP METHOD : GET
2019-04-25 20:05:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:05:10 -参数 : []
2019-04-25 20:05:10 -耗时 : 0
2019-04-25 20:05:10 -返回值 : main
2019-04-25 20:05:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 20:05:10 -HTTP METHOD : GET
2019-04-25 20:05:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 20:05:10 -参数 : []
2019-04-25 20:05:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 20:05:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 20:05:10 -<==      Total: 0
2019-04-25 20:05:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 20:05:10 -==> Parameters: 1(Long), 0(String)
2019-04-25 20:05:10 -<==      Total: 1
2019-04-25 20:05:10 -耗时 : 76
2019-04-25 20:05:10 -返回值 : com.bootdo.common.utils.PageUtils@107486b6
2019-04-25 20:05:10 -请求地址 : http://localhost:8081/main
2019-04-25 20:05:10 -HTTP METHOD : GET
2019-04-25 20:05:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:05:10 -参数 : []
2019-04-25 20:05:10 -耗时 : 1
2019-04-25 20:05:10 -返回值 : main
2019-04-25 20:05:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 20:05:18 -==> Parameters: 1(Long)
2019-04-25 20:05:18 -<==      Total: 93
2019-04-25 20:05:18 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 20:05:18 -HTTP METHOD : GET
2019-04-25 20:05:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 20:05:18 -参数 : []
2019-04-25 20:05:18 -耗时 : 15
2019-04-25 20:05:18 -返回值 : charts/tableElecMM
2019-04-25 20:05:20 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 20:05:20 -HTTP METHOD : GET
2019-04-25 20:05:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 20:05:20 -参数 : []
2019-04-25 20:05:20 -耗时 : 21
2019-04-25 20:05:20 -返回值 : charts/tableWaterMM
2019-04-25 20:05:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 20:05:28 -HTTP METHOD : GET
2019-04-25 20:05:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 20:05:28 -参数 : []
2019-04-25 20:05:28 -耗时 : 1
2019-04-25 20:05:28 -返回值 : system/dept/deptTree
2019-04-25 20:05:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 20:05:28 -HTTP METHOD : GET
2019-04-25 20:05:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 20:05:28 -参数 : []
2019-04-25 20:05:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 20:05:28 -==> Parameters: 
2019-04-25 20:05:28 -<==      Total: 3
2019-04-25 20:05:28 -耗时 : 136
2019-04-25 20:05:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 20:05:31 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:05:31 -HTTP METHOD : POST
2019-04-25 20:05:31 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:05:31 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1f6a201, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@67f9235c, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@1f6a201, com.bootdo.water.vo.WaterVo@67f9235c]
2019-04-25 20:05:31 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:31 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:31 -<==      Total: 1
2019-04-25 20:05:31 -耗时 : 340
2019-04-25 20:05:31 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:05:31 -[THYMELEAF][http-nio-8081-exec-5] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:05:31 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:05:32 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-25 20:05:37 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:05:37 -HTTP METHOD : POST
2019-04-25 20:05:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:05:37 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@237597e0, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@7b812346, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@237597e0, com.bootdo.water.vo.WaterVo@7b812346]
2019-04-25 20:05:37 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:05:37 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:05:37 -<==      Total: 1
2019-04-25 20:05:37 -耗时 : 55
2019-04-25 20:05:37 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:05:37 -[THYMELEAF][http-nio-8081-exec-4] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:05:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:15:14 -请求地址 : http://localhost:8081/index
2019-04-25 20:15:14 -HTTP METHOD : GET
2019-04-25 20:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 20:15:14 -参数 : [{}]
2019-04-25 20:15:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 20:15:14 -==> Parameters: 1(Long)
2019-04-25 20:15:14 -<==      Total: 49
2019-04-25 20:15:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 20:15:14 -==> Parameters: 138(Long)
2019-04-25 20:15:14 -<==      Total: 1
2019-04-25 20:15:14 -耗时 : 32
2019-04-25 20:15:14 -返回值 : index_v1
2019-04-25 20:15:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 20:15:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 20:15:14.919(Timestamp)
2019-04-25 20:15:15 -请求地址 : http://localhost:8081/main
2019-04-25 20:15:15 -HTTP METHOD : GET
2019-04-25 20:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:15:15 -参数 : []
2019-04-25 20:15:15 -耗时 : 1
2019-04-25 20:15:15 -返回值 : main
2019-04-25 20:15:15 -<==    Updates: 1
2019-04-25 20:15:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 20:15:15 -HTTP METHOD : GET
2019-04-25 20:15:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 20:15:15 -参数 : []
2019-04-25 20:15:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 20:15:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 20:15:15 -<==      Total: 0
2019-04-25 20:15:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 20:15:15 -==> Parameters: 1(Long), 0(String)
2019-04-25 20:15:15 -<==      Total: 1
2019-04-25 20:15:15 -耗时 : 7
2019-04-25 20:15:15 -返回值 : com.bootdo.common.utils.PageUtils@79a7e6a
2019-04-25 20:15:15 -请求地址 : http://localhost:8081/main
2019-04-25 20:15:15 -HTTP METHOD : GET
2019-04-25 20:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:15:15 -参数 : []
2019-04-25 20:15:15 -耗时 : 0
2019-04-25 20:15:15 -返回值 : main
2019-04-25 20:15:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 20:15:19 -==> Parameters: 1(Long)
2019-04-25 20:15:19 -<==      Total: 93
2019-04-25 20:15:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 20:15:19 -HTTP METHOD : GET
2019-04-25 20:15:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 20:15:19 -参数 : []
2019-04-25 20:15:19 -耗时 : 0
2019-04-25 20:15:19 -返回值 : charts/tableElecMM
2019-04-25 20:15:24 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 20:15:24 -HTTP METHOD : GET
2019-04-25 20:15:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 20:15:24 -参数 : []
2019-04-25 20:15:24 -耗时 : 0
2019-04-25 20:15:24 -返回值 : charts/tableWaterMM
2019-04-25 20:15:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 20:15:28 -HTTP METHOD : GET
2019-04-25 20:15:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 20:15:28 -参数 : []
2019-04-25 20:15:28 -耗时 : 1
2019-04-25 20:15:28 -返回值 : system/dept/deptTree
2019-04-25 20:15:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 20:15:28 -HTTP METHOD : GET
2019-04-25 20:15:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 20:15:28 -参数 : []
2019-04-25 20:15:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 20:15:28 -==> Parameters: 
2019-04-25 20:15:28 -<==      Total: 3
2019-04-25 20:15:28 -耗时 : 5
2019-04-25 20:15:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 20:15:32 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:15:32 -HTTP METHOD : POST
2019-04-25 20:15:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:15:32 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@6c4e748d, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@5eab9b27, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@6c4e748d, com.bootdo.water.vo.WaterVo@5eab9b27]
2019-04-25 20:15:32 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:15:32 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:15:32 -<==      Total: 1
2019-04-25 20:15:32 -耗时 : 55
2019-04-25 20:15:32 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:15:32 -[THYMELEAF][http-nio-8081-exec-3] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:15:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:20:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 1688 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-25 20:20:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-25 20:20:47 -The following profiles are active: dev
2019-04-25 20:20:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:20:47 CST 2019]; root of context hierarchy
2019-04-25 20:20:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-25 20:20:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-25 20:20:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-25 20:20:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:20:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-25 20:21:00 -Tomcat initialized with port(s): 8081 (http)
2019-04-25 20:21:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-25 20:21:00 -Starting service [Tomcat]
2019-04-25 20:21:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-25 20:21:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-25 20:21:01 -Initializing Spring embedded WebApplicationContext
2019-04-25 20:21:01 -Root WebApplicationContext: initialization completed in 14019 ms
2019-04-25 20:21:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-25 20:21:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-25 20:21:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-25 20:21:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-25 20:21:03 -Filter xssFilter was not registered (disabled)
2019-04-25 20:21:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-25 20:21:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-25 20:21:03 -Servlet statViewServlet mapped to [/druid/*]
2019-04-25 20:21:03 -Servlet dispatcherServlet mapped to [/]
2019-04-25 20:21:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:20:47 CST 2019]; root of context hierarchy
2019-04-25 20:21:11 -Using default implementation for ThreadExecutor
2019-04-25 20:21:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-25 20:21:11 -Quartz Scheduler v.2.2.1 created.
2019-04-25 20:21:11 -RAMJobStore initialized.
2019-04-25 20:21:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-25 20:21:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-25 20:21:11 -Quartz scheduler version: 2.2.1
2019-04-25 20:21:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-04-25 20:21:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-25 20:21:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-25 20:21:14 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-25 20:21:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-25 20:21:14 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-25 20:21:14 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-04-25 20:21:14 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-25 20:21:14 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public com.bootdo.charts.vo.CountYYVo com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-25 20:21:14 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-04-25 20:21:14 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.getCountMM(org.springframework.ui.Model,com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatMM/getCountMM],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.getCountMM(org.springframework.ui.Model,com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterMM/getTableMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.getTableMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/charts/tableWaterYY/getCountYY],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.getCountMM(org.springframework.ui.Model,com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-04-25 20:21:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-25 20:21:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-25 20:21:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-25 20:21:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-25 20:21:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-25 20:21:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-25 20:21:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 20:21:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-25 20:21:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-25 20:21:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-25 20:21:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-25 20:21:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-25 20:21:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-25 20:21:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-25 20:21:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-25 20:21:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-25 20:21:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-25 20:21:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-25 20:21:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-25 20:21:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-25 20:21:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-25 20:21:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-25 20:21:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-25 20:21:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-25 20:21:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-25 20:21:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-25 20:21:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-25 20:21:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-25 20:21:14 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-25 20:21:14 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-25 20:21:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-25 20:21:14 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:21:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-25 20:21:14 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:21:14 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-25 20:21:14 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-25 20:21:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-25 20:21:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-25 20:21:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-25 20:21:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-25 20:21:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-25 20:21:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-25 20:21:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-25 20:21:14 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-25 20:21:14 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-25 20:21:14 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-25 20:21:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-25 20:21:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-25 20:21:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-25 20:21:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-25 20:21:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-25 20:21:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-25 20:21:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-25 20:21:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-25 20:21:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-25 20:21:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-25 20:21:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-25 20:21:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-25 20:21:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-25 20:21:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-25 20:21:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-25 20:21:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-25 20:21:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-25 20:21:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 20:21:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-25 20:21:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-25 20:21:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-25 20:21:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-25 20:21:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-25 20:21:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-25 20:21:14 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-25 20:21:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-25 20:21:14 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-25 20:21:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-25 20:21:14 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-25 20:21:14 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-25 20:21:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-25 20:21:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-25 20:21:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-25 20:21:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-25 20:21:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-25 20:21:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-25 20:21:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-25 20:21:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:21:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Thu Apr 25 20:20:47 CST 2019]; root of context hierarchy
2019-04-25 20:21:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:21:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:21:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-25 20:21:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-25 20:21:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-25 20:21:18 -Registering beans for JMX exposure on startup
2019-04-25 20:21:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-25 20:21:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-25 20:21:18 -Starting beans in phase 2147483647
2019-04-25 20:21:18 -Context refreshed
2019-04-25 20:21:18 -Found 1 custom documentation plugin(s)
2019-04-25 20:21:18 -Scanning for api listing references
2019-04-25 20:21:18 -Generating unique operation named: getCountDUsingPOST_1
2019-04-25 20:21:18 -Generating unique operation named: removeUsingPOST_1
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_2
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_3
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_1
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_2
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_2
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_2
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_4
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_5
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_2
2019-04-25 20:21:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_3
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_3
2019-04-25 20:21:19 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_3
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_6
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_7
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_2
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_4
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_4
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_4
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_8
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_9
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_3
2019-04-25 20:21:19 -Generating unique operation named: ElecUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_5
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_5
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_5
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_10
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_11
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_4
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_6
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_6
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_6
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_7
2019-04-25 20:21:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_7
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_12
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_13
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_5
2019-04-25 20:21:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_7
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_8
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_8
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_14
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_15
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_8
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_6
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_8
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_9
2019-04-25 20:21:19 -Generating unique operation named: listUsingGET_9
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_16
2019-04-25 20:21:19 -Generating unique operation named: removeUsingPOST_17
2019-04-25 20:21:19 -Generating unique operation named: saveUsingPOST_8
2019-04-25 20:21:19 -Generating unique operation named: updateUsingGET_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingHEAD_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPOST_9
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPUT_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingPATCH_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingDELETE_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-25 20:21:19 -Generating unique operation named: updateUsingTRACE_7
2019-04-25 20:21:19 -Generating unique operation named: addUsingGET_9
2019-04-25 20:21:19 -Generating unique operation named: editUsingGET_10
2019-04-25 20:21:19 -Generating unique operation named: infoUsingGET_1
2019-04-25 20:21:19 -Generating unique operation named: infoUsingHEAD_1
2019-04-25 20:21:19 -Generating unique operation named: infoUsingPOST_1
2019-04-25 20:21:19 -Generating unique operation named: infoUsingPUT_1
2019-04-25 20:21:19 -Generating unique operation named: infoUsingPATCH_1
2019-04-25 20:21:20 -Generating unique operation named: infoUsingDELETE_1
2019-04-25 20:21:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-25 20:21:20 -Generating unique operation named: infoUsingTRACE_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_10
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_18
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_19
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_10
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_11
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_20
2019-04-25 20:21:20 -Generating unique operation named: welcomeUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_10
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_11
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_12
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_21
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_10
2019-04-25 20:21:20 -Generating unique operation named: treeUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: treeUsingGET_2
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_11
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_11
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_12
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_13
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_22
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_23
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingGET_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingHEAD_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPUT_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPATCH_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingDELETE_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-25 20:21:20 -Generating unique operation named: updateUsingTRACE_8
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_12
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_13
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_14
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_24
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_25
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingGET_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingHEAD_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_13
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPUT_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPATCH_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingDELETE_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-25 20:21:20 -Generating unique operation named: updateUsingTRACE_9
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_13
2019-04-25 20:21:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_14
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_15
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_13
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_14
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_14
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_16
2019-04-25 20:21:20 -Generating unique operation named: listUsingHEAD_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingPOST_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingPUT_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingPATCH_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingDELETE_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingOPTIONS_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingTRACE_1
2019-04-25 20:21:20 -Generating unique operation named: countDDUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: exportDDUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: getCountMMUsingPOST_1
2019-04-25 20:21:20 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-25 20:21:20 -Generating unique operation named: getCountMMUsingPOST_2
2019-04-25 20:21:20 -Generating unique operation named: getCountMMUsingPOST_3
2019-04-25 20:21:20 -Generating unique operation named: exprotHeatLogUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: getCountMMUsingPOST_4
2019-04-25 20:21:20 -Generating unique operation named: getCountMMUsingPOST_5
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_14
2019-04-25 20:21:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_15
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_17
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_26
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_15
2019-04-25 20:21:20 -Generating unique operation named: treeUsingGET_3
2019-04-25 20:21:20 -Generating unique operation named: treeViewUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_15
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_15
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_16
2019-04-25 20:21:20 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_18
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_27
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_28
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_16
2019-04-25 20:21:20 -Generating unique operation named: updateUsingGET_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingHEAD_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_16
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPUT_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPATCH_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingDELETE_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-25 20:21:20 -Generating unique operation named: updateUsingTRACE_10
2019-04-25 20:21:20 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_16
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_17
2019-04-25 20:21:20 -Generating unique operation named: exprotWaterLogUsingGET_1
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_19
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_29
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_30
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_17
2019-04-25 20:21:20 -Generating unique operation named: updateUsingGET_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingHEAD_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_17
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPUT_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPATCH_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingDELETE_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-25 20:21:20 -Generating unique operation named: updateUsingTRACE_11
2019-04-25 20:21:20 -Generating unique operation named: addUsingGET_17
2019-04-25 20:21:20 -Generating unique operation named: editUsingGET_18
2019-04-25 20:21:20 -Generating unique operation named: listUsingGET_20
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_31
2019-04-25 20:21:20 -Generating unique operation named: removeUsingPOST_32
2019-04-25 20:21:20 -Generating unique operation named: saveUsingPOST_18
2019-04-25 20:21:20 -Generating unique operation named: updateUsingGET_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingHEAD_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPOST_18
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPUT_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingPATCH_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingDELETE_12
2019-04-25 20:21:20 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-25 20:21:21 -Generating unique operation named: updateUsingTRACE_12
2019-04-25 20:21:21 -Starting Quartz Scheduler now
2019-04-25 20:21:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-25 20:21:21 -Starting...
2019-04-25 20:21:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-25 20:21:21 -Started.
2019-04-25 20:21:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-25 20:21:21 -Using a shared selector for servlet write/read
2019-04-25 20:21:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-25 20:21:21 -Started BootdoApplication in 35.678 seconds (JVM running for 36.651)
2019-04-25 20:21:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-25 20:21:21 -==> Parameters: 
2019-04-25 20:21:21 -<==      Total: 1
2019-04-25 20:21:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-25 20:21:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-25 20:21:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-04-25 20:21:49 -Enabling session validation scheduler...
2019-04-25 20:21:49 -请求地址 : http://localhost:8081/login;JSESSIONID=263d9dd7-01c0-40eb-8a91-ac858cd6c119
2019-04-25 20:21:49 -HTTP METHOD : GET
2019-04-25 20:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 20:21:49 -参数 : [{}]
2019-04-25 20:21:49 -耗时 : 6
2019-04-25 20:21:49 -返回值 : login
2019-04-25 20:21:51 -请求地址 : http://localhost:8081/getVerify
2019-04-25 20:21:51 -HTTP METHOD : GET
2019-04-25 20:21:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-25 20:21:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c8d7ee0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3624331d]
2019-04-25 20:21:54 -8314
2019-04-25 20:21:55 -耗时 : 3845
2019-04-25 20:21:55 -返回值 : null
2019-04-25 20:21:55 -请求地址 : http://localhost:8081/login
2019-04-25 20:21:55 -HTTP METHOD : GET
2019-04-25 20:21:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-25 20:21:55 -参数 : [{}]
2019-04-25 20:21:55 -耗时 : 0
2019-04-25 20:21:55 -返回值 : login
2019-04-25 20:22:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-25 20:22:21 -请求地址 : http://localhost:8081/login
2019-04-25 20:22:21 -HTTP METHOD : POST
2019-04-25 20:22:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-25 20:22:21 -参数 : [admin, 111111, 8314, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4998be41]
2019-04-25 20:22:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-25 20:22:21 -==> Parameters: admin(String)
2019-04-25 20:22:21 -<==      Total: 1
2019-04-25 20:22:21 -耗时 : 209
2019-04-25 20:22:21 -返回值 : {msg=操作成功, code=0}
2019-04-25 20:22:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-25 20:22:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 20:22:21 -==> Parameters: 1(Long), admin(String), 登录(String), 209(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-25 20:22:21.451(Timestamp)
2019-04-25 20:22:21 -请求地址 : http://localhost:8081/index
2019-04-25 20:22:21 -HTTP METHOD : GET
2019-04-25 20:22:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-25 20:22:21 -参数 : [{}]
2019-04-25 20:22:21 -<==    Updates: 1
2019-04-25 20:22:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-25 20:22:21 -==> Parameters: 1(Long)
2019-04-25 20:22:22 -<==      Total: 49
2019-04-25 20:22:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-25 20:22:22 -==> Parameters: 138(Long)
2019-04-25 20:22:22 -<==      Total: 1
2019-04-25 20:22:22 -耗时 : 527
2019-04-25 20:22:22 -返回值 : index_v1
2019-04-25 20:22:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-25 20:22:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 527(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-04-25 20:22:22.12(Timestamp)
2019-04-25 20:22:22 -<==    Updates: 1
2019-04-25 20:22:22 -请求地址 : http://localhost:8081/main
2019-04-25 20:22:22 -HTTP METHOD : GET
2019-04-25 20:22:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:22:22 -参数 : []
2019-04-25 20:22:22 -耗时 : 1
2019-04-25 20:22:22 -返回值 : main
2019-04-25 20:22:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-25 20:22:22 -HTTP METHOD : GET
2019-04-25 20:22:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-25 20:22:22 -参数 : []
2019-04-25 20:22:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-25 20:22:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-25 20:22:22 -请求地址 : http://localhost:8081/main
2019-04-25 20:22:22 -HTTP METHOD : GET
2019-04-25 20:22:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-25 20:22:22 -参数 : []
2019-04-25 20:22:22 -耗时 : 1
2019-04-25 20:22:22 -返回值 : main
2019-04-25 20:22:22 -<==      Total: 0
2019-04-25 20:22:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-25 20:22:22 -==> Parameters: 1(Long), 0(String)
2019-04-25 20:22:23 -<==      Total: 1
2019-04-25 20:22:23 -耗时 : 190
2019-04-25 20:22:23 -返回值 : com.bootdo.common.utils.PageUtils@4e6903eb
2019-04-25 20:22:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-25 20:22:36 -==> Parameters: 1(Long)
2019-04-25 20:22:36 -<==      Total: 93
2019-04-25 20:22:36 -请求地址 : http://localhost:8081/charts/countMM
2019-04-25 20:22:36 -HTTP METHOD : GET
2019-04-25 20:22:36 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-04-25 20:22:36 -参数 : []
2019-04-25 20:22:36 -耗时 : 12
2019-04-25 20:22:36 -返回值 : charts/countMM
2019-04-25 20:22:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-25 20:22:36 -HTTP METHOD : GET
2019-04-25 20:22:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-25 20:22:36 -参数 : [userType]
2019-04-25 20:22:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-25 20:22:36 -==> Parameters: userType(String)
2019-04-25 20:22:36 -<==      Total: 4
2019-04-25 20:22:36 -耗时 : 80
2019-04-25 20:22:36 -返回值 : [DictDO{id=126, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=125, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=0, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='null', delFlag='0'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-25 20:22:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-04-25 20:22:38 -HTTP METHOD : GET
2019-04-25 20:22:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-04-25 20:22:38 -参数 : []
2019-04-25 20:22:38 -耗时 : 14
2019-04-25 20:22:38 -返回值 : charts/tableElecMM
2019-04-25 20:22:39 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-04-25 20:22:39 -HTTP METHOD : GET
2019-04-25 20:22:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-04-25 20:22:39 -参数 : []
2019-04-25 20:22:39 -耗时 : 10
2019-04-25 20:22:39 -返回值 : charts/tableWaterMM
2019-04-25 20:22:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-25 20:22:45 -HTTP METHOD : GET
2019-04-25 20:22:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-25 20:22:45 -参数 : []
2019-04-25 20:22:45 -耗时 : 0
2019-04-25 20:22:45 -返回值 : system/dept/deptTree
2019-04-25 20:22:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-25 20:22:45 -HTTP METHOD : GET
2019-04-25 20:22:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-25 20:22:45 -参数 : []
2019-04-25 20:22:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-25 20:22:45 -==> Parameters: 
2019-04-25 20:22:45 -<==      Total: 3
2019-04-25 20:22:45 -耗时 : 16
2019-04-25 20:22:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-25 20:22:47 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:22:47 -HTTP METHOD : POST
2019-04-25 20:22:47 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:22:47 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@1e271764, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@b9bfebd, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@1e271764, com.bootdo.water.vo.WaterVo@b9bfebd]
2019-04-25 20:22:47 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:47 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:47 -<==      Total: 1
2019-04-25 20:22:47 -耗时 : 151
2019-04-25 20:22:47 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:22:47 -[THYMELEAF][http-nio-8081-exec-9] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:22:47 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:22:49 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:22:49 -HTTP METHOD : POST
2019-04-25 20:22:49 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:22:49 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@595558f3, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@50d8c13a, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@595558f3, com.bootdo.water.vo.WaterVo@50d8c13a]
2019-04-25 20:22:49 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:49 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:49 -<==      Total: 1
2019-04-25 20:22:49 -耗时 : 77
2019-04-25 20:22:49 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:22:49 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:22:49 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:22:50 -请求地址 : http://localhost:8081/charts/tableWaterMM/getTableMM
2019-04-25 20:22:50 -HTTP METHOD : POST
2019-04-25 20:22:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.getTableMM
2019-04-25 20:22:50 -参数 : [{waterLogVo=com.bootdo.moneyLog.vo.WaterLogVo@9dc9cc0, org.springframework.validation.BindingResult.waterLogVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors, waterVo=com.bootdo.water.vo.WaterVo@56faa7d2, org.springframework.validation.BindingResult.waterVo=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyLog.vo.WaterLogVo@9dc9cc0, com.bootdo.water.vo.WaterVo@56faa7d2]
2019-04-25 20:22:50 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-04-25 20:22:50 -==> Parameters: 2019-03(String), 2(String)
2019-04-25 20:22:50 -<==      Total: 1
2019-04-25 20:22:50 -耗时 : 38
2019-04-25 20:22:50 -返回值 : {CountPrehu=2, CountAllhu=4, CountCostyu=2, Stotalhu=2, CountPrice=2, CountSWaterLog=1, SWaterCountOwe=1, CountOweyu=1, MWaterCountOwe=1, MWaterCostCount=2, CountPreyu=1, SWaterSumOwe=0, CountCosthu=4, SWaterCostSum=1, CountLogyu=160, MWaterSumPre=0, Mtotalhu=2, Stotalyu=1, CountOwehu=2, MWaterCostSum=1, SWaterPrice=1, CountMWaterLog=2, SumSWaterLog =60, MWaterPrice=1, MWaterCountPre=1, CountLoghu=3, Mtotalyu=1, SWaterSumPre=1, SWaterCountPre=1, SWaterCostCount=2, CountAllyu=2, MWaterSumOwe=1, SumMWaterLog=100}
2019-04-25 20:22:50 -[THYMELEAF][http-nio-8081-exec-6] Exception processing template "charts/tableWaterMM/getTableMM": Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:22:50 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers] with root cause
org.thymeleaf.exceptions.TemplateInputException: Error resolving template "charts/tableWaterMM/getTableMM", template might not exist or might not be accessible by any of the configured Template Resolvers
	at org.thymeleaf.engine.TemplateManager.resolveTemplate(TemplateManager.java:870)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:607)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-25 20:50:50 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-04-25 20:50:50 -HTTP METHOD : GET
2019-04-25 20:50:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-04-25 20:50:50 -参数 : []
2019-04-25 20:50:50 -耗时 : 10
2019-04-25 20:50:50 -返回值 : charts/tableHeatMM
2019-04-25 20:52:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-04-25 21:21:49 -Validating all active sessions...
2019-04-25 21:21:49 -Finished session validation.  [1] sessions were stopped.
2019-04-25 21:22:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 864]
2019-04-25 21:52:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1297]
2019-04-25 22:21:49 -Validating all active sessions...
2019-04-25 22:21:49 -Finished session validation.  No sessions were stopped.
2019-04-25 22:22:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1730]
